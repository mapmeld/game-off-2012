[{'body': u"Hi,\n\nthis is a small deprecation notice improvement. I think we should give the user at least a keyword what to google for if he's unaware of strong_parameters.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0d323d2a13856a6a36fa52c3d4f546ae?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8260', 'title': u'Point user to strong_parameters as the new protection model'}, {'body': u"I'm implementing the Rails 4 Queue API for queue_classic. I use `constantize` on the job name to trigger the rails autoloading before I unmarshal the job object. AM adds the following job when sending an email asynchronously: `ActionMailer::QueuedMessage::DeliveryJob`\n\ncalling `constantize` on this class results in a `#<NameError: uninitialized constant ActionMailer::QueuedMessage>`\n\nI added the necessary `autoload` statement to `ActionMailer` to get it working.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8259', 'title': u'make ActionMailer::QueuedMessage autoloadable'}, {'body': u'Rebased and adapted #2303 onto master as requested buy @steveklabnik.\n\nThis test case failed with rails 3.1, but it works with 3.2 and current master. :beers: ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c11579192bd480035b95d6cc82a79907?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8258', 'title': u'Add test to ensure preloading works as expected with "group", "select" and "includes".'}, {'body': u'I verified that AM tests are passing', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8255', 'title': u'Bump mailer version to 2.5.0'}, {'body': u'The link for all the references to http://api.rubyonrails.org/ were broken and was giving 404 error. \n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9f6ebf1d479bc851fae2eca3577171a4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8253', 'title': u'Fixing broker links in README files'}, {'body': u'Preview1 has failures: https://travis-ci.org/rails/rails\n\nruby-head as of the time of this commit does not.\n\nTherefore, we should wait until preview2 to add ruby 2.0 back\nto travis. No sense in building things that are just going to\nbe broken.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8252', 'title': u'Remove ruby 2.0 from travis.'}, {'body': u'The `ActiveRecord::Fixtures::find_table_name` method was removed from "master" 11 months ago, but it was never deprecated.  Here is a deprecated implementation, as suggested by @carlosantoniodasilva in the discussion of #4481.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8251', 'title': u'Add a deprecation before removing ActiveRecord::Fixtures::find_table_name'}, {'body': u"This isn't ready to merge, as we're not totally fixed yet: https://travis-ci.org/rails/rails\n\nBut I was hopeful that we were, so I wrote it before the failures actually failed, and figured I'd get the PR in while I had the patch handy.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8250', 'title': u'Remove Ruby 2.0 from allowed_failures.'}, {'body': u"@joshk said it's okay. :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8249', 'title': u'Add Ruby 2.0 to .travis.yml.'}, {'body': u"this is in response to http://twitter.com/alindeman/status/269595485692624896 -- basically, you shouldn't use diff, and if you do, you **really** shouldn't use it building up the message raw. That means you're spending the cost whether your assertion passes or fails. I'll poke and look for others.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16c4b19d8670085a428787f8b2438223?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8248', 'title': u'Removed extra call to #diff in #assert_recognizes'}, {'body': u'Adding sqlserver.yml template to satisfy "-d sqlserver" being passed to invocations of "rails new".  Fixes issue #6882.  ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ce86257a874d7f32b95f1817ef1b50ee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8247', 'title': u'Adding sqlserver.yml template to satisfy "-d sqlserver" '}, {'body': u'This pull request reverts commit 8d8fd13179cacd86f307e87396474bdfab9f3462\nbecause Now mysql gem can be built on ruby 2.0.0-preview1.\n\n- ruby 2.0.0-preview1 used\n```ruby\n$ ruby -v\nruby 2.0.0dev (2012-11-01 trunk 37411) [x86_64-linux]\n```\n\n-  MySQL 5.6.8 rc\n```ruby\n$ mysql -V\nmysql  Ver 14.14 Distrib 5.6.8-rc, for Linux (x86_64) using  EditLine wrapper\n```\n\n- bundler 1.2.2 required to execute bundler successfully.\n\n```ruby\n$ cd activerecord\n$ gem update\nUpdating installed gems\nUpdating bundler\nFetching: bundler-1.2.2.gem (100%)\nSuccessfully installed bundler-1.2.2\nUpdating rake\nFetching: rake-10.0.1.gem (100%)\nSuccessfully installed rake-10.0.1\nGems updated: bundler, rake\nInstalling ri documentation for bundler-1.2.2...\nInstalling ri documentation for rake-10.0.1...\nInstalling RDoc documentation for bundler-1.2.2...\nInstalling RDoc documentation for rake-10.0.1...\n```\n\n- mysql gem can be installed\n\n```ruby\n$ gem install mysql\nFetching: mysql-2.8.1.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed mysql-2.8.1\n1 gem installed\nInstalling ri documentation for mysql-2.8.1...\nInstalling RDoc documentation for mysql-2.8.1...\n```\n\n- rake test_mysql finishes successfully without any failures/errors\n\n```\n$ bundle update\n... snip ...\nYour bundle is updated! Use `bundle show [gemname]` to see where a bundled gem is installed.\n\n$ rake test_mysql\n... snip ...\n3477 tests, 10113 assertions, 0 failures, 0 errors, 7 skips\n$\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8244', 'title': u'Now mysql gem can be built on ruby 2.0.0-preview1'}, {'body': u"Add support for different MySQL engines for different tables; Add support for MyISAM fulltext indexes in migrations, and schema.rb.\n\nIn a project I was working on we wanted to use MyISAM fulltext indexes for a single table, but continue to use InnoDB for the remaining tables.  This patch adds support for that.  Without this patch it's impossible to use the [full-text search query syntax](http://dev.mysql.com/doc/refman/5.5/en//fulltext-search.html), because in the test database it would continue to use the default engine for all, and not add the fulltext option to the index that is create (just a standard key would be created, which isn't what we needed).\n\n* When dumping the schema to schema.rb, include engine information, and add a flag for fulltext indexes.\n* When engine and fulltext index flags are in the migration, create the index as a fulltext one.\n\n__Sources:__\n\nIntegrated: [multiple engine support from this gist](https://gist.github.com/1374003)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a9b8f5273d934fe57daa8cf54c3a017?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8239', 'title': u'Support Different Engines for Different Tables; Support MyISAM FULLTEXT indexes'}, {'body': u"Avoid using `Integer#/`, as it is redefined by the 'mathn' stdlib to return rationals.\n\nOtherwise the methods gives a strange result.\n\nNote that `Integer#div` is more clear in its intent anyways.\n\nI didn't use Integer#divmod because it is less efficient than a separate `div` and `%` (because of the intermediate array :-( )\n\nI couldn't resist simplifying slightly the method (and making it slightly faster too).\n\nFixes #7087", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8236', 'title': u'Use div'}, {'body': u'This is a list of mime types where template text is not html escaped\nby default. It prevents `Jack & Joe` from rendering as\n`Jack &amp; Joe` for the whitelisted mime types. The default whitelist\ncontains text/plain.\n\nThis follows a whitelist approach where plain text templates are\nnot escaped, and all the others (json, xml) are. The mime type is\nassumed to be set by the abstract controller.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/756daf26a0d77df3f9136534e32c7b3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8235', 'title': u'Introduce `ActionView::Template::Handlers::ERB.escape_whitelist`'}, {'body': u"Bundler <= 1.2.1 and Ruby 2.0.0 can raise an error since the commit below (incompatible change was added to Error class):\n\nhttps://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/37292\n\nIt's been now fixed in bundler 1.2.2. I think it's better for Rails 4 to update the dependency on bundler to `~> 1.2.2` toward the next coming Ruby 2.0.0, in advance.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/23f4d5d797a91b6d17d627b90b5a42d9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8234', 'title': u'Updated dependency on bundler to ~> 1.2.2'}, {'body': u'Since Rails 4.0 config.threadsafe! is enabled by default.\nI think we have to strongly warn users about it by not only showing deprecated warnings when\nuser use this option, but also writing deprecated warnings in config file.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/00e1c3b772c2c10d962ccba549f0e1d6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8232', 'title': u'Write config.threasafe! deprecated waning in config/environments/production.rb'}, {'body': u"This is a follow up to my PR #7932. As @NZKoz pointed out, it is not a framework matter but left to the user to mark strings as `html_safe` when they contain '&' characters. I added the necessary documentation to `javascript_include_tag` to make the behavior clear.\n\nCloses #7931", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8228', 'title': u'document that `javascript_include_tag` will html escape sources.'}, {'body': u'The `plugin new` generator always adds the dummy app rake tasks,\nwhen a dummy app was created.\n\nCloses #8224\n\nI had to backport the commit 00fbee5bbf7896d38ccf3a26d4b6f36f9a63f358 also. Otherwise the error from #6251 would popup.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8227', 'title': u'backport #8139, `plugin new` adds dummy app tasks when necessary'}, {'body': u'Since pretty much in most of Rails we use ```instance_eval```. I think it will be good to have it in the migrations. \n\n```ruby\n\ncreate_table :user do |t|\n  t.string :email, :name\n  t.timestamps\nend\n\n# changes to:\n\ncreate_table :user do\n  string :email, :name\n  timestamps\nend\n\n```\n\nThis pull request contains the code to do this. It aslo includes the same behaviour for ```create_join_table``` and ```change_table```.\n\nI still have to:\n\n* Describe it in the rdocs\n* Possibly use this in the schema.rb generation\n* Change the tests and internal usage of the ```do |t| ``` pattern\n* Deprecation ?\n* Update CHANGELOG\n\nBut first, I want to know if such feature will be accepted.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7a0e72a6f55811246bb5d9a946fd2e49?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8226', 'title': u'Instance eval in migrations'}, {'body': u"Avoid using `Integer#/`, as it is redefined by the 'mathn' stdlib to return rationals.<br/><br/>Otherwise the methods gives a strange result.<br/><br/>Note that `Integer#div` is more clear in its intent anyways.<br/><br/>I didn't use Integer#divmod because it is less efficient than a separate `div` and `%` (because of the intermediate array :-( )", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8222', 'title': u"Avoid using Integer#/, as it is redefined by the 'mathn' stdlib"}, {'body': u'`XmlMini.with_backend` now may be safely used with threads:<br/><br/>```ruby<br/>Thread.new do<br/>  XmlMini.with_backend("REXML") { rexml_power }<br/>end<br/>Thread.new do<br/>  XmlMini.with_backend("LibXML") { libxml_power }<br/>end<br/>```<br/><br/>Each thread will use it\'s own backend.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8219', 'title': u'Make XmlMini.with_backend usable with threads'}, {'body': u'Examples on http://api.rubyonrails.org are inconsistent with behaviour.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d1f6be71bb64f418e87bc3e861594fc4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8218', 'title': u'[ci skip] Correct examples for form_tag helper.'}, {'body': u'I came across this blog post:<br/><br/>http://collectiveidea.com/blog/archives/2012/11/12/tests-oddly-slow-might-be-bcrypt/<br/><br/>...which suggests putting the following into a your `test_helper`:<br/><br/>`BCrypt::Engine::DEFAULT_COST = 1`<br/><br/>...for a speedier test suite. <br/><br/>I tested this out on a few apps, found a noticeable speedup, and worked with @jeremy on this pull request after reviewing the feedback on this existing pull request: https://github.com/rails/rails/pull/285', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c0b6fb3807d7d4f255463ed168c75897?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8216', 'title': u"Use BCrypt's MIN_COST in the test environment for speedier tests"}, {'body': u'Adverb: In the future (used after a period of time).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dffb1e16b6fa875efe7ce5dc36adafb3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8210', 'title': u'hence /hens/'}, {'body': u'This is a backport of #8176 to fix #7551<br/><br/>I had to modify the patch, since the code looks different on `3-2-stable` than on master. Effectively it does the exact same thing tough. Since `spawn` was not available I used `clone`. Also I had to use `pluck` with an Array (in the test case) because multiple arguments are not supported on `3-2-stable`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8209', 'title': u'backport #8176, `#pluck` can be used on a relation with `select` clause.'}, {'body': u'This is backport #8074.<br/>I send this PR, because 3.2.9 was released.<br/><br/>Please see  #6951 for more details.<br/><br/>/cc @rafaelfranca', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8205', 'title': u'Backport #8074 to 3-2-stable. Use query cache/uncache, when using not only database.yml but also DATABASE_URL.'}, {'body': u"It's safe to use `nil?` instead of `blank?` because it's impossible to get an array on finder with bang; `all_by` fi<br/><br/>Fixes #7238", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8204', 'title': u'Use nil? instead of blank? to check dynamic finder result'}, {'body': u'See #7238 for details.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8202', 'title': u'Regression test for #7238'}, {'body': u'Issue #8195 was fixed in #6376. This test may be backported to `3-2-stable` as well as #6376.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8201', 'title': u'Add a regression test on #8195'}, {'body': u'Two commits (716bdfc01d45a61d211dbd766f494cb984fc9f9c & c3e186ec8dcb2ec26d5d56f3e89123b1350c4a6f) are fixes for problems that existed prior to the release of Mocha v0.13.0, but have remained unnoticed.<br/><br/>The other two commits (5573c1d29565f17aca48b6a320a676bf9f962f20 & 3791cac8747b5e36fe9619301a55d69f8feff982) fix Rails v3.2 to work with Mocha v0.13.0.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c2a5fff725fde524bb84503528bd1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8200', 'title': u'Fix 3-2-stable to work with Mocha v0.13.0'}, {'body': u'This is a backport of #8185 to fix #8182', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8199', 'title': u'backport #8185, `#as_json` isolates options when encoding a hash.'}, {'body': u'Change <br/>    <br/>    Rails 3.2.9 (unreleased)<br/><br/>to\t<br/><br/>    Rails 3.2.9 (Nov 12, 2012)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4dea5cf83d2d6c1228750b76e579b38d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8193', 'title': u'Add release date of Rails 3.2.9 to documentation'}, {'body': u"This is an attempt to fix this very un-DRY pattern that happens a lot:<br/><br/>```erb<br/><% if something == true %><br/>  <%= content_tag(:div, :class => 'wrapper') do %><br/>    Content<br/>    # ... and more stuff<br/>  <% end %><br/><% else %><br/>  Content<br/>  # ... and more of the same stuff as above<br/><% end %><br/>```<br/>Now it's collapsible to this:<br/><br/>```erb<br/><%= content_tag_if(something == true, :div, :class => 'wrapper') do %><br/>  Content<br/>  # ... and more stuff<br/><% end %><br/>```<br/><br/>Also added `content_tag_unless` for convenience sake.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0fd3f116897f75ec1de34a4ec77cac88?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8190', 'title': u'Adding suppport for conditional content_tag'}, {'body': u'...l with optimistic locking enabled. Fixes #5332. Issue #5334.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d6972cb84a97a2457c0744b34dc685cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8188', 'title': u'Fix deleting from a HABTM join table upon destroying an object of a mode...'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d6972cb84a97a2457c0744b34dc685cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8186', 'title': u'Fix deleting from a HABTM join table upon destroying an object of a model with optimistic locking enabled. Fixes #5332. '}, {'body': u"I modified the `Encoder` so that duplicates of the original `options` hash are passed around. I'm not sure if there are cases where we actually wan't the side effects but all the tests passed.<br/><br/>This is a fix #8182", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8185', 'title': u'`#as_json` isolates options when encoding a hash. Closes #8182'}, {'body': u'Merge redundant tests and add new ones to has_and_belongs_to_many and has_many_through associations for null relation usage on new records.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f459742822cf8347e83d5c445378a934?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8184', 'title': u'Merge and add tests related to 5215'}, {'body': u"These commits fix a number of subtle mocha-related bugs that have been present for a while :-<br/><br/>* Mocha was raising a `MiniTest::Assertion` instead of a<br/>  `Mocha::ExpectationError` as intended. The latter is not recognized by<br/>  MiniTest as an assertion failure and so it is recorded as a test<br/>  *error*, not a test *failure* as it ought to. This leads to<br/>  potentially confusing output in the test results.<br/><br/>* Mocha verification should happen as part of the test. The verification<br/>  of expectations is equivalent to a set of assertions. These assertions<br/>  should happen as *part of* the test so that they have a chance to<br/>  cause the test to fail, and not just as part of the teardown. Also if<br/>  an assertion fails during the test, then there is no need to verify<br/>  expectations, because only the first assertion failure is normally<br/>  reported and all subsequent bets are off.<br/><br/>* Expectation verification should be counted as an assertion. Mocha<br/>  cannot record each expectation verification as an assertion, because<br/>  we weren't passing in an assertion counter to `#mocha_verify`.<br/><br/>The code has unfortunately become relatively complicated to support different versions of mocha. If it is acceptable to only support the latest version of mocha (v0.13.0) onwards, I'd suggest it would be preferable to accept [this other pull request](https://github.com/rails/rails/pull/8180) which simplifies the code considerably.<br/><br/>I'd be more than happy to provide back-ported fixes to 3-x-stable branches if these would be useful.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c2a5fff725fde524bb84503528bd1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8181', 'title': u'Mocha fixes'}, {'body': u"As well as simplifying the code considerably and reducing coupling to mocha, these changes also fix a few subtle mocha-related bugs present in the current implementation :-<br/><br/>* Mocha was raising a `MiniTest::Assertion` instead of a<br/>  `Mocha::ExpectationError` as intended. The latter is not recognized by<br/>  MiniTest as an assertion failure and so it is recorded as a test<br/>  *error*, not a test *failure* as it ought to. This leads to<br/>  potentially confusing output in the test results.<br/><br/>* Mocha verification should happen as part of the test. The verification<br/>  of expectations is equivalent to a set of assertions. These assertions<br/>  should happen as *part of* the test so that they have a chance to<br/>  cause the test to fail, and not just as part of the teardown. Also if<br/>  an assertion fails during the test, then there is no need to verify<br/>  expectations, because only the first assertion failure is normally<br/>  reported and all subsequent bets are off.<br/><br/>* Expectation verification should be counted as an assertion. Mocha<br/>  cannot record each expectation verification as an assertion, because<br/>  we weren't passing in an assertion counter to `#mocha_verify`.<br/><br/>These changes only work with mocha v0.13.0 or later. In case you would prefer to support older versions of mocha, I will submit an alternative pull request, however the code in that pull request will be necessarily more complicated/messy.<br/><br/>I'd be more than happy to provide back-ported fixes to 3-x-stable branches if these would be useful.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c2a5fff725fde524bb84503528bd1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8180', 'title': u'Simplify code by taking advantage of latest mocha (v0.13.0).'}, {'body': u"I changed `#pluck` to spawn a new relation and then modify the `select_values` directly to ignore previously present `select` clauses. This patch simply ignores present `select` clauses.<br/><br/>There was also trailing whitespace in the `CHANGELOG.md` (created a separate commit to remove it, so that it's easier to backport)<br/><br/>This is a fix for #7551<br/><br/>The `ActiveRecord::Calculations` module has a couple of methods, which modify the `select_values` of a relation directly. I thought about a small refactoring to expose a method on `ActiveRecord::QueryMethods` to assign fields directly to `select_values` instead of concatenate them as `select` does. This could be named something like `#select_only` or `#force_select` (could also be implemented with a parameter to `select` like `:force => true` or `:override => true`.<br/>I wanted to submit this PR first though to ask wether this is necessary or not.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8176', 'title': u'`#pluck` can be used on a relation with `select` clause (#7551)'}, {'body': u"This is from: https://github.com/rails/rails/pull/3457 and the following commit: https://github.com/joevandyk/rails/commit/939ed09983a4dabbf9ef239b01fa2fce083078f0<br/><br/>I have set the proper author of the commit.<br/><br/>It wasn't updated for quite a while and a rebase would be needed so I thought it would be interest to give it some love.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56e905e1e4a9137194df95dce0a73a30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8174', 'title': u'Allow DateTime comparison to Infinity/-Infinity'}, {'body': u'There is no need in `value_under_case.class.to_s` conversion since `case` already matches classes with `Class === value_under_case`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8173', 'title': u'Match classes without to_s conversions.'}, {'body': u'Remove annoying `diff` deprecation message in `ActiveSupport` tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8172', 'title': u'Test Hash#diff deprecation, also prevent deprecation message in AS tests'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8170', 'title': u'Removing warning : ambiguous first argument'}, {'body': u'Sometimes your git directory is an ancestor of your application root<br/>directory.<br/><br/>For example:<br/> ./repo/.git/<br/> ./repo/app/Rakefile<br/><br/>In this case rake test:uncommitted will be unable to detect your SCM.<br/><br/>This patch fixes this and add a test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3da82a61d5fbd74242cc6f671a5a32e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8169', 'title': u'Rake test:uncommitted finds git directory in ancestors.'}, {'body': u'Sometimes your git directory is an ancestor of your application root<br/>directory.<br/><br/>For example:<br/> ./repo/.git/<br/> ./repo/app/Rakefile<br/><br/>In this case rake test:uncommitted will be unable to detect your SCM.<br/><br/>This patch fixes this and add a test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3da82a61d5fbd74242cc6f671a5a32e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8168', 'title': u'Rake test:uncommitted finds git directory in ancestors.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8165', 'title': u'Removing warning : assigned but unused variable'}, {'body': u'We should not need any `serialized_attributes` checks outside `ActiveRecord::AttributeMethods::Serialization` module.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8164', 'title': u'Keep the code related to serialization in Serialization module.'}, {'body': u'Just fixing a copy-paste bug in the comments.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f976da892dd9c316b21876c824495b35?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8162', 'title': u'Trivial documentation fix for ActiveModel::Naming comment'}, {'body': u"Rails is failing with sprockets >= 2.3, see #8099 for reference and discussion.<br/><br/>I think we should address the issue anyway and relax the dependency again later but right now this is being a blocker for 3.2.9 release since last week.<br/><br/>We isolated the problem to sass-rails but we don't have much idea right now about how to fix it", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8161', 'title': u'Lock sprockets to 2.2.x'}, {'body': u"It's no longer used in Rails any more.<br/><br/>See https://github.com/rails/rails/pull/8142\\#issuecomment-10227297 for more.<br/><br/>I didn't add a CHANGELOG yet because I wanted to make sure the rest was okay. Let me know and I'll add it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8158', 'title': u'Deprecate Hash#diff.'}, {'body': u'These two things were 100% identical.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8157', 'title': u'Removing duplication in callback normalization.'}, {'body': u'Example:<br/><br/>```<br/>> Developer.new.build_profile<br/>   (0.3ms)  BEGIN<br/>   (0.1ms)  COMMIT<br/>=> #<DeveloperProfile id: nil, developer_id: nil, current_company: nil, current_title: nil, ...><br/>> ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8154', 'title': u'Remove unwanted transaction when has one association is built'}, {'body': u'See<br/>https://github.com/rails/rails/commit/cb7d19b66badfbd1846c195913419c331701074e#commitcomment-2127148.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8153', 'title': u'Fix message about include_blank option.'}, {'body': u'We tell people how to do this all the time in the Issues tracker,<br/>so now we can just point them here.<br/><br/>This is a first commit pairing by @kytrinyx and I, so @fxn, can you check the authorship and make sure it makes sense?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8152', 'title': u'Add note about squashing in contributor guide.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8151', 'title': u"delegate PathSet's enumerator methods"}, {'body': u'From issue: https://github.com/rails/rails/pull/8146', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56e905e1e4a9137194df95dce0a73a30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8150', 'title': u"Don't eagerload the app directory"}, {'body': u'this is a backport of #8115 to fix #7842<br/><br/>The problem was already fixed in master, the solution used for `3-2-stable` is different.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8149', 'title': u'backport: handle trailing slash with engines'}, {'body': u'DRYed up and organized the gemspec file a bit.<br/><br/> * Made quotes more consistent (single quotes dominated, so I used<br/>   that).<br/> * Moved license line down a line, separating it logically, and removed<br/>   the extra whitespace before its = operator.<br/> * Used a loop to add dependencies for all Rails components that use the<br/>   same version.<br/> * Minor whitespace fixes such as padding the comma on the first line.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6bea4182cd4dca98f1bc2f525283c27a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8147', 'title': u'Reformat gemspec'}, {'body': u'See https://github.com/rails/rails/pull/8138#issuecomment-10193937', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c2dc9c02ce7a041285725a4fc9e5f6d2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8145', 'title': u'Add test to avoid regression of 58e48d5'}, {'body': u'### `diff` vs `deep_diff` vs `MiniTest#diff`<br/><br/>Here is `deep_diff` usage example:<br/><br/>```ruby<br/>{ a: { b: 1 }}.deep_diff(a: { b: 1 })        # => {}<br/>{ a: { b: 1, c: 2 } }.deep_diff(a: { b: 1 }) # => { a: { c: 2 } }<br/>{ a: { b: 1 } }.deep_diff(a: { b: 1, c: 2 }) # => { a: { c: 2 } }<br/>```<br/><br/>---<br/><br/>`diff` was introduced in @891a962a1 to improve failed assertion message. So `deep_diff` will be more useful when you need descriptive messages. So I\'m wondering are there any such cases when `diff` is a better choice than `deep_diff`?<br/><br/>Also here is a couple of strings from Rails using `diff`:<br/><br/>```ruby<br/># FIXME: minitest does object diffs, do we need to have our own?<br/>message ||= sprintf("The recognized options <%s> did not match <%s>, difference: <%s>",<br/>  request.path_parameters, expected_options, expected_options.diff(request.path_parameters))<br/>assert_equal(expected_options, request.path_parameters, message)<br/>```<br/><br/>`FIXME` says that there is a `MiniTest` alternative which is way less descriptive:<br/><br/>```shell<br/>[15] pry(main)> diff({a: 1, b: 2}, {b: 2})<br/>=> "Expected: {:a=>1, :b=>2}\\n  Actual: {:b=>2}"<br/>```<br/><br/>So WDYT is the best way we should act here?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8142', 'title': u'`Hash#deep_diff`, the recursive difference between two hashes'}, {'body': u'All classes are inherited from Object.<br/>No need to monkeypatch thme all.<br/><br/>Checked AM and AR tests - all pass.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8141', 'title': u'Remove overmonkeypatching for Object#to_json'}, {'body': u"This patch adds the dummy app Rake tasks to the Rakefile template when `rails plugin new` is called with `--skip-test-unit` and `--dummy-path`. Since `--dummy-path` generates the dummy app even when test unit is skipped I think it's ok to also add in the Rake tasks.<br/><br/>I added a CHANGELOG entry and also created the `with_dummy_app?` method to reuse the condition.<br/><br/>This is a fix for #8121", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8139', 'title': u'Add app Rake tasks when -T and --dummy-path is passed to `plugin new`'}, {'body': u'Fix for #8131', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c2dc9c02ce7a041285725a4fc9e5f6d2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8138', 'title': u'Fix accepts_nested_attributes for child classes'}, {'body': u'Just ran into this one while working on a legacy Rails 2.3 site.<br/><br/>Try `YAML.load(YAML.dump(t))` where `t` is an instance of `ActiveSupport::TimeWithZone`. Under Ruby 1.9.3, this fails with the following message:<br/><br/>    NoMethodError: undefined method `period_for_utc\' for nil:NilClass<br/>\t    from /home/alex/Programming/Ruby/rails/activesupport/lib/active_support/time_with_zone.rb:58:in `period\'<br/>\t    from /home/alex/Programming/Ruby/rails/activesupport/lib/active_support/time_with_zone.rb:44:in `time\'<br/>\t    from /home/alex/Programming/Ruby/rails/activesupport/lib/active_support/time_with_zone.rb:304:in `respond_to?\'<br/>\t    from /home/alex/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/psych/visitors/to_ruby.rb:284:in `init_with\'<br/><br/>The solution is to backport `TimeWithZone#encode_with` from Rails 3.<br/><br/>Under Ruby 1.8.7, `YAML.dump` also fails, with a different message:<br/><br/>    NoMethodError: private method `gsub\' called for #<StringIO:0x7f16d2215a08><br/>\t    from ./activesupport/lib/active_support/time_with_zone.rb:145:in `to_yaml\'<br/><br/>Under Syck, `YAML.dump` passes a `StringIO` to `to_yaml` (rather than the "options" Hash which the author of `TimeWithZone#to_yaml` seemed to expect). Naturally, `gsub` fails on the `StringIO` object. The solution is simply to convert it to a String first.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5dbfc386f986b9d600324cd02dae266d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8134', 'title': u'Make YAML.dump work with ActiveSupport::TimeWithZone (under both Ruby 1.8/1.9)'}, {'body': u'Just ran into this one while working on a legacy Rails 2.3 site.<br/><br/>Try `YAML.load(YAML.dump(t))` where `t` is an instance of `ActiveSupport::TimeWithZone`. Under Ruby 1.9.3, this fails with the following message:<br/><br/>    NoMethodError: undefined method `period_for_utc\' for nil:NilClass<br/>\t    from /home/alex/Programming/Ruby/rails/activesupport/lib/active_support/time_with_zone.rb:58:in `period\'<br/>\t    from /home/alex/Programming/Ruby/rails/activesupport/lib/active_support/time_with_zone.rb:44:in `time\'<br/>\t    from /home/alex/Programming/Ruby/rails/activesupport/lib/active_support/time_with_zone.rb:304:in `respond_to?\'<br/>\t    from /home/alex/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/psych/visitors/to_ruby.rb:284:in `init_with\'<br/><br/>The solution is to backport `TimeWithZone#encode_with` from Rails 3.<br/><br/>Under Ruby 1.8.7, `YAML.dump` also fails, with a different message:<br/><br/>    NoMethodError: private method `gsub\' called for #<StringIO:0x7f16d2215a08><br/>\t    from ./activesupport/lib/active_support/time_with_zone.rb:145:in `to_yaml\'<br/><br/>Under Syck, `YAML.dump` passes a `StringIO` to `to_yaml` (rather than the "options" Hash which the author of `TimeWithZone#to_yaml` seemed to expect). Naturally, `gsub` fails on the `StringIO` object. The solution is simply to convert it to a String first.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5dbfc386f986b9d600324cd02dae266d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8133', 'title': u'Make YAML.dump work with ActiveSupport::TimeWithZone (under both Ruby 1.8/1.9)'}, {'body': u'In rails/strong_parameters#57, I filed a bug report:<br/><br/>------------<br/><br/>#### #permitted? survives :except, but not :slice<br/><br/>I would expect that calling `:slice` on a permitted Parameters hash would return another permitted hash, just as `:except` does. But no:<br/><br/>```<br/>> params = ActionController::Parameters.new(:foo => 42, :bar => 1337).permit(:foo, :bar)<br/> => {"foo"=>42, "bar"=>1337}<br/>> params.except(:bar).permitted?<br/> => true<br/>> params.slice(:foo).permitted?<br/> => false<br/>```<br/><br/>Is this a feature, or is it a bug?<br/><br/>------------<br/><br/>DHH et al confirmed that it\'s a bug. I made a pull request rails/strong_parameters#58, which got merged in, and @rafaelfranca asked me to open a pull request for Rails core as well. Here is the description of the original pull request (with SHAs changed to match the current pull request):<br/><br/>------------<br/><br/>#### Permitted should be sticky when calling slice<br/><br/>This pull request solves 3 different things:<br/><br/> 1. Some of the parameters_taint tests were broken. Fixed in 5b3b9b0ebcbe35038adaf7b1636032e6f436ed1c<br/> 1. The "permitted is sticky" tests are actually testing that "tainted is sticky". "Tainted" seems to not be used anymore, so I changed their titles to "not permitted is sticky" in 93eaffe59b713e94424212540a8788f0b273f8eb \u2013 and added a test for #except in 1a0f14e0453d3a36f134989752721292aed54892<br/> 1. I made a set of new "permitted is sticky" tests, basically inverted copies of the existing tests, only testing on a `permitted` object: 478d80fd5788a4b3e7c8482bfd3713eef7d00884 \u2013 with the #slice bug fixed in 344364990436d9fcb7e77d5deb1beeb9c34a2b85<br/><br/>------------', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f9d47b3d6001500a435163fa341f3a4d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8132', 'title': u'Permitted should be sticky on #slice'}, {'body': u'I was getting javascript exceptions from jQuery using `$.post(...)` to an action that rendered using `head :ok` because head returns a blank response body (which is not valid JSON) even though $.post requested "application/json" and the response type was "application/json".<br/><br/>I went ahead and modified "head" put valid JSON in the response body if the response format is "application/json".<br/><br/>This may turn into a philosophical argument, but I would say that if the response claims that its content type is "application/json" that its body be valid for that type.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a868e949f8d6880f74207a33898ff5b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8124', 'title': u'"head" renders valid JSON if response type is "application/json"'}, {'body': u"Now that the validator has been put on the confirmation attribute there is the possibility of the confirmation validator passing when it shouldn't.<br/><br/>This fix resolves the following usecase:<br/><br/>```ruby<br/>class User < ActiveRecord::Base<br/>  attr_accessor :password<br/>  validates :password => { :confirmation => true }<br/>end<br/><br/>u = User.new(:password => 'test')<br/>u.valid?<br/># => true<br/>```<br/><br/>The logic in the validator would skip if `password_confirmation` evaluates to `nil` which is very likely for many cases.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8122', 'title': u"Don't allow confirmation to pass if confirmation value is nil and doesn't match value"}, {'body': u'* move ActiveModel::Errors tests to errors_test.rb<br/>* add spec coverage for add_on_empty and add_on_blank', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8118', 'title': u'use Array() instead of flatten'}, {'body': u'This kills the repetitive ```"th"```.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6bea4182cd4dca98f1bc2f525283c27a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8117', 'title': u'Refactor ActiveSupport::Inflector#ordinal'}, {'body': u"This is a fix for #7993. I introduced a `counter_cache` option for `has_many` associations. This option is only necessary, when the name of the counter cache was customized on the `belongs_to` association.<br/><br/>I updated the `CHANGELOG` and provided documentation for the `:counter_cache` option. I'm not sure if the wording is good enough though.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8116', 'title': u':counter_cache option for  to support custom named counter caches'}, {'body': u"This PR adds a test case to make sure that we don't get any regressions on #7842. Also I removed obsolete code from the `_generate_prefix` method.<br/><br/>The issue described in #7842 has been fixed on master but is still present on `3-2-stable`. The attached test case will fail on `3-2-stable` and passes on master.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8115', 'title': u'handle trailing slash with engines (test case for #7842)'}, {'body': u"1) **Sign cookies using key deriver**<br/>Rails will derive keys if config.secret_key_base is set instead of the old config.secret_key. If secret_key_base is not set to keep backwards compatibility Rails will not derive and just use the raw secret_key as in previous versions.<br/>Users can change the default salt for signing cookies through config.action_dispatch.signed_cookie_salt setting which is by default 'signed cookie'.<br/><br/>2) **cookie.encrypted method => EncryptedCookieJar**<br/>This adds a encrypted method to CookieJar that returns a jar that'll automatically encrypt cookie values before sending them to the client and will decrypt them for read.<br/>It also prevents from tampering by the user (or a 3rd party) throwing an ActiveSupport::MessageVerifier::InvalidSignature exception.<br/>You must set config.secret_token_base to be able to use this feature.<br/>Users are allowed to change the default salt used for encryption by changing config.action_dispatch.encrypted_cookie_salt which defaults to 'encrypted cookie' and can also change the salt using for signing by changing config.action_dispatch.encrypted_signed_cookie_salt which defaults to 'signed encrypted cookie'<br/><br/>3) **encrypted cookie store**<br/>This adds encrypted cookie store. You now can set config.session_store :encrypted_cookie_store, key: '_myapp_session' in order to use encrypted cookies to store your session. This also makes new apps to use encrypted cookie store but default.<br/><br/>4) **Use derive keys for http authentication**<br/>Just that it changes http authentication to use derived keys.<br/>Users are allowed to change the default salt by changing config.action_dispatch.http_auth_salt which defaults to 'http authentication'<br/><br/>In general, please help me reviewing all this. Help me improving the docs for all this. And help me suggesting better names for the options, mostly \u2026<br/><br/>config.secret_key_base<br/>config.action_dispatch.signed_cookie_salt<br/>config.action_dispatch.encrypted_cookie_salt<br/>config.action_dispatch.encrypted_signed_cookie_salt<br/>config.action_dispatch.http_auth_salt<br/><br/>**Note to committers**: Leave this for me to merge :).<br/><br/>/cc @NZKoz @meder @thaidn @emboss @nahi please help me reviewing giving crypto review :).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d04d064616ae7fd752fdcb8daa5abdd6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8112', 'title': u'Encrypted cookies'}, {'body': u'Since version `3.0.x` `Builder` caches method passed to `method_missing` each time. This commit replaces `method_missing` call with `tag!` call to prevent method redefinition on each `to_xml` call with the same builder.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8111', 'title': u'Use `tag!` instead of `method_missing` in `to_xml` conversions.'}, {'body': u'First pull request, so sorry in advance for potential improper git techniques or poor etiquette<br/><br/>Changed `Active Support - Inflections - parameterize` method to delete apostrophes, as suggested in this issue for Friendly ID: https://github.com/norman/friendly_id/issues/329#issuecomment-10001285<br/><br/>Added one test case in `inflector_test_cases.rb` under `StringToParameterized` and making it pass didnt seem to break anything!<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e600bd229c588891a7616f303e30efd9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8110', 'title': u'Changed ActiveSupport inflections parameterize to remove apostrophes'}, {'body': u"When you have an explicit index set, then when you build an input tag with :multiple => true, it doesn't add [] to the end of its name, although it should.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8108', 'title': u'Support :multiple option on input tags that also have :index'}, {'body': u'This is the kind of thing that drives me crazy.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8106', 'title': u'Fixed grammar in migration pending error.'}, {'body': u'Fixes #8095.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8097', 'title': u'Fixed mapping of Solomon Islands.'}, {'body': u"The code introduced in #7377 assumes that `first` and `last` always return a single record. This is incorrect for calling `first` with an integer argument.<br/><br/>The attached commit (against 3-2-stable) handles this case correctly and includes a test.<br/><br/>I'm not super-happy with the resulting code; there's way too much `is_a?` checking going on in `first_or_last`, but this will work for now to get 3.2.9 out.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6883e5ef03484d4fcef507d7b4f1d243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8094', 'title': u'set inverses correctly for first(n) and last(n)'}, {'body': u"Now `BestStandardsSupport` middleware appends it's `X-UA-Compatible` value to app's value.<br/>Also test for `BestStandardsSupport` middleware added.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8093', 'title': u'Fix #8086 (BestStandardsSupport rewrites app X-UA-Compatible header)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8092', 'title': u'Small change to remove warning unused variable.'}, {'body': u'Fixed issue where routes with globs caused constraints on that glob to be ignored. A regular expression constraint gets overwritten when the routes.rb file is processed. Changed the overwriting to an ||= instead of an = assignment. Added regression test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aab52c6dcb1eff73baa17f973b2ab1e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8090', 'title': u'Glob Constraints Fix '}, {'body': u'Fixed issue where routes with globs caused constraints on that glob to be ignored. A regular expression constraint gets overwritten when the routes.rb file is processed. Changed the overwriting to an ||= instead of an = assignment. Added a regression test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aab52c6dcb1eff73baa17f973b2ab1e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8089', 'title': u'Glob Constraint Fix '}, {'body': u"This is in response to the discussion at https://bugs.ruby-lang.org/issues/7241<br/><br/>I think an `each_with_hash` method would be a very useful addition. It provides a nice shortcut for the common `each_with_object({})`, but it also supports setting a default value or proc for the Hash. It also provides a shortcut for a common use of `Hash.new( <proc> )`, which is setting the default value on a hash key when it is looked up. Here's an example of how you could write less code using that feature:<br/><br/>```ruby<br/># using each_with_object:<br/><br/>[1,2,3,2].each_with_object(Hash.new(&-> hash, key { hash[key] = [] })) {|el, hash| hash[el] << el ** 2 }<br/>#=> {1=>[1], 2=>[4, 4], 3=>[9]}<br/><br/># using each_with_hash:<br/><br/>[1,2,3,2].each_with_hash([], true) {|hash, el| hash[el] << el ** 2}<br/>#=> {1=>[1], 2=>[4, 4], 3=>[9]}<br/>```<br/><br/>I would love to be able to easily use `<<` with arrays, instead of having to write `hash[el] += [el ** 2]`.<br/><br/><br/>If this gets merged, it would be awesome if it could also be included in `3-2-stable`.<br/><br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4931eceec58528529fd004e56af197c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8088', 'title': u'ActiveSupport: Added `each_with_hash` to Enumerable'}, {'body': u"If a unknown format is passed in a request, the methods html?, xml?, json? ...etc<br/>Nil Exception.<br/><br/>This patch add a class NullMimeTypeObject, that is returned when  request.format is unknown<br/>and it responds false to the methods that ends with '?'.<br/><br/>It refers to #7837, not fixes because it's not considered a improvement not a bug.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8084', 'title': u'if format is unknown NullMimeTypeObject is returned'}, {'body': u'I think I have a fix for incorrect return value from `ActiveRecord#update_column` method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5adcc3757d6c4f5609aa2dc3b41f4705?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8083', 'title': u'Fix ActiveRecord#update_column return value'}, {'body': u'Public method attributes_before_type_cast used to return internal AR structure (ActiveRecord::AttributeMethods::Serialization::Attribute), patch fixes this. Now behaves like read_attribute_before_type_cast and returns unserialised values.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8082', 'title': u'Backport #8078: Fix `attributes_before_type_cast` for serialised attributes'}, {'body': u'Public method `attributes_before_type_cast` used to return internal AR structure (ActiveRecord::AttributeMethods::Serialization::Attribute), patch fixes this. Now behaves like `read_attribute_before_type_cast` and returns unserialised values.<br/><br/>Also it may need a backport to 3-2-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8078', 'title': u'Fix `attributes_before_type_cast` for serialised attributes.'}, {'body': u'When setting an array column (or other PostgreSQL-specific data type) to be validated for uniqueness, the resulting SQL query is generated with syntax errors, like this:<br/><br/>SELECT  1 AS one FROM "postgresql_arrays"  WHERE "postgresql_arrays"."nicknames" = \'["john", "johnny"]\' LIMIT 1<br/><br/>This happens because Ruby Arrays must be type-casted to their PostgreSQL equivalent.  This small patch fixes this issue, calling the adapter\'s type_cast method.<br/><br/>I have added a test case for this, but since it\'s PostgreSQL-specific (it skips for other adapters), I\'m not sure if it belongs in the validate_uniqueness_test.rb or if I should put it with other PostgreSQL tests.<br/><br/>Thanks,', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/12767e9533d7fb1e1553c96891cecf9e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8075', 'title': u'ActiveRecord: support for validates_uniqueness_of in PostgreSQL array columns'}, {'body': u"This PR closes #6951.<br/><br/>If we use `DATABASE_URL`, `ActiveRecord::Base.configurations` is not populated. Thus we can't use query cache with DATABASE_URL.<br/><br/>See https://github.com/rails/rails/blob/master/activerecord/lib/active_record/query_cache.rb#L7", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8074', 'title': u'Fix #6951. Use query cache/uncache, when using not only database.yml but also DATABASE_URL.'}, {'body': u'Hi,<br/><br/>Here is a fix for find_in_batches when Model#id is a string. In fact when calling find_in_batches (or find_each) without the start option it generates a wrong SQL statement:<br/><br/>    Subscriber.find_each { |subscriber| ...  }<br/>    # Generates SQL:<br/>    # SELECT  "subscribers".* FROM "subscribers"  WHERE ("subscribers"."nick" >= 0) ...<br/><br/>That statement is invalid with strict databases such as PostgreSQL, because it tries to compare a string against an integer.<br/><br/>With more tolerant databases such as SQLite it\'s passing, but in fact it skips IDs starting with a lower character than \'0\'.<br/><br/>Once accepted and merged, I plan to backport that fix in pull request #7987 for rails 3.2.<br/><br/>cc @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7181ef90f3b8bf3c5b39d4dce67576c5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8073', 'title': u'Fix find_in_batches against string IDs when start option is not specified'}, {'body': u"When I executed rails's testcases, I found the following warnings. And I wanted to fix this.<br/><br/>```<br/>activesupport/lib/active_support/core_ext/module/attribute_accessors.rb:11: warning: method redefined; discarding old include_root_in_json<br/>activesupport/lib/active_support/core_ext/class/attribute.rb:83: warning: previous definition of include_root_in_json was here<br/>activesupport/lib/active_support/core_ext/module/attribute_accessors.rb:31: warning: method redefined; discarding old include_root_in_json=<br/>activesupport/lib/active_support/core_ext/class/attribute.rb:80: warning: previous definition of include_root_in_json= was here<br/>```<br/><br/>But I thought `include_root_in_json` should be `class_attribute` (inheritance-able attribute), and my testcase was not passed.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8072', 'title': u'include_root_in_json attribute allows inheritance.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/26b5e23b3f4913c916f9f50ecf7c08c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8066', 'title': u'Add test for code change introduced in this commit f20032f'}, {'body': u"- It's easier to order the keys afterwards than to unorder.<br/>- Normally, we shouldn't waste some time to order the keys as it is a json object, the ordering doesn't matter.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/26b5e23b3f4913c916f9f50ecf7c08c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8065', 'title': u'Remove the sort in the serialization methods used by as_json'}, {'body': u"It's sometimes hard to quickly find where deprecated call was performed, especially in case of migrating between Rails versions. So this is an attempt to improve the call stack part of the warning message by providing caller explicitly.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/956e1f1d80bf09a129a5d0e483667794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8063', 'title': u'Provide a call stack for deprecation warnings where needed.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aaf06d234d37270caaedfed79969f9f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8061', 'title': u'ref'}, {'body': u'As we did here 1adb78424fa79075806704ad6f79c159795828c1', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8059', 'title': u'JSON gem is not required for 1.9 rubies.'}, {'body': u'I added the missing test. Related #7867.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8057', 'title': u'SQLite3Adapter#type_cast should not mutate arguments'}, {'body': u"...ributes.<br/><br/>This fixes the following behaviour:<br/><br/>    class Person < ActiveRecord::Base<br/>      belongs_to :company<br/>    end<br/><br/>    # Before:<br/>    person = Person.select('id').first<br/>    person[:name]       # => nil<br/>    person.name         # => ActiveModel::MissingAttributeError: missing_attribute: name<br/>    person[:company_id] # => nil<br/>    person.company      # => nil<br/><br/>    # After:<br/>    person = Person.select('id').first<br/>    person[:name]       # => ActiveModel::MissingAttributeError: missing_attribute: name<br/>    person.name         # => ActiveModel::MissingAttributeError: missing_attribute: name<br/>    person[:company_id] # => ActiveModel::MissingAttributeError: missing_attribute: company_id<br/>    person.company      # => ActiveModel::MissingAttributeError: missing_attribute: company_id<br/><br/>Fixes #5433.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8056', 'title': u'AR::AttributeMethods#[] raises AM::AttributeMissingError for missing att...'}, {'body': u"...attribute is missing<br/><br/>This fixes the following behaviour:<br/><br/>    class Person < ActiveRecord::Base<br/>      belongs_to :company<br/>    end<br/><br/>    # Before:<br/>    person = Person.select('id').first<br/>    person[:name]       # => nil<br/>    person.name         # => ActiveModel::MissingAttributeError: missing_attribute: name<br/>    person[:company_id] # => nil<br/>    person.company      # => nil<br/><br/>    # After:<br/>    person = Person.select('id').first<br/>    person[:name]       # => ActiveModel::MissingAttributeError: missing_attribute: name<br/>    person.name         # => ActiveModel::MissingAttributeError: missing_attribute: name<br/>    person[:company_id] # => ActiveModel::MissingAttributeError: missing_attribute: company_id<br/>    person.company      # => ActiveModel::MissingAttributeError: missing_attribute: company_id<br/><br/>Fixes #5433.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8055', 'title': u'AR::AttributeMethods#[] should raise AM::AttributeMissingError if given ...'}, {'body': u"This patch adds error handling to `create_table` when the primary_key is being redefined.<br/><br/>I added a separate refactoring commit for the `SQLite3Adapter#copy_table` method. This method redefined the primary key multiple times, wich of course raised exceptions with the patch. I looked over the tests for `copy_table` and made some additions to lock the current behavior down before refactoring (I think it would be good to glance over to make sure I didn't forget anything).<br/><br/>Also there might be a better description for the error message, just leave a comment if you got a better text.<br/><br/>This is a fix for #6378", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8054', 'title': u'create_table raises an ArgumentError when the primary key is redefined.'}, {'body': u"Didn't work before because it updated the model-in-memory first, so the DB query couldn't find the record.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4a551074ddba4460f95d011c47190d0e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8053', 'title': u'Unbreak update_column/update_columns for the primary key attribute.'}, {'body': u"Don't log on pending migration check <br/><br/>Conversation from: #6665 cc/ @rafaelfranca", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8052', 'title': u"Don't log on pending migration check "}, {'body': u'There are two completely identical modules called `ModelNaming` in actionpack. One lives in `ActionView` the other in `ActionController`. I moved the module to `ActionPack` (not sure if that is the right place for it, feedback welcome) and adjusted the references.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8051', 'title': u'refactoring, remove ModelNaming duplication in actionpack'}, {'body': u'As I understand, submit input was accidentally omitted.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/741fd27ca37edcfee12ba481ef35c704?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8050', 'title': u'fix typo in button_to helper example'}, {'body': u"I like the Idea behind CodeClimate. Since rails is already listed there I added the batch to the README.<br/><br/>I'm not sure what the opinion about CodeClimate is on the core-team, so feel free to just close.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8049', 'title': u'add CodeClimate batch to the README'}, {'body': u'I introduced a `NullMail` class. When `mail()` is never called an instance of `NullMail` is returned in place of a regular `Mail`.<br/><br/>This refactoring fixes #7761', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8048', 'title': u"Do not render views when mail() isn't called. (NullMail refactoring)"}, {'body': u"It's only required for 1.8 and for JRuby!<br/>I was fixing a bug with JSON pure on 1.8.7<br/>and I found that we have included json for other<br/>1.8 > rubies also.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8047', 'title': u'Removing JSON for other ruby'}, {'body': u"It was noticed while profiling 'assets:precompile' in JRuby that<br/>exception creation was consuming a large portion of time, and<br/>some of that was due to File.atomic_write.<br/><br/>Testing first with File.exists? eliminates the need for an exception<br/>which should be a performance improvement on both JRuby and MRI.<br/>In this case, the stat() isn't even extra overhead, since it is always<br/>called anyway.<br/><br/>See some [benchmarks on exception vs stat overhead](http://polycrystal.org/2012/10/25/comparing_ruby_exceptions_to_additional_stat_test.html).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/27598e1b77ce41fb0bd8a6fc4a3715d4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8046', 'title': u'Replace flow-control exception with explicit test.'}, {'body': u'Fixed issue where routes with globs caused constraints on that glob to<br/>be ignored. A regular expression constraint gets overwritten when the<br/>routes.rb file is processed. Changed the overwriting to an ||= instead<br/>of an = assignment.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aab52c6dcb1eff73baa17f973b2ab1e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8045', 'title': u'Fixed issue where routes with globs caused constraints to be ignored'}, {'body': u'If I happen to use a `.rb` file inside `app/assets` it can get automatically loaded, this probably holds true for `app/views`.\n\nI think this is not the intended behavior, [railties has](https://github.com/rails/rails/blob/master/railties/lib/rails/engine/configuration.rb#L38):\n\n```ruby\npaths.add "app",                 :eager_load => true, :glob => "*"\npaths.add "app/assets",          :glob => "*"\npaths.add "app/controllers",     :eager_load => true\npaths.add "app/helpers",         :eager_load => true\npaths.add "app/models",          :eager_load => true\npaths.add "app/mailers",         :eager_load => true\npaths.add "app/views"\n```\n\nseems quite clear that the first line refers to all non-specified paths\n\n\nOf course I can fix this per application by adding to `application.rb`:\n\n```ruby\n    config.before_initialize do\n      config.eager_load_paths = config.eager_load_paths.dup - Dir["#{Rails.root}/app/{assets,views}"]\n    end\n```\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c82630c82a3c675d2928804f432fcf17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7587', 'title': u'Should not eager_load app/assets'}, {'body': u"I've been browsing the actionpack source lately and submitted a few patches.\nThere were occasions of trailing whitespace and to keep the commit diffs clean,\nI removed them all in one go.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8043', 'title': u'remove trailing whitespace within actionpack'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8040', 'title': u'fix failing isolated tests in activemodel'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8038', 'title': u'Fix AM::Serializers::Xml dependency'}, {'body': u'This fixes activesupport tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8037', 'title': u'Worker and consumer logs failed jobs instead of raising an exception'}, {'body': u'Two pet peeves fixed:<br/><br/> * ```for foo in foos``` becomes ```foos.each do |foo|```<br/> * ```foo.empty? ? nil : foo``` becomes ```foo.presence```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6bea4182cd4dca98f1bc2f525283c27a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8036', 'title': u'HTML::Selector Minor Refactor'}, {'body': u'The abort on exception flag makes sure that exceptions outside the begin..rescue block have effect. Otherwise the thread would just die without an error message.<br/><br/>The thread name makes it easier to see what the thread is for in Phusion Passenger thread backtraces.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/02f0ee0da223f90bb9996ef252e528c1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8035', 'title': u'Make ThreadedQueueConsumer abort on exception and set a thread name.'}, {'body': u' * Organized code status badges into a "Code Status" section.<br/> * Moved the OSI MIT License link inline (bullets are for unordered<br/>   lists).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6bea4182cd4dca98f1bc2f525283c27a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8034', 'title': u'Organize README'}, {'body': u'"~> 2.2.2" from "~> 2.1.1". Also removed a hash rocket in the Gemfile on<br/>that same line, and created another that was necessary because the 1.9<br/>syntax messed up syntax highlighters.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6bea4182cd4dca98f1bc2f525283c27a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8031', 'title': u'Update redcarpet dependency'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dffb1e16b6fa875efe7ce5dc36adafb3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8030', 'title': u'Fix gratuitous use of ternary operator'}, {'body': u"Previously this code just assumed it is capable of changing the file<br/>ownership, both user and group. This will fail in a lot of scenario's<br/>unless:<br/>* The process is run as a superuser (root);<br/>* The owning user and group are already set to the user and group we're<br/>  trying to chown to;<br/>* The user chown'ing only changes the group to another group it is a<br/>  member of.<br/>If either of those conditions are not met the filesystem will simply<br/>deny the operation throwing an error.<br/><br/>It is also not always possible to do a chmod, there might be a SELinux<br/>policy or another limitation preventing the user to change the file<br/>mode. To this end the chmod call has also been added to the rescue<br/>block.<br/><br/>I've also added a little comment above the chmod command that doing a<br/>chmod on a file which has an ACL set will cause the ACL to be<br/>recalculated / modified.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c8a0e35858af86b1e6f2fb886585faba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8027', 'title': u"Atomic.rb assumes it may chown/chmod a file but doesn't handle the EPERM error."}, {'body': u"Fixes #8025<br/><br/>I'm not sure if there's a good way to test this?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8026', 'title': u'Make sure that RAILS_ENV is set when accessing Rails.env'}, {'body': u'Before (penultimate line):<br/><br/>    class Person<br/>      def to_param<br/>        "#{id}-#{name.parameterize}"<br/>      end<br/>    end<br/><br/>    @person = Person.find(1)<br/>    # => #<Person id: 1, name: "Donald E. Knuth"><br/><br/>    <%= link_to(@person.name, person_path %><br/>    # => <a href="/person/1-donald-e-knuth">Donald E. Knuth</a><br/><br/>After (penultimate line):<br/><br/>    class Person<br/>      def to_param<br/>        "#{id}-#{name.parameterize}"<br/>      end<br/>    end<br/><br/>    @person = Person.find(1)<br/>    # => #<Person id: 1, name: "Donald E. Knuth"><br/><br/>    <%= link_to(@person.name, person_path) %><br/>    # => <a href="/person/1-donald-e-knuth">Donald E. Knuth</a>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f94f8f42364591025aaed622d499f27?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8022', 'title': u'Adding a missing parenthesis in the doc of String#parameterize.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5cba606090e5f29f910274796748f20a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8021', 'title': u'Fix incorrect markdown by removing extra space.'}, {'body': u'There is no need in additional `@calculated_ip` instance variable as we<br/>can use `defined?` to check if `@ip` instance variable is already<br/>assigned.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8019', 'title': u'memoize calculated ip without additional variable'}, {'body': u"As stated here, changing the implementation of FlashHash can break people's sessions.<br/><br/>https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/middleware/flash.rb#L73-76<br/><br/>This happened between Rails 2 and 3, and the ivars have again changed since 3.2, for example replacing `@used` with `@discard`.<br/><br/>So, this patch avoids this issue altogether by mapping the flash object onto a simple data structure for storage in the session. The intention is that this representation remain stable while still allowing the implementation to change, without invalidating existing sessions.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/81eec7f220df03d5b8cadf106a2c14c5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8017', 'title': u'Store FlashHashes in the session as plain hashes'}, {'body': u'PR #5075 added a nice feature to provider client-side with full error messages arranged by model fields. With this patch, it\'s now possible to provide that option directly to `respond_with`, e.g.:<br/><br/>```ruby<br/>respond_to :json<br/><br/>def update<br/>  @user.update_attributes(params[:user])<br/>  respond_with(@user, full_messages: true)<br/>end<br/>```<br/><br/>To achieve the following output:<br/>```json<br/>{ "errors": {<br/>    "name": "Name cannot be blank." } }<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d28da594945b3665f6c06bd4e7dc8e10?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8016', 'title': u'Pass :full_messages option from Responder to AM::Errors'}, {'body': u'I think this name was copy pasted from [here](https://github.com/rails/rails/blob/v3.2.8.rc2/railties/test/generators/controller_generator_test.rb#L15)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e083b9550b21448a93a5ce4f2f5251e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8014', 'title': u'changed test case name'}, {'body': u"It would be convient to pass the key to the block on `cache.fetch` when their is a miss. When I use `cache.fetch` I always have to store the key I'm attempting to write away to pass to the computation function:<br/><br/>```ruby<br/>query = complex_calculation(params[:q])<br/><br/>Rails.cache.fetch(query) do<br/>  ExpensiveOperation.execute(query)<br/>end<br/>```<br/><br/>vs. after my commit:<br/><br/>```ruby<br/>Rails.cache.fetch(complex_calculation(params[:q])) do |query|<br/>  ExpensiveOperation.execute(query)<br/>end<br/>```<br/><br/>This is low-risk, medium-reward commit. Existing code will *just work* if the block doesn't receive a variable and future code will be cleaner in this very common pattern.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bac90e5a544362200fdb2f0c4ffcfa2d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8013', 'title': u'Pass key to block in cache.fetch on miss'}, {'body': u"When a hash like this is created:<br/><br/>    #   params = { :member => {<br/>    #     :name => 'joe', :posts_attributes => [<br/>    #       { :title => 'Kari, the awesome Ruby documentation browser!' },<br/>    #       { :title => 'The egalitarian assumption of the modern citizen' },<br/>    #       { :title => '', :_destroy => '1' } # this will be ignored<br/>    #     ]<br/>    #   }}<br/><br/>We can't call the :member attributes like this:<br/><br/>  # params['member']<br/><br/>We should call it like this:<br/><br/> #  params[:member]", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a15b0863f6c299c2b516754aab2830ec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8012', 'title': u'Fixed typo on ActiveRecord nested_attributes.'}, {'body': u'This is the backport for issue 7521.<br/><br/>- added tests to confirm establish_connection uses DATABASE_URL and<br/>  Rails.env correctly even when no arguments are passed in.<br/>- updated rake db tasks to support DATABASE_URL, and added tests to<br/>  confirm correct behavior for these rake tasks.  (Removed<br/>  establish_connection call from some tasks since in those cases<br/>  the :environment task already made sure the function would be called)<br/>- updated Resolver so that when it resolves the database url, it<br/>  removes hash values with empty strings from the config spec (e.g.<br/>  to support connection to postgresql when no username is specified).<br/>- updated ResolverTest to use current_adapter? to check the type of<br/>  the current adapter.<br/><br/>(note: this backport is slightly different from master due to update to ResolverTest to make sure the tests get run when the adapter is mysql.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d308241c047f7d688b21835a0d47b369?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8009', 'title': u'fixed support for DATABASE_URL for rake db tasks'}, {'body': u"Actually we have two lines under the turbo links.<br/><br/>So my commit permits to have only one line.<br/><br/>Before:<br/><br/>    gem 'jquery-rails'<br/><br/>    # Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks<br/>    gem 'turbolinks'<br/><br/><br/>    # To use ActiveModel has_secure_password<br/>    # gem 'bcrypt-ruby', '~> 3.0.0'<br/><br/>After:<br/><br/>    gem 'jquery-rails'<br/><br/>    # Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks<br/>    gem 'turbolinks'<br/><br/>    # To use ActiveModel has_secure_password<br/>    # gem 'bcrypt-ruby', '~> 3.0.0'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f94f8f42364591025aaed622d499f27?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8006', 'title': u'Remove extra line in Gemfile generated'}, {'body': u"there is a chance that `value` is a Set or an object that reponses to `include?` method so let's handle this case", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/8002', 'title': u'check_box value can be not only an object of Array class'}, {'body': u"This fixes #733.<br/><br/>Because of the spotty wifi in RubyConfAR, I couldn't get `bundle` going, and so I couldn't run the tests. I wanted to get this up here, though, and @clemenshelm says that it works fine in their application.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7997', 'title': u'Add i18n scope to disance_of_time_in_words.'}, {'body': u'This reverts commit 98043c689f945cabffc043f4bdc80ab2a7edc763. See #7994 .<br/><br/>Because if every time `debug.log` is truncated, developers have no way to see the previous ActiveRecord unit test results.<br/><br/>`debug.log` file size can be easily reduced by executing `$ touch /dev/null > debug.log` periodically.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7996', 'title': u'Revert "truncate debug.log on each test run"'}, {'body': u'Moved "activerecord.errors.messages.taken" to "errors.messages.taken so that translations" for, e.g., "errors.attributes.email.taken" don\'t get overridden. This also makes the \'taken\' message consistent with the other error messages which are defined in "errors.messages".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a868e949f8d6880f74207a33898ff5b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7995', 'title': u'Small change to active_record/locale/en.yml'}, {'body': u'Yesterday, I found a big 1GB file called "debug.log" inside the activerecord/test directory. It\'s better if we truncate the log on each test run.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7994', 'title': u'truncate debug.log on each test run'}, {'body': u'I probably look like the most massive smart ass right now. Don\'t hate me.<br/><br/>```Ruby<br/>"lol".pluralize  # => "lulz"<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6bea4182cd4dca98f1bc2f525283c27a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7992', 'title': u'Add inflection for lulz'}, {'body': u"Hey,<br/><br/>in my pull request that was already commited https://github.com/rails/rails/pull/6671<br/>I forgot to include credit in the changelog (by the way, is it customary to put credit in any other place as well?). Since I see all the other changes have credit attributed I would like to include credit to myself and Egor Homakov who described the issue.<br/>I'm not sure what the best way to do this is, so that it would not be a single commit just for this, perhaps the next time the ActiveModel changelog is changed?<br/>Just in case I am attaching a pull request.<br/><br/>I'm sorry for the trouble :S<br/><br/>Thanks,<br/>Jan", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eda6e2638857d20ae499d26432e1a221?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7990', 'title': u'Credit for previous commit'}, {'body': u'this is a backport of #7969.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7989', 'title': u'backport: active_model/validations requires necessary files to run'}, {'body': u'Back port @spastorino fix (https://github.com/rails/rails/pull/7652) from rails4 into 3.2.<br/><br/>I also noticed that find_in_batches is broken with string IDs when start option is not provided, but it works perfectly when start has been given. I fixed it with a test case in commit 827942195cdf4c6f09f540b60ee7c1b7a0d051b6. Maybe I went too far with that last commit?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7181ef90f3b8bf3c5b39d4dce67576c5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7987', 'title': u'Fix find_in_batches with customized primary_key on 3-2-stable'}, {'body': u'This patch fixes issue rails/rails#7951 for 3.2.8. I created a blank app and can confirm that this change restores the desired behavior to `rake db:structure:load`.<br/><br/>(Sorry for the messed up pull request earlier)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd7b1fd9b81dd06cde1db2ee2ca905bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7986', 'title': u'Fix behavior of `rake db:structure:load` for 3.2.8'}, {'body': u'This patch fixes issue rails/rails#7951 for 3.2.8. I created a blank app and can confirm that this change restores the desired behavior to `rake db:structure:load`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd7b1fd9b81dd06cde1db2ee2ca905bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7985', 'title': u'Fix behavior of `rake db:structure:load` for 3.2.8'}, {'body': u"An unsaved parent that `has_many` children shouldn't say that its children include any child with a `nil` foreign key:<br/><br/>    child = Child.create(parent_id: nil)<br/>    Parent.new.children.include?(child) # => false<br/><br/>Adds a test and fixes it by backporting 4bc2ae0da1dd812aee759f6d13ad428354cd0e13.<br/><br/>See #7950 for the original issue, and #7959 for an attempted fix (before I realised it was already fixed on master) and discussion of backporting.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/46caf38e6cbc74005d6c643fd9186ef7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7983', 'title': u'Backport 4bc2ae0 to fix #7950'}, {'body': u'This depends on https://github.com/lautis/uglifier/pull/37', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7982', 'title': u'uglifier compressor will be set by uglifier gem'}, {'body': u'Alright @rafaelfranca, got another thing.<br/><br/>It seems to work pretty good if the Sprockets Railtie just defines its own `config.assets` as an options set.<br/><br/>https://github.com/rails/sprockets-rails/blob/master/lib/sprockets/railtie.rb#L48-55', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7981', 'title': u'Move config.assets out into sprockets-rails plugin'}, {'body': u'Continuation of https://github.com/rails/rails/pull/6943', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/756daf26a0d77df3f9136534e32c7b3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7976', 'title': u"Don't HTML escape ActionMailer plaintext templates"}, {'body': u"This is clone of pull request https://github.com/rails/rails/pull/5553<br/>During the rebasing from rails/master github close my previous pull request with very strange comment... so I just copy/paste explanation from the closed pull request.<br/><br/><br/>Often we need to have date selectors with different styles. (Most often different width.) Unfortunately date_select helper don't provide possibility to set different CSS classes. This commit extend date_select helper with option :css_by_type that set special classes for generated 'select' tags. Class names equal data type, for example:<br/>f.date_select :birthday, :css_by_type => true<br/>generate:<br/>```<br/><select class='month ...>...</select><br/><select class='day' ...>...</select><br/><select class='year' ...>...</select><br/>```<br/>Hope it will by helpfully.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a3ab353191f97f7a782e5d64fc3bda3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7975', 'title': u'Extend date_select helper functionality.'}, {'body': u'Change made in the generation of tabs.<br/><br/>Now to generate can be done:<br/><br/>#### language en:<br/>   <br/>    rake guides:generate # he will recognize the language en<br/>    rake guides:generate GUIDES_LANGUAGE=en # so this being declared the language<br/><br/>#### language pt_br:<br/><br/>    rake guides:generate GUIDES_LANGUAGE=pt_br<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38a5304eddfa2ff08657a3c3f64067d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7974', 'title': u'Update Doc Guides'}, {'body': u'A recent commit to edge Rails rails/rails@1fab518<br/>correctly considers marked for destruction associations as blank, but<br/>incorrectly adds a duplicate error for blank has_one and belongs_to associations.<br/><br/>This pull request fixes this.<br/><br/>Example:<br/>Boy.validates_presence_of(:face)<br/>b = Boy.new<br/>b.errors.full_messages<br/><br/>["Face can\'t be blank", "Face can\'t be blank"]<br/><br/>Fumbled the git squash so opened a second pull request.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a696c1ee9fbddd70b58f0603317e31b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7972', 'title': u'Fix bug with presence validation of associations.'}, {'body': u"After calling `replace` all calls to `key?` return false.<br/><br/>```ruby<br/>hash = HashWithIndifferentAccess.new(a: 42)<br/>hash.key?('a')      #=> true<br/>hash.replace(b: 12) #=> {b: 12}<br/>hash.key?('b')      #=> false<br/>hash.key?(:b)       #=> false<br/>```<br/><br/>This branch adds a simple implementation of replace so key? will work.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/82787f3fcc9e392fa214f5ac4ea4a3d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7971', 'title': u'Implement HashWithIndifferentAccess#replace so key? works correctly.'}, {'body': u'A recent commit to edge Rails https://github.com/rails/rails/commit/1fab518c6a75dac5773654646eb724a59741bc13<br/>correctly considers marked for destruction associations as blank, but<br/>incorrectly adds a duplicate error for blank has_one and belongs_to associations.<br/><br/>This pull request fixes this.<br/><br/>Example:<br/>    Boy.validates_presence_of(:face)<br/>    b = Boy.new<br/>    b.errors.full_messages<br/><br/>["Face can\'t be blank", "Face can\'t be blank"]<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a696c1ee9fbddd70b58f0603317e31b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7970', 'title': u'Fix duplicate validates_presence_of errors'}, {'body': u'While writing isolated unit-tests I noticed that `active_model/validations` does not require the necessary files to run.<br/><br/>```shell<br/>ruby -I activemodel/lib -I activesupport/lib -e "require \'active_support/all\'; require \'active_model/validations\'"<br/>```<br/><br/>results in<br/><br/>```<br/>/rails/activemodel/lib/active_model/validations/acceptance.rb:5:in `<module:Validations>\': uninitialized constant ActiveModel::Validations::EachValidator (NameError)<br/>```<br/><br/>I added the necessary require statement to get everything working.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7969', 'title': u'active_model/validations requires necessary files to run'}, {'body': u'This has been bugging me forever.<br/><br/>I have a few packaged asset gems that have other loose files under their load path like README.mds. Those get copied over and digested to `public/assets`. This happens more often with bower packages.<br/><br/>The other thing is that these libraries have many optional parts. You don\'t always want all the images and other stuff copied over unless you say so.<br/><br/>I\'m suggesting that we only auto compile "loose" files under `app/asset` paths. This would include railtie gems. So if you do `app/assets` in your gem, those are auto included. `lib/assets` and `vendor/assets` are by hand. I think that this models Rails\' default autoloading strategy of `app/` is autoloaded and autorequired, while `lib/` and `vendor/` have to be explicit.<br/><br/>Depends on #7964 being merged first.<br/><br/>/cc @dhh <br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7968', 'title': u'Only compile non-js/css under app/assets by default'}, {'body': u'Hi,<br/><br/>Just a little pull request thanks to @jeremy, just a little fix to ensure users can load the debugger gem if they have a version which allows him to load it.<br/><br/>Have a nice day.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d27b53e2eeb6a053552332020628029?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7967', 'title': u"Add an if statement to not raise an exception when the user can't use the debugger gem"}, {'body': u"I've got railties passing under [my sprockets-rails](https://github.com/josh/sprockets-rails) variant, not without some changes in behavior.<br/><br/>I've started outlining intentional changes in [the README](https://github.com/josh/sprockets-rails/blob/master/README.md). Any other behavior changes are probably an oversight on my part.<br/><br/>I think the idea is I'd move my branch over to `rails/sprocket-rails` when this is approved.<br/><br/>/cc @dhh @jeremy @rafaelfranca @guilleiguaran<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7964', 'title': u'Switch to new sprockets-rails plugin'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7963', 'title': u'redcarpet gem will not work with JRuby!'}, {'body': u'Currently, the mysql adapters use blob types for all `binary` columns. Blobs require extra care when used as keys in indexes, and have some performance caveats [1].<br/><br/>This change uses `varbinary` for `binary` columns that specify a `limit` <= 255 bytes. The test changes indirectly verify the code, as the `add_index` statement fails if the `tiny_blob` column uses a blob type. I can add a direct test if that is desirable.<br/><br/>Thank you for considering this pull request!<br/><br/><br/>[1] http://dev.mysql.com/doc/refman/5.5/en/blob.html ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d7b97642d7aeaf1011ec19e5779144e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7960', 'title': u'Use the MySQL varbinary type when appropriate in migrations'}, {'body': u'Fixes incorrect behaviour of `#include?` on `has_many` associations for unsaved records.  See issue #7950 for code examples and a discussion of the bug.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/46caf38e6cbc74005d6c643fd9186ef7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7959', 'title': u'Fixes #7950: Has many include for new records'}, {'body': u'I originally contributed these aliases 10 months ago and just never got it added to the Rails 4.0 release notes. Here they are.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fa4b5f21ddfec459b530bfce99079e54?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7958', 'title': u'Adding reference a few Time and Date aliases in Rails 4.0 release notes'}, {'body': u'This one\'s pretty straight forward.<br/><br/>``` ruby<br/>javascript_path "foo.js?body=1"<br/><br/># common font-face icon hack<br/>font_path "octicons.eot#iefix"<br/>```<br/><br/>/cc @rafaelfranca', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7956', 'title': u'Ignore asset url query string or anchor when generating path'}, {'body': u'Trying to fix an "issue" where an unnoticed typo in the type parameter<br/>of a migration could lead to data loss.<br/><br/>Using this example :<br/><br/>    class PeopleWriteBuggyMigrations < ActiveRecord::Migration<br/>      def self.up<br/>        add_column "people", "type_typos", :bool<br/>      end<br/><br/>      def self.down<br/>        remove_column "people", "type_typos"<br/>      end<br/>    end<br/><br/>This migration will run fine and without warning(s), but if you try to<br/>remove this column later, active record would fail :<br/>- SQLite cannot directly drop a column, so a temp table is used.<br/>- AR then tries to create a temp table with the same structure.<br/>- the #simplified_type method of the Column class is called at some point<br/>- since the type doesn\'t exists it returns nil<br/>- migration fails in a very ugly fashion.<br/>- user has to fix it manually (dangerous and time comsuming) but will<br/>  be tempted to fix the faulty migration, drop the db and migrate<br/>  again.<br/><br/>This commit add tests for this issue and runs rake test_sqlite3 without error.<br/><br/><br/>This is my first rails pull request, so i hope althought i read the guidelines i didn\'t make too big mistakes. I would really enjoy getting comments on this PR.<br/><br/>Thanks lovely community.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e4575f8149445a00cb7e7711a6539cb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7954', 'title': u'Adds an :unknown column type.'}, {'body': u'Since SanitizeHelper includes ActiveSupport::Concern,<br/>extending of it ClassMethods is no needed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/afbeac88d096ee5a31793d64d157b556?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7953', 'title': u'Removed useless "extend SanitizeHelper::ClassMethods"'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ecd20118eccc74fbe790e75a923de7e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7952', 'title': u'Minor cleanup, helper method was only used once'}, {'body': u'`ENV[\'RAILS_ENV\']` is not defined unless explicitly specified on the<br/>command line when running `rake db:structure:load`. This patch lets<br/>the rake task retrieve the environment from `Rails.env` which defaults<br/>to "development".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd7b1fd9b81dd06cde1db2ee2ca905bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7951', 'title': u"Use `Rails.env` instead of `ENV['RAILS_ENV']`"}, {'body': u'get scope_value only one time dependig on reflection', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7947', 'title': u'refactoring of uniqueness validate_each'}, {'body': u'get scope_value only one time dependig on reflection', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7946', 'title': u'refactor of validates_each of uniqueness'}, {'body': u'Now you can do things like this:<br/>respond_with @authors, include: [books: { order: "price ASC", limit: 5, where: ["price < ?", 5] }]<br/>or just<br/>@authors.to_xml(include: [books: { order: "price ASC", limit: 5, where: ["price < ?", 5] }])', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7945', 'title': u'Query methods allowed for include option for collections.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/144314100b686db946ff68c7ae1065d1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7943', 'title': u"remove 'then' from conditional statement"}, {'body': u'Before this commit when saving or creating a model with an inet or cidr attribute I got the error:<br/><br/>```ruby<br/>NoMethodError: undefined method `includes?\' for ["inet", "cidr"]:Array<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4ca44714f099ef998e8821615e0085?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7942', 'title': u'Fix typo in inet and cidr saving'}, {'body': u'Hello,<br/><br/>Just a little pull request that use 1.9 Hash syntax for railties. I have not made these changes to the test directory. Do I should ? If I should edit something else, please let me know.<br/><br/>By the way, all the tests are green.<br/><br/>Have a nice day.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d27b53e2eeb6a053552332020628029?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7941', 'title': u'Use 1.9 Hash syntax in railties'}, {'body': u'See issue #7914 and pull request 7937 for more info.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a812dec16b0581384b02c590c8a29d97?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7940', 'title': u'Backport fix of issue #7914 to 3-2-stable'}, {'body': u'See issue #7914 and pull request 7937 for more info.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a812dec16b0581384b02c590c8a29d97?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7939', 'title': u'Backport fix of issue #7914 to 3-2-stable'}, {'body': u'Please, read issue #7914 for details about the bug, and commit messages for details about the fix and changes.<br/><br/>Let me know what branches you want me to backport the changes to.<br/><br/>Thanks,<br/><br/>Arturo', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a812dec16b0581384b02c590c8a29d97?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7937', 'title': u"Fixes issue #7914 - PostgreSQL adapter doesn't fetch column defaults when using multiple schemas and domains"}, {'body': u'Please, read issue #7914 for details about the bug, and commit messages for details about the fix and changes.<br/><br/>Let me know what branches you want me to backport the changes to.<br/><br/>Thanks,<br/><br/>Arturo', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a812dec16b0581384b02c590c8a29d97?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7936', 'title': u"Fixes issue #7914 - PostgreSQL adapter doesn't fetch column defaults when using multiple schemas and domains"}, {'body': u'This is very minor, but I will not be able to sleep tonight unless this is merged :neckbeard:   :zzz: <br/><br/>Cheers,<br/>  Lee :beers:', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8058c2c00149cbe4104ddc9fa814443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7935', 'title': u'Clean up Gemfile entry (replace double quotes with single quotes)'}, {'body': u'This patch allow only valid params to be send to PGconn to avoid exceptions in case other params are typed in database.yml (Sometime required by customs adapter based on Postgresql-adapter. e.q postgis-adapter)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e3f2c4402c93ec006f9c5218a4c7bab2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7934', 'title': u'ActiveRecord::ConnectionHandling.postgresql_connection : White list params instead of black listing.'}, {'body': u'fixes #7931<br/>bonus thing - added default RAILS_VERSION in install.rb. Annoyed with typing it every time :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7933', 'title': u'Not sanitize src attr'}, {'body': u'This patch prevents `javascript_include_tag` from sanitizing the url to the script.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7932', 'title': u'javascript_include_tag does no longer sanitize the script url'}, {'body': u'Assuming that config.queue will be a class<br/><br/><br/>Fails =>  https://travis-ci.org/#!/rails/rails/jobs/2770868/L618', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7930', 'title': u'Build fix for queue changes.'}, {'body': u"Follow up #7923. Theres a couple things happening here.<br/><br/>**asset_path, asset_url**<br/><br/>Originally inspired the [current sprockets rails plugin](https://github.com/rails/sprockets-rails/blob/master/lib/sprockets/rails/helpers/rails_helper.rb#L55-60), bd38d9f2118b1005718f8db4292b21a73879409e adds general purpose `asset_path` and `asset_url` helpers. All the other helpers simply funnel through this main point. Makes it possible for extensions to change the behavior of all the helpers w/o redefining each.<br/><br/>**Remove AssetPaths**<br/><br/>There doesn't not a whole lot of documentation indicating that this class was ever okay to use publicly. And theres no tests asserting it either. Just :fire:ing it.<br/><br/>The core of it is replaced by inline helper methods, `compute_asset_path` and `compute_asset_host`. Both these methods should now be considered public. Apps or plugins can call them directly or override them to change there behavior.<br/><br/>**Isolate old asset id code**<br/><br/>I've move all the old asset id mtime query stuff into a separate module, `AssetIdHelper`. It uses the now `compute_asset_path` to set itself up.<br/><br/>Since this is now modular, it wouldn't be a bad time to kill it or move it out into an optional plugin. I'd like to get @dhh's take on this.<br/><br/>* :fire: it<br/>* extract it into a plugin<br/>* or just leave it as is<br/><br/>**Bonus**<br/><br/>You should be able to include `ActionView::Helpers::AssetUrlHelper` into `AC::Base` just fine now.<br/><br/>/cc @dhh @steveklabnik @guilleiguaran @rafaelfranca<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7927', 'title': u'Refactor AssetUrlHelper'}, {'body': u'while browsing the source I noticed that the file `query_methods.rb` is littered. To prevent a polluted diff, when this file will be changed in the future.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7926', 'title': u'trailling whitespace cleanup in query_methods.rb'}, {'body': u'Backported from master, per #7859<br/><br/>If you create a new record via a collection association proxy that has<br/>not loaded its target, and which selects additional attributes through<br/>the association, then when the proxy loads its target, it will<br/>inadvertently trigger a deprecation notice during attribute writing when<br/>CollectionAssociation#merge_target_lists attempts to do its thing, since<br/>the newly loaded records will possess attributes the created record does<br/>not.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7925', 'title': u'Fix has_many assocation w/select load after create'}, {'body': u'`AssetTagHelper` mixes up helpers that generate html content tags and pure url generation.<br/><br/>The url helpers, `image_path`, `javascript_path`, etc are useful outside the view. You should be able to generate a javascript url from a controller, just as you can call any route helper method.<br/><br/>Sprockets would like to just be able to mix in the url generators into its rendering context w/o any of the tag helper stuff.<br/><br/><br/>I have a few more pull requests to follow this.<br/><br/>I really think we need to revert and remove all the `AssetPaths` tag stuff that was added 3. Its difficult to safely have any plugin hook in or be able to call any of the private helpers in the class.<br/><br/>Compare this mess<br/>https://github.com/rails/sprockets-rails/blob/master/lib/sprockets/rails/helpers/rails_helper.rb#L118-174<br/><br/>to just having one `compute_asset_path` method that plugins can override<br/>https://github.com/josh/sprockets-rails/blob/master/lib/sprockets/rails/helper.rb#L42-50<br/><br/><br/>/cc @dhh @guilleiguaran<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7923', 'title': u'Split asset url helpers into seperate AssetUrlHelper'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7919', 'title': u'warning removed: shadowing outer local variable - value'}, {'body': u"When calling an undefined ivar, it returns nil by default, however it does not create the ivar, thus  there shouldn't be a performance penalty by this change, however it does improve readability imo.<br/><br/>``` Ruby<br/>if defined?(@expires_in) && defined?(@created_at) && @expires_in && @created_at<br/>```<br/><br/>vs.<br/><br/>``` Ruby<br/>if @expires_in && @created_at`<br/>```<br/>What do you think?<br/><br/>Ran `activesupport/test/caching_test.rb`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ecd20118eccc74fbe790e75a923de7e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7918', 'title': u'Undefined ivars return nil by default'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc200afe9f522273b095f4ed4129f806?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7917', 'title': u'Cosmetic changes: remove trailing whitespaces from tests'}, {'body': u'bdd105d changes the behaviour of AC::Parameters#permit.<br/><br/>/cc @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7915', 'title': u'update AC::Parameters#permit documentation [ci skip]'}, {'body': u"Sending dalli an expires_in integer that matches the Entry instance's expires_at will invalidate the cached value in Memcache at the same time the Entry is expired.  This breaks the ability for Cache#fetch to determine if the :race_condition_ttl has occurred since the value will never make it back from Memcached.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2c17b677625ca6499a2d9ea2ca724873?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7913', 'title': u"MemCacheStore's move to dalli as a backend broke :race_condition_ttl support"}, {'body': u'Per the [PR](https://github.com/rails/cache_digests/pull/6) in ```cache_digests```.<br/><br/>I have a view template structure in my Rails app that goes several directories deep.<br/><br/>To support that with cache_digests, this patch alters the #directory method in ActionView::Digestor to pop the template name off the end of the path and return the full view directory structure instead of taking just the first directory.<br/><br/>This was accepted into ```cache_digests``` gem, and is replicated here for rails per @dhh request.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b026b250773e2e4b35001bef3ac94ddc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7912', 'title': u'CacheDigests: Support templates in directories several levels deep'}, {'body': u"as it's removed here <br/>1fc795468525d8622cdca474a54c8310a514aa46", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7908', 'title': u'No need to test for rack-cache present in gem file'}, {'body': u'This backports #7161 and #7904.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7905', 'title': u'Backport eager autoloading fixes'}, {'body': u'Without eager autoloading, these would be autoloaded only when #preloader_for\nis called, which is too late in threaded applications.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7904', 'title': u'Eager autoload Preloader classes'}, {'body': u'Regression from e3a746b6fc4a67986c0510dfe50ca064d90d5f37<br/><br/>/cc  @dhh @bdurand ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7902', 'title': u'Fix AS::Cache version upgrading bug'}, {'body': u'Fixes #7894 and #7896', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b8dc4b76792ff3c8cd993aa4c9c467f6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7901', 'title': u'Fixes #7894 and #7896'}, {'body': u'The time is up on the old asset concat concatenation path. Stock asset helpers just link to public. Simple. Plugins add concatenation concerns.<br/><br/>/cc @dhh @guilleiguaran', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7900', 'title': u'Remove old asset tag concatenation'}, {'body': u'A few months ago, `AbstractController::Callbacks` were included in `ActionMailer::Base`. This commit cleans it up by including relevant changelog entries and updating the Rails 4.0 Release Notes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7899', 'title': u'Add missing CHANGELOG relating to addition of callbacks to mailers'}, {'body': u'Noticed that when running `rails new appname -d postgresql` the generated `database.yml` still starts with the following:<br/><br/>```ruby<br/># PostgreSQL. Versions 8.2 and up are supported.<br/>#<br/># Install the pg driver:<br/>#   gem install pg<br/># On Mac OS X with macports:<br/>#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config<br/># On Windows:<br/>#   gem install pg<br/>#       Choose the win32 build.<br/>#       Install PostgreSQL and put its /bin directory on your path.<br/>```<br/><br/>Added instruction for the widely used Homebrew and clarified:<br/><br/>```ruby<br/># On OS X with Homebrew:<br/>#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config<br/># On OS X with MacPorts:<br/>#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6e77509d7891c1d2230f3240a5652b6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7898', 'title': u'Offer instructions for pg gem when installed via Homebrew'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7897', 'title': u'warning fixed: ambiguous first argument; put parentheses or even spaces'}, {'body': u"Guess it's typo in Rails Guides", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd266ab929743549916f88ad2fee5954?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7895', 'title': u'fix typo in "The Rails Initialization Process"'}, {'body': u"Developers from all levels will accidentally run rake tasks using the `rails` keyword when they meant to use `rake`. Often times beginners struggle with the difference between the tools. The most common example would be `$ rails db:migrate`<br/><br/>Rather than telling the developer simply that they did not use a valid rails command, we can see if it was a valid rake command first. If it is a valid rake command we can auto execute it giving the user a period of time to cancel if that isn't what they intended.<br/><br/>Here is what `rake db:migrate` would look like if you cancel the command:<br/><br/><br/>```sh<br/>$ rails db:migrate<br/>Assuming you meant: $ rake db:migrate <br/>press any key to cancel in 3 seconds<br/>> <br/>command terminated ...<br/>```<br/><br/>Here is what it looks like if you don't cancel the command:<br/><br/>```sh<br/>$ rails db:migrate<br/>Assuming you meant: $ rake db:migrate <br/>press any key to cancel in 3 seconds<br/>> <br/>Running: $ rake db:migrate <br/>==  Foo: migrating ============================================================<br/>==  Foo: migrated (0.0000s) ===================================================<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7891', 'title': u'Prompt to run rake when accidentally typed rails'}, {'body': u"This is a pull request for changes of comments on a base.rb file in actionpack to the new hash syntax.<br/>Being  a major code reference, I would assume the overall code base should be changed to use the 1.9 format, however not sure if this is the view of the core committers.<br/><br/>I'm sending this as a PR rather than using docrails to discuss that. The only existing discussion I could find is:<br/>http://grokbase.com/t/gg/rubyonrails-core/129cp75kv2/rails-core-rails-guides-use-new-hash-syntax<br/><br/>If this is accepted, I can continue the progress of such migration", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/902db368dfae6f8d557087c568285404?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7890', 'title': u'Moving to new hash syntax'}, {'body': u'```ruby<br/>mixed_options_for_select([["Pop"], ["Rock", [["Alternative Rock"], ["Hard Rock"]]], ["Country"]])<br/>```<br/><br/>```html<br/><option value="Pop">Pop</option><br/><optgroup label="Rock"><br/>  <option value="Alternative Rock">Alternative Rock</option><br/>  <option value="Hard Rock">Hard Rock</option><br/></optgroup><br/><option value="Country">Country</option><br/>```<br/><br/>Currently not possible.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/341131caf7911c0047602e3b9c272b62?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7889', 'title': u"Add 'mixed_options_for_select' helper to generate combined bare option and optgroup tags from nested array"}, {'body': u'according Best Practices for Speeding Up Your Web Site<br/><br/>http://developer.yahoo.com/performance/rules.html<br/>javascripts should be placed at the bottom<br/><br/>and recommend write javascripts this way<br/><br/>``` rhtml<br/>Your view content here<br/><%= content_for(:scripts) do %><br/><script><br/>  Your scripts here<br/></script><br/><% end %><br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/19e786a2a74377ff6e052d87fd8d1fa8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7888', 'title': u'javascripts tags should be placed at the bottom by default'}, {'body': u'While scanning a few AR test cases I noticed a duplicated `require` statement for a model. I then did a search to reveal the duplicated requires (I found a couple other ones).<br/><br/>This PR removes the unused (duplicated) require statements.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7887', 'title': u'remove duplicated require statements in AR test cases'}, {'body': u'This is a fix for #3675.<br/><br/>I also refactored the `ActionView::TestCase` internals, so that a separate object keeps track of rendered views and their locals. The internal instance variable `@locals` does no longer exist.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7886', 'title': u'assert_template works when the same partial was rendered multiple times'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7885', 'title': u'Add missing entry in CHANGELOG about config.assets.cache change'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7883', 'title': u'Minor refactors in assets test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7881', 'title': u"Rails.config doesn't exist, it should be Rails.application.config instead"}, {'body': u'This improves security by complying with OWASP recommendations: https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet#Rule-Use.22Secure.22_Cookie_Flag<br/><br/>If administrators enable config.force_ssl this code automatically tells clients to only send cookies over SSL. If config.force_ssl is not set there will be no effect.<br/><br/>The problem this solves is that when you force SSL to be true you might forget to set your cookies to HTTPS only. If you forget to do this then your cookies are vulnerable when your users are on a unsafe connection, for example public wifi. This attack happens in the wild with Firesheep (http://codebutler.com/firesheep/). You can read more about this attack at http://en.wikipedia.org/wiki/HTTP_cookie#Cookie_theft_and_session_hijacking<br/><br/>Of course some people will remember and configure the cookie correctly to prevent this attack. However I feel it is important to be secure by default. Default in this case means when a user forces SSL, if that is not set this PR will not change anything.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/64fa0c156c8c444cbbe09593baea6e3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7879', 'title': u'Use secure default values for the session store.'}, {'body': u'As discussed on the [rubyonrails-core mailing list](https://groups.google.com/forum/#!topic/rubyonrails-core/pwQSx3rpVow), this request changes the default test locations as follows:<br/><br/>    test/units          -> test/models<br/>    test/units/helpers  -> test/helpers<br/>    test/functional     -> test/controllers<br/>    test/functional     -> test/mailers<br/>    test/integration    -> test/acceptance<br/><br/>The existing rake tasks are backwards compatible, and will run tests in the old and new locations. New rake tasks were added that only runs the tests in the new locations. The new tasks are `test:models`, `test:helpers`, `test:controllers`, `test:mailers`, and `test:acceptance`.<br/><br/>attn: @spastorino and @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cd8da976054ea4915eafc5d9dd096d38?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7878', 'title': u'Update test names and locations'}, {'body': u'The sentence used to read "at the bottom of the the compiled file"', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4dea5cf83d2d6c1228750b76e579b38d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7877', 'title': u"Remove duplicate 'the' article in commented line"}, {'body': u"this method was not used, not documented and not tested.<br/><br/>While I was looking through the code to implement #6984 I found that this method seems to have lost it's purpose. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7875', 'title': u'remove unused `expand_range_bind_variables` method'}, {'body': u"Assuming a native Ruby class named `Foo` which includes only the following module `ActiveModel::Serializers::Xml`. If we call `#to_xml` on an instance of `Foo` we would get the following exception `NoMethodError (undefined method 'model_name'...`<br/><br/>One way to solve this issue would be to also make sure `Foo` also extend `ActiveModel::Naming`. Another way, which appear to be more robust, and more importantly, consistent with the rest of the codebase (i.e. already used in `ActiveModel::Serializers::JSON`) would be extend `ActiveModel::Naming` the moment `ActiveModel::Serializers::Xml` is included. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/057046472b73276280262cdcec365e60?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7874', 'title': u'ActiveModel::Serializers::Xml should extend ActiveModel::Naming'}, {'body': u'As requested by @dhh.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7873', 'title': u'Moving locale stuff from app.rb to an initializer.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7872', 'title': u'Should use app.paths instead of specific path.'}, {'body': u'Similar to commit 55ceced1 which added support for .css .scss and .js, this commit adds .rake files to the list of files scanned by the `rake notes` and `rake notes:custom` tasks. These tasks will now pick up FIXME and TODO in lib/tasks/*.rake custom rake tasks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3fcbfe3f302f14aa25df67a2c2af8d1d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7871', 'title': u'Support another file type .rake in `rake notes`'}, {'body': u'Added this comment to all the database-specific versions of database.yml, as suggested at<br/>https://groups.google.com/forum/?fromgroups=#!topic/rubyonrails-core/7HB0wdRzfVE<br/><br/>```ruby<br/># Security Concern: Although it is very convenient to commit database.yml to source control and deploy<br/># it with the rest of the app, if you ever open-source your project then your database passwords<br/># will be open as well. Adding config/database.yml to your .gitignore file keep it from being in<br/># your deployed repository but will require you to SCP it to your server.<br/>#<br/># See <URL above> for more info.<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d961e9895a2e42e88024a7d9358770ab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7870', 'title': u'Suggested comment in database.yml about adding to .gitignore'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/70c77c026a5027962949bf4d2a47a24f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7869', 'title': u'Update actionmailer with new hash syntax.'}, {'body': u"Sometimes you don't want cache to all user.<br/>you can<br/>```<br/><%cache_if session[:user_id].blank?,'xxx' do%><br/>  something..<br/><%end%><br/>```<br/>or<br/>```<br/><%cache_unless current_user.admin?, 'xxx' do%><br/>  something..<br/><%end%><br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e59879f3561b96c17c149da0ce62fd58?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7868', 'title': u'Add cache_if and cache_unless two methods to skip fragment cache.'}, {'body': u'I\'d like to add a test, but I\'m a bit lost on where it\'d belong within all those tests :-/<br/>So if somebody can tell me where to add it, I\'ll gladly amend this pull request with a matching test.<br/><br/>For now, an example to reproduce the problem:<br/><br/>    ActiveRecord::Migration.create_table :foos do |t| t.string :demo end<br/>    class Foo < ActiveRecord::Base; attr_accessible :demo; end<br/>    demo = "foo".force_encoding(\'binary\')<br/>    p before: demo.encoding # => binary<br/>    Foo.create(demo: demo)<br/>    p after: demo.encoding # => utf-8<br/><br/>    # worse, it crashes on frozen strings:<br/>    Foo.create(demo: "demo".force_encoding(\'binary\').freeze)<br/>    #!> ActiveRecord::StatementInvalid: RuntimeError: can\'t modify frozen String: INSERT INTO "foos" ("demo") VALUES (?)<br/>    #!>   from /\u2026/gems/ruby-1.9.3-p194/gems/activerecord-3.2.8/lib/active_record/connection_adapters/sqlite_adapter.rb:208:in `encode!\'<br/><br/>A method should never mutate its arguments.<br/>In this specific case, after reading the code, I also think it\'d be even better to raise an exception right away, stating the two options (provide a utf-8 string or use a binary type column). A warning in the log like this is IMO mostly useless.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/33e47178a56073c9b4bff0d2b9b3cb70?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7867', 'title': u'The SQLite3 Adapter mutates arguments'}, {'body': u"Please see the Rails 4 pull request on sprockets-rails for more information: https://github.com/rails/sprockets-rails/pull/21<br/><br/>This is a backport of the work for Rails 3.2. Please note that a new version of sprockets will need to be released with this commit: https://github.com/ndbroadbent/sprockets/commit/82cc1de7e2164c8e96052c612179bb397ccd9a39 (from my [rails3_assets_speedup](https://github.com/ndbroadbent/sprockets/tree/rails3_assets_speedup) branch)<br/><br/>These changes have already been released as a gem called [turbo-sprockets-rails3](https://github.com/ndbroadbent/turbo-sprockets-rails3), and it's working well for many applications.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4931eceec58528529fd004e56af197c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7866', 'title': u'Detect asset changes by saving source_digests in manifest.yml, and speed up non-digest assets'}, {'body': u'This is a backport of pull request #7864', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d856d2ac977eebd19b55bc4cbd7cf9a9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7865', 'title': u'Accept :remote as symbol in link_to options (backport)'}, {'body': u"The documentation for `UrlHelper#link_to` describes a :remote option, which can be set in either the `html_options` or `(url_)options` hashes. But the option is checked as a stringified key ('remote'), and only the `html_options` hash is stringified before this check takes place, so that :remote is ignored if passed in the other hash as a symbol.<br/><br/>This problem exists on 3.2-stable, but an additional issue exists on master: Master passes the options hash to `UrlHelper#url_for` before consuming and deleting the :remote option. As a result, both the string and symbol forms are used for url-generation before they are used to set the data-remote attribute. This patch also addresses this issue.<br/><br/>I pushed a 3-2 backport to `link_to_remote_3_2` in my repository, in case that's useful. Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d856d2ac977eebd19b55bc4cbd7cf9a9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7864', 'title': u'Accept :remote as symbol in link_to options'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7862', 'title': u'rename private method to avoid overriding'}, {'body': u'Fixes #1575.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7861', 'title': u'use Rails backtrace in tests'}, {'body': u'If you create a new record via a collection association proxy that has<br/>not loaded its target, and which selects additional attributes through<br/>the association, then when the proxy loads its target, it will<br/>inadvertently trigger an ActiveModel::MissingAttributeError during<br/>attribute writing when CollectionAssociation#merge_target_lists attempts<br/>to do its thing, since the newly loaded records will possess attributes<br/>the created record does not.<br/><br/>This error also raises a bogus/confusing deprecation warning when<br/>accessing the association in Rails 3.2.x, so cherry-pick would be<br/>appreciated!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7859', 'title': u'Fix has_many assocation w/select load after create'}, {'body': u'When serialising a class, specify the type of any singular associations, if necessary. Rails already correctly specifies the :type of any enumerable association (e.g. a has_many association), but made no attempt to do so for non-enumerables (e.g. a has_one association).<br/>We must specify the :type of any polymorphic association. A has_one association to a class which uses single-table inheritance is an example of a polymorphic association.<br/>Fixes #7471<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/75bf0b37c5c32e5d869476f18c2faea8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7857', 'title': u'Xml serialisation has one'}, {'body': u'When I was using the `activerecord-nulldb-adapter`, I got an error that `ActiveSupport::Autoload` and `ActiveSupport::Callbacks` were undefined, so I figured out that someone forgot to require them.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/376e4eb9dc6c2e33d1330262edc4f109?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7855', 'title': u'Require missing ActiveSupport files in abstract_adapter.rb'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7854', 'title': u'Fix middleware cache tests enabling rack_cache'}, {'body': u'fix Example: Rename tools/profile_requires -> tools/profile<br/>d73f2ff<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/689b479c1d1876281e8839077e96556e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7852', 'title': u'fix Example: Rename tools/profile_requires -> tools/profile'}, {'body': u'...ents/production.rb.tt<br/><br/>Setting config.action_mailer.raise_delivery_errors = true only raises email delivery errors if the email server is configured a certain way. You will have to consult the documentation for your particular email server. Refer to discussion at https://github.com/rails/rails/issues/7473#issuecomment-8148695', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/acfe9766803c7317f1143d919755d016?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7851', 'title': u'Clarify "config.action_mailer.raise_delivery_errors = true"'}, {'body': u'quote the table name when fetching the primary key information for a postgres table.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7850', 'title': u'postgres, quote table names when fetching the primary key (#5920)'}, {'body': u'https://github.com/rails/rails/issues/7471', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/75bf0b37c5c32e5d869476f18c2faea8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7849', 'title': u'Allow has_one associations to support STI.'}, {'body': u"the documentation on #assert_template states that the :locals option is only available in view test cases:<br/><br/>    # In a view test case, you can also assert that specific locals are passed<br/>    # to partials:<br/><br/>I added a warning when it's passed in an inapropriate context to prevent a NoMethodError.<br/><br/>I also changed the code to simply ignore the :locals option if @locals is not set. This way the users will get a warning but the tests don't fail.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7848', 'title': u"can't pass :locals to #assert_template without a view test case (#3415)"}, {'body': u"This is a port of rails/strong_parameters#41 for rails/master, as per @dhh's request in the same PR. This is my first contribution to Rails so feel free to let me know if I botched the `Changelog` or something.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/06bb756d28d1b4140dbf99b900182df9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7847', 'title': u'ActionController::Parameters#permit! is recursive'}, {'body': u'- Changed the comments documentation for the update_column(s) methods to add a little bit of clarity', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab8de5e795681a8a75f4fe9d3930c174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7846', 'title': u'Updated comments for clarity'}, {'body': u'Backport', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/74a6d58513855be76092b33124bedaf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7844', 'title': u'Allow extra arguments for Observers'}, {'body': u"While playing with the pluralize for various use cases, I came across some missing cases for the uncountable array.<br/><br/>I can probably see there are many cases out there, I just thought I'll add the ones that are surely widely used out there.<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/902db368dfae6f8d557087c568285404?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7840', 'title': u'Additional non countable nouns that are widely in use'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7838', 'title': u'Disable Rack::Cache by default'}, {'body': u"I'm assuming Rails supports 1.9.3 because the official test box is using it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8196a8c780361e3d6e91dd987e9ce475?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7836', 'title': u'Update supported ruby versions error message in ruby_version_check.rb'}, {'body': u'This new method a syntatic sugar when you\'re chaining multiple #where clauses together.<br/><br/>```ruby<br/># Before<br/>User.where("created_at < ?", 1.week.ago).where(state: \'active\')<br/><br/># After<br/>User.where("created_at < ?", 1.week.ago).and(state: \'active\')<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7834', 'title': u'Add `Relation#and` which is an alias of `#where`'}, {'body': u"This functionality will be available from `actionpack-deprecated_caching` gem.<br/>The gem is currently hosted at <https://github.com/frodsan/actionpack-deprecated_caching>.<br/><br/>pd: I'm not sure about the name.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7833', 'title': u'Extract AP Page and Action caching from Rails'}, {'body': u'<br/><br/>Currently if a Rails application uses the ActiveSupport::NumberHelper#number_to_human_size to provide a user with information like "2000.34 TB" the information is ambiguous (hence not very usefull). It is unknown whether that information means 2000.34*1000\u2074 or whether that information means 2000.34*1024\u2074. Not even if a user tries to download rails and figure out what it means, is it possible to tell. Because the Rails application (with undisclosed source code) may either call ActiveSupport::NumberHelper#number_to_human_size with or without the :prefix => :si option. The :prefix => :si option changes the exponent base but without changing the notation.<br/><br/>I am suggesting to change the ActiveSupport::NumberHelper#number_to_human_size so that notation goes hand in hand with the exponent base. Using binary (IEC) prefix for exponent base 1024 and SI prefix for exponent base 1000. My proposal can be seen as this pull request: rails/rails#7829<br/><br/>I don\'t have a strong opinion on whether or not the default is IEC or SI, as long as the notatation goes hand in hand with the exponent base, so information like "2000.34 TB" and "2000.34 TiB" is unambiguous.<br/><br/>Even a bit worse is that the current default behaviour (i.e. without the :prefix => :si option )is to incorrectly use SI notation for exponent base 1024, which is against international accepted standards[1].<br/><br/>Before you argue that IEC notation is not (yet) widespread: Remember that HTML5 is not (yet) widespread either, it is not even expected to finalise until 2014 (which probably will be delayed), but that doesn\'t imply that Rails should stay away from it.<br/><br/>Footnotes:<br/>[1] http://en.wikipedia.org/wiki/Binary_prefix<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/968fba3ba6e5df2df68a458218be7104?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7829', 'title': u'Using the right notation for the right exponent base.'}, {'body': u'Making `ActiveModel::Validators#validators_on` to accept a `:kind` option which will filter out the validators on a particular attribute based on its kind.<br/><br/>```ruby<br/>Person.validators_on(:name)<br/># => [#<ActiveModel::Validations::PresenceValidator:0x007fe604914e60 @attributes=[:name], @options={}>,<br/># #<ActiveModel::Validations::InclusionValidator:0x007fe603bb8780 @attributes=[:age], @options={:in=>0..99}>]<br/><br/>Person.validators_on(:name, :presence)<br/># => [#<ActiveModel::Validations::PresenceValidator:0x007fe604914e60 @attributes=[:name], @options={}>]<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7826', 'title': u'Make `.validators_on` accept `:kind` option'}, {'body': u"I've discussed with @tenderlove earlier, and it seems like it make sense to make `Rails.public_path` a Pathname, so you can call Pathname methods on it, such as `.join`. I think this is a useful addition to this method.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7825', 'title': u'Make Rails.public_path return a Pathname'}, {'body': u"Currently when a counter cache column name is specified in the intermediate model of a `has_many :through` association, the `reset_counters()` method is unable to get the model where the column resides in. The resulting error is:<br/><br/>> NoMethodError: undefined method `counter_cache_column' for nil:NilClass<br/><br/>The correct model reference has to be accessed using the additional `through_reflection` object.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf5fcf12effe4798f02aa84def25c684?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7822', 'title': u'Fix reset_counters crashing on has_many :through associations.'}, {'body': u'One of the greatest things about rails is that it is so standards-compliant,<br/>no other framework that I have seen have complied to the<br/>HTTP standard (think REST) in such a degree that Rails does. Kudos to<br/>you all for that.<br/><br/>I think we (Rails community) should follow the line of standards<br/>compliance and also<br/>take it to the binary prefixes [1], i.e. kilobytes, megabytes,<br/>etc. For more than half a decade SI units has been a standard<br/>(occupying the prefixes kilo, mega, ...) Since the introduction of<br/>computers the prefixes has been misused in the IT industry for powers<br/>of 1024 but used correctly (for marketing reasons) by storage<br/>manufacturers to mean powers of 1000.<br/><br/>In 1999 IEC published the new standard for powers of 1024 (known as<br/>binary prefixes[1]). In 2008 this was harmonized with ISO standard in<br/>ISO/IEC IEC 80000-13:2008<br/><br/>I think it is a good time (for Rails 4) for Rails to conform to these<br/>standards. That means that every time a power of 1024 is used the IEC<br/>prefixes kibi, mebi, and so on are used and vice versa. Further every<br/>time a power of 1000 is used the SI prefixes are used, that is, kilo,<br/>mega, and so on and vice versa.<br/><br/>I have created a pull request<br/>(https://github.com/rails/rails/pull/7819) that implements two things<br/>(in two separate commits):<br/><br/>1) Rename all use of 1024 to use IEC prefix names<br/><br/>   a) Rename of core extension: 2.kilobytes => 2.kibibyte  == 2*1024<br/>   b) Rename all use of these helpers within the Rails project.<br/>   c) Ensure that number the prefixes are KiB, MiB when dividing by<br/>   powers of 1024, and using KB, MB when dividing by powers of 1000<br/>   (that is when options[:prefix] => :si)<br/><br/>2) (Re)Introduced the posibility to use SI prefix names (meaning powers of 1000)<br/>   Introduced SI prefix helpers 2.kilobytes == 2*1000<br/><br/>Impact on Rails itself:<br/>None: All the useages has been renamed to use the semantically<br/>equivalent method (that is IEC names).<br/><br/>Impact on Rails projects:<br/>The use of core extensions 2.kilobytes, 2.megabytes will mean<br/>something else; A power of 1000 in Rails4 as opposed to a power of<br/>1024 in Rails3. But the old behaviour can still be achieved by using<br/>IEC names instead such as 2.kibibytes or 2.mebibytes.<br/><br/>Footnotes:<br/>[1]  http://en.wikipedia.org/wiki/Binary_prefix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/968fba3ba6e5df2df68a458218be7104?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7819', 'title': u'IEC prefixes'}, {'body': u"I'm not sure about deleting `conversions` file. Looking for feedback.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/144314100b686db946ff68c7ae1065d1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7817', 'title': u'remove unnecessary object/conversions file'}, {'body': u"test_deserializes_unloaded_classes_on_get_id(CookieStoreTest):<br/>ArgumentError: SessionAutoloadTest::Foo does not refer class<br/>    org/jruby/RubyMarshal.java:148:in `load'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7816', 'title': u'fixed tests with JRuby'}, {'body': u'Used the text and URL at http://guides.rubyonrails.org/i18n.html', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d7b97642d7aeaf1011ec19e5779144e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7815', 'title': u'Fix truncated line in the i18n edge guide'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7813', 'title': u'warning fixed: (...) interpreted as grouped expression'}, {'body': u'Fix tests that were falsely passing because of reversed assertion logic.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7812', 'title': u'fix broken cache tests'}, {'body': u'Fixed the build after a missed a broken test on my last PR. Sorry!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7811', 'title': u'Fix the build (Broken scaffold routes test)'}, {'body': u'Pull #7800 broke the build, this should fix it.<br/><br/>/cc @rafaelfranca @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7810', 'title': u'fix cache store test'}, {'body': u'This time I used ack.<br/><br/>/cc @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7808', 'title': u'Fix other assertions that were backwards.'}, {'body': u"I have just tried to run rake within rails/activesupport (on master)<br/><br/>That generated<br/><br/>    Errno::ENAMETOOLONG: File name too long - /home/jarl/projects/rails/activesupport/tmp_cache/5F0/AEA/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<br/>        /home/jarl/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/fileutils.rb:247:in `mkdir'<br/>        /home/jarl/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/fileutils.rb:247:in `fu_mkdir'<br/>        /home/jarl/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/fileutils.rb:221:in `block (2 levels) in mkdir_p'<br/>        /home/jarl/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/fileutils.rb:219:in `reverse_each'<br/>        /home/jarl/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/fileutils.rb:219:in `block in mkdir_p'<br/>        /home/jarl/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/fileutils.rb:205:in `each'<br/>        /home/jarl/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/fileutils.rb:205:in `mkdir_p'<br/>        /home/jarl/projects/rails/activesupport/lib/active_support/cache/file_store.rb:161:in `ensure_cache_path'<br/>        /home/jarl/projects/rails/activesupport/lib/active_support/cache/file_store.rb:90:in `write_entry'<br/>        /home/jarl/projects/rails/activesupport/lib/active_support/cache/strategy/local_cache.rb:140:in `write_entry'<br/>        /home/jarl/projects/rails/activesupport/lib/active_support/cache.rb:368:in `block in write'<br/>        /home/jarl/projects/rails/activesupport/lib/active_support/cache.rb:525:in `instrument'<br/>        /home/jarl/projects/rails/activesupport/lib/active_support/cache.rb:366:in `write'<br/>        /home/jarl/projects/rails/activesupport/test/caching_test.rb:384:in `test_really_long_keys'<br/><br/>I googled a bit and discovered that ecryptfs has a much lower limitation on filename length (approximately 143 characters): http://unix.stackexchange.com/a/32834<br/><br/>That basically means that running a rails app on an ecryptfs will<br/>fail in a situation where the key is rather long.<br/><br/>If rails is supported on ecryptfs the<br/>`ActiveSupport::Cache::FILENAME_MAX_SIZE` must be reduced to 116", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/968fba3ba6e5df2df68a458218be7104?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7806', 'title': u'Reducing ActiveSupport::Cache::FILENAME_MAX_SIZE to 116 to support ecryptfs'}, {'body': u'Hey @fxn, you got this backwards: http://bfts.rubyforge.org/minitest/MiniTest/Assertions.html#method-i-assert', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7805', 'title': u'fix order of assertions.'}, {'body': u'This method groups a collection into arrays of a certain amount of<br/>elements and returns an array of those groups.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6bea4182cd4dca98f1bc2f525283c27a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7803', 'title': u'Added Enumerable#group'}, {'body': u'Fixes #7799.<br/><br/>/cc @fxn @vijaydev ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7802', 'title': u'Fix reference to code sample in Getting Started.'}, {'body': u'This is fixed on master, but the location changed, so in 3-2-stable, we should reference the specific branch.<br/><br/>Fixes #7799.<br/><br/>/cc @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7801', 'title': u'Issue 7799'}, {'body': u'This code provides a more efficient implementation of ActiveSupport::Cache::Entry that reduces the costs of serialization.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7800', 'title': u'Optimize ActiveSupport::Cache::Entry to reduce overhead'}, {'body': u"I changed the variables `@layouts`, `@partials` and `@templates` to be prefixed with an underscore. The rails tests pass but of course this could make an impact on test cases, which use these internal variables (I don't hope these kind of tests exist though ;)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7797', 'title': u'prefix TemplateAssertions ivars (#7459)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7795', 'title': u'Fix changelog entry about sprockets-rails'}, {'body': u'This being discussed by Rails core right now, IMO this PR is a fair solution, if the user want to use rack-cache then it should be specified in Gemfile explicitly ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7794', 'title': u'Use Rack::Cache middleware only if is in Gemfile'}, {'body': u"reflection init as 'if' stantment.<br/>column is always the same expression and depends from the changing of attributes", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7791', 'title': u'small refactoring of build_relation in uniqueness'}, {'body': u"reflection init as 'if' stantment.<br/>column is always the same expression and depends from the changing of attributes", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7790', 'title': u'small refactoring of build_relation in uniquiness'}, {'body': u'this is a patch for #7777. I could not modify the shared `apply_common_behavior_for` method because the outer methods rely on the fact, that those keys are deleted. Adding the `dup` call inside `apply_common_behavior_for` resultated in 8 error when running the tests.<br/><br/>I added two test cases to make sure the options are not modified.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7789', 'title': u'resource and resources do no longer modify passed options'}, {'body': u'Despite the major version bump, `minitest` appears to be fully backward-compatible with 3.x versions. All 2849 `activesupport` tests pass with flying colors.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7787', 'title': u'Update minitest dependency to ~> 4.0'}, {'body': u"This is a backport of commit rails/rails@8471edc6725aa905dc9f7b800438acb255b1512e (see pull request #6805) to 3.2-stable to allow testing with ActionDispatch::Http::UploadedFile since Rack::Test::UploadedFile and ActionDispatch::Http::UploadedFile don't<br/>share the same API. For further details see mentioned pull request", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c85dc89b5ca024dfd515bb4f3ddcac95?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7786', 'title': u'Backport "Don\'t paramify ActionDispatch::Http::UploadedFile in tests"'}, {'body': u'Closes #5011', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/984959912ebf94363592e07d7ae9eaa8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7785', 'title': u'backport 68677ffb8298105eb9d3efa26d928dd88cc5e006'}, {'body': u"When working on #7781 I found incorrect test names - since my previous pull request is not going to be merged, I'm creating this small one", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8085138938c34ae1af140bfc91f2fe56?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7784', 'title': u'Changed test names to match proper context'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7783', 'title': u"Assets cache shouldn't be shared between different environments"}, {'body': u'This pull request address the failure below.<br/>This failure happens because Oracle adapter uses upper case attribute/column name.<br/><br/>```ruby<br/>$ ARCONN=oracle ruby -Itest test/cases/dirty_test.rb<br/>Using oracle<br/>Run options: --seed 63746<br/><br/>Running tests:<br/>F................................<br/><br/>Finished tests in 1.533941s, 21.5132 tests/s, 116.0410 assertions/s.<br/><br/>1) Failure:<br/>test_0001_partial insert(DirtyTest) [test/cases/dirty_test.rb:557]:<br/>Query pattern(s) /first_name/ not found.<br/>Queries:<br/>INSERT INTO "PEOPLE" ("CREATED_AT", "FIRST_NAME", "ID", "UPDATED_AT") VALUES (:a1, :a2, :a3, :a4)<br/><br/>33 tests, 178 assertions, 1 failures, 0 errors, 0 skips<br/>$<br/>```<br/><br/>This fix has been tested with sqlite3, mysql, mysql2 and postgresql adapters also.<br/><br/><br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7782', 'title': u'Change query pattern case insensitive'}, {'body': u'Since we can use minitest in Rails, why not to follow convention of `refute` methods?<br/><br/>Let me know if you like it and I can add `refute_blank` as alias for `assert_present` and `refute_present` as alias for `assert_blank` also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8085138938c34ae1af140bfc91f2fe56?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7781', 'title': u'Added refute_difference method as alias for assert_no_difference'}, {'body': u"The mysql database adaptor assumes that non-null text columns behave as if the default value is an empty string. This is the default behaviour for mysql connections, but putting the connection in strict mode with `SET SQL_MODE='STRICT_ALL_TABLES'` makes like other databases, where the default value is NULL so the value must be specified.<br/><br/>The mysql adaptor defaults to using this strict mode, although it can be disabled with setting `strict: false` in the database configuration. However, the mysql adapter has a hack based on non-strict mode behaviour to detect an empty string default value. So even though strict mode is used, this hack is continuing non-strict mode behaviour within strict mode.<br/><br/>I propose just removing this hack to mimic the non-strict behaviour to make its behaviour consistent with other databases.  This is what this pull request does.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d6af3d9442783aa00ef1e5d7772f997d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7780', 'title': u'activerecord: Avoid mysql non-null text column defaulting to empty string'}, {'body': u"I found that empty insert values were failing.<br/><br/>Normally this isn't noticed because default values are inserted for all the fields.<br/><br/>I tested with the default adaptors run during tests (mysql, mysql2, sqlite3 and postgresql).  I would appreciate tests run for other supported databases.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d6af3d9442783aa00ef1e5d7772f997d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7778', 'title': u'activerecord: Fix empty_insert_statement_value for mysql and sqlite.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7776', 'title': u'Add #update_columns entry to AR Changelog.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7775', 'title': u'move metal/caching_test into controller/caching_test'}, {'body': u"Dynamic error pages have many benefits over static, for instance they can use the default layout if desired. By generating dynamic error pages by default we can encourage developers to take advantage of this already existing feature and build better sites. In addition to moving people towards dynamically generating their error pages we can add prompts to the default pages. One example is telling devs how to get to their logs. I have added erb to `errors/500.html.erb` that I believe will be extremely helpful to new developers.\n\nWhile walking users through a deployment (such as with http://railsgirls.com/materials) they often are not familiar with how to retrieve logs on a given system. I've added a dynamic section that will look for an environment variable `CHECK_LOG_INSTRUCTIONS` and if present show a corresponding message. I can then work with @hone to get a debug log message into the [ruby buildpack](https://github.com/heroku/heroku-buildpack-ruby) something like `$ heroku logs --tail`. While we've added a number of great error messages to Rails, helping developers find those error messages is crucial to their sustained success. This isn't just for new devs either. Experienced Rails developers who are new to a system might not know how to access its logs.\n\nBy relying on an ENV var we're not coupling the message to any one provider, and if no message is present we fall back on the default error page. It would be the responsibility of providers to set this message on a given system.\n\nMoving in this direction we should also port over `public/index.html` to a dynamic page. This change can be found in a separate PR with it's own set of benefits #7771\n\nScreenshot when running production with `CHECK_LOG_INSTRUCTIONS` set:\n\n![](http://f.cl.ly/items/2E2J3u2b1d2S3s3Y3l1V/Screen%20Shot%202012-09-27%20at%2011.00.16%20AM.png)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7772', 'title': u'Dynamic Error Pages by Default'}, {'body': u'Make it so custom fragment caching (eg: jbuilder) can leverage the cache_digests code.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d928b55d9910cba3360cda7f214cf6e3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7769', 'title': u'Move the CacheHelper#fragment_name_with_digest to be public'}, {'body': u"attribute_cast_code isn't called. And when removing this method, testcases were all green.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7768', 'title': u"Removing dead code. attribute_cast_code isn't called."}, {'body': u'There are the changes to the guides that correspond with [pull request #21 on sprockets-rails](https://github.com/rails/sprockets-rails/pull/21).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4931eceec58528529fd004e56af197c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7767', 'title': u'Updated guides with proposed asset pipeline changes'}, {'body': u'Added posibility work with hashes and symbols as agruments for order<br/>When symbol or hash passed we convert it to Arel::Node, and it make requests more flexible<br/><br/>For example<br/>```ruby<br/>string_order = User.where(:name => 1).order(\'id ASC\')<br/>string_order.to_sql # SELECT "users".* FROM "users" WHERE "users"."name" = 1 ORDER BY \'id ASC\'<br/><br/>symbol_order = User.where(:name => 1).order(:id) # or order(id: :asc) <br/>symbol_order.to_sql # SELECT "users".* FROM "users" WHERE "users"."name" = 1 ORDER BY "users"."id" ASC<br/><br/>User.arel_table.table_alias = \'u\'<br/><br/>string_order.to_sql # SELECT "u".* FROM "users" "u" WHERE "u"."name" = 1 ORDER BY \'id ASC\'<br/><br/>symbol_order.to_sql # SELECT "u".* FROM "users" "u" WHERE "u"."name" = 1 ORDER BY "u"."id" ASC<br/>```<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e083b9550b21448a93a5ce4f2f5251e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7765', 'title': u'learn ActiveReccord::Querying#order work with hash arguments'}, {'body': u'After this https://github.com/seattlerb/minitest/pull/161 Aaron asked to replace capture with new version.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7763', 'title': u'Kernel#capture replaced by version which can catch output from subprocesses'}, {'body': u'Broke by d1cbcd781bdb974c4232c3d63e3d1b4d1f9c4bd5', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7762', 'title': u'Build fix for logger_test'}, {'body': u'* The module is needed for the `determine_constant_from_test_name`\n  method.\n* Without it, the including class is required to also include\n  `ActiveSupport::Testing::ConstantLookup` or a `NoMethodError` will be\n  raised upon instantiation of that class.\n* Issue introduced in c0a24555f9e2749fb94efe1967cb9943db0b6a7e', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3da9aebb918d0d1b12d66fcca93c289d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7760', 'title': u'Adds missing dependency to ActionView::TestCase::Behavior'}, {'body': u'Apologies for missing this before.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cd8da976054ea4915eafc5d9dd096d38?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7759', 'title': u'Add missing inflector dependency'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7758', 'title': u'warning removed: ambiguous first argument;'}, {'body': u'i.e. Oracle database does not support these isolation levels.\n`:read_uncommitted` `:repeatable_read`\n\nThis pull request modifies #7756 to these tests database adapter name independent.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7757', 'title': u'Skip tests for non-supported isolation levels'}, {'body': u'Since Oracle enhanced adapter supports specifying isolation levels with https://github.com/rsim/oracle-enhanced/commit/de100e9af48ba852807de0bf0ae221d91a22e9c4\n\nOracle database itself does not support `:read_uncommitted` nor `:repeatable_read`. Tess for these isolation levels should be skipped.  ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7756', 'title': u'Skip tests for non-supported isolation levels with Oracle'}, {'body': u'This allows to do:\n\n```ruby\nimage_tag("icon.png", :size => "16")\n# => <img alt="Icon" height="16" src="/images/icon.png" width="16" />\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/144314100b686db946ff68c7ae1065d1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7754', 'title': u'Feature: set the same width and height for image if size attribute is a number'}, {'body': u'The none bang method in AR::Relation to modify objects in place was missing.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7750', 'title': u'Added ActiveRecord::Relation#none! method'}, {'body': u'The Rails testing infrastructure is built on minitest, but there are some rough edges if you want to use the spec DSL. Currently its not possible to have a nested describe on a controller test.\n\n    describe WidgetsController, :index do\n      describe "authenticated user" do\n        it "is accessible" do\n          assert_response :success\n        end\n      end\n    end\n\nThis request makes this possible by adding the ability to resolve constants from the test name. It also includes additional spec registration for mailer, helper, and integration tests. Oh, and a bunch of tests too. (All of this code was taken from minitest-rails.)\n\nFixes #7748', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cd8da976054ea4915eafc5d9dd096d38?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7749', 'title': u"Improve support for minitest's spec DSL"}, {'body': u'For rails/rails#7743\n\nI made a new file for testing spec style tests based off `test_test.rb` from the same dir.\nHow does it look guys?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/67c0c5d4a82a8b28405d2fe4f581cc65?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7748', 'title': u'Fix nested describe blocks in controller tests'}, {'body': u'According to documentation you should be able to pass something like this as a collection:\n\n```ruby\n  options_for_select([ "Denmark", ["USA", {:class => \'bold\'}], "Sweden" ], ["USA", "Sweden"])\n````\n\nand get this HTML\n\n```html\n    <option value="Denmark">Denmark</option>\n    <option value="USA" class="bold" selected="selected">USA</option>\n    <option value="Sweden" selected="selected">Sweden</option>\n```\n\n> copy from actionpack/lib/action_view/helpers/form_options_helper.rb line 308\n\nbut when you do it from collection_select the :value_method by default is :last\nthis commit fix it and re-enable the html option for option tag\n\ncoauthored by [fedesoria](https://github.com/fedesoria) - [ovargas27](https://github.com/ovargas27)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/433031df4018635dfb177f4066c37a3b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7747', 'title': u'Allow html options on option tag'}, {'body': u"In my test I have mistake:\n```\n/Users/route/.rvm/gems/ruby-1.9.3-p194@grabber/gems/actionpack-3.2.8/lib/action_dispatch/testing/assertions/routing.rb:176:in `method_missing': undefined local variable or method `method_name' for #<#<Class:0x007fa795b12f80>:0x007fa7931773b0> (NameError)\n```\nbecause of this.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7744', 'title': u'method_name sometimes can be unreachable'}, {'body': u'When we generate new application we have two blank lines in configuration file (application.rb) without this commit.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f94f8f42364591025aaed622d499f27?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7742', 'title': u'Deletion of an extra blank line in configuration template file'}, {'body': u'- remove Palmist which is no longer available.\n- update link to Query Reviewer.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7741', 'title': u'[ci skip] Update Performance Testing guide.'}, {'body': u"I believe when people use generators, they typically order the\nparameters on the command line in an order that makes sense\nto them.  Sorting them in the generated code  makes the order\nseem more arbitrary to humans, even though it's less arbitrary\nto computers. :-)\n\nExample:\n\n    rails g scaffold Post title:string content:text\n\nThe human chose to put title before content. Sorted\nattributes in the generated code work but don't match the\nhuman's intent:\n\n    params.require(:posts).permit(:content, :title)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/32701e4c5c6d91bbbb092077f8bdd2f8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7740', 'title': u'Removed sorting of attribute names in controller generator.'}, {'body': u'Was [used](https://github.com/rails/rails/blob/2-3-stable/actionpack/lib/action_controller/request_forgery_protection.rb#L102) in Rails 2 but [not anymore](https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/request_forgery_protection.rb#L168) -> cleanup', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/59436ecd4fe6ad7c34f67654d839f05f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7738', 'title': u'remove unused Mime::Type#verify_request?'}, {'body': u'- remove unmaintained plugins/gems reference.\n- update links to point to latest urls.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7737', 'title': u'Update Debugging Rails Application guide.'}, {'body': u'Guides updated due to PR #5339', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18bf599b887aeed411b29c3eaf7cf5a4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7736', 'title': u'ActiveSupport core extensions guides update'}, {'body': u'Hello,\n\nJust a little fix in the template of the application.rb file.\n\nHave a nice day.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d27b53e2eeb6a053552332020628029?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7734', 'title': u'Little fix in application.rb template'}, {'body': u"Hi,\n\nI'm proposing to extend `content_tag` so that it accepts nested array for `class` key:\n\nBefore\n======\n\n```erb\n<ul>\n<% @products.each_with_index do |product, i| %>\n  <%- css_classes = ['product']\n      css_classes << 'first' if i == 0 %>\n\n  <%= content_tag :li, class: css_classes do %>\n    <strong><%= product.title %></strong>\n  <% end %>\n<% end %>\n</ul>\n```\n\nAfter\n=====\n\n```erb\n<ul>\n<% @products.each_with_index do |product, i| %>\n  <%= content_tag :li, class: ['product', ['first', i == 0]] %>\n    <strong><%= product.title %></strong>\n  <% end %>\n<% end %>\n</ul>\n```\n\nWhat do you think about it?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/84188f5e909563cfa252bb739e643295?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7731', 'title': u'Add conditional css class to content_tag'}, {'body': u'`root_url` is always returning a trailing slash.\nThat is actually no way to remove it.\n\nSo patched `#url_for` to remove trailing slash if present.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7729', 'title': u'ActionDispatch: remove trailing slash when root_url is called'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7728', 'title': u'Update asset test to match one in sprockets-rails'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7727', 'title': u'update Security guide with StrongParameters documentation'}, {'body': u'This is just other cases of [#7615](https://github.com/rails/rails/pull/7615)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/05f73868bd13eba39cab490c897f1333?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7726', 'title': u"Remove '.rb' from require sentences"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4d6f74711436cfe252bf4fc8f3cf4971?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7724', 'title': u'Fix MIME type in CHANGELOG'}, {'body': u'Rename field_changed? to _field_changed? so that users can create a field named field\nConflicts:\n\n\tactiverecord/lib/active_record/core.rb\n\tactiverecord/test/cases/dirty_test.rb\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7723', 'title': u'Backport #3544 to 3-2-stable'}, {'body': u'Regexes expected empty tags, but got self-closing tags.\n\nTests passed after making regexes same as in corresponding tests on master branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4f6079564f02b87e4c0989585439eb39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7722', 'title': u'Fix 6 failing AR XML serialization tests.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7721', 'title': u'remove unnecessary entry and make minor edits to AR/CHANGELOG [ci skip]'}, {'body': u' fixes #7714', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7720', 'title': u'rename AR::Model::Tag to AR::Tag'}, {'body': u'* Fixed typos from AC::StrongParameters documentation.\n* update AMo::DeprecatedMassAssignmentSecurity documentation.\n* update AMo::ForbiddenAttributesError documentation.\n* Change visibility of AMo::ForbiddenAttributesProtection#sanitize_for_mass_assignment to protected.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7719', 'title': u'Strong Parameters documentation'}, {'body': u"This PR is backported to 3-2-stalbe about #7703.\n\nPlease see #6962.\n\nAS::TWZ#strftime's behavior isn't equals to Time#strftime.\nIt seems %:z and %::z format are ignored.\n\n/cc @rafaelfranca \n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7718', 'title': u'[3-2-stable] Fix #6962. AS::TimeWithZone#strftime responds incorrectly to %:z and %::z format strings.'}, {'body': u"This tiny PR adds one more delegated method (`close` in addition to `open`, `close`, `path`, `rewind`, `size` and `eof?`) in order to interact with the underlying tempfile. Sometimes I've needed to do and doing it through the tempfile is ugly and breaks code which works with the `IO` interface.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/45742831d67c80d12cd7b24907b8d760?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7713', 'title': u'Delegate ActionDispatch::Http::UploadedFile#close to tempfile'}, {'body': u"Per request of @dhh I converted ``attributes=`` in an alias for ``assign_attributes`` since all it's doing is checking for a hash, which seems needlessly defensive", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7710', 'title': u'AR::Base#attributes= is just an alias for AR::Base#assign_attributes'}, {'body': u'The old URL is not just out of date, it actually returns a 404.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/80cd41c5098fb0b56102e540f0b1c815?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7709', 'title': u'Fix Broken Link in ActiveRecord Transaction Documentation'}, {'body': u'This change adds checks to the beginning of logging methods in the default log subscribers to ensure that the log level is sufficient before continuing. Without this code, production applications with logging turned down will still execute a fair bit of code on every request to set up log messages that are then thrown away.\n\nAlso made a very minor optimization to time formatting to use string interpolation instead of formatters.\n\nFinally removed Explain queries from being logged by active record since they are not interesting for debugging purposes and only pollute the log. This can clean up development logs significantly when using a variety of third-party gems that force Explain to be run on every query.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7708', 'title': u'Optimize log subscribers to check if the log level is sufficient'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7707', 'title': u'Update changelogs to add entries about strong_parameters integration'}, {'body': u"Please see #6962.\n\nAS::TWZ#strftime's behavior isn't equals to Time#strftime.\nIt seems `%:z` and `%::z` format are ignored.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7703', 'title': u'Fix #6962. AS::TimeWithZone#strftime responds incorrectly to %:z and %::z format strings.'}, {'body': u'The other commit is a nice to have during the development of sprockets-rails (while we release a final version for Rails 4)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7702', 'title': u'Remove highly uncommon `config.assets.manifest` option'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7701', 'title': u'Set AC::Parameters.permit_all_parameters explicitly to false when config.action_controller.permit_all_parameters is not present'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7697', 'title': u'Minor cleanups missed during mass assignment options removal from AR'}, {'body': u"I had write a code like this:\n```\nif Rails.env=='test' || Rails.env='cucumber'\n```\nThis mistake is too easy to make. \nSo I want to lock the Rails field which is not changed in most cases.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc2590129d5efa61a05f476c27b71698?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7696', 'title': u'add lock!/unlock! to Rails'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7694', 'title': u'Update AR docs to remove reference to mass assignment options'}, {'body': u"* The params as supplied pass born in authors[0] but not authors[1] so it seems like the test isn't covering what it should be covering.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7693', 'title': u'Correct parameter access.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7692', 'title': u'update docs for strong parameters merge'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7691', 'title': u'fix shadowing outer local variable warning'}, {'body': u'See #7685.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7686', 'title': u'Add upgrading note to 3.1 release notes.'}, {'body': u"Backport of applicable parts of #6441 cb6f83935, in a backwards compatible way. \n\nPreviously, ConnectionPool uses connection spec key 'wait_timeout' (default 5 seconds) to decide how long a thread can block waiting for a connection to be avail before raising. \n\nHowever, mysql2 adapter uses this same 'wait_timeout' key for an entirely different value -- setting the MySQL server's own 'wait timeout', how long the server will allow a connection to be idle before closing it. Default is several hours. \n\nExtreme differences in default shows you often do not want these two values to be the same. But if you don't want them to be default, there is no supported API to change one without changing the other to be the same, since they both use 'wait_timeout'. \n\nSo this change maeks ConnectionPool use `checkout_timeout` in the spec, prefering it over `wait_timeout`.  But `wait_timeout` IS (unlike in master) still used if there without `checkout_timeout`.  If you want mysql2's `wait_timeout` to be differnet than ConnectionPool's timeout, you can (and have to) set them both -- mysql2 will use the `wait_timeout`, ConnectionPool will use the `checkout_timeout`.  But prior to this patch there was _no_ way to do that. \n\nThe actual code change is very straightforward. But I wasn't sure how to write the test. The test is a bit wonky, if someone has a suggestion of how to organize the test better, please do share. @rafaelfranca  , any interest/feedback?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7684', 'title': u"ConnectionPool accepts spec key 'checkout_timeout' (Backport)"}, {'body': u'\nExplicitly tell users to read the guide before submitting code. re: #7677. Specify the name of the mailing list for Rails-talk to help differentiate it from Rails-core mailing list.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7681', 'title': u'Stronger wording in Contributing file'}, {'body': u'See #3782.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7680', 'title': u"Remove 'assigned but unused variable' warning"}, {'body': u'I think this should be explicit as the password fields behaviour is inconsistent with other fields in this regard.\nIt had me scratching my head until I dug through the source code.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/740df61b2e28f95a1f9eceab5fce3bd1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7678', 'title': u'Add extra documentation for password_field'}, {'body': u"There are a number of issues I've seen repeatedly come up in github issues I think we can fix by having them in this file. From minor issues like improper whitespace, to major ones like bug fixes and features getting abandoned because authors don't know how to properly rebase or squash. \n\nWhile we already have a large amount of contribution information no http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html it still requires a user to click through and read the guide. My experience with readme's and wiki's on github is that most users expect the readme to summarize all topics, and any additional links to expand on them. Similarly it would be beneficial to our potential contributors to have all this information available at a glance on the contribution guide.\n\nInspiration for additional information from: http://contribute.md/ and @hone\n\nFor a preview check out: https://github.com/schneems/rails/blob/schneems/contribute/CONTRIBUTING.md", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7677', 'title': u'Update Contributing Guide'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7676', 'title': u'show love to contributors'}, {'body': u"In master, @pmahoney's 02b2335563 causes contention for connections in the ConnectionPool to be fair (first-waiting, first-satisfied) which is important for reasonable behavior in a high-contention short-checkout scenario.  See also issue #6492 .\n\nI have been using a hacky local monkey patched backport of that patch in my rails 3.2.x app for several months now -- and it's performing admirably.  My app that had so much trouble in rails 3.2.x in the sorts of scenarios the patch is designed to fix -- now runs awesomely, as expected. \n\nSo I think it's valuable to backport this to 3-2-stable. (A couple others have asked me about these issues in 3.2).  Which is what this pull request is. \n\nI manually prepared the backport -- master had enough other semantic and implementation diffs from 3-2-stable that it was a bit tricky to figure out the right way to do this (and this stuff is confusing). But I think I got it right. \n\nNote one significant difference in this backport patch from master:  3-2 still tries to rescue 'leaked' connections in #checkout, if no connections are available, `clear_stale_cached_connections!` is called. This behavior is still preserved with this backport in 3-2-stable, adding the `clear_stale_cached_connections!` check in the new `acquire_connection`. (When I forgot to do this, I indeed got failing tests in 3-2-stable `test_checkout_behaviour`, which passed again when I made sure `clear_stale_cached_connections!` still happened when required). \n\nI am relatively confident I've gotten everything right, although this stuff is admittedly quite tricky. \n\n@tenderlove, @rafaelfranca or anyone else with eyes on AR, appreciate feedback and/or merge, thanks! ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7675', 'title': u'backport fair connection pool 02b2335563 to 3-2-stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7673', 'title': u'fix rdoc task for Action Mailer documentation'}, {'body': u'Previously, the `asset_path` internals only respected the `:digest`\noption, but ignored the global config setting. This meant that\n`config.digest = false` could not be used in conjunction with\n`config.compile = false` this corrects the behavior.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/88a1521be4c8a667dbb7d61e68cc0668?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7672', 'title': u'Respect `config.digest = false` for `asset_path`'}, {'body': u"Noting that we don't take feature requests or 'help me' stuff on the Issues tracker should cut down a ton on bad Issues.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7671', 'title': u'Improve CONTRIBUTING'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7670', 'title': u'fix CONTRIBUTING.md markup'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7669', 'title': u'Rename .rb template handler to .ruby to avoid conflicts with mustache classes'}, {'body': u'When using shortcut routes inside an engine the "to_shorthand" variable\nis set to true, causing the module scope of the route to not be applied.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cfc0367c8a13da57a21c409e44895a4f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7668', 'title': u'Removing to_shorthand to fix #6497'}, {'body': u"Unfortunately, I found new warning. This code doesn't be used.\nIf removing, tests are still green.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7667', 'title': u'Remove unncessary code.'}, {'body': u'When executing rails own testcases, I found new warnings.\nI think that it introduced since 9fa3f102813eeeec440abd75870dfa7b23835665, because testcase name are duplicated.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7666', 'title': u'Fix warning: method redefine. Testcase name are duplicated.'}, {'body': u'Change array syntax in auto-generated ruby file.\nI follow the https://github.com/bbatsov/ruby-style-guide.\n"Prefer %w to the literal array syntax when you need an array of strings."', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/005a76493bea7fef27fd5cefab08ff29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7665', 'title': u'Improve syntax of schema dumps index columns.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7664', 'title': u'Fix build for Queue.'}, {'body': u"It seems like apart from README and CHANGELOG, Ruby on Rails Guide are the only place that use Textile in our documentation. So, I've to convert those to Github Flavored Markdown, to make it consistent with other documentations on the site. This will make us having to write documentation only in RDoc and Markdown and also lower a barrier of entry for guide editors, as it seems like contributors nowadays will know how to use GFM more than Textile.\n\nThe generated version of the guide is currently at https://dl.dropbox.com/u/506761/output/index.html. \n\n**NOTE:** There might be some places that the style might still be broken. However, I think it have reaches the point that I want to merge this in first and follow up with the style changes, as there're so many merge conflicts that came up after I rebased it tonight. I'd still say it's ~99% done though. I also want to get it in because guides are changed so frequent, so the faster the better. :P\n\n/cc @fxn, @vijaydev for a review.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7663', 'title': u'Convert all the guides into GFM'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7662', 'title': u'improve AR/CHANGELOG [ci skip]'}, {'body': u'If assigning to a has_many :through collection against an unsaved\nobject using the collection=[<array_of_items>] syntax, the join models\nwere not properly created, previously.\n\nThis bug is present in the current 3.2.8 release, as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7661', 'title': u'Fix collection= on hm:t join models when unsaved'}, {'body': u"As described in #7646 when an ActiveRecord::RecordNotFound was raised rails returned a 404 to the client but logged a status code of 500.\n\nThis is a bug fix for the issue described above.\n\nThe problem was caused by the following line:\n```ruby\nstatus = ActionDispatch::ExceptionWrapper.new({}, payload[:exception]).status_code\n```\n\nSince `payload[:exception]` is an Array with two elements: the exception class and the message, the lookup in the `ActionDispatch::ExceptionWrapper` class got confused. The `ExceptionWrapper` used the following lookup machanics:\n\n```ruby\nRack::Utils.status_code(@@rescue_responses[@exception.class.name])\n```\n\nwhich resulted in a lookup for `'Array'` and eventually in a 500.\n\nTo fix the bug I did:\n\n* Added a test to `log_subscriber_test` in actionpack (I used a different exception class because `ActiveRecord::RecordNotFound` is not available but they share the same problem)\n* Change the lookup in `LogSubscriber` to use the `rescue_responses` hash directly (because I don't have an Exception instance)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7660', 'title': u'log 404 status when ActiveRecord::RecordNotFound was raised (#7646)'}, {'body': u'Pull request [#5767](https://github.com/rails/rails/pull/5767) rebased ;)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edc49c0f3c5b5e50e7e2c8ade6d3d21b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7659', 'title': u'REBASED: fixing assert_template bug when template matches expected, but not ends with'}, {'body': u"Fixes #5057.\n\nIf you have :conditions on a has_many :through, it does not\nsave the data. This patch fixes that by generating the\ncorrect SQL.\n\nThis is based on work done by @clarkgr on #5057.\n\nI don't have a test written, because I'm an AR noob, but you have to start somewhere...\n\nAll the existing tests pass.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7658', 'title': u'Save join data with has_many :through.'}, {'body': u"In current implementation, it's break when executing un-explainable query.\nThese query should be ignored for explaining.\n\ncloses #7544 #6458\n\n/cc @rafaelfranca", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7657', 'title': u"Don't explain except normal CRUD sql."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d1a58c46532900ba65fd439e64527ef4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7656', 'title': u'Clarify the documentation on the Rails::Application#call method'}, {'body': u'it does what it says.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7655', 'title': u'fix the build'}, {'body': u"Because Process::Status has no instance_variables, the\nActiveSupport version of #to_json produces {}, which isn't good.\n\nTherefore, we implement our own #as_json, which makes it useful\nagain.\n\nFixes #4857", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7654', 'title': u'Improve Process::Status#to_json'}, {'body': u'I found them when I was running\nwarning mode on with railties\n\nSee https://github.com/rails/rails/pull/3782', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7653', 'title': u'Few more warnings removed.'}, {'body': u'Although we set primary_key other than id, we should compute offsets by  any primary_key.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/976d7ac644256c0fb198423b0c00ea52?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7652', 'title': u'Fix find_in_batches with customized primary_key'}, {'body': u'This reverts commit 533a9f84b035756eedf9fdccf0c494dc9701ba72.\n\nThis fixes #3956.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7651', 'title': u'Revert "Merge pull request #3507 from jmazzi/issue-3503"'}, {'body': u"I saw some warning when executing rails own testcases.<br/><br/>I don't know 8b05cfa is best way ;)<br/>Please review it !", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7650', 'title': u'Fix warning: circular require considered harmful.'}, {'body': u'This is a rebased version of #2520.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7649', 'title': u'Support for multiple etags in an If-None-Match header'}, {'body': u'related to #7544.\n\ncc/ @fxn\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7648', 'title': u'Query for loading index info should be marked as SCHEMA.'}, {'body': u"* ActiveSupport::Configurable should allow config_accessor to take\n  default value by block, just like `cattr_accessor`.\n\n    ```\n    class User\n      include ActiveSupport::Configurable\n      config_accessor :hair_colors do\n        [:brown, :black, :blonde, :red]\n      end\n    end\n\n    User.hair_colors # => [:brown, :black, :blonde, :red]\n    ```\n\n* remove trailing whitespaces in configurable.rb and its test file.\n\nIt's an old pull request #5730, but no one implement it . I just implement it like someone suggested, change the interface to just like `cattr_accessor`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56aebe7431dc8cfec47697da54426a21?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7645', 'title': u'Set up config_accessor with a default value by block'}, {'body': u'To make possible add synonyms extension by one function call\n\n```ruby\nActionView::Template.register_template_handler :md, :markdown, markdown_handler\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e083b9550b21448a93a5ce4f2f5251e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7644', 'title': u'Allowing pass couple extension to one register_template_handler call'}, {'body': u"It's not thread safe at all.\n\nI also removed two tests that were testing its behavior so that the suite doesn't throw deprecation warnings. I'm not 100% sure this is the right thing to do.\n\nI'm also not sure if this is a 'deprecate in 3-2-stable, remove in master' situation or a 'deprecate in master, remove in 4.1' situation.\n\nThis fixes #4060.\n\n/cc @tenderlove", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7643', 'title': u'Deprecate ActiveSupport::Benchmarkable#silence.'}, {'body': u'Add entry about 245941101b1ea00a9b1af613c20b0ee994a43946 and\n95be790ece75710f2588558a6d5f40fd09543b97.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7642', 'title': u'update CHANGELOG'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/144314100b686db946ff68c7ae1065d1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7637', 'title': u'use presence method instead of checking for blank'}, {'body': u"If the request format is text/html then return the existing failsafe\nresponse. For all other formats return text/plain.\n\nThe original issue points out to return JSON at the appropriate time,\nhowever as @wycats pointed out, it's often better to return text/plain.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7636', 'title': u'Fixes issue #5660: Failsafe exception returns text/html and text/plain.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7635', 'title': u'warning removed: shadowing outer local variable - message'}, {'body': u'See\n\nhttp://travis-ci.org/#!/rails/rails/jobs/2444632', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7634', 'title': u'Build fix for ActionMailer'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7633', 'title': u'fix markdown markup in AR/CHANGELOG'}, {'body': u'Back-port test coverage to preserve the health of the PostgreSQL auto-reconnection functionality.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4f6079564f02b87e4c0989585439eb39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7632', 'title': u'3 2 stable'}, {'body': u'This reduces the number of allocated strings from columns * (rows + 1) to just columns.  This should fix #7629.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f183bcc4176b308c9edabe79299e448f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7631', 'title': u'Freeze columns before using them as hash keys'}, {'body': u'Hash#merge accepts block that you can use to customize how hash values are merged. This change makes merge and deep_merge compatible.\n\nhttp://www.ruby-doc.org/core-1.9.3/Hash.html#method-i-merge', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e18572ea11d449df6af82e70f012e62b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7628', 'title': u'Allow passing block to deep_merge and deep_merge!'}, {'body': u'Hi Folks,\n\nThis commits makes the legacy method ConnectionAdapter::Column#type_cast_code compatible with the fix applied to the 3.2 branch in the pull request #7509.\n\ncc @rafaelfranca @carlosantoniodasilva', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c802b68aaf738f3caa5488f964f1d560?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7623', 'title': u'update ConnectionAdapter::Column#type_cast_code to be compatible with rails 3.2 branch'}, {'body': u"CollectionProxy doesn't undefine `class` and other basic methods (halleluia) since c86a32d7451 and this commit changes the doc to reflect this.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7622', 'title': u'Update documentation for CollectionProxy'}, {'body': u"It's further work on CSRF after 245941101b1ea00a9b1af613c20b0ee994a43946.\n\nThe :null_session CSRF protection method provide an empty session during\nrequest processing but doesn't reset it completely (as :reset_session\ndoes).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7616', 'title': u'Implement :null_session CSRF protection method'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/144314100b686db946ff68c7ae1065d1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7615', 'title': u"remove '.rb' from require call"}, {'body': u'This is an updated version of #2808.\n\nIt closes #2800. Users of other SCM\'s can now generate rails\napps that will add the "empty" directories to source control,\nbut will not have a useless .gitignore or mis-named .gitkeep\nfiles.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7614', 'title': u'add --skip-ignore and --skip-keeps options to generators.'}, {'body': u"Simple patch to allow delegation to class. With it, one can:\n\n    class FooFeatureController < ActionController::Base\n      def self.feature_name\n        controller_name.sub /_feature$/, ''\n      end\n      # In the same way that controller_name is available from the instances too:\n      delegate :feature_name, :to => :class\n    end\n\n\nWithout it, one gets a relatively obscure syntax error message.\n\n    rails/activesupport/lib/active_support/core_ext/module/delegation.rb:142:in `module_eval': test/core_ext/module_test.rb:37: syntax error, unexpected '.' (SyntaxError)\n                class.table_name(*args, &block)    ...\n                      ^\n    test/core_ext/module_test.rb:39: syntax error, unexpected '.'\n                if class.nil?                         ...\n                         ^\n    test/core_ext/module_test.rb:44: syntax error, unexpected keyword_end, expecting $end\n              end                                                 # end\n                 ^\n\nIt's already possible to use `delegate :foo, :to => 'self.class'` but that is less obvious (and also won't give the expected result with `:prefix => true`)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7613', 'title': u'Nice and easy delegation to the class'}, {'body': u"see 34b23e7110a3a13cf157608cefc9b5701017bf39\n\n```ruby\n\n\n  1) Error:\ntest_assert_select_email(AssertSelectTest):\nNoMethodError: undefined method `queue' for Rails:Module\n    /Users/arunagw/checkouts/rails/actionmailer/lib/action_mailer/base.rb:491:in `queue'\n    /Users/arunagw/checkouts/rails/actionmailer/lib/action_mailer/base.rb:484:in `method_missing'\n    /Users/arunagw/checkouts/rails/actionpack/test/controller/assert_select_test.rb:319:in `test_assert_select_email'\n\n  2) Error:\ntest_assert_select_email_multipart(AssertSelectTest):\nNoMethodError: undefined method `queue' for Rails:Module\n    /Users/arunagw/checkouts/rails/actionmailer/lib/action_mailer/base.rb:491:in `queue'\n    /Users/arunagw/checkouts/rails/actionmailer/lib/action_mailer/base.rb:484:in `method_missing'\n    /Users/arunagw/checkouts/rails/actionpack/test/controller/assert_select_test.rb:329:in `test_assert_select_email_multipart'\n\n3949 tests, 16952 assertions, 0 failures, 2 errors, 0 skips\nrake aborted!\nCommand failed with status (1): [/Users/arunagw/.rvm/rubies/ruby-1.9.3-p194...]\n\n\n```\n\nThis PR fixes above failures.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7612', 'title': u'Fix build Rails.queue'}, {'body': u'HTML tags generated by `TagHelper#tag` always enclose their attribute values in double quotes ("). Therefore, it never makes sense to allow an unescaped double quote within an attribute value. It shouldn\'t matter if the attribute value is a `SafeBuffer` (html_safe). It shouldn\'t matter if the `escape` parameter is `false`. No matter what the caller provides as an attribute value, `#tag` should ensure the HTML it generates properly encloses that value in double quotes.\n\nThis is an example failing test:\n\n    def test_not_really_safe\n      assert_equal %(<input value="supposedly &quot;safe&quot;" />), tag(\'input\', :value => \'supposedly "safe"\'.html_safe)\n      # generates: <input value="supposedly "safe"" />, and the browser will see the value as "supposedly "\n    end\n\n\nCloses issue #7609 (previous pull request sent for 3.2 stable branch)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/10adb7caa4eff9c02d244172bc8db6df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7611', 'title': u'Always encode double quotes in HTML attributes values.'}, {'body': u'1. Unused variable\n2. possibly useless use of a variable in \nvoid context', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7610', 'title': u'warning removed.'}, {'body': u'[close #6217]  If a generator has an error we should display that error rather than swallowing it while allowing other generator sot be listed. This is useful while developing a generator.\n\nATP Railties', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7606', 'title': u'Warn when generator cannot load'}, {'body': u'I\'ve added additional comments on how to use the "type" column without STI by overriding it in your ActiveRecord Model.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bc5fbb4a793359c2c527e37edfa470a2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7605', 'title': u'How to use the "type" column without STI'}, {'body': u"Related to #7572.\n\ncc/  @rafaelfranca\n\nUpdated:\nIf we don't merge this, we should add a changelog entry about #7572 to master.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7603', 'title': u"Backported #7572 to 3-2-stable. Use config['encoding'], because database configuration use not charset but encoding."}, {'body': u"As a result of different commits, ConnectionPool had become\nof two minds about exceptions, sometimes using PoolFullError\nand sometimes using ConnectionTimeoutError. In fact, it was\nusing ConnectionTimeoutError internally, but then recueing\nand re-raising as a PoolFullError.\n\nThere's no reason for this bifurcation, standardize on\nConnectionTimeoutError, which is the rails2 name and still\naccurately describes semantics at this point.\n\nHistory\n\nIn Rails2, ConnectionPool raises a ConnectionTimeoutError if\nit can't get a connection within timeout.\n\nOriginally in master/rails3, @tenderlove had planned on removing\nwait/blocking in connectionpool entirely, at that point he changed\nexception to PoolFullError.\n\nBut then later wait/blocking came back, but exception remained\nPoolFullError.\n\nThen in 02b233556377 pmahoney introduced fair waiting logic, and\nbrought back ConnectionTimeoutError, introducing the weird bifurcation.\n\nConnectionTimeoutError accurately describes semantics as of this\npoint, and is backwards compat with rails2, there's no reason\nfor PoolFullError to be introduced, and no reason for two\ndifferent exception types to be used internally, no reason\nto rescue one and re-raise as another.  Unify!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7601', 'title': u'ConnectionPool, unify exceptions, ConnectionTimeoutError'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7595', 'title': u'Add missing entry in CHANGELOG about change of AD::Session::MemCacheStore'}, {'body': u'This handler simply allows arbitrary Ruby code as a template', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7594', 'title': u'Add .rb template handler'}, {'body': u'The RFC indicates that username and passwords may be encoded.\nhttp://tools.ietf.org/html/rfc2396#section-3.2.2\n\nFound this trying to use the mysql://username:password@host:port/db and having special characters in the password which needed to be URI encoded.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bc2e1413f8d7bff1e86db59f47db09c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7593', 'title': u'Decode attributes pulled from URI.parse'}, {'body': u'This reverts commit ca80067bbe4662c60b933188ad3769605742e812.\nEntry already added in 895233', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7592', 'title': u'Revert "Changelog entry for PR #7560"'}, {'body': u'cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7591', 'title': u'Changelog entry for PR #7560'}, {'body': u'Current realization refactored because there\'s no sense to capture output in quiet block.\n\nI added commented block in code with my thoughts about this. Since rake task should be always invoked successfully we can check exit status and show to user original error instead of showing "Probably you didn\'t install JavaScript runtime". I\'d like to use capture(:stderr) but it\'s not impossible because it doesn\'t reopen $std{out,err} and just reassigns it, that does impossible to capture subprocesses.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7586', 'title': u"Rake assets:precompile shouldn't fail quietly."}, {'body': u'This pull request is the squashed version of #7509.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c802b68aaf738f3caa5488f964f1d560?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7582', 'title': u'type_cast_code should always convert values to integer calling #to_i'}, {'body': u"Using the canonical blog example, given an isolated/mounted engine within a module `Blog`, the current behaviour of the mounted URL helpers is to create a method `blog` which sets an instance variable `@blog`.\n\nThis effectively prevents the instance variable `@blog` from being usable anywhere else within the application where we also want to refer to the blog engine's routes. For example the home page controller action will raise an error if we assign the `@blog` ivar and then try to refer to `blog.post_path(@blog)`.\n\nThe straight-forward fix for this is to name the instance variable for the mounted helpers using internal naming conventions, in this case `@_blog`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7580', 'title': u'Use internal instance variable naming scheme for mounted URL helpers'}, {'body': u'This method return @attribute[name].serialized  or read_attribute().\nThis patch allows to return @attributes[name] if it is already typecasted.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7579', 'title': u'typecastes_attribute_value could return @attributes[name]'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7577', 'title': u'set default_headers to nil after use it to avoid order dependent tests'}, {'body': u'Missing require caused fail of guide generation (in\naction_dispatch/http/mime_type, line 295, undefined method `ends_with`\nfor "to_ary":String)\nWith this fix guides were normally generated', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fe1c0797f345249625590d25a51efd0a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7576', 'title': u'Fixed missing require'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7574', 'title': u'improve AR CHANGELOG [ci skip]'}, {'body': u"Aaron,\n\nYou asked for a pull request with the changes to make activerecord dynamically determine a model's table name such that it can support database table partitioning.\n\nAt the time, I was pretty incompetent with git and github -- I've adjusted and hope I'm doing this first pull request correctly.\n\nHere is a branch of the partitioning code which has been modified to work with this pull request.\n\nhttps://github.com/fiksu/partitioned/tree/rails-3-2-8-patching\n\nI've created a repo with examples of different types of partitioning.\n\nhttps://github.com/keithgabryelski/partitioned_examples\n\nexamples are in app/models and can be run like this:\n\n    $ cd partitioned_examples\n    $ rails runner app/models/company_id.rb --force\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f23c30d03f27dac9a573ada974726cc4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7573', 'title': u'Partitioned'}, {'body': u'When investigating for #7564, I found potentially bug. In database.yml, we use not `charset` but `encoding`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7572', 'title': u"Use configuration['encoding'], because database configuration use not charset but encoding."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7571', 'title': u'removed warning: shadowing outer local variable'}, {'body': u"Exception message was misleading, as it is possible to have a\npolymorphic 'has_many :through' join model.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0871a0fd6f3e1fd24538914ed4ecf332?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7569', 'title': u'Improve exception message for HasManyThroughAssociationPolymorphicSource...'}, {'body': u'These tests are some quick additions to increase coverage for actiondispatch/request/session.rb and actionpack/test/dispatch/session/cookie_store_test.rb .', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b176bf0efe5230289d8e4a08dac7cfb7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7568', 'title': u'Tests for session handling'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b85d2c78cae9885b7f1ad2b5f808a450?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7566', 'title': u'Dump schema using new style hash'}, {'body': u"rack/session/dalli is included in dalli gem, no in rack like the old memcache-client session store, then I think is a good idea point to the people to install dalli gem if the file can't be loaded", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7565', 'title': u"Improve error message for memcache session store when dalli isn't loaded"}, {'body': u'This PR is related to #7525 , #6648 and #5547.\nWe should use mysqldump native command when dumping db structure.\n\ncc/  @rafaelfranca @seamusabshere', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7564', 'title': u'Use mysqldump native commands when rake db:structure:dump.'}, {'body': u'Hi,\n\nNewbie here. Saw 2 failing tests on AR on travis and locally -\n\n 5) Failure:\n144test_should_serialize_string(NilXmlSerializationTest) [/home/vagrant/builds/rails/rails/activerecord/test/cases/xml_serialization_test.rb:188]:\n145Expected /<name nil="true"><\\/name>/ to match "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<xml-contact>\\n  <name nil=\\"true\\"/>\\n  <age type=\\"integer\\" nil=\\"true\\"/>\\n  <avatar type=\\"binary\\" nil=\\"true\\" encoding=\\"base64\\"/>\\n  <created-at type=\\"dateTime\\" nil=\\"true\\"/>\\n  <awesome type=\\"boolean\\" nil=\\"true\\"/>\\n  <preferences nil=\\"true\\"/>\\n  <alternative-id type=\\"integer\\" nil=\\"true\\"/>\\n  <id type=\\"NilClass\\" nil=\\"true\\"/>\\n</xml-contact>\\n".\n146\n147  6) Failure:\n148test_should_serialize_yaml(NilXmlSerializationTest) [/home/vagrant/builds/rails/rails/activerecord/test/cases/xml_serialization_test.rb:221]:\n149Expected /<preferences nil=\\"true\\"><\\/preferences>/ to match "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<xml-contact>\\n  <name nil=\\"true\\"/>\\n  <age type=\\"integer\\" nil=\\"true\\"/>\\n  <avatar type=\\"binary\\" nil=\\"true\\" encoding=\\"base64\\"/>\\n  <created-at type=\\"dateTime\\" nil=\\"true\\"/>\\n  <awesome type=\\"boolean\\" nil=\\"true\\"/>\\n  <preferences nil=\\"true\\"/>\\n  <alternative-id type=\\"integer\\" nil=\\"true\\"/>\\n  <id type=\\"NilClass\\" nil=\\"true\\"/>\\n</xml-contact>\\n".\n\nThis is the fix for them.\n\nThanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a647b68e3ff3335e06f78d05fa657e3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7563', 'title': u'Fix for 2 broken ar-mysql2 tests'}, {'body': u'See #7559', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/144314100b686db946ff68c7ae1065d1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7561', 'title': u'image_path should return blank string if empty source is passed'}, {'body': u'Deprecate yet another on the fly monkey patch of objects in AS::Callbacks.\nThis one is probably related to before_filters:\n\n``` ruby\nbefore_filter MyFilter.new\n\nclass MyFilter\n  def filter(controller)\n  end\nend\n```\n\nis now deprecated with recommendation to use:\n\n``` ruby\nbefore_filter MyFilter.new\n\nclass MyFilter\n  def before(controller)\n  end\nend\n```\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7560', 'title': u'AS::Callbacks: deprecate monkey patch of object callbacks'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e302c3320cd14b02cbe237b479d7f884?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7558', 'title': u'Added forgotten :message option to ActiveModel validates documentation'}, {'body': u'Dalli 2.2.x was released, so this is safe for merge now\n\n/cc @arunagw @rafaelfranca', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7552', 'title': u'Use Dalli for memcache session store'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7550', 'title': u'Update Active Record CHANGELOG for #7419'}, {'body': u'well caught by keen eye reader', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7549', 'title': u'Fix Changelog example'}, {'body': u"When calling a query method on an attribute that was not selected by\nan ActiveRecord query, an ActiveModel::MissingAttributeError is not\nraised. Instead, a nil value is returned, which will return false once\ncast to boolean.\n\nThis is undesirable, as we should not give the impression that we know\nthe attribute's boolean value when we haven't loaded the attribute's\n(possibly) non-boolean value from the database.\n\nThis issue is present on versions going back as far as 2.3, at least.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7548', 'title': u'Raise MissingAttributeError on query methods'}, {'body': u'PostgreSQL array type support. Any datatype can be used to create an array column, with full migration and schema dumper support.\n\nTo declare an array column, use the following syntax:\n\n```ruby\ncreate_table :table_with_arrays do |t|\n  t.integer :int_array, :array => true\n  # integer[]\n  t.integer :int_array, :array => true, :length => 2\n  # smallint[]\n  t.string :string_array, :array => true, :length => 30\n  # char varying(30)[]\nend \n```\n\nThis respects any other migraion detail (limits, defaults, etc). ActiveRecord will serialize and deserialize the array columns on their way to and from the database.\n\nOne thing to note: PostgreSQL does not enforce any limits on the number of elements, and any array can be multi-dimensional. Any array that is multi-dimensional must be rectangular (each sub array must have the same number of elements as its siblings).\n\nI can squash this commit after review', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ef16c122bdbe053704f2307cea255867?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7547', 'title': u'Adds migration and type casting support for PostgreSQL Array datatype'}, {'body': u'Since creating table is atomic and is the only statement inside the transaction block we could get rid of the transaction in these test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8b3d54cbc4d678ba19de7ee8aea25cb1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7546', 'title': u'Little code cleanup in hstore_test.rb'}, {'body': u'This is a fix for #7518', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7545', 'title': u'postgres, map scaled intervals to string datatype'}, {'body': u'Only run EXPLAIN for statements that are supported. Really fixes Issue #5430.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7544', 'title': u"Don't EXPLAIN the unexplainable in postgresql"}, {'body': u'This is a follow up to issue #7535. The existing example of using yield in an around callback lambda throws\na "no block given (yield)" error.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e203104f9e92d287cfab734293ac3ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7542', 'title': u'Fixed around callback with lambda example'}, {'body': u'Rails will store the name of a child class in the database to use for re-instantiating the record as the correct class later. By specifying an `inheritance_serializer` and `inheritance_deserializer`, you can customize the stored identifier.\n\nThis is primarily useful for working with legacy data models.\n\n```ruby\nclass Foo < ActiveRecord::Base\n  self.inheritance_serializer = ->(klass) do\n    # Map the class to the appropriate type identifier.\n    # Defaults to `klass.name`.\n    if klass == Child1\n      1\n    elsif klass == Child2\n      2\n    end\n  end\n\n  self.inheritance_deserializer = ->(type_before_cast) do\n    # Map the type identifier back into the appropriate class.\n    # Defaults (approximately) to `type_before_cast.constantize`.\n    case type_before_cast.to_i\n    when 1\n      Child1\n    when 2\n      Child2\n    end\n  end\nend\n\nclass Child1 < Foo; end\nclass Child2 < Foo; end\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b7af2fda045de32a35c281ec2f29b21b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7541', 'title': u'Added customizable STI type serialization.'}, {'body': u'Is it logically correct? In my opinion it is.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7539', 'title': u'Remove a bit code duplication in render method'}, {'body': u'Adding /.idea will allow us to ignore all configuration files when using the Jetbrains RubyMine editor.  There are about ten or so .xml files RubyMine uses for configuration settings which should be ignored.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5527ddcd6dfc9e1df739c2aa0c8daa20?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7537', 'title': u'Ignore RubyMine configuration files'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b7af2fda045de32a35c281ec2f29b21b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7536', 'title': u'Fix pluck when columns/tables are reserved words.'}, {'body': u'The existing example of using yield in an around callback lambda throws\na "no block given (yield)" error. After some troubleshooting, I came up\nwith this example that works in a lambda.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e203104f9e92d287cfab734293ac3ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7535', 'title': u'Fixed around callback with lambda example'}, {'body': u"Hello,\n\nThis is just a little pull request that allows the user to pass `drop_articles` for example in order to create a migration that will drop the articles table. \n\nFor the moment, I update two changelogs, I don't know if I have to and if I don't, please let me know.\n\nHave a nice day.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d27b53e2eeb6a053552332020628029?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7533', 'title': u'Add the ability to pass drop_* when generating a new migration'}, {'body': u'Split off from #7524 - this is just the bugfixes. \n\n* Call the `_will_change!` method before changing the underlying data. Otherwise, the list of changes is incorrectly populated.\n\n* multiple calls to `store_accessor` should add attributes to `stored_attributes`, not overwrite the ones already present.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6883e5ef03484d4fcef507d7b4f1d243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7532', 'title': u'correct handling of changes in AR::Store, combine multiple store_accessors'}, {'body': u"Hello,\n\nSorry to make a useless pull request but I found a typo in the documentation of the `get` method. I didn't add an entry to the CHANGELOG but if I have to, please let me know and I will update the commit.\n\nHave a nice day.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d27b53e2eeb6a053552332020628029?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7530', 'title': u'Fix a typo in AD'}, {'body': u'Hello all!\n\nThe next PostgreSQL version (9.2) will supports a native [JSON type](http://www.postgresql.org/docs/9.2/static/datatype-json.html). Once the 9.2 version will be release soon I think that would be nice if AR supports it too. \n\nBefore started this, I searched for someone that could be working on this already, and tweeted @tenderlove asking if he remembers about someone doing this job, since seems that nobody is working on this I\'m sending this pull request and I\'d like to know your opinions about this feature and about my implementation. I marked two "FIXMEs" that could be a DRY candidate, IMO. Maybe should AR:Store be changed too?\n\nThanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8b3d54cbc4d678ba19de7ee8aea25cb1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7527', 'title': u'AR supporting new JSON data type on PostgreSQL >= 9.2'}, {'body': u"The previous implementation had the strange requirement that db/structure.sql contain only CREATE TABLE sql statements, one per table, separated by double newlines.\n\nSQLite3 and PostgreSQL database tasks, on the other hand, simply spawn 'sqlite3' and 'psql' binaries to load the file directly.\n\nThe new implementation follows this and attempts to respect all current MySQL configuration settings.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b541e45c86f3b6213b6e87af0f537401?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7525', 'title': u"Use the 'mysql' binary for 'rake db:structure:load'"}, {'body': u'Note: the commits here are split to facilitate discussion. Happy to squash before merging.\n\nThe attached commits fix two bugs in `ActiveRecord::Store` and add a new feature. \n\n* the first commit moves the call to `will_change!` above the actual change to the attribute - otherwise, the attribute is marked as changed but attempts to access the previous value (using `_was` or `_change`) will return the *new* value instead\n\n* the second commit ensures that additional calls to `store_accessor` don\'t overwrite previously-set values in `stored_attributes`. This functionality is described in the documentation (regarding subclasses) but subsequent calls to `store_accessor` overwrote the list each time.\n\n* the final commit adds a new variant of `store_accessor` that provides type conversion for booleans to simplify (for instance) setting stored attributes with checkboxes. An example:\n\n```ruby\nclass User < ActiveRecord::Base\n  store :flags\n  store_boolean_attribute :flags, :likes_ruby, :likes_python, :likes_clojure\nend\n\nUser.first.likes_ruby? # => returns true or false\n\n@user.update_attributes(:likes_ruby => \'0\') # => stores false in flags[\'likes_ruby\']\n```\n\nThere is some fairly gross duplication between `store_accessor` and `store_boolean_accessor`; any suggestions for a refactor are welcome - as is a better name than `store_boolean_accessor`.\n\nOne other open question: would it be better to add more "typed" variants to handle parsing input (for datetimes, etc)? My application only needed booleans, but there\'s certainly an argument to be made for extending the same type-casting behavior to `store_accessor` attributes as plain attributes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6883e5ef03484d4fcef507d7b4f1d243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7524', 'title': u'Add boolean type conversion for AR::Store'}, {'body': u'`parse` method performance improvements - ~27-33%', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7522', 'title': u'Refactor `Mime::Type`'}, {'body': u'As Aaron Patterson mentioned,  3.2+ should have support for a DATABASE_URL environment variable.  (For background discussion please refer to https://groups.google.com/forum/#!topic/rubyonrails-core/ge1HCeBqz_s)\n\n- added tests to confirm establish_connection uses DATABASE_URL and\n  Rails.env correctly even when no arguments are passed in.\n- updated rake db tasks to support DATABASE_URL, and added tests to\n  confirm correct behavior for these rake tasks.  (Removed\n  establish_connection call from some tasks since in those cases\n  the :environment task already made sure the function would be called)\n- updated Resolver so that when it resolves the database url, it\n  removes hash values with empty strings from the config spec (e.g.\n  to support connection to postgresql when no username is specified).\n\nThis fix can also address issues #6736 and #6833 (as slightly different implementation solution).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d308241c047f7d688b21835a0d47b369?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7521', 'title': u'Fixed support for DATABASE_URL for rake db tasks'}, {'body': u"The attached code adds a `wrap_with` method to Relation that wraps objects retrieved from the relation in the specified class. A trivial example:\n\n```ruby\nclass UserWrapper < DelegateClass(User)\n  def magic_thing\n    puts 'wat'\n  end\nend\n\nUser.where(:name => 'Bob').wrap_with(UserWrapper).first.magic_thing # => prints 'wat'\n```\n\nA short test is included - suggestions for additional testing (or more meaningful testing) are welcome.\n\nThere are also a number of additional features that could be included here, if they make sense:\n\n* wrapping with additional classes may be useful; currently, chaining another `wrap_with` call overwrites the value set in the first one. This would be a simple change, given the existing plumbing for dealing with multi-valued data on Relation.\n\n* passing additional arguments to the method could be useful; for instance, `some_relation.wrap_with(SomeClass, :foo, :bar, :baz)` would pass the additional arguments on to the constructor, so each record in `some_relation` would be wrapped via `SomeClass.new(record, :foo, :bar, :baz)`. Again, a fairly trivial modification.\n\n* for extreme cases, passing a block may make more sense. For instance:\n```ruby\nsome_relation.wrap_with(SomeClass) { |some_class| some_class.do_something }\n# which wraps as:\nSomeClass.new(record).tap { |some_class| some_class.do_something }\n```\n\n* of course, there's also an argument that a zero-arg block version might make sense:\n```ruby\nsome_relation.wrap_with { |record| SomeClass.new(record) }\n```\nHere, `wrap_with` is just calling the block with the record directly.\n\n* the current code doesn't do anything when building / creating new records; it was extracted from a live app that used `wrap_with` solely for read-only views. I'm not certain what the desirable behavior is here.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6883e5ef03484d4fcef507d7b4f1d243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7520', 'title': u'Add wrap_with to Relation; simplify decorator / presenter / etc. code'}, {'body': u'When a block is passed into `HashWithIndifferentAccess#update` or `#merge`, it will be invoked for each duplicated key with the key in question, the value for the key in the receiver, and the value in the hash being merged. The return value of the block will be used to resolve the conflict:\n\n    hash_1 = ActiveSupport::HashWithIndifferentAccess.new\n    hash_1[:key] = 10\n\n    hash_2 = ActiveSupport::HashWithIndifferentAccess.new\n    hash_2[\'key\'] = 20\n\n    hash_1.merge(hash_2) { |key, old, new| old + new } # => {"key"=>30}\n\nThis is consistent with long-standing behaviour of the Standard Library\'s `Hash` class. Indeed, without this change, it would not be immediately obvious to someone passing a block into `HashWithIndifferentAccess#merge` that its behaviour doesn\'t reflect `Hash#merge`, as the block will be silently ignored.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e63b38022956263621de9c55b637ea78?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7519', 'title': u'Add an optional block to HashWithIndifferentAccess#update and #merge'}, {'body': u'I did the following things:\n* previously the tests with and without a custom `inheritance_column` used the same models. Since the model then has both fields this can lead to false positives.\n\n* All tests with a custom inheritance_column use the `Vegtable` model. The field ruby_type on the Company models is no longer needed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7515', 'title': u'custom inheritance_column test refactoring'}, {'body': u'PR for 3-2-stable as described in #7506\n\n* I changed `public_send` to send\n* I added a CHANGELOG.md entry', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7514', 'title': u'set the configured #inheritance_column on #become (#7503)'}, {'body': u'&#39 dates back to SGML when &#x27 was introduced in HTML 4.0\n\nReference:\nhttps://github.com/ruby/ruby/commit/bbb6b5e84e53b17c5c08072cae05aed6de6e3abe#commitcomment-1800099', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8d205ba63324cc4a0a6c83aac4cf8fb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7513', 'title': u'Decimal form has better browser support.'}, {'body': u'The goal is to show a the user simple AJAX example that they can get up and running quickly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66c680f88e8c379fe408d32299dfb4e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7512', 'title': u"Added a simple example demonstrating an ajax/remote form, it's correspon..."}, {'body': u"I've just converted to boolean value\n\n    request.xhr?\n      => 0`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9cbae80f1ea00408841fcd67312ba365?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7510', 'title': u'request.xhr? should return boolean value instead of Int'}, {'body': u'Hi Folks,\n\nI found this weird behavior when I was programming during my day job. This is the scenario:\n\n```` ruby\nclass User\n  has_many :tasks\nend\n````\n\n```` ruby\nclass Task\n  belongs_to :user\nend\n````\n\nso I was building a part of the application, and I made the following mistake, passing a object to the integer field:\n\n```` ruby\nt = Task.new\nt.user_id = user\nt.user_id\n=> 1 \n````\n\nwhenever this code runs, the user_id always became 1, not raising a error or anything. So I took a look in the rails source, and found that this behavior is fixed in rails master, but not in the 3.2 tree. \n\nI think this could be considered a bug, so I did this patch. What you guys think?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c802b68aaf738f3caa5488f964f1d560?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7509', 'title': u'Remove rescue that is oculting exceptions on integer columns'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8c94d965389694bd5adc14679977fd5d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7507', 'title': u'Adding MagLev to release list'}, {'body': u'This is a patch for #7503\n\nI had to create a new table and a model since the current STI models all relied on `type` and it was important for this issue not to have a field named `type`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7506', 'title': u'#becomes works with configured inheritance_column'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8977eabcedbade28ba0ebe0062e41c68?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7504', 'title': u'Fix example code: use tasks instead of comments'}, {'body': u'Hi everybody, I\'ve changed a bit a couple of lines in the Upgrading Ruby on Rails guide:\n\n- Using <ruby> syntax for unicode character routes example instead of\n  `<tt>` since it causes single quotes to be transformed into inverted\n  commas. This makes this required change more eye-catching.\n- Using `<tt>` for the j alias and related helpers as written in the\n  documentation guidelines.\n\nIn particular the second point is the reason for a PR instead of a push in the docrails guide, in the current version of the guide inverted commas are used for code, maybe there was a reason for that (e.g. "j" is very short)?\n\nPS: The guide isn\'t valid because another markup issue that I\'ve already fixed in docrails: https://github.com/lifo/docrails/commit/70d2d2ced44941162e13cb66125482ebf9097ff4', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7428d2de67276504c39bee5602b6ce99?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7502', 'title': u'Fixed markup in Upgrading RoR guide'}, {'body': u"this got the tests running on my machine and fixed the following error:\n\n```\n/Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:475:in `load_missing_constant': Object is not missing constant Arel! (NameError)\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:202:in `block in const_missing'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:200:in `each'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:200:in `const_missing'\n\tfrom /Users/username/Projects/rails/activerecord/lib/active_record.rb:164:in `block in <top (required)>'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/lazy_load_hooks.rb:36:in `instance_eval'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/lazy_load_hooks.rb:36:in `execute_hook'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/lazy_load_hooks.rb:43:in `block in run_load_hooks'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/lazy_load_hooks.rb:42:in `each'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/lazy_load_hooks.rb:42:in `run_load_hooks'\n\tfrom /Users/username/Projects/rails/activerecord/lib/active_record/base.rb:328:in `<top (required)>'\n\tfrom /Users/username/Projects/rails/activerecord/test/models/arunit2_model.rb:1:in `<top (required)>'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:450:in `load'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:450:in `block in load_file'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:624:in `new_constants_in'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:449:in `load_file'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:352:in `require_or_load'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:317:in `depend_on'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:235:in `require_dependency'\n\tfrom /Users/username/Projects/rails/activerecord/test/models/college.rb:1:in `<top (required)>'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:257:in `require'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:257:in `block in require'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:242:in `load_dependency'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:257:in `require'\n\tfrom /Users/username/Projects/rails/activerecord/test/support/connection.rb:2:in `<top (required)>'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:257:in `require'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:257:in `block in require'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:242:in `load_dependency'\n\tfrom /Users/username/Projects/rails/activesupport/lib/active_support/dependencies.rb:257:in `require'\n\tfrom /Users/username/Projects/rails/activerecord/test/cases/helper.rb:15:in `<top (required)>'\n\tfrom <internal:lib/rubygems/custom_require>:29:in `require'\n\tfrom <internal:lib/rubygems/custom_require>:29:in `require'\n\tfrom /Users/username/Projects/rails/activerecord/test/cases/adapter_test.rb:1:in `<top (required)>'\n\tfrom <internal:lib/rubygems/custom_require>:29:in `require'\n\tfrom <internal:lib/rubygems/custom_require>:29:in `require'\n\tfrom /Users/username/.rvm/gems/ruby-1.9.2-p290@rails/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb:15:in `block in <main>'\n\tfrom /Users/username/.rvm/gems/ruby-1.9.2-p290@rails/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb:4:in `select'\n\tfrom /Users/username/.rvm/gems/ruby-1.9.2-p290@rails/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb:4:in `<main>'\n```\n\nI used ruby 1.9.2 p290.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7500', 'title': u'reference Arel constant unambiguously (to run tests)'}, {'body': u'I got a bug when trying to call a simple "business".classify. \nBecause inflections configuration, it returns "Busines". \n\nThis PR adds a new entry for singular inflections and asserts with a unit test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/30f9297a1ec40eab1d7aa9b6d41b7350?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7499', 'title': u'Add new inflection for singular (SS)'}, {'body': u'When attempting to generate a new Rails app via the executable `railties/bin/rails` an [exception][] occurs because Bundler has not be required prior to its use.\n\n[exception]: https://gist.github.com/3577771\n\nThis is the interesting line from the backtrace:\n\n```\n/Users/jcf/Code/rails/railties/lib/rails/generators/app_base.rb:254:in `bundle_command\': uninitialized constant Rails::Generators::AppBase::Bundler (NameError)\n\tfrom /Users/jcf/Code/rails/railties/lib/rails/generators/app_base.rb:260:in `run_bundle\'\n```\n\nThe change I\'ve made is to simply require Bundler in `railties/lib/rails/generators/app_base.rb`.\n\n``` ruby\ndef bundle_command(command)\n  # \u2026\n  _bundle_command = Gem.bin_path(\'bundler\', \'bundle\')\n\n  Bundler.with_clean_env do\n    print `"#{Gem.ruby}" "#{_bundle_command}" #{command}`\n  end\nend\n```\n\nThe only way to integration test that comes to mind this is to do so in a separate process. Otherwise requiring bundler in the test suite will fix the issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18c2795810ee15d41956e7f4cc5f3338?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7498', 'title': u'Require bundler when running a new app generator'}, {'body': u'Ability to specify array of attributes to validates method.\nIn this case the listed validation options will apply to each\nattribute in array.\n\nFor example:\n```ruby\nvalidates [:first_name, :last_name, :middle_name], presence: true\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/406a9d04de19cb80e798862b9772f491?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7497', 'title': u'Array of attributes to validates method'}, {'body': u'Fixes #7478\n\nWell, it would if it were actually finished. There is one test failure:\n\n```\n  1) Failure:\ntest_setting_session_value_after_session_reset(CookieStoreTest) [/Users/steve/src/rails/actionpack/test/dispatch/session/cookie_store_test.rb:190]:\nExpected "BAh7B0kiD3Nlc3Npb25faWQGOgZFRkkiJTlmZTczNjc4NThiNWZhODIzNjg2Mjk2NDVlZGNkYTMwBjsAVEkiCGZvbwY7AEZJIghiYXIGOwBG--84236482786035ade1225b520f9439784ea16fb1" to not be equal to "BAh7B0kiD3Nlc3Npb25faWQGOgZFRkkiJTlmZTczNjc4NThiNWZhODIzNjg2Mjk2NDVlZGNkYTMwBjsAVEkiCGZvbwY7AEZJIghiYXIGOwBG--84236482786035ade1225b520f9439784ea16fb1".\n```\n\nI am not sure why `#destroy` does not reset the session. [It claims to](https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/request/session.rb#L73), and following the trail of code, looks like it does. But it doesn\'t. Anybody have any ideas?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7495', 'title': u'Properly reset the session on reset_session'}, {'body': u'Method invalid_asset_host! was delegated to controller but sprockets\ncompile assets in their own scope without controller and request. And if we set asset_host\nwith second parameter(request) it should raise error through invalid_asset_host!.\nBut since controller is nil it cannot be reached.\n\nOriginal issue in sprockets-rails tests:\n```\ntest_0010_stylesheets served without a controller in scope cannot access the request(SprocketsHelperTest) [/Users/route/Projects/sprockets-rails/test/sprockets_helper_test.rb:127]:\n[ActionController::RoutingError] exception expected, not\nClass: <RuntimeError>\nMessage: <"ActionView::AssetPaths#invalid_asset_host! delegated to controller.invalid_asset_host!, but controller is nil: #<Sprockets::Rails::Helpers::RailsHelper::AssetPaths:0x007febc3838270 @config={:assets_dir=>\\"/Users/route/Projects/sprockets-rails/test/fixtures/public\\", :javascripts_dir=>\\"/Users/route/Projects/sprockets-rails/test/fixtures/public/javascripts\\", :stylesheets_dir=>\\"/Users/route/Projects/sprockets-rails/test/fixtures/public/stylesheets\\", :assets=>{:digest=>true, :compile=>true}, :perform_caching=>true, :asset_host=>#<Proc:0x007febc3832f50@/Users/route/Projects/sprockets-rails/test/sprockets_helper_test.rb:124>}, @controller=nil, @asset_environment=#<Sprockets::Environment:0x3ff5e2546448 root=\\"/Users/route/Projects/sprockets-rails\\", paths=[\\"/Users/route/Projects/sprockets-rails/test/fixtures/app/javascripts\\", \\"/Users/route/Projects/sprockets-rails/test/fixtures/app/stylesheets\\", \\"/Users/route/Projects/sprockets-rails/test/fixtures/app/images\\", \\"/Users/route/Projects/sprockets-rails/test/fixtures/app/fonts\\"], digest=\\"35721b5cd45ee6e140910c90f9c6d639\\">, @asset_digests=nil, @compile_assets=true, @digest_assets=true>">\n---Backtrace---\n/Users/route/Projects/rails/actionpack/lib/action_view/asset_paths.rb:14:in `rescue in invalid_asset_host!\'\n/Users/route/Projects/rails/actionpack/lib/action_view/asset_paths.rb:11:in `invalid_asset_host!\'\n/Users/route/Projects/rails/actionpack/lib/action_view/asset_paths.rb:113:in `compute_asset_host\'\n/Users/route/Projects/rails/actionpack/lib/action_view/asset_paths.rb:72:in `rewrite_host_and_protocol\'\n/Users/route/Projects/rails/actionpack/lib/action_view/asset_paths.rb:33:in `compute_public_path\'\n/Users/route/Projects/sprockets-rails/lib/sprockets/rails/helpers/rails_helper.rb:57:in `asset_path\'\n/Users/route/Projects/sprockets-rails/test/sprockets_helper_test.rb:128:in `block (2 levels) in <class:SprocketsHelperTest>\'\n---------------\n```\n\nI revert that commit 7185e35971f4a18f48a7d67e5c86c2fcf87bdb66 and since invalid_asset_host! is used only in action_view I think this method should be there, I renamed class of error to get rid of actionpack dependence.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7494', 'title': u'ActionView decoupling and sprockets-rails tests fail'}, {'body': u'I did a poll on Twitter to see what parts of Rails needed documentation the most, and one glaring thing that was pointed out was how out of date the AJAX guide was.\n\nCurrently, this request is not ready to be merged, but I wanted to get some feedback on what I plan to do before I bother to write the entire thing.\n\nBasically, I built a new outline, and threw a quick paragraph or two together for a bunch of the parts.\n\nCurrent guide (NOT the one I\'m working on) is [here](http://edgeguides.rubyonrails.org/ajax_on_rails.html), for reference.\n\n## Questions\n\nSome specific feedback I\'d like addressed before I flesh this out more:\n\n### Intro to AJAX\n\nWhen this guide was written, AJAX was a bit newer of a technique. The original guide had an explanation of what AJAX is. Now that everybody knows what\'s up, do we still need this?\n\n### library coverage\n\nI plan on (and have in the outline) linking to a bunch of different projects that are used for testing JS, for example. Is the \'give a bunch of them a paragraph and a link\' something we want here?\n\n### SPAs?\n\nI wrote up a little section mentioning Ember, Backbone, and Throne of JS. Obviously, "How to write a heavy JS app" is out of the scope of this guide, but I felt that mentioning tools that people can transition to once they get a lot of JS going would make sense. Is this useful?\n\n/cc @fxn @radar @wycats @dhh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7493', 'title': u'Re-writing the AJAX Guide'}, {'body': u'Currently, using mysql one can specify sslca in database.yml to say that one should connect to the database using SSL.\n\nHowever, rails dbconsole does not honor this setting. The enclosed patch fixes this.\n\n-Lars and Jim\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/28549512f89c6fa064bc5c9c5eb0baed?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7488', 'title': u'Have rails dbconsole pass sslca to the mysql command line client.'}, {'body': u"I found the following test failure.\n\n```\n  1) Error:\n143test_collection_dependency(TemplateDigestorTest):\n144Errno::ENOENT: No such file or directory - /home/vagrant/builds/rails/rails/actionpack/test/template/../tmp/messages/_message.html.erb\n145    /home/vagrant/builds/rails/rails/actionpack/test/template/digestor_test.rb:153:in `initialize'\n...\n```\n\nThis problem came from FiltUtils.cp_r(src, dest) specific.\nAccording to API reference, `if  dest is directory, files were copied to dest/src directory`.\nWe copy files in setup, and remove directory in teardown.\nThus if we execute tests twice, tests are failure at first, and tests are success at second.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7485', 'title': u'Fix build about TemplateDigestorTest.'}, {'body': u"I found the following warning.\n\n```\n...\n/home/vagrant/builds/rails/rails/actionpack/lib/action_controller/metal/conditional_get.rb:169: warning: `&' interpreted as argument prefix\n...\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7484', 'title': u'Fixes warning: & interpreted as argument prefix'}, {'body': u'This pull request improves the regular expression used by `ActionView::Digestor` ( introduced in 502d5e24e28b3634910495d0fb71cb20b1426aee)\n\n* Ignore whitespace before/after Hash keys, (which usually appear when people indent their Hash keys)\n* Ignore whitespace before/after parenthesis (some people are just sloppy)\n* Correctly parse 1.8.7 style Hash keys (for some of us the new style is still not in our muscle memory)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/919feaa12651b668d8ee9a41215b1976?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7483', 'title': u'Better ActionView::Digestor nested template inference'}, {'body': u"For now tests are a bit outdated and we're using sprockets-rails from rubygems, I think to use it from github sounds more reasonable.\n\n/cc @guilleiguaran\n\nBTW: We should add changelog entry about removing manifest option, I think.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7482', 'title': u'Use last version of sprockets-rails and sync tests for assets.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4d6f74711436cfe252bf4fc8f3cf4971?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7481', 'title': u'Fix grammar'}, {'body': u"The new controller-level etag feature's description in the ActionPack changelog wasn't formatted correctly.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1178ce2f664a6cee9a05a3e11af5d8d2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7480', 'title': u'Fix markdown rendering of the ActionPack changelog'}, {'body': u"escape the '.'s \xa0", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c0a78e5b3081bf7a7da6a6668e659c73?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7479', 'title': u'the example for contraint( :ip => XXXX) has an invalid regex'}, {'body': u'I fixed some warnings related to `mime_type` method\'s deprecation on master (#7469).\n\nBut I got some another problems.\nWhen executing `rake test:isolated` in ActionMailer, test/base_test.rb was break.\n\n```\n 1) Failure:\ntest_0007_should set template content type if mail has only one part(BaseTest) [test/base_test.rb:69]:\nExpected: "text/html"\nActual: "text/plain"\n...\n```\n\nAfter investigating, I realized the cause of problem.\nIf we didn\'t load `action_dispatch`, we also didn\'t execute `ActionView::Template::Types.delegate_to Mime`\nPlease see also https://github.com/rails/rails/commit/67f55e282236eef53adc6036e735190b1dda5a47#L0R107.\n\nIf we delegate to Mime, build is success.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7477', 'title': u'A missing require is added to fix build. When performing rake test:isolated in actionmailer, test/base_test.rb was break.'}, {'body': u'I believe indentation was mistakenly wrong, see: https://github.com/rails/rails/blob/master/actionpack/lib/abstract_controller/helpers.rb#L31-38', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ecd20118eccc74fbe790e75a923de7e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7476', 'title': u'Fixed indendation'}, {'body': u"This was added to master in c5fc159, but it'd be nice to have this fix in 3-2-stable too.\n\nSee #6429 for the original pull request.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7474', 'title': u'Backport 89ebd28 to 3-2-stable'}, {'body': u"I saw the following error in travis's log.\n\n```\n  1) Failure:\n/home/vagrant/builds/rails/rails/actionpack/test/dispatch/session/mem_cache_store_test.rb(TestIsolated) [/home/vagrant/builds/rails/rails/actionpack/test/ts_isolated.rb:12]:\n```\n\nAccording to my investigation, I think dalli requires rails/railtie. But when testing (isolated), we don't load 'rails/railtie' ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7472', 'title': u'Fixes AP isolated test. Rails::Railtie is required when loading dalli.'}, {'body': u'I saw the following warnings when executing rake test in activemodel.\n\n```\n...\nwarning: method redefined; discarding old reserved_karmas\n...\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7470', 'title': u'Fix method redefined warnings.'}, {'body': u"I saw many deprecation warnings in http://travis-ci.org/#!/rails/rails/jobs/2262213 and in my box.\nI think it's related to 582a7f459990487659886b90e54c22e055c65870 .\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7469', 'title': u'Fixes warnings when executing rake test in ActionMailer. '}, {'body': u'When I investigated about #7467, I found some tiny problems.\n\nCopy & Paste harmful ;-)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7468', 'title': u'Tiny fixes in railties/test/application.'}, {'body': u'If we remove Identity Map, we should add deprecation warnings to 3-2-stable.\nrelated to #7456', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7467', 'title': u'Added deprecation warnings because IdentityMap was deprecated.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7466', 'title': u"removed :  warning: `*' interpreted as argument prefix"}, {'body': u'When running `rails generate controller --help` an example\nwith creating a (singular) "CreditCard" controller is\nshown. The convention is to generate controllers with plural\nnames though.\n\nDue to docrails strict "no code can be touched whatsoever"\npolicy I thought I should not push this change to docrails.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a8160507e340d9ad7ee9ce23a8f26e40?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7465', 'title': u'Change generators controller help from singular to plural example.'}, {'body': u'Currently when client send request to rails with proper `Accept` header rails will return always HTML. When I need `JSON` or other format I can of course add `.(:format)` and rails will recognize this. Why is this the only option?\n\n* I do not want nor need to use :format in routes\n* I use jQuery.getJSON method with cross-domain option `HTTP_X_REQUESTED_WITH` is not set\n* There is a proper Accept header : `application/json, text/javascript, */*; q=0.0`\n* There is respond_to `:json` in controller definition\n* I use `respond_with` in action and give it an object that has `to_json` and `as_json` method implemented\n\nWhen I ask for `JSON` rails should respond with `JSON`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/98f11c73a95318bbf85e419c1727434d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7464', 'title': u'Proper mime negotiation in case of non-ajax request'}, {'body': u'Before:\n```\n<%= form_tag({action: :authorize, controller: :charm}) do %>\n<%=hidden_field_tag :client_id, @client.id %>\n<%=hidden_field_tag :scope, @client.scope %>\n...\n<% end %>\n```\nnow\n\n```\n<%= form_tag({action: :authorize_accept, controller: :charm}, hidden_data:{client_id: @client.id, scope: @client.scope}) do %>\n...\n<% end %>\n\n```\nWhy adding it as parameter in form_for is a nice solution? because the only purpose of type=hidden is to add some parameters to request, only data payload and there is no difference where will you put this tag inside of form.\xa0\nAlso, we already have a ``` <div style="margin:0;padding:0;display:inline">``` to keep all our hidden datas there.\xa0\n\n/cc @tenderlove @josevalim\xa0', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7462', 'title': u'hidden_data - sugar for hidden tags'}, {'body': u'Before:\n```\n<%= form_tag({action: :authorize, controller: :charm}) do %>\n<%=hidden_field_tag :client_id, @client.id %>\n<%=hidden_field_tag :scope, @client.scope %>\n...\n<% end %>\n```\nnow\n\n```\n<%= form_tag({action: :authorize_accept, controller: :charm}, hidden_data:{client_id: @client.id, scope: @client.scope}) do %>\n...\n<% end %>\n\n```\n\nWhy adding it as parameter in form_for is a nice solution? because the only purpose of type=hidden is to add some parameters to request, only data payload and there is no difference where will you put this tag inside of form. \nAlso, we already have a ``` <div style="margin:0;padding:0;display:inline">``` to keep all our hidden datas there. \n\n/cc @tenderlove @josevalim ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7461', 'title': u'Hidden data in form_for tag'}, {'body': u'This fixes the order dependency with other tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7460', 'title': u'ensures that the test repairs the validation setup'}, {'body': u'This test https://github.com/rails/rails/blob/master/activerecord/test/cases/base_test.rb#L381\nis failing because is not setting `CreditCard.pluralize_table_name` to `false`.\n\nIn this case, i prefer to change to another model that is not in the `GUESSED_CLASSES`\narray.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7458', 'title': u'fix order dependent test in AR::BasicsTest'}, {'body': u'The current logging of sql queries only logs the actual query time which is great for finding slow queries.  Unfortunately, it does not log the record instantiation time, which can be slow due to model bugs or inappropriate usage of callbacks.\n\nWe use this internally to detect when our models are slow due to callbacks, serialization, or any other potentially slow ActiveRecord hooks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9968b786345739e77c49dc09c4f6514c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7457', 'title': u'Added logging of model instantiation.'}, {'body': u'One code uses for two different tests. Duplicated code used for different test-cases. As example\nhttps://github.com/rails/rails/blob/master/activerecord/test/cases/mass_assignment_security_test.rb#L393 and https://github.com/rails/rails/blob/master/activerecord/test/cases/mass_assignment_security_test.rb#L403.\n\nThat is bug because in this tests should be used instances of different models.\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7454', 'title': u'refactored mass assignment security tests'}, {'body': u"Right now no memcache test running because no memcache gem left in repo.\n\n\nThere is one test failing in my local need help to fix that.\n\n```ruby\n\n  1) Error:\ntest_deserializes_unloaded_class(MemCacheStoreTest):\nDalli::DalliError: Unable to unmarshal value: undefined class/module SessionAutoloadTest::\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/dalli/server.rb:305:in `rescue in deserialize'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/dalli/server.rb:301:in `deserialize'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/dalli/server.rb:345:in `generic_response'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/dalli/server.rb:155:in `get'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/dalli/server.rb:48:in `request'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/dalli/options.rb:18:in `block in request'\n    /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/monitor.rb:211:in `mon_synchronize'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/dalli/options.rb:17:in `request'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/dalli/client.rb:251:in `perform'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/dalli/client.rb:50:in `get'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/dalli-2.1.0/lib/rack/session/dalli.rb:28:in `get_session'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:246:in `load_session'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/middleware/session/abstract_store.rb:43:in `block in load_session'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/middleware/session/abstract_store.rb:51:in `stale_session_check!'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/middleware/session/abstract_store.rb:43:in `load_session'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/request/session.rb:161:in `load!'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/request/session.rb:153:in `load_for_read!'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/request/session.rb:79:in `[]'\n    /Users/arunagw/checkouts/rails/actionpack/test/dispatch/session/mem_cache_store_test.rb:21:in `get_session_value'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal/implicit_render.rb:4:in `send_action'\n    /Users/arunagw/checkouts/rails/actionpack/lib/abstract_controller/base.rb:179:in `process_action'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal/rendering.rb:10:in `process_action'\n    /Users/arunagw/checkouts/rails/actionpack/lib/abstract_controller/callbacks.rb:18:in `block in process_action'\n    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/callbacks.rb:337:in `_run__500462852611207954__process_action__callbacks'\n    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/callbacks.rb:74:in `run_callbacks'\n    /Users/arunagw/checkouts/rails/actionpack/lib/abstract_controller/callbacks.rb:17:in `process_action'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal/rescue.rb:29:in `process_action'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'\n    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/notifications.rb:147:in `block in instrument'\n    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/notifications.rb:147:in `instrument'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal/instrumentation.rb:29:in `process_action'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal/params_wrapper.rb:205:in `process_action'\n    /Users/arunagw/checkouts/rails/actionpack/lib/abstract_controller/base.rb:126:in `process'\n    /Users/arunagw/checkouts/rails/actionpack/lib/abstract_controller/rendering.rb:44:in `process'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal.rb:195:in `dispatch'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal/rack_delegation.rb:13:in `dispatch'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal.rb:238:in `block in action'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal.rb:224:in `call'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_controller/metal.rb:224:in `call'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/bundler/gems/journey-d876c016240d/lib/journey/router.rb:68:in `block in call'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/bundler/gems/journey-d876c016240d/lib/journey/router.rb:56:in `each'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/bundler/gems/journey-d876c016240d/lib/journey/router.rb:56:in `call'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/routing/route_set.rb:620:in `call'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:205:in `context'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/rack-1.4.1/lib/rack/session/abstract/id.rb:200:in `call'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/rack-1.4.1/lib/rack/head.rb:9:in `call'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/middleware/flash.rb:219:in `call'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/middleware/cookies.rb:345:in `call'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/middleware/params_parser.rb:21:in `call'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\n    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/callbacks.rb:337:in `_run__3343764749036863876__call__callbacks'\n    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/callbacks.rb:74:in `run_callbacks'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/middleware/callbacks.rb:27:in `call'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/middleware/debug_exceptions.rb:19:in `call'\n    /Users/arunagw/checkouts/rails/actionpack/test/abstract_unit.rb:138:in `call'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/bundler/gems/rack-test-8153c07db7a9/lib/rack/mock_session.rb:30:in `request'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/bundler/gems/rack-test-8153c07db7a9/lib/rack/test.rb:228:in `process_request'\n    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/bundler/gems/rack-test-8153c07db7a9/lib/rack/test.rb:123:in `request'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/testing/integration.rb:315:in `process'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/testing/integration.rb:31:in `get'\n    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/testing/integration.rb:349:in `block (2 levels) in <module:Runner>'\n    /Users/arunagw/checkouts/rails/actionpack/test/dispatch/session/mem_cache_store_test.rb:135:in `block (2 levels) in test_deserializes_unloaded_class'\n    /Users/arunagw/checkouts/rails/actionpack/test/abstract_unit.rb:218:in `with_autoload_path'\n    /Users/arunagw/checkouts/rails/actionpack/test/dispatch/session/mem_cache_store_test.rb:134:in `block in test_deserializes_unloaded_class'\n    /Users/arunagw/checkouts/rails/actionpack/test/dispatch/session/mem_cache_store_test.rb:184:in `block in with_test_route_set'\n    /Users/arunagw/checkouts/rails/actionpack/test/abstract_unit.rb:205:in `with_routing'\n    /Users/arunagw/checkouts/rails/actionpack/test/dispatch/session/mem_cache_store_test.rb:174:in `with_test_route_set'\n    /Users/arunagw/checkouts/rails/actionpack/test/dispatch/session/mem_cache_store_test.rb:124:in `test_deserializes_unloaded_class'\n\n\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7452', 'title': u'Memcached to dalli for actionpack test.'}, {'body': u'Ensure class variable is set to nil.\n\nIt prevents the following test to fail:\n\n    def test_do_not_run_the_converter_when_nil_was_set\n      customers(:david).non_blank_gps_location = nil\n      assert_nil Customer.gps_conversion_was_run\n    end\n\nCheck https://github.com/rails/rails/blob/master/activerecord/test/models/customer.rb#L7\nfor more information.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7451', 'title': u'fix order dependent test in AggregationsTest'}, {'body': u"Hello,\n\nI allow myself to open a pull request related to [#6549](https://github.com/rails/rails/pull/6549). This pull request add the ability for the user to pass a `--pry` option when creating a new Rails application adding the pry-rails gem to the project's Gemfile.\n\nHave a nice day.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d27b53e2eeb6a053552332020628029?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7450', 'title': u"Add the ability to pass a --pry option to add 'pry-rails' to the Gemfile"}, {'body': u'At current moment there is some inconsistency between options +:limit+ and +:reject_if+ - the last can accept symbol that points on instance method, and also procs.\n\nMy patch adds these capabilities to +:limit+ option.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7d116b912a4fc7986b40d5d0d0d811d6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7449', 'title': u'Allow to pass Symbol or Proc into :limit option of #accepts_nested_attributes_for'}, {'body': u'What do you thing about it?\n\nHope someone will have time to review it, thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b85d2c78cae9885b7f1ad2b5f808a450?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7447', 'title': u'Modularize postgresql adapter'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7446', 'title': u'backport #7435'}, {'body': u"@tenderlove this PR is based on our discussion in #7424\n\nWhen `ActionDispatch::ParamsParser#parse_formatted_parameters` raises an exception, it's re-raised as `ActionDispatch::ParamsParser::ParseError` instead of the original exception - we're assuming that the only thing that can raise an exception there is a parser. This way it's much easier to catch parsing error that originated in `ParamsParser` (skipping parsing errors raised later down the chain e.g. in actions) and return a custom response e.g. 400.\n\nBTW. There's a funky thing going on with request body in `ParamsParser#parse_formatted_parameters` ([link](https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/middleware/params_parser.rb#L37-58)). Proc and Yaml strategies use `request.raw_post` (which reads request body and then rewinds it before being parsed), but JSON and XML ones read and rewind request body on their own e.g.:\n\n```ruby\nwhen :json\n  data = ActiveSupport::JSON.decode(request.body)\n  request.body.rewind if request.body.respond_to?(:rewind)\n  ...\n```\n\nThe issue is that if JSON.decode raises an exception, request body is not rewinded and thus calling `request.raw_post` later inside the error handler returns nil. Is there any reason why not all strategies use `request.raw_post`? This should most likely fix this issue.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2b2b07fe8688479d2559704d4bf8a264?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7444', 'title': u'Raise generic ParseError exception when ParamsParser fails parsing request params'}, {'body': u'The bug:\n\n    Account.where(\'1 = 2\').sum("2 * credit_limit") => \'0\'\n\nThat is, sum with an expression (not a column name) on a condition or collection that returns no records returns the string "0", whereas it should return an integer, 0.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53d301869ff9f450d180eb40fdcca434?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7439', 'title': u"ActiveRecord: sum expression returns string '0' for no records, fixed"}, {'body': u"Problem : Edge rails can't bundle\nFixes #7437", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7438', 'title': u'We need to have 1-0-stable for joureny gem in edge'}, {'body': u"This functionality will be available from gem `active_record-session_store` instead. The gem is currently hosted at https://github.com/sikachu/activerecord-session_store, and I'll be pushing to rails/ soon.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7436', 'title': u'Extract ActiveRecord::SessionStore from Rails'}, {'body': u'we should take disabled option not only from `html_options` hash but from\n`options` hash too like `build_select` method does it. So\n\ndatetime_select("post", "updated_at", { :discard_minute => true }, { :disabled => true })\ndatetime_select("post", "updated_at", :discard_minute => true , :disabled => true)\n\nboth these variants work now\n\ncloses #7431', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7435', 'title': u'correct handling of date selects when using both disabled and discard options'}, {'body': u'This is a cleaner version of #6916.\n\nCloses #3165.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7434', 'title': u'Model.select takes a variable list of arguments'}, {'body': u"We always see the follwing warning, when executing `rake test_mysql`\n\n```\n...warning: instance variable errno not initialized...\n```\n\nI know we shouldn't hide warnings, but I guess that development for mysql gem is not active.\n\nBTW:\naccording to https://github.com/luislavena/mysql-gem/blob/master/ext/mysql_api/mysql.c#L1873\nand https://github.com/luislavena/mysql-gem/blob/master/ext/mysql_api/mysql.c#L171, we can't access this iv ?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7432', 'title': u"Suppress  annoy warning, when executing AR's testcases."}, {'body': u'Since the rails master branch should be tested with the latest version of ruby-oci8.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7429', 'title': u'Use the latest ruby-oci8 with Oracle enhanced adapter'}, {'body': u'Fixes encoding of 4 byte (> 0xFFFF) unicode characters to JSON.  Backport of request on master.  Fixes issue #3727', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a8d99d9d17ed9fd6c270efecb0c62c5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7426', 'title': u'Fixes encoding of 4 byte unicode characters to JSON'}, {'body': u'Fixes encoding of large unicode characters (> 0xFFFF) to JSON.  For Javascript / JSON these need to be encoded as a surrogate pair.  Fixes Issue #3727', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a8d99d9d17ed9fd6c270efecb0c62c5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7425', 'title': u'Fixes encoding of 4 byte unicode characters to JSON'}, {'body': u'This allows to set a custom response (e.g. 400) when `ParamsParser` raises an exception when parsing request params. One can do it by swapping the default `ActionDispatch::ParamsParser`:\n\n```ruby\nconfig.middleware.swap ActionDispatch::ParamsParser, \n                       ActionDispatch::ParamsParser, {}, lambda { |e| [400, {}, ["Bad request"]]}\n```\n\nThis is still a bit awkward, so it could be further simplified to e.g. \n```ruby\nconfig.action_dispatch.params_parser_error_handler = lambda { ... }\n```\nbut it\'s not implemented in this patch.\n\nWithout this patch it\'s of course still possible to return custom response, however slightly more difficult. Here\'s one of possible solutions:\n\n```ruby\nclass MyParamsParser < ActionDispatch::ParamsParser\n  def call\n    super\n  rescue MultiJson::DecodeError\n    [400, {}, ["Bad Request"]]\n  end\nend\n\nconfig.middleware.swap ActionDispatch::ParamsParser, MyParamsParser\n```\n\nThe other question is why Rails doesn\'t return 400 by default instead of 500 when parsing request params fails :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2b2b07fe8688479d2559704d4bf8a264?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7424', 'title': u'Allow to set custom error handler for ActionDispatch::ParamsParser.'}, {'body': u"This allows us to make alterations to the generated routes based on the\nscope of the current mapper, and otherwise allows us to move larger\nblocks of concerns out of the routes file, altogether.\n\nI'm not really convinced of the whole concerns idea, but it seems at least that if we implement it, we should have it allow for separation of concerns.\n\nThis seems in keeping with @dhh's perceived benefit of reducing noise in the routes.rb file, while enhancing the already existing functionality.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7422', 'title': u'Allow routing concerns to accept a callable'}, {'body': u"```bash\nrails g migration add_statistic_updated_at:datetime\n\ncreate    db/migrate/20120822103649_add_statistic_updated_at:datetime.rb\n\nrake db:migrate\n\nllegal name for migration file: ...db/migrate/20120822103649_add_statistic_updated_at:datetime.rb\n\t(only lower case letters, numbers, and '_' allowed)\n```\n\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/757fb0d5ec7560b6f25f5bd98eadc020?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7419', 'title': u'Ensure valid migration filename on generating migration'}, {'body': u'When dealing with legacy or read-only databases schemas, sometimes you need to tell Rails to ignore one or more columns.  Or, you have meta-columns that are used by a separate daemon or app, but you don\'t want them cluttering up your rails app. \n\n`ignore_columns` interfaces cleanly right at the point where the column names are cached by ActiveRecord, using a simple `reject` call.  \n\nThe specific case I built this for was a read-only app on top of an AuthLogic database structure.  AuthLogic uses `respond_to?(:column)` calls throughout to determine whether to enable a certain piece of functionality.  This works great with a 1-app-1-database relationship, but in this case, some functionality needed to be enabled on one app, but not the other: specifically the "increment failed login count" module.  `ignore_column :failed_login_count` would be by far the cleanest way to workaround this.\n\nVarious monkey-patches floating around Stack Overflow: \n* [How can I permanently ignore a database column in my ActiveRecord::Base class? \u2014 Stack Overflow](http://stackoverflow.com/questions/4911174/how-can-i-permanently-ignore-a-database-column-in-my-activerecordbase-class) \n* [How can I use ActiveRecord on a database that has a column named \'attribute\'? (DangerousAttributeError)](http://stackoverflow.com/questions/5428987/how-can-i-use-activerecord-on-a-database-that-has-a-column-named-attribute-d?rq=1)\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f21ccf17244e72968994223304e4f802?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7417', 'title': u'Add ignore_columns to ActiveRecord'}, {'body': u"For example:\nrails generate controller foo/bar index\n\nshould generate:\n\n```ruby\nget 'foo/bar/index'\n```\n\npreviously it generated:\n\n```ruby\nget 'bar/index'\n```\n\nPlease let me know if this is a faulty assumption of mine or whether further work is needed (aka properly nesting inside of scope(s) or something).  Or whether this would be better on the master branch - I picked 3-2-stable because I consider it a bug.\n\n:heart: Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7414', 'title': u'Route to the full namespaced resource when generating a controller.'}, {'body': u'Suggest user a better way to generate a secret token via the available `rake secret` command from Rails.\n\nBetter formatting for easier readable too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7413', 'title': u'remind user a good way to generate a secret code.'}, {'body': u'This fixes [#7404](https://github.com/rails/rails/issues/7404)\n\n* This exception is thrown only when include_blank => true and /or prompt options are added.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7410', 'title': u'option_tags coerced to "" instead of nil'}, {'body': u"I added 3rd argument to AR::Result#initialize, and removed mysql/postgresql's own Result class.\nIf we add the 3rd argument, inherited Result class is unnecessary.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7409', 'title': u'Refactor AR::Result or inherits. Because we have redundant codes about column_types.'}, {'body': u'This pull request addresses two failures tested with MySQL 5.6.6 m9 (milestone 9).\n\n```ruby\n$ mysql --version\nmysql  Ver 14.14 Distrib 5.6.6-m9, for Linux (x86_64) using  EditLine wrapper\n```\n\n- Failure with mysql adapter\n\n```ruby\n$ rake test_mysql\n\n... snip ...\nFinished tests in 199.465809s, 17.8427 tests/s, 52.2947 assertions/s.\n\n  1) Failure:\ntest_mysql_strict_mode_disabled(MysqlConnectionTest) [/home/yahonda/git/rails/activerecord/test/cases/adapters/mysql/connection_test.rb:135]:\nExpected: [[""]]\n  Actual: [["NO_ENGINE_SUBSTITUTION"]]\n\n3559 tests, 10431 assertions, 1 failures, 0 errors, 6 skips\nrake aborted!\nCommand failed with status (1): [/home/yahonda/.rvm/rubies/ruby-1.9.3-p194/...]\n\nTasks: TOP => test_mysql\n(See full trace by running task with --trace)\n$ \n```\n\n- Failure with mysql2 adapter\n\n```ruby\n\n$ rake test_mysql2\n\n... snip ...\nFinished tests in 166.461722s, 21.3683 tests/s, 62.6330 assertions/s.\n\n1) Failure:\ntest_mysql_strict_mode_disabled(MysqlConnectionTest) [/home/yahonda/git/rails/activerecord/test/cases/adapters/mysql2/connection_test.rb:51]:\nExpected: [[""]]\nActual: [["NO_ENGINE_SUBSTITUTION"]]\n\n3557 tests, 10426 assertions, 1 failures, 0 errors, 18 skips\nrake aborted!\nCommand failed with status (1): [/home/yahonda/.rvm/rubies/ruby-1.9.3-p194/...]\n\nTasks: TOP => test_mysql2\n(See full trace by running task with --trace)\n$\n```\n\n- sql_mode default value as of MySQL 5.6.6 m9.\n\nIt might have caused sql_mode default value as of MySQL 5.6.6 m9 is `NO_ENGINE_SUBSTITUTION`, which was empty at older versions.\n\n```sql\n\nmysql> select @@global.sql_mode;\n+------------------------+\n| @@global.sql_mode      |\n+------------------------+\n| NO_ENGINE_SUBSTITUTION |\n+------------------------+\n1 row in set (0.00 sec)\n\nmysql> select @@session.sql_mode;\n+------------------------+\n| @@session.sql_mode     |\n+------------------------+\n| NO_ENGINE_SUBSTITUTION |\n+------------------------+\n1 row in set (0.00 sec)\n\nmysql> quit\n```\n\nThis default parameter change is out of control from Rails, then these test verify Rails not overriding the default `@@GLOBAL.sql_mode` value by checking if `@@GLOBAL.sql_mode` is the same as `@@SESSION.sql_mode`. \n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7408', 'title': u'Rename to test_mysql_no_override_global_sql_mode'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7407', 'title': u'attr_accessors in the same line'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/376e4eb9dc6c2e33d1330262edc4f109?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7406', 'title': u'Fixed some documentation mistakes'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7401', 'title': u'fix punctuation in config templates'}, {'body': u'`save!` and `update_attributes!` always returns `true`\n\nI think returning `self` instead will be more useful in cases like:\n\n``` ruby\ndef create_something\n  s = Something.new\n  ....\n  s.save!\nend\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7400', 'title': u'AR: make #save! and #update_attributes! return self'}, {'body': u'I\'m submitting this pull request because of some confusion I had using this method (and its alias). When I originally tried the method, I attempted to do something like `time_ago_in_words 15.minutes` which now I realize was an error on my part because this method expects its argument to be a `Time`.\n\nMy initial reaction was that this is a pretty obvious bug in rails since it didn\'t jump out to me in the docs that the argument must be a `Time` and writing it as `time_ago_in_words 15.minutes.ago` felt a little clumsy with the "ago" redundancy.\n\nIt was even a little more confusing going from using the `distance_of_time_in_words` method with simple `15.minutes` (because the default `from_time` is simply `0`) to the alias method `distance_of_time_in_words_to_now` and having to supply a `Time`.\n\nAnyway, at the very least, it seems some minor improvements to the docs (perhaps what I\'ve attached?) may help the situation, and at the most perhaps some retinkering of this API (a job I currently feel unqualified of).\n\nThanks for the awesome work!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1433d0176e764f9ce48f70673baa72e8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7398', 'title': u'Extended documentation for `time_ago_in_words` helper'}, {'body': u"There is a common use case where mail settings are dynamic based on settings saved in database. For example, we could let companies provide us with their SMTP credentials which can be used to send email on their behalf. My particular use case dealt with creating a delivery method which sends SMSes based on company's credentials to company's users.\n\nThis PR allows the user to easily set delivery method settings from within the mail instance\n\n````ruby\nclass MySmsMailer < ActionMailer::Base\n  def send_sms(company,telephone_number,message)\n    mail :to => telephone_number, \n         :body => message, \n         :delivery_method => :sms_sender, \n         :delivery_method_options => company.sms_credentials\n  end\nend\n````\n\nor\n\n````ruby\nclass UserMailer < ActionMailer::Base\n  def campaign_blast(company,telephone_number,message)\n    mail :to => telephone_number, \n         :body => message, \n         :delivery_method_options => {:username => company.smtp_user, \n                                      :password => company.smtp_password}\n  end\nend\n````\n\n\n\nThe alternative to doing this would be rather ugly\n\n````ruby\nm = MySmsMailer.send_sms(company,number,message)\nm.delivery_method.some_method_that_sets_options_on_sms_sender_instance(company.sms_credentials)\nm.deliver\n````\n\nWe could try to set delivery options by resetting them on classes but I dont imagine it would be threadsafe to do that!\n\n/cc @josevalim @mikel \n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7397', 'title': u'Allow delivery method options to be set per mail instance'}, {'body': u'A writer of test can confuse how to write his new test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/196fcecb9032f580dbed8d06a3aac090?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7396', 'title': u'Access @rs only through attr_accessor'}, {'body': u'This is in regards to https://github.com/rails/rails/commit/b1e509ad7a8c8264544f10f4666705cd806b5408#commitcomment-1636270 . ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8e696229263b433634ddbdc7a153fe4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7395', 'title': u'Refactor AutosaveAssociation#save_collection_association'}, {'body': u'It seems like this could eliminate some annoyances for other people as well. `template0` as I understand it is a pristine database template where the default template to use is` template1` which may include some options. In my case using the new rails-dev-box vagrant setup; `template1` default encoding is SQL_ASCII and raises an error because it conflicts with the UTF-8 option passed in.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b057dbf404843c93d69e719d4e2dea4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7394', 'title': u'Use template0 option for creating activerecord test databases in build_database task with postgres'}, {'body': u"Moves column related schema dumper code into the AbstractAdapter. The\ncode remains the same, but by placing it in the AbstractAdapter, we can\nthen overwrite it with Adapter specific methods that will help with\nAdapter specific data types.\n\nThe goal of moving this code here is to create a new migration key for\nPostgreSQL's array type. Since any datatype can be an array, the goal is\nto have ':array => true' as a migration option, turning the datatype\ninto an array. I've implemented this in postgres_ext, the syntax is\nshown here: https://github.com/dockyard/postgres_ext#arrays", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ef16c122bdbe053704f2307cea255867?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7393', 'title': u'Moves column dump specific code to a module included in AbstractAdapter'}, {'body': u'This is a real fix (as compared to the band-aid in b127d86c), which uses\nthe recently-added equality methods for ARel nodes. It has the side\nbenefit of simplifying the merge code a bit.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7392', 'title': u'Fix "last equality wins" logic in relation merge'}, {'body': u'With a value of "nosniff", this prevents Internet Explorer from MIME-sniffing a response away from the declared content-type.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66c680f88e8c379fe408d32299dfb4e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7390', 'title': u'Added X-Content-Type-Options to the header defaults.'}, {'body': u'Commit 271beddd8929758802e11826297adf92e40cd4af didn\'t solved the issue, since we need to `require` as "[active_record/deprecated_finders](https://github.com/rails/activerecord-deprecated_finders/blob/master/lib/active_record/deprecated_finders.rb)".\n\nThis commit fixes #7381.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3579801a9ca6605789fff55723314eb2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7389', 'title': u'Fixes #7381, so activerecord-deprecated_finders gets correctly bundled when creating a new Rails app'}, {'body': u'See 02ca9151a043a4fefbb3f22edd05f0cd392fffaa\n\nI was noticing this warning using 3.2.8 even though I was doing:\n\n`t.remove :some_column`\n\n```\nDEPRECATION WARNING: Passing array to remove_columns is deprecated, please use multiple arguments, like: `remove_columns(:posts, :foo, :bar)`\n```\n\nAttached is a fix for Table#remove rebased against 3-2-stable and tests updated to reflect that remove_columns should not be passed an array.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9968b786345739e77c49dc09c4f6514c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7388', 'title': u'Table#remove passed an array to remove_column, which is deprecated.'}, {'body': u'Oracle and PostgreSQL supports "NULLS first/last" in order by statement. It\nwill break the reverse_sql_order by concating " DESC" to the order by statement.\n\nFor example,\n\n```ruby\n    User.order("name ASC NULLS FIRST").last\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/83c8cca11558f32207645ca270ae8475?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7386', 'title': u'ORDER BY xx NULLS first/last will break reverse_sql_order'}, {'body': u'Adding the `include` method to Array\nYou can add an item to an array only if that item does not already exist.\n\n```ruby\n[1, 2].include(2) => [1, 2]\n[1, 2].include(3) => [1, 2, 3]\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b7d890bed68fa564c18ff00dfd8207cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7382', 'title': u'Adding .include method to Array'}, {'body': u"After the repo has been renamed it can't be found when bundling.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4ca44714f099ef998e8821615e0085?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7381', 'title': u'Update to activerecord-deprecated_finders on generator'}, {'body': u"This is at best a band-aid for a more proper fix, since it won't truly\nhandle the removal of the previous equality condition of these other\nnodes. I'm planning to put in some work on ARel toward supporting that\ngoal. I'd like to also backport this fix to the 3.x merge code, unless\nthere are objections.\n\nRelated: rails/arel#130, ernie/squeel#153, ernie/squeel#156\n\nAlso, I added a test for the more typical equality condition, since\nI didn't see one for it yet. Maybe I missed it, since the PredicateBuilder\ndoes create equality nodes in stock AR with a hash, but\nthe only one I noticed was using order and strings to test.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7380', 'title': u'Fix merge error when Equality LHS is non-attribute'}, {'body': u"Currently invoking `#first/#last` on not-loaded collection proxy for `has_many` association will not set inversed parent for fetched record. So example from rails guides and docs is actually not correct:\n\n```ruby\nc = Customer.first\no = c.orders.first\nc.first_name == o.customer.first_name # => true\nc.first_name = 'Manny'\nc.first_name == o.customer.first_name # => true\n```\n\nIn reality last line will return false. I've fixed both methods to take `inversed_of` option into account. So now this example will work as intented, I've provided test to illustrate it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7377', 'title': u'Use inversed parent for first and last child of has_many association'}, {'body': u'There were some incorrect indentations in [actionpack/CHANGELOG.md](https://github.com/rails/rails/blob/master/actionpack/CHANGELOG.md) (mostly at the bottom)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b942798f822dee11bacf2f93e4d1f198?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7373', 'title': u'Fix slightly broken Markdown syntax in actionpack/CHANGELOG.md'}, {'body': u"Call super to nullify the reference to the original errors object in the dup'ed object (call ActiveModel::Validations#initialize_dup)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2b4e5507d94dc84a187d35c2884c0f3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7371', 'title': u"Dup'ed ActiveRecord objects may not share the errors object "}, {'body': u"`require 'action_dispatch'` immediately tries to pull in activemodel.\n\nhttps://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch.rb#L29\n\nought to be declared in the gemspec so AP can be used as a standalone gem definition.\n\n/cc @tenderlove ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7370', 'title': u'Add activemodel dep to actionpack gemspec'}, {'body': u'Decreased log level for rendered partials', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7366', 'title': u'Update actionpack/lib/action_view/log_subscriber.rb'}, {'body': u'This will omit the first divider in grouped_options_for_select (I would\nexpect a divider to go between things only).\n\nCurrently, the grouped options divider will make a select like so:\n<pre>\nPlease Select:\n-----\nUSA\nCanada\n-----\nDenmark\nUnited Kingdom\n-----\nChina\nIndia\n</pre>\nIt is more symmetric and more typical to only seperate the groups:\n<pre>\nPlease Select:\n\nUSA\nCanada\n-----\nDenmark\nUnited Kingdom\n-----\nChina\nIndia\n</pre>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bb4976df206152ce93aad43f1eb8faa0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7360', 'title': u'Remove leading divider from grouped_options_for_select when divider option is passed'}, {'body': u'Hello,\nthis fix situation when I want add presence validation for boolean value which by default fails when hold "false" value\n\nthat is because ``false.blank? # => true`` and ``true.blank? # => false``\n\nThus with this fix: ``"false".blank? # => false`` as is expected.\n\nI\'m only not sure what with empty arrays\n``[].blank? # => true`` and with this patch ``"[]".blank? # => false``\nbut I suppose this would be right behaviour.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0b62e632252d57fadbd8cbc3cb2fda63?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7358', 'title': u'Feature presence validation for boolen parameters'}, {'body': u'This is preparation before extracting Action View from Action Pack. Initially I went with extracting up-front, but @jeremy advised me to do changes first and then extract when everything is ready (which in fact is much better strategy).\n\nThe commits in this pull request basically get rid of Action Pack classes usage from Action View.\n\nOne of the problems that I want to ask about are deprecation messages. I deprecated 2 things here (moving `RecordIdentifier` to Action View and mime type lookups in auto discovery link tag) to follow rule "Deprecate in 4.0, remove in 4.1" instead deprecating in 3.2.x and removing in 4.0, but this means that we will be able to extract Action View no sooner than 4.1. Those deprecations will not be probably hit by many people, so I would like to consider moving them to `3-2-stable`, but I\'m not sure about that.\n\n/cc @spastorino @rafaelfranca @josevalim @carlosantoniodasilva', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7356', 'title': u'Decouple actionpack and actionview'}, {'body': u'I see duplicated error messages while validations. It happens because of attribute was passed to ```validate_presence_of``` two times by different developers. It could be useful if ```ActiveModel``` will make attributes unique.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5adcc3757d6c4f5609aa2dc3b41f4705?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7354', 'title': u'Attributes in validations should be unique'}, {'body': u'This patch was originally submitted by Logan Bowers in https://rails.lighthouseapp.com/projects/8994/tickets/4498-rails-loses-precision-when-deserializing-timestamps-from-postgresql, but I\'ve shortened the test case significantly and I can reliably reproduce it.\n\nIn psql, run this:\n\n    CREATE TABLE tmps (id serial primary key, atime timestamp with time zone );\n\nThen open up rails console and run this:\n\n    class Tmp < ActiveRecord::Base; end\n\n    time = Time.at(1344803062, 129346).utc\n    t = Tmp.create!({atime: time}, without_protection: true)\n    puts "Original time: " + time.strftime(\'%s.%N\')\n    puts "Retrieved time: " + t.reload.atime.strftime(\'%s.%N\')\n    puts "Raw time from DB: " + t.atime_before_type_cast\n\nI get the following results without the patch:\n\n    1.9.3p194 :005 > class Tmp < ActiveRecord::Base; end\n    1.9.3p194 :007 >   time = Time.at(1344803062, 129346).utc\n     => 2012-08-12 20:24:22 UTC \n    1.9.3p194 :008 > t = Tmp.create!({atime: time}, without_protection: true)\n       (0.1ms)  BEGIN\n      SQL (0.8ms)  INSERT INTO "tmps" ("atime") VALUES (\'2012-08-12 20:24:22.129346\') RETURNING "id"\n       (2.6ms)  COMMIT\n     => #<Tmp id: 3, atime: "2012-08-12 20:24:22"> \n    1.9.3p194 :009 > puts "Original time: " + time.strftime(\'%s.%N\')\n    Original time: 1344803062.129346000\n    1.9.3p194 :010 > puts "Retrieved time: " + t.reload.atime.strftime(\'%s.%N\')\n    Retrieved time: 1344788662.129345000\n    1.9.3p194 :011 > puts "Raw time from DB: " + t.atime_before_type_cast\n    Raw time from DB: 2012-08-12 20:24:22.129346+00\n\nNote that the DB says there are .129346 seconds, but Ruby says it\'s .129345 instead. With the patch, the times are all in sync.\nThis diff should also apply cleanly to 3.2.\n\nCC: @tenderlove, @rafaelfranca ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/52638907f672af0b017f59c47060b7d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7352', 'title': u'Fix occasional microsecond conversion inaccuracy'}, {'body': u"We don't need this any more.\n\nFixes #6907.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7349', 'title': u'No longer require AS::TestCase'}, {'body': u'It seems logical to treat incompatibly marshaled data the same way as unsigned. This would fix issues like #2509 when class signature changes or serializer gets replaced. Motivation for changing session secret hash should not be connected to changes in implementation details of flash or session serialization.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8cf18195d36be3f774344820b1302c62?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7348', 'title': u'Format errors should not crash MessageVerifier'}, {'body': u"Added this because I needed to limit hours in the select_hour helper to a business' hours of operation. I followed the example of :start_year and :end_year in adding the additional options.\n\nAll the tests are passing.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7b933f25e6a107c412b42514b136421d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7343', 'title': u'Add start_hour and end_hour options for select_hour helper'}, {'body': u"I'm not sure about my english on documentation but the feature is fine :)\n\nI was in doubt about this line:\n\n``` ruby\nunless [:include?, :call].any?{ |method| delimiter.respond_to?(method) } || delimiter.is_a?(Symbol)\n```\n\nIt may be more clear about what is happening, but this is not a big deal:\n\n``` ruby\nunless delimiter.respond_to?(:include?) || delimiter.respond_to?(:call) || delimiter.is_a?(Symbol)\n```\n\nWhat do you think?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c2dc9c02ce7a041285725a4fc9e5f6d2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7342', 'title': u'Accept a symbol for `:in` option on inclusion and exclusion validators'}, {'body': u'doesn\u2019t => don\u2019t', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/83a4ac21377f0939f0ccc3b6db7a9bd1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7341', 'title': u'Grammar fix in ActionView Form Tag Helper docs/comments'}, {'body': u"Added this because I needed to limit hours in the select_hour helper to a business' hours of operation. I followed the example of :start_year and :end_year in adding the additional options.\n\nAll the tests are passing.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7b933f25e6a107c412b42514b136421d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7340', 'title': u'Added start_hour and end_hour options for select_hour helper'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ad093366b20e7b11217b02fc268be786?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7339', 'title': u'Missing closing tag'}, {'body': u'In cases where a notification subscriber includes methods to support\nboth Evented and Timed events, Evented should take priority over Timed.\nThis allows subscribers to be backwards compatible (older Rails only\nallows Timed events) while defaulting to newer behavior.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ffba81343784b413ed79f4da3e33ae02?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7338', 'title': u'Evented notifications should take priority over Timed'}, {'body': u'The string_to_dummy_time method was blindly parsing the dummy time string\nwith Date._parse which returns a hash for the date part regardless\nof whether the time part is an invalid time string.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21126416f8a3de608f82069ab943a336?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7337', 'title': u'Fix for time type columns with invalid time value'}, {'body': u'Here it is https://github.com/rails/sprockets-rails/blob/master/test/assets_debugging_test.rb and https://github.com/rails/sprockets-rails/blob/master/test/assets_test.rb\n/cc @guilleiguaran', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7336', 'title': u'Tests for assets were extracted to sprockets-rails and now they are unnecessary'}, {'body': u'This adds documentation for four of the methods on the `Rails` module:\n\n* `Rails.env`\n* `Rails.logger`\n* `Rails.public_path`\n* `Rails.root`\n\nNo code changes, and the generated rdoc looks correct.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aefddaa508f043817d0897f230aab7f3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7333', 'title': u'Rails method docs'}, {'body': u"Regarding updated contribution guide: https://github.com/rails/rails/commit/adf3ea373660c50c7bcead0f52ab2d63a25fc57e\n\nI'm adding changelog entry for merged #6993", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8085138938c34ae1af140bfc91f2fe56?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7331', 'title': u'Added changelog entry for table name prefix fix [ci skip]'}, {'body': u'ActionDispatch railtie is a better place for\nconfig.action_dispatch.default_headers settings, users can continue\noverriding those settings in their configuration files if needed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7329', 'title': u'Move AD default_headers configurations to railtie'}, {'body': u"Because I was wondering why Rails doesn't enable Gzip compression by default, I added it in the template, the same way I'll do it in my apps.\n\nThere may be a good reason of not enabling Gzip compression by default. If so I'd like to hear it of course ;)\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f2b113a55e42f840085008edd2938d57?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7327', 'title': u'Enable Gzip compression by default'}, {'body': u"Because I was wondering why Rails doesn't enable Gzip compression by default, I added it in the template, the same way I'll do it in my apps.\n\nThere may be a good reason of not enabling Gzip compression by default. If so I'd like to hear it of course ;)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f2b113a55e42f840085008edd2938d57?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7326', 'title': u'Enable Gzip compression by default'}, {'body': u'No need to build `valid_conditions` array.\nWe can get all the data in place.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7321', 'title': u'RouteSet: refactor internals'}, {'body': u"Hello,\n\nI don't think it's an issue on my computer but if it is, sorry for this pull request. When I want to start the console typing `rails c`, I have a LoadError like this one:\n\n```\n/home/robin/.gem/ruby/1.9.1/gems/activesupport-3.2.6/lib/active_support/dependencies.rb:251:in `require': cannot load such file -- minitest/unit (LoadError)\n```\n\nSo I think we can add `minitest` by default in the Gemfile ?\n\nHave a nice day.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d27b53e2eeb6a053552332020628029?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7319', 'title': u'Add minitest to the Gemfile template'}, {'body': u'When you include more tags in the logging, for example:\n\n```ruby\nconfig.log_tags = [:uuid, :remote_ip]\n```\n\nThen the first log line for request looks like this:\n\n```\n[c6cbd2272812fe3417bb48f7a9bab919] [127.0.0.1]\xa0\n\nStarted POST "/products" for 127.0.0.1 at 2012-07-25 08:49:35 +0200\n[c6cbd2272812fe3417bb48f7a9bab919] [127.0.0.1] Processing by ProductsController#create as JSON\n```\n\nSo when you want to grep through the logs, the line "Started ..." does not lineup with the "metadata" like request uuid and ip address, because it has \\n\\n newlines in the beginning and grep does not like that.\n\nMy fix removes the two newlines.\n\nThis has also been discussed in issue #3697', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4fdbb8aa3568e47391a8fd6c6760de11?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7317', 'title': u'Fix newlines in rack logging'}, {'body': u"It fixes #3047, #2483.\n\n@rafaelfranca I've backported two commits, first to support jar options on all stores and second to fix issue with re-streaming of cookie jar with the same value. Also I've found that one of the tests in the second commit was wrongly written, so I've corrected that as well.\n\nAll tests pass.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7316', 'title': u'Backport of "Support cookie jar options for all cookie stores" for 3.2-stable'}, {'body': u"Currently\n  `assert response.cookies, 'user_name' => 'Jamie'`\nonly tests whether cookies are present or not instead of checking value.\n\nChanging `assert` to `assert_equal` fixes it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7315', 'title': u'Fix mistake in assertion about content of permanent cookie'}, {'body': u'If nil or an empty array is passed into `form_for` you get a horrible error message, this one is much more indicative of what the programmer needs to know to fix the problem.\n\n\nATP in actionpack\n\nScreenshot goodness:  \n\n![](http://f.cl.ly/items/1R323K2e1u2k1u2E3N0u/Screen%20Shot%202012-08-10%20at%2012.08.24%20AM.png)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7314', 'title': u'Check for Blank Record in form_for'}, {'body': u'Missed this in the changelogs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/627f0a46a5ea5729951b8224833ca653?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7310', 'title': u'Add html_escape note to CHANGELOG'}, {'body': u'Missed this in the changelogs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/627f0a46a5ea5729951b8224833ca653?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7309', 'title': u'Add html_escape note to CHANGELOG'}, {'body': u'Missed this in the changelogs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/627f0a46a5ea5729951b8224833ca653?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7308', 'title': u'Add html_escape note to CHANGELOG'}, {'body': u"Right now if you include url_helpers the host, port and scheme aren't\nset which gives you an exception or the wrong url when included in\nplaces other than controller and views (where we have access to the\nrequest). This adds that missing information in Thread.current via\na middleware and thus allows access which works.\n\nWhat do you think? Wanted to get opinions before I dig into figuring out how to add a middleware to the default stack (and test that it's in the default stack).\n\nWithout the fix we get things like:\n\n    ArgumentError: Missing host to link to! Please provide the :host parameter, set default_url_options[:host], or set :only_path to true\n\nAnd end up with ugly app code, with workarounds that look like this:\n\n    class RailsAndUrlHelpersHowDoTheyWork\n      include Rails.application.routes.url_helpers\n      def initialize(request)\n        default_url_options[:host] = request.host\n        default_url_options[:protocol] = request.scheme\n        default_url_options[:port] = request.port\n      end\n    end\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d6566c8ab911742cfe124b96c44503fe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7307', 'title': u'More useful Rails.application.routes.url_helpers'}, {'body': u'Rails escapes HTML entities in erb files. This is great, because it prevents Cross Site Scripting and other evil attacks. However there is one case, where this behavior leads to undesired effects.\n\nRails escapes HTML entities in plain text mails. When I am using a `message.text.erb` file, `ActionMailer` correctly detects that the mail contains plain text and sets a `text/plain` mime type. However, ERB still handles this as an html file and escapes HTML entities.\n\nFor example, if my template contains `Dear <%= @customer_name %>, ...` and `@customer_name` is *Foobar & Partner*, then the mail will contain *Dear Foobar <b>&amp;amp;</b> Partner*.\n\nThe following commit just disables HTML escaping in text templates. A text erb template is every file that has `.text` in the file name and is handled by erb.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43b39b50295b675199c4d037321619ae?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7305', 'title': u'Do not escape HTML entities in text files'}, {'body': u'4.0 feature, everybody agreed to merge it.\nDefault headers are really useful for various security options and mitigations.\n\ndiscuss: should we add "Sniff content type" header ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7302', 'title': u'Introduce default_headers. closes #6311 #6515'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3ebc1f56421482200a561a312206cec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7300', 'title': u'Add method Numeric#limit, to return value limited by minimum and maximum values'}, {'body': u"Hi guys,\n\n#4856 was committed to master, but never backported to 3-2-stable. I only realised when I upgraded Rails to the latest 3-2 version and it broke my app. I'd been using a patched version locally. My fail. \n\nThe files that were updated on master haven't changed on 3-2-stable, so it should be very straightforward.\n\nThanks,\niHiD", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7299', 'title': u'Ported PR #4856 to 3-2-stable.'}, {'body': u"Follow-up: fix the fix.\n\nDidn't fail the test because adapter#query happens to\nnot call raw connection's #query, but don't want to count\non that and have a fragile test.\n\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4f6079564f02b87e4c0989585439eb39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7294', 'title': u'Fix only-once stub logic.'}, {'body': u'Hi,\n\nI refactored a piece of the `ActiveModel::Naming` module. In the part of the code that tries to find the `model_name` for the passed argument, I changed the implementation from "type based" (checking for Class) to "behavior based" (checking for method)\n\nThis change behaves almost 100% the same as the previous implementation.\n\n* Makes the same assumptions as old code. If argument responds to `to_model`, then `.to_model.class.model_name` can be called.\n* If argument it is not a `Class`, call `.class.model_name`\n* This version however allows the argument to directly respond to `model_name` if it can.\n\nThis gives a (very minor) speed boost if a class is passed, but more importantly; it allows an instance to define its "name". \n\nWe use one class to store most of our data. However, how this class should behave, depends on it\'s configuration. Routing, human names, partials all depend on this configuration. By allowing the instance to respond to model_name, we can easily take advantage of all `ActiveModel` based code.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f80b5bd87ed2e62e1c3fd52e90ee7563?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7293', 'title': u'Naming helpers should first check if passed object responds to model_name'}, {'body': u'Full test requiring manual intervention was fine, but w/ simulated disconnect, assertion was backward & still passing. Was several kinds of wrong.\n\nPlease accept my fix before I die of embarrassment for contributing negatively to the quality of the Rails core <g>.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4f6079564f02b87e4c0989585439eb39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7292', 'title': u'Fix just-plain-wrongness of psql auto-reconnect test.'}, {'body': u'Please see #7191. If target is equal to record or target and record are nil, we should not use transaction.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7286', 'title': u'Fix #7191. Remove unnecessary transaction when assigning has_one associations.'}, {'body': u'Follow up #7283\n\nIt was a bug/coincidence that the extensionless lookups worked before.\n\nThey are only supported from within the context of another asset of the same type.\n\n/cc @dhh @tenderlove @guilleiguaran', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7284', 'title': u'Fix asset integration test (3-2-stable)'}, {'body': u"Theres a ton of new bug fixes in the newer releases of sprockets. Rails is still locked to a really old version that I'm not backporting fixes for.\n\nWhatever regression 2.2+ caused needs to be addressed.\n\nThis change still allows 2.1.x so people can just stay on the version they are now if its working for them.\n\n/cc @dhh ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7283', 'title': u'Allow newer versions of Sprockets'}, {'body': u'I\'d find it useful if the generic tag helper functions allowed ids & classes to be specified inline using the standard CSS-style notation - any chance of this making it in?\n\n    content_tag("p#foo", "Blah")\n\nis quicker and clearer when reading code than\n\n    content_tag(:p, "Blah", :id => "foo")', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/132ef4c367de54cc8c5b0f3e0376a33f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7281', 'title': u'Allow tag/content_tag helpers to accept tag names in the form "name#foo.bar"'}, {'body': u"Reversible migrations are very cool.\n\nSome commands are not reversible, for example the removal of a table or a column.\n\nAlso, one downside is that it is now more difficult to write the reverse of a migration if `change` is used. When `up` and `down` were used, one could simply swap the code around.\n\nThese commits introduce `Migration#revert` that makes it trivial to revert a past migration, in part or in whole, or do a reversible removal of a table/column.\n\nNote that `revert` can even be called from legacy migrations using `up` & `down` and that it can revert legacy-style migrations too. For anyone changing their mind every second day, `revert` is fully nestable.\n\nTo have complete revertible capability, I would like to introduce a modified syntax for `change_column` that would allow it to be revertible; pull request upcoming when I get a chance...\n\nHere's what the rdoc looks like:\n\n---\n\nReverses the migration commands for the given block and the given migrations.\n\nThe following migration will remove the table 'horses' and create the table 'apples' on the way up, and the reverse on the way down.\n\n    class FixTLMigration < ActiveRecord::Migration\n      def change\n        revert do\n          create_table(:horses) do |t|\n            t.text :content\n            t.datetime :remind_at\n          end\n        end\n        create_table(:apples) do |t|\n          t.string :variety\n        end\n      end\n    end\n\nOr equivalently, if `TenderloveMigration` is defined as in the\ndocumentation for Migration:\n\n    class FixupTLMigration < ActiveRecord::Migration\n      def change\n        revert TenderloveMigration\n\n        create_table(:apples) do |t|\n          t.string :variety\n        end\n      end\n    end\n\nThis command can be nested.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7280', 'title': u'Migration revert'}, {'body': u"Rails were including 'application.js' to the pack when using `javascript_include_tag :all` even there's no `application.js` in the public directory.\n\nThis is for `master`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7277', 'title': u"Do not include application.js if it doesn't exists"}, {'body': u"Rails were including 'application.js' to the pack when using `javascript_include_tag :all` even there's no application.js in the public directory.\n\nThis is for `3-2-stable`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7276', 'title': u"Do not include application.js if it doesn't exists"}, {'body': u'Forgotten change log entry', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7275', 'title': u'add changelog for #7202'}, {'body': u'This allows you to specify the model in a `belongs_to` relationship instead of the foreign key when querying. It does this by looking up the correct foreign key on the association, and changing the column to use that key when appropriate. It came out of a discussion in issue #1736 that seemed to have some interest.\n\nThe following queries are now equivalent:\n\n```ruby\nPost.where(:author_id => Author.first)\nPost.where(:author => Author.first)\n```\n\nI also think it makes it more consistent with `has_many` queries where the relationship and query key are both plural:\n\n```ruby\nposts = Post.containing_the_letter_a.limit(5)\nAuthor.where(:posts => posts)\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/45b75f9f866d240362c0d7fa125025ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7273', 'title': u'Convert model name to foreign key in queries'}, {'body': u'Consistently with #method_missing', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7272', 'title': u'Add AS::StringInquirer#respond_to? method'}, {'body': u"COUNT(*) queries can be slow in PostgreSQL, #exists? avoids this by selecting a single record. @jonleighton suggested in issue #3179 that #empty? should be patched to use #exists? for the same benefit. I couldn't think of a great way to test it since the external behavior is not changing. If anyone has any suggestions for tests though, I would be more than happy to add them.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/45b75f9f866d240362c0d7fa125025ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7270', 'title': u'Changing AR:CollectionAssociation#empty? to use #exists?'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7268', 'title': u"Remove warning: `*' interpreted as argument prefix"}, {'body': u'According to documentation you should be able to pass something like this as a collection:\n\n```ruby\n  options_for_select([ "Denmark", ["USA", {:class => \'bold\'}], "Sweden" ], ["USA", "Sweden"])\n````\n\nand get this HTML\n\n```html\n    <option value="Denmark">Denmark</option>\n    <option value="USA" class="bold" selected="selected">USA</option>\n    <option value="Sweden" selected="selected">Sweden</option>\n```\n\n> copy from actionpack/lib/action_view/helpers/form_options_helper.rb line 308\n\nbut when you do it from collection_select the :value_method by default is :last\nthis commit fix it and re-enable the html option for option tag\n\ncoauthored by [fedesoria](https://github.com/fedesoria) - [ovargas27](https://github.com/ovargas27)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/433031df4018635dfb177f4066c37a3b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7264', 'title': u'Allow html options on option tag'}, {'body': u'strip_heredoc strips all leading spaces/tabs from a heredoc.\n\nBut there are situations when you want to retain a certain indent, for instance, when inserting something in config/environments/production.rb\n\nExample:\n```ruby\nmodule Module\n  class Creator < Thor\n    desc "dostuff NAME", "do stuff to NAME"\n    def dostuff(name)\n      insert_into_file "config/environments/production.rb", <<-HEREDOC.strip_heredoc(2), :before => "end\\n"\n        # mailer settings\n        config.action_mailer.smtp_settings = {\n          :address => \'YOURMAILSERVER\',\n          :enable_starttls_auto => true,\n          :password => \'YOURPASSWORD\',\n          :user_name => \'YOURUSERNAME\'\n        }\n\n      HEREDOC\n    end   \n  end   \nend   \n```ruby\n\nThe result is that the inserted text is indented by 2 spaces, to align with the rest of production.rb.\n\nCheers\nace\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3dfc4136712f120023f092004f062cc4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7263', 'title': u'added with_indent parameter to strip_heredoc'}, {'body': u'Remove some unneeded complexity in RouteSet url helpers generation.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7262', 'title': u'Refator route set'}, {'body': u'A Boolean field will accept `true` or `false` as defaults instead of `0` / `1`.\n\nAs shown in the [Rails Migration Guides](http://guides.rubyonrails.org/migrations.html) right in the second box.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f27f3cb5efa4481b71db7f28dae9ac64?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7260', 'title': u'Update Migration Docs: Defaults for Boolean Fields'}, {'body': u'Generating an URL with an array of records is now able to build a query\nstring if the last item of the array is a hash.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0e1f9a3f4fd8b96d5683a4c859ed2db9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7259', 'title': u'polymorphic_url with an array generates a query string'}, {'body': u'errors_options is calculated for every *CHECKS* but it could be\ncalculated one time  because options and RESERVED_OPTIONS\nnot change during this cycle', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7253', 'title': u'calculate errors_options one time in validate_each'}, {'body': u'This integrate strong_parameters plugin in Rails core and remove attr_accessible/attr_protected.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7251', 'title': u'Integrate strong_parameters in Rails 4'}, {'body': u'resolve old browser (IE6/IE7) line height issue', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/748dfca10db6ade9156d9377fc05def7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7249', 'title': u"change form div css display attribute to 'none' "}, {'body': u'If you have an error page that shows lines 8-12 for example, the source would not be aligned properly from line 10 onwards.\n\nThis commit fixes that.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/864ae2178a21699972a64f5262b62b00?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7244', 'title': u'Indentation should consider line number character count.'}, {'body': u'This method is very helpful when inspecting and debug the code. So, instead of you having to do this:\n\n    @user.tap{ |u| puts u.inspect }.activate!\n\nNow you can do:\n\n    @user.peek.activate!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7243', 'title': u'Add Object#peek as helper method to inspect object'}, {'body': u'attr_accessible is a very confusing name.\xa0\n\nFirst, it has nothing to do with the other attr_* macros, which deal with Ruby instance-variable-based getters and setters, not Rails attributes.\xa0\n\nSecond, the term "access" is generally understood to refer to reading a value, viz. accessor vs. mutator. Yet this macro is about the *opposite* of reading; instead, it determines whether an attribute can be *written*, aka assigned.\n\nThird, this is in a module called Mass Assignment, and this macro is literally specifying which values can be mass assigned. So why be so mysterious? Let\'s just call it mass_assignable and get on with our lives. It will make this feature more understandable to every Rails programmer who has had to figure out what that line is doing there, especially now that it\'s in every generated model class -- and rightly so, since it\'s an important and useful feature and deserves to be embraced and understood by all.\n\nThis patch is just to show the (trivial) implementation; changes to documentation and to the generators will follow if people agree it\'s worth doing.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5a0d7f0cb2fac7858d234de7f7f01491?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7241', 'title': u'alias attr_accessible to mass_assignable'}, {'body': u'This is a rebase of #2323. Tests pass.\n\nFixes #2301.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7240', 'title': u'Fix for digest authentication bug - issue #2301 in rails/rails'}, {'body': u'Mocha 0.12.2 renames the Integration module to\nMonkeyPatching. This breaks the code Rails uses\nto retrieve the assertion counter from Mocha.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a54251b745d59735ea5e9f0656a5d58d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7235', 'title': u'Fix ActiveSupport integration with Mocha > 0.12.1'}, {'body': u'Just had an issue where nginx + puma sockets resulted in a broken remote_it, this falls back to local ips if forced\xa0', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3dcae8378d46c244172a115c28ca49ce?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7233', 'title': u'Update actionpack/lib/action_dispatch/middleware/remote_ip.rb'}, {'body': u'Please see #7200 (postgresql_adapter.rb ignores NULLS while creating distincts in 3.2.7).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7232', 'title': u'Fix #7200. Backport #5168 to 3-2-stable'}, {'body': u'Rails included a single character response body to work around an old Safari bug where headers were ignored if no content was sent.\n\nThis patch brings the behavior slightly closer to spec if :no_content/204 is explicity requested via a head only response by sending a no content in the response body. \n\nThe single character body breaks especially JSON parsers on iOS etc that sees it as invalid content. By localising the change to only 204 responses this should allow API implementers to use the 204 status code when no content is sent back.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/79cdbc1957aee2a63e336001df89f195?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7231', 'title': u'Remove single character body in head(:no_content) response '}, {'body': u'Many named routes have keys that are required to successfully resolve. If a key is left off like this:\n\n    <%= link_to \'user\', user_path %>\n\nAn error will be raised like this:\n\n    No route matches {:action=>"show", :controller=>"users"}\n\nSince Journey know\'s that the `:id` is missing, we can add extra debugging information to the error message.\n\n    No route matches {:action=>"show", :controller=>"users"} missing required keys: [:id]\n\n\nThis will help new and seasoned developers look closer at their parameters. I\'ve also subclassed the routing error to be clear that this error is a result of attempting to generate a url and not because the user is trying to visit a bad url. \n\nThe current error message is misleading and confuses most developers. The important part isn\'t what\'s in the options, the important part is that we are missing keys. Adding this information to the error message will make debugging much more obvious. \n\nThis is the sister pull request of https://github.com/rails/journey/pull/44 which will be required to get they missing keys into the correct error message. Opening both issues at the same time to start a dialog. \n\nExample Development Error in Rails: http://cl.ly/image/3S0T0n1T3421\n\ncc/ @pixeltrix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7230', 'title': u'Add Missing Keys from Journey on Failed URL Format'}, {'body': u'sorry, I missed this change.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7228', 'title': u"Change AR's CHANGELOG, because it is related to e35c67ae0f920011a2440210041e96659a8de985"}, {'body': u"Today, eager loading an application is coupled with the config.cache_classes configuration. This means that every time we cache classes, we eager load the app. This is not necessarily true, for example in test environment an application could benefit of not eager loading the whole application when running a single test file, [as the results reported here](https://gist.github.com/2947894).\n\nThis proposal discuss some changes for Rails 4 to make booting more flexible and consistent.\n\n## config.eager_load\n\nThe first part of the proposal is to add a config.eager_load that says when to eager load the application. By default, we want these settings to be:\n\n    # development\n    config.cache_classes = false\n    config.eager_load = false\n\n    # test\n    config.cache_classes = true\n    config.eager_load = false # you may want to turn this to true if using spork\n\n    # production\n    config.cache_classes = true\n    config.eager_load = true\n\nNotice that running a rake task **always** disables eager load (this is hardcoded in rails source today).\n\n## config.eager_load_namespaces\n\nRails also has a boolean configuration named `config.preload_frameworks` that preloads frameworks. I don't like this configuration because it is very tied to Rails and its frameworks. I propose instead `config.eager_load_namespaces` as a configuration generic enough not only to support Rails frameworks, but any gem or extension. We should be able to eager load any namespace by adding it to the list:\n\n    config.eager_load_namespaces << DataMapper\n\nAnd now, whenever `config.eager_load` is true, we will invoke `DataMapper.eager_load!` to do the proper setup.\n\nThe idea of registering namespaces (and not lambdas) is that a user should be able to remove a namespace of the list if it is causing problems (or if they don't really need to eager load it).\n\nAnother nice thing about this approach is that all engines (and therefore any Rails application) already implements the `eager_load!` method, so they could be added by default to the `config.eager_load_namespaces` array, unifying both preload frameworks and eager load approaches.\n\n**NOTE**: We are pending some hax to ensure production still work with webrick. At the worst scenario, bring the Rack::Lock option back.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e837f6b7fd146ab16ed3d663476c063e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7225', 'title': u'Improve eager load on Rails'}, {'body': u'Please see 0da12df2608969330bd47c543866f79ff8ca9edd.\n\ncc/ @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7224', 'title': u'The use_schema_cache_dump configuration moved to ActiveRecord.'}, {'body': u'Given a class that include ActiveModel::Validations with a validation like the following:\nvalidates_length_of(:title, :minimum => 0, :allow_nil => false).\nThis makes incosistent the validation because it not raise error when\ntitle is *nil*.It should accepts only the empty string\nWith this patch title is *nil* is handled and the validation accepts only the empty string *""*', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7222', 'title': u'validates_length with minimum 0 and allow_nil: false accept nil'}, {'body': u'I am restoring documentation for env_config as discussed in issue #7070.\n\ncc @vijaydev @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/583c3d751af6c13d910b4fa8c6ef065d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7219', 'title': u'Restoring documentation for env_config'}, {'body': u'A pull request was recently merged that allows the has_secure_password to bypass the included password validations. See: https://github.com/rails/rails/commit/0e1e527654f286452fa6f86f5d229f278435319a\n\nHowever, the same commit raises an explicit error if the password_digest is blank even if validations are disabled. I have altered this behavior to raise the error only if validations are enabled.\n\nAn example where the existing version is undesirable is if a user account model is created after an oauth sign in. In that case, a user may be created from Twitter/Facebook/Google/etc. credentials without ever creating a password. I believe this use case should work by default and not require catching an exception.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/57d877dc036790f1c88a394628b598b2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7217', 'title': u"has_secure_password should not raise a 'digest missing' error if the calling class has specified for validations to be skipped."}, {'body': u'So other Numeric types can benefit', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7216', 'title': u'Moved Integer#multiple_of to Numeric#multiple_of'}, {'body': u'This was changed to use 1.9 String#encode method, however under the initial commit (https://github.com/rails/rails/commit/63cd9432265a32d222353b535d60333c2a6a5125#activesupport/lib/active_support/core_ext/string/output_safety.rb) there was a performance test done (https://gist.github.com/50ec9ab8ae1e223f3b75) by @seanwalbran and I have verified that the results for myself (including our team and server boxes) are consistent with him (results here: https://gist.github.com/3218839).\n\nThis issue was found on a project upgrade from 3.0.12 to 3.2.6 making our site 100x slower rendering views. After profiling and such we patched back this method and have got our performance.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4aaee371503ba4eb27788dc6744503c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7214', 'title': u'Revert to gsub from encode for faster html escaping'}, {'body': u'Adds support for validating multiples of a value to the numericality validator', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7213', 'title': u'multiple_of for Numericality'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e44d4c2f385f19db99813306456f5bee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7212', 'title': u'small fix typo in collection proxy'}, {'body': u'After yet another rebase I feel like we can solve the problem by split changelog into individual files and concatenate them programmatically.\n\nThis PR is just a concept showing a sample how it could be done for activerecord.\n\n```\nactiverecord/changelog\n\u2514\u2500\u2500 Rails 4.0.0 (unreleased)\n    \u251c\u2500\u2500 2012-07-24-deprecate-update-column.md\n    \u2514\u2500\u2500 2012-07-27-model-all.md\n\u2514\u2500\u2500 Rails 4.1.0 (unreleased)\n    \u2514\u2500\u2500 2012-07-27-super-great-feature.md\n```\n\n\n\nIf everyone agree that it is a good idea I can expand this feature to every Rails library.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7210', 'title': u'New rails changelog mechanism sample'}, {'body': u'Fix http://edgeapi.rubyonrails.org/classes/ActionController/Live/Response/Header.html', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7205', 'title': u'fix nodoc in metal/live'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7204', 'title': u'Follow code conventions in metal/live'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7203', 'title': u'fix typo in metal/live [ci skip]'}, {'body': u"It was found that there were some good use cases where it was prudent to ````prevent_deliveries```` even if ````prevent_deliveries```` was globally set to true for e.g. you wish to not send emails to users who are unsubscribed or users who are blocked or unconfirmed. \n\nThere are other use cases as well, such as spam detection within the body should prevent delivery.\n\nThis currently requires a common pattern which goes something like this\n\n````ruby\nSomeMailer.someemail(user).deliver if user.sendable?\n````\nWith this change it can be written alternatively as \n\n````ruby\ndef somemail(user)\n  mail :to => user.email, :subject => ... , :perform_deliveries => user.sendable?\nend\nSomeMailer.somemail(user).deliver # expect no delivery if user was unsendable\n````\n\nThis allows for conditional deliveries based on user's own logic.\n\nThe way I've implemented this, ensures that if ````perform_deliveries```` is switched_off globally, then it cant be switched on by the mail message instance.\n\nAfter checking further it was found that ````perform_deliveries```` could be overridden in interceptors but at that stage you do not always have access to the underlying models used for decisions.\n\n/cc @schneems / @josevalim / @mikel", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7202', 'title': u'Allow perform_deliveries to be set within mailer action'}, {'body': u"fix wrong method name 'update_columns' on 'update_column'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/960dfd1d957f4f82e9072543ffd0f6fb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7201', 'title': u'3.2 stable fixed CHANGELOG'}, {'body': u'Just changed it a little to be more readable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/78d112452f1c6e30dfb7103d968cc439?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7198', 'title': u'Refactor ActionDispatch::Http::Cache::Response#cache_control_headers'}, {'body': u'The Inflector is currently not very supportive of internationalized\nwebsites. If a user wants to singularize and/or pluralize words based on\nany locale other than English, they must define each case in locale\nfiles. Rather than create large locale files with mappings between\nsingular and plural words, why not allow the Inflector to accept a\nlocale?\n\nThis patch makes ActiveSupport::Inflector locale aware and uses the\napplication\'s `I18n.default_locale` unless otherwise specified. Users\nwill still be provided a list of English (:en) inflections, but they may\nadditionally define inflection rules for other locales. Each list is\nkept separately and permanently. There is no reason to limit users to\none list of inflections:\n\n```ruby\nActiveSupport::Inflector.inflections(:es) do |inflect|\n  inflect.plural(/$/, \'s\')\n  inflect.plural(/([^ae\xe9iou])$/i, \'\\1es\')\n  inflect.plural(/([aeiou]s)$/i, \'\\1\')\n  inflect.plural(/z$/i, \'ces\')\n  inflect.plural(/\xe1([sn])$/i, \'a\\1es\')\n  inflect.plural(/\xe9([sn])$/i, \'e\\1es\')\n  inflect.plural(/\xed([sn])$/i, \'i\\1es\')\n  inflect.plural(/\xf3([sn])$/i, \'o\\1es\')\n  inflect.plural(/\xfa([sn])$/i, \'u\\1es\')\n\n  inflect.singular(/s$/, \'\')\n  inflect.singular(/es$/, \'\')\n\n  inflect.irregular(\'el\', \'los\')\nend\n\n\'ley\'.pluralize(:es)   # => "leyes"\n\'ley\'.pluralize(:en)   # => "leys"\n\'avi\xf3n\'.pluralize(:es) # => "aviones"\n\'avi\xf3n\'.pluralize(:en) # => "avi\xf3ns"\n```\n\nA multilingual Inflector should be of use to anybody that is tasked with\ninternationalizing their Rails application.\n\nSigned-off-by: David Celis <david@davidcelis.com>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b0144a16ba125a94460c5d45f07efb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7197', 'title': u'Make ActiveSupport::Inflector locale aware and multilingual'}, {'body': u"`require mysql` used here for the 6 **hard** mysql-spesifics tests only (see [MysqlDBCreateAsRootTest](https://github.com/rimidl/rails/pull/new/fix-incorrect-require-mysql-in-mysql_rake_test#L0R46)). But we don't should run it for the sqlite or postgresql database contexts. And of course we don't should `require mysql`, when we run tests only for sqlite (`ARCONN=sqlite3 ruby -Itest .../mysql_rake_test.rb`), for example.\n\n\\+ if we follow the guides [Set up and Run the Tests](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#set-up-and-run-the-tests) ,\nwe naturally catch error bellow:\n\n```\nrails/ $ rm .bundle/config\nrails/ $ bundle install --without db\nrails/ $ cd activerecord\nactiverecord/ $ ARCONN=mysql ruby -Itest test/cases/tasks/mysql_rake_test.rb\n...\n(mysql is not part of the bundle. Add it to Gemfile.) (LoadError)\n...\n```\n\nThis pull-request fix this error.\n\n_Note:_ `MysqlDBCreateAsRootTest` don't pass with mysql2 adapter, only with mysql.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2e27cd545ce610495006fbbc54c3f1a2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7196', 'title': u'Fix incorrect usage `require mysql` in the activerecord/.../mysql_rake_test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/641db8edc1a8f38ee0d2e5b221d40bb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7194', 'title': u'DRY class_attribute'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/641db8edc1a8f38ee0d2e5b221d40bb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7193', 'title': u'DRY class_attribute'}, {'body': u'These tests are failing before file got created on my side.\n`ensure` block should support early fail as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7192', 'title': u'More polite cleanup for sqlite tests'}, {'body': u'The separation option enable to keep entire words, lines or anything.\nTo split by line, like github, we can set the separation option as \\n.\nTo split by word, like google, we can set the separation option as " ".\nThe radius option represent the number of lines or words we want to\nhave in the result.\nThe default behaviour is the same. If we don\'t set the separation\noption, it split the text any where.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f8069adedbe2d37460c54eac8102351b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7189', 'title': u'Add a separation option for the excerpt function'}, {'body': u"As I'm not sure if this is an expected behaviour, I'm opening this pull request to merge this documentation related. As no one, commented on #5828, it seems that it is. \n\nWhen merged, it closes #5828.\n\ncc @al2o3cr, @rafaelfranca, @schneems", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e983bf17ef27a284e0bdb174cb080b19?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7188', 'title': u'Documentation Fix: Pointing the case when no dependent option is given to a association method'}, {'body': u"Update `test_help` to config properly turn natural language option.\nLast versions of Turn don't monkey patch MiniTest to setup\nthe natural language option. Here is an [example](https://github.com/TwP/turn/blob/master/try/test_autorun_minitest.rb#L3).\n\nThis patches the following behaviour:\n\n    $ rake test:units\n    `<top (required)>': undefined method `use_natural_language_case_names='\n    for MiniTest::Unit:Class (NoMethodError)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7187', 'title': u'Backport #6995 to 3-2 stable'}, {'body': u'```\nbundle exec rake test TEST=rails/actionpack/test/dispatch/response_test.rb\n...\n  1) Failure:\ntest_can_wait_until_commit(ResponseTest) [/home/rimidl/projects/gems/rails/actionpack/test/dispatch/response_test.rb:10]:\nFailed assertion, no message given.\n```\nThis pull-request corrects this test case.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2e27cd545ce610495006fbbc54c3f1a2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7186', 'title': u'Fix test_can_wait_until_commit(ResponseTest) in /actionpack/test/dispatch/response_test.rb'}, {'body': u'That commit https://github.com/rails/rails/commit/6951014c05fa64f533072d21dc7e4c55f59162d4 fixed behavior for abstract classes, but it was fixed by correct order. Case `if abstract_class?` must go first and no need add extra `active_record_super.abstract_class?` on this line. https://github.com/rails/rails/commit/6951014c05fa64f533072d21dc7e4c55f59162d4#L0R132', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7185', 'title': u'Refactor to reset_table_name'}, {'body': u"Following the false issue reported here : https://github.com/rails/rails/issues/6958\n\nHere's the commit that passes the dasherize parameter to included associations when using to_xml.\nThis way we don't have to repeat :dasherize on every single included models. It can become messy pretty fast on big xml dumps!\n\nbundle exec rake test passes in activemodel.\n\nTell me if anything's missing!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/80500f94bd85e8508f297a407c679b08?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7184', 'title': u'to_xml dasherize option should be passed to included associations'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7183', 'title': u'Config tests to run in random order in test_help'}, {'body': u'This pull request address ORA-01400 errors reported in #7178 with Oracle enhanced adapter.\n\nThe commit 3c0bf04 requires :json_data_empty `:null => false` OR `:default => ""`. No `:null => false` AND `:default => ""` required. \n\nSee https://github.com/rails/rails/issues/7178#issuecomment-7314663 for detail.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7182', 'title': u'Modity the :json_data_empty attribute from `:null => false` to `:null => true`'}, {'body': u"Ruby implementations should be free to produce exception\nmessages that are not identical to MRI. For example,\nRubinius produces 'Expected an even number, got 5'.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7181', 'title': u"Don't test language-level exception messages"}, {'body': u'Original PR and discussion #2008.\n\n``` ruby\nUser.order("name asc").order("name desc")\n    # SELECT * FROM users ORDER BY name desc, name asc\n```\n\nThis also affects order defined in `default_scope` or any kind of associations.\n\ncc @tenderlove ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7176', 'title': u'AR::Relation#order: make new order prepend old one.'}, {'body': u'This commit addresses ORA-01400 errors with Oracle enhanced adapter.\n\nIssue #4856 had been fixed and tested with the attribute `:null => false, :default => ""`.\nNow `:null => false` attribute is not necessary to test this issue.\n\nYou can see investigations [here](https://github.com/rails/rails/issues/7138#issuecomment-7295387).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7173', 'title': u'Modify the preference attribute from `:null => false` to `:null => true`'}, {'body': u"Removed protected method `class_of_active_record_descendant` and moved logic to the `base_class` method. The `class_of_active_record_descendant` method was confusing because it required an argument, but that argument was 'self' and was not used outside this context.\n\nAlso moved base_class tests to inheritance_test.rb and added some test coverage for some untested cases.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/45b75f9f866d240362c0d7fa125025ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7171', 'title': u'Refactor ActiveRecord::Inheritance.base_class logic'}, {'body': u'There are quite a lot of such typos in tests files but since in ActionController module exists **response_overridden?** method I think it should be **overridden**.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e302c3320cd14b02cbe237b479d7f884?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7170', 'title': u'Fix typo in documentation'}, {'body': u'Currently in Rails, it is not possible to specify a :layout when\ndirectly calling\nrender @variable\nMore specifically, the following code doesn\'t work:\n\nrender @variable, layout: \'different_layout\'\n\nThis patch allows specifying a layout. To pass locals to the layout,\nomit the locals: {} brackets. Thus, instead of writing\n\nrender \'variables/variable\', layout: \'different_layout\', locals:\n{variable: @variable, some_local: \'foo\'}\n\nyou can just write:\n\nrender @variable, layout: \'different_layout\', some_local: \'foo\'\n\nOne drawback is that a local may not be named "layout", else it won\'t\nwork. It is quite obvious though since locals are passed "inline"\n(without the locals: {} brackets).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/48e74d737282bad7cdfefeb8b6b22d15?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7169', 'title': u'Add support for using the :layout option when calling render @variable'}, {'body': u'Changed parameterize() to remove single and double quotes before inserting separators. E.g. "Jon\'s house is nice" becomes "jons-house-is-nice".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c57288fbb9a93d57bbaaaa5d7d1d51b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7168', 'title': u'parameterize() removes quotes before processing'}, {'body': u'In this commit https://github.com/rails/rails/commit/a052fc95a7e5176f66f0f896f3ced60e41794eed was added eager_autoload but missed extend.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7167', 'title': u'Missed extend for eager_autoload'}, {'body': u'Fixed markdown code indenting', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ecd20118eccc74fbe790e75a923de7e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7166', 'title': u'Update activerecord/CHANGELOG.md'}, {'body': u'Related to #7164\n\nLooks like the last one; thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7165', 'title': u'Switched update_column recommendation in changelog to update_columns'}, {'body': u'This is related to #7159\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7164', 'title': u'Switched update_column recommendation in changelog to update_columns'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7162', 'title': u'change to hash rocket syntax to support 1.8'}, {'body': u'There\'s a note above that says "These classes will be loaded when associations are created. So there is no need to eager load them.", which is true for most of the association classes, but not for these. For instance, `AssociationScope` is only ever referenced when `.scoped` is called on an association, so it will only get autoloaded at runtime, rather than at "load time".\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b3ed9bd44a7d22be2dd659be02e44754?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7161', 'title': u'Eager autoload ActiveRecord association helpers'}, {'body': u'update_attribute is deprecated in Rails 3.2.7.rc1 in favour of update_column\n\nupdate_column is then deprecated in Rails 4.0 and I think that it makes no sense to recommend adopting it only to require changing to update_columns in the very next release.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7159', 'title': u'Backport update_columns to Rails 3.2'}, {'body': u'This commit addresses the following failure with Oracle enhanced adapter.\n\n```ruby\n$ ARCONN=oracle ruby -Itest test/cases/store_test.rb\nUsing oracle\nRun options: --seed 1895\n\n# Running tests:\n\n........F.........\n\nFinished tests in 0.683039s, 26.3528 tests/s, 42.4573 assertions/s.\n\n  1) Failure:\ntest_0009_convert store attributes from Hash to HashWithIndifferentAccess saving the data and access attributes indifferently(StoreTest) [test/cases/store_test.rb:63]:\nExpected: "symbol"\n  Actual: nil\n\n18 tests, 29 assertions, 1 failures, 0 errors, 0 skips\n$\n```\n\n1024 character should be enough to store this purpose.  This fix also works with sqlite3, mysql, mysql2 and postgresql adapters.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7158', 'title': u'Use string datatype for the setting attribute'}, {'body': u'These extra runs were used to test identity map and not fully removed when the feature was removed.\n\nWhen identity map was removed, ci/travis.rb was updated to remove the line in the if build.activerecord? clause that sets the :identity_map build option to true.  However, the entire if build.activerecord? clause needs to be removed to remove the extra build.run! inside the clause.\n\nCurrently, for each database, activerecord tests are run 4 times, twice not in isolation, and twice in isolation.  They only need to be run twice, once not in isolation, and once in isolation. \n\nTo validate the fix, I have run ci/travis.rb against all the variations of the GEM environment variable as specified in .travis.yml.  All tests ran successfully and there were no duplicate runs.  I ran the tests using ruby 1.9.3 in a vagrant box provisioned based on the same travis cookbook recipes that the travis standard worker box uses.\n\nPlease let me know any more work I need to do for this fix.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d308241c047f7d688b21835a0d47b369?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7151', 'title': u'remove duplicate build runs in travis'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5a90a67fa1a92e6a4b605cfd8da5e375?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7150', 'title': u'Replace the flush parameter with a Hash.'}, {'body': u'Issue #6115 has been fixed and tested with the attribute `:null => false, :default => ""`.\nHowever `:null => false` attribute is not necessary to test this issue, which causes many ORA-01400 errors with Oracle enhanced adapter.\n\nPlease see https://github.com/rails/rails/issues/6195#issuecomment-7218313 for detail.\n\nThis pull request has been tested with sqlite3, postgresql, mysql, mysql2 and oracle enhanced adapters.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7148', 'title': u'Addresses ORA-01400 errors and also supports #6115'}, {'body': u"It was just a copy of the controller generator documentation which was\nmisleading.  It doesn't accept arguments for views.  This seems more\ndescriptive as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5012b2e9db5468ca91d34196155f756a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7147', 'title': u'Updated scaffold_controller generator docs #7146'}, {'body': u"Suppose we have simple model with custom `as_json`:\n\n```ruby\nclass TestModel < ActiveRecord::Base\n\n  def some_method\n    'test output'\n  end\n\n  def as_json(options={})\n    options[:methods] ||= []\n    options[:methods].push(:some_method)\n    super options\n  end\nend\n```\n\nAnd we want to serialize array of 10 records:\n\n```ruby\n([TestModel.new] * 10).as_json\n```\n\nExpected behaviour (for me) is that `some_method` will be called just 10 times. But I get 55 instead :smile:. This is because of modification of `options` variable, which passed in `super`\n\nI've tested it with rails 3.2, 3.0.9 and latest master. With ActiveRecord and MongoMapper.\n\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/88054fc582a42bf05c3f8460f84ffcee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7145', 'title': u'Issue with JSON serialization'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e44d4c2f385f19db99813306456f5bee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7143', 'title': u'fix typo in validations callbacks test'}, {'body': u'...no options are passed (to match the behavior when options are passed).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b0e6b1dac36d79d385c708fdbe30318e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7142', 'title': u'Fix skip_[before|after]_filter to not skip an *around-filter* when...'}, {'body': u"@xaviershay\n\nPreviously, if something like the following was executed, the `foo` around-filter would not be skipped (it's not a before-filter).\n\n```\naround_filter :foo\nskip_before_filter :foo, :only => :index\n```\n\nBut if the following was executed, the `foo` around-filter *would* be skipped. This patch fixes that inconsistency.\n\n\n```\naround_filter :foo\nskip_before_filter :foo\n```\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b0e6b1dac36d79d385c708fdbe30318e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7141', 'title': u'Fix skip_[after|before]_filter to not skip an around-filter, ever'}, {'body': u"Otherwise, if schema_format = :sql, you will see:\n\n    $ rake db:setup --trace\n    ** Invoke db:setup (first_time)\n    ** Invoke db:schema:load_if_ruby (first_time)\n    ** Invoke db:create (first_time)\n    ** Invoke db:load_config (first_time)\n    ** Invoke rails_env (first_time)\n    ** Execute rails_env\n    ** Execute db:load_config\n    ** Execute db:create\n    db_example_development already exists\n    db_example_test already exists\n    ** Execute db:schema:load_if_ruby       #<-------- :environment hasn't been executed yet\n    ** Invoke db:schema:load (first_time)\n    ** Invoke environment (first_time)\n    ** Execute environment\n    ** Execute db:schema:load\n    ~/db_example/db/schema.rb doesn't exist yet. Run `rake db:migrate` to create it then try again.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b541e45c86f3b6213b6e87af0f537401?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7140', 'title': u'Make sure :environment task is executed before db:schema:load or db:structure:load'}, {'body': u"Now, we can't success `bundle update`, because we can't find journey-1.0.4.\n\nAccording to https://github.com/rails/journey, there is 1.0.4 on the 1-0-stable branch.\nSo I added a :branch option.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7137', 'title': u'Fix build. There is journey-1.0.4 on the 1-0-stable branch.'}, {'body': u'*Edit: see my comment below for a more general version of this problem/fix.*\n\nCurrently, `apply_inflections` does not take into account that the input might be a multi-word string separated by underscore. (`tableize` etc relies on this behavior to work correctly.) This bug affects only uncountable multi-word strings separated by underscores:\n\n```ruby\n   "funky jeans".singularize # => "funky jeans"\n   "client information".pluralize # => "client information"\n\n   "funky_jeans".singularize # => "funky_jean"\n   "client_information".pluralize # => "client_informations"\n```\n\nIt\'s also worth pointing out that `"funky_jeans".singularize` used to work correctly before 9b4622a483319f3d1e7f4489442f0d86afb6da36, which was merged almost 2 years ago so this is essentially broken since Rails 3.\n\nOn the other hand, it appears that `"client_information".pluralize` has always been broken, so this does change the behavior of `tableize` and could potentially break some older apps out there.\n\nCloses #7132.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22bb3e56828870ee9a0dd93aeadbe04a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7134', 'title': u'Correctly apply inflection rules on multi-word strings. (Fixes #7132)'}, {'body': u'Without this commit ```Comment.update_all({})``` gives ```UPDATE "comments" SET``` sql and raises exception. Now ```update_all``` returns number of rows in scope even if argument is blank.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e4faab5b78bd2754387013bf8ebab06e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7133', 'title': u'fix update_all with blank argument'}, {'body': u"When closing proxy body, we restore connection_id. But when getting error, we don't restore one.\nI guess we should restore connection_id.\n\nI wanted to remove duplicated codes, I added private method.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7130', 'title': u'Restore connection_id on error.'}, {'body': u"Please see #7079.\n\nI know this PR doesn't fix perfectly (I don't fix the original issue, when using other invalid characters).\nBut in the current behavior, we'll be confused by the error message, and we sometimes use a filename with hyphen.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7129', 'title': u'Improve error handling when using partial name with hyphen. #7079'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7126', 'title': u'fixing :nodoc:s in AS::JSON::Encoding'}, {'body': u"I try to make testing as easy as possible, which means for me that every test file should be runnable with `ruby pat/to/file_test.rb` from everywhere, which is also a requirement for a few editors, this failed in activemodel.\n(I'll make more pull requests for the other rails parts if this one is accepted)\n\n\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/59436ecd4fe6ad7c34f67654d839f05f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7124', 'title': u'Make activemodel tests runnable without -Itest and from non-root folders'}, {'body': u"we don't need to escape values in this method as we pass\nthese html attributes to `tag_options` method that handle escaping as\nwell.\n\nit fixes the case when we want to pass html5 data options", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7123', 'title': u"don't escape options in option_html_attributes method"}, {'body': u'When using resources in your routes, you can customize the key that is\nused in the params hash as the id for the resource.\n\nThis can be useful if you have to expose an API to a third party\nservice that has domain specific language concerning identification.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4441c6faae71a7b1c035b85ed2c2701?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7116', 'title': u'Allowing customization of id param in resources'}, {'body': u"Right now the documentation doesn't mention that the path argument for assert_recognizes and assert_generates can be a full url. This has been possible since this pull request was accepted two years ago: https://github.com/rails/rails/commit/7c9bf45b0dd7ad7a1d99a14566bfaeadc77b4665\n\nLet me know if I can improve anything in this PR.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/64fa0c156c8c444cbbe09593baea6e3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7114', 'title': u'Documentation fix: Note that you can also pass a full url to assert_recognizes and assert_generates'}, {'body': u'* more complete documentation for module attribute_accessors\n\n* add Module#deprecate documentation', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9538e63be1a8261e6c0e028db161a366?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7113', 'title': u'Add/update some activesupport documentation'}, {'body': u'Hi, while reading the activesupport library I found out that some documentation was either missing or slightly incomplete, so here there are my additions. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9538e63be1a8261e6c0e028db161a366?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7111', 'title': u'Add/update some activesupport documentation'}, {'body': u'Reason:- 0.12.0 introduced a bug where you got a exception\nwhich is now in 0.12.1 is a warning only!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7108', 'title': u'Bumping mocha!'}, {'body': u'Pull #7075 rebased. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4b897719c13e333a89392b9360868761?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7107', 'title': u'Added method unique_messages to ActiveModel::Errors'}, {'body': u'Updated version of #7084\n\nhttps://github.com/rails/rails/commit/e482100d6ed022d00ba31c6c4377f6f947173337#commitcomment-1600684 //cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/98f11c73a95318bbf85e419c1727434d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7106', 'title': u'Use join without default separator in tagged logger'}, {'body': u'Fixing build broken here \n\n5a7d31913bb16977ec85d55de34ac0d79b512d62', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7102', 'title': u'table name should be sym as per test.'}, {'body': u"- #respond_to's documentation refer to .respond_to, but it was\n  written as just <respond_to>. Added class name for clarification.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/596a56f308a240a02b2227367f908882?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7100', 'title': u'Clarification to doc of ActionController::MimeResponse.respond_to'}, {'body': u'There are a couple of reasons why this is beneficial:\n- the controller accessor will be able to be garbage collected\n- if the sweeper has logic that is dependent upon the controller accessor, it will behave properly when run outside of the request process (i.e. via a queue job)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/496f50c17f049cb4eff1b2b229b49c70?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7099', 'title': u'Clean up Sweeper controller accessor when an Error is raised'}, {'body': u'Add possibility to match multiple times a word with excerpt function', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f8069adedbe2d37460c54eac8102351b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7098', 'title': u'Add times options in excerpt'}, {'body': u'In continuation of PR #7028', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7097', 'title': u'Add fkey attributes to `join_table` migration generator'}, {'body': u'Commit 3dbedd2 added NOT NULL constraints to timestamps.\nCommit fcef728 started to revert this, but was incomplete.\nWith this commit, 3dbedd2 should be fully reverted and\ntimestamps will no longer default to NOT NULL.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dc01976fdb5397c5026a528c7fbc3590?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7095', 'title': u'revert Default timestamps to non-null'}, {'body': u'TaggedLogging places the message part in the progname. This does not cause an issue with the standard Logger. However, with Loggers like Syslogger the end message looks like:\n\nMy message: [0123] My message\n\nThis is a simple fixe that solves the issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/005516573123125106964ea71c3c7395?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7091', 'title': u'Corrected small bug that puts the message in place of the progname'}, {'body': u'This patch adds the ability to mark `Hash` as as mass-assignment safe:\n\n\n``` ruby\nUser.attr_protected :admin\n\n# In rake task:\nUser.new({:admin => true, :email => "a@b.com"}.assignment_safe) \n\n# While in controller\nUser.new(params[:user]) # still secure\n```\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7089', 'title': u'[Very experimental] AM::MassAssignmentSecurity: add ability to mark Hash as safe'}, {'body': u'Due to incorrect parsing of sqlite3 string column default containing newline character, any string column default containing newline character, e.g. <code>"\\n"</code> or <code>"\\nRegards\\nMatt"</code> is parsed incorrectly by sqlite3 adapter and as a result contains enclosing quote characters (\'), e.g. <code>"\'\\n\'"</code> or <code>"\'\\nRegards\\nMatt\'"</code>.\n\nThe regular expressions stripping column defaults out of enclosing quote/double quote characters did not take into consideration column defaults containing newline characters. More specifically <code>/^\'(.*)\'$/</code> regular expression would not match <code>"\'\\n\'"</code> since dot (.) in this expression is intended to match any character <b>except for newline</b> character and hence column default was not stripped correctly out of enclosing quotes returned by database when querying for table structure.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f783f3463c3cc50fc2efd1e5a505311a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7088', 'title': u'fix sqlite3 column default containing newline character'}, {'body': u"According to http://dictionary.reference.com/browse/criterion the\ncorrect singular form of 'criteria' is 'criterion' and not 'criterium'\nwhich is being returned by ActiveSupport right now.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0be64c4c66963cbfa591d63a58e34088?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7086', 'title': u'Add new irregular inflection criterion -> criteria'}, {'body': u'When the default separator is set logger will create incorrect output\n\n```ruby\n$, = "_"\n@logger.tagged("BCX", "BDX") { @logger.info "Funky time" }\n# => [BCX] _[BDX] Funky time\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/98f11c73a95318bbf85e419c1727434d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7084', 'title': u"Don't use default separator in tagged logger"}, {'body': u"As we know in views rails provides a lazy lookup to translate the text. This facilitates reducing code size. But I've always seemed very strange that such a functional is not in the controllers and mailers. In every new project I had a similar method. It would be nice if this was part of the core. So \n\n```ruby\n\nclass ProductController < ApplicationController\n\n  def create\n    if @product.save\n      redirect_to root_path, :notice => t('.saved')\n    else\n      flash[:error] = t('.failed')\n    end\n  end\n\nend\n\n# will equal to \n\nclass ProductController < ApplicationController\n\n  def create\n    if @product.save\n      redirect_to root_path, :notice => t('product.create.saved')\n    else\n      flash[:error] = t('product.create.failed')\n    end\n  end\n\nend", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f11e6329d1bb972e6906455adbb90115?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7082', 'title': u"add lazy look up in abstract controller's translate method"}, {'body': u'This is the master-branch counterpart to #7080.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7081', 'title': u'AR::Integration must be included after AM::Conversion'}, {'body': u"Integration's definition of #to_param must override Conversion's. Otherwise,\nthere is a regression from 3.1 in the behavior of a non-persisted AR::Base\ninstance which nevertheless has an id.\n\nOn master, a similar change is needed -- or we can remove AR::Integration#to_param\nand accept the behavioral change, or we can remove AR::Integration#to_param and\nchange AM::Conversion#to_param to have the AR::Integration behavior.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7080', 'title': u'AR::Integration must be included after AM::Conversion'}, {'body': u"In the `find_by_sql` method, we use `logging_query_plan` method.\nBut In the `count_by_sql` method, we don't use one.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7078', 'title': u'Log query plan when we use count_by_sql method.'}, {'body': u'I checked rails source tree with the following command.\n\n```\n$ find . -name "*.rb" -print | xargs grep class_eval | grep -v __FILE__ | grep "<<"\n```\n\nI found class_eval without file/line, so I added them.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7076', 'title': u'Fix class_eval without __FILE__ and __LINE__.'}, {'body': u"I find myself doing this a lot on my projects. It is a simple method that can simplify helper's logic.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4b897719c13e333a89392b9360868761?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7075', 'title': u'Added method unique_messages to ActiveModel::Errors'}, {'body': u'Fixes issue an with overrding ActiveRecord reader methods with a composed object and using that attribute as the scope of a validates_uniqueness_of validation. This changes the validation to use the attribute\'s database value as opposed to the return value of the method call. \n\nFrom the [original discussion](https://groups.google.com/forum/?fromgroups#!topic/rubyonrails-core/Z-k4zyW7XvI):\n\nThe following code will raise "TypeError: Cannot visit CatBreed" when trying to create a new Cat:\n\n```ruby\nclass Cat < ActiveRecord::Base\n  validates :name, :uniqueness => { :scope => [:breed] }\n\n  def breed\n    CatBreed.new(super)\n  end\nend\n\nclass CatBreed\n  def initialize(breed)\n    @breed = breed\n  end\n\n  def to_s\n    @breed\n  end\nend\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/45b75f9f866d240362c0d7fa125025ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7072', 'title': u'Use database value for uniqueness validation scope'}, {'body': u'This is a patch meant for 4.0 that will move most inflections that are\ncurrently defined in `activesupport/lib/active_support/inflections.rb`\nto the inflection initializer template defined in Railties.\n\nInflections are currently "frozen" in Rails. Commits that add/remove/alter\ninflections are largely ignored whether or not they make sense when\nconsidering English grammar. The freezing was a decision made to avoid\nbreaking existing apps that depend on these defined inflections. By moving the\ninflections to an initializer, we can unfreeze this area of Rails and change\ninflections without fear of breaking existing applications.\n\nAdditionally, this will garner more understanding as to how Rails\npluralization/singularization works. For oddities that occur in the\ninflections Rails has defined, it\'s often simply a "WTF?" moment (e.g.\nwhy "hard drives" would singularize as "hard drife", or why "safe" would\npluralize to "saves") and people have to source dive in order to figure\nout why their singularization/pluralization is not working as expected. Laying\nthem all out in the initializer will reduce a lot of headache associated with\ninflection oddities.\n\nTwo things to note:\n\n1. I\'ve left the two basic inflections within ActiveSupport. These are:\n  * Add an "s" to make a word plural (unless it already has one)\n  * Remove an s to make a word singular (unless it ends in two)\n\n  I\'m not actually sure about whether that second one should be\n  included, or even if I should move both to the initializer as well.\n  I\'d appreciate some input on that.\n\n2. I have another pull request open (pull request #6820) that would need\n   to be modified if this is merged.\n\nSigned-off-by: David Celis <david@davidcelis.com>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b0144a16ba125a94460c5d45f07efb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7071', 'title': u'Move ActiveSupport inflections to the initializer template'}, {'body': u'The documentation for Rails::Application#env_config was incorrect and missing some information. This pull request fixes it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/583c3d751af6c13d910b4fa8c6ef065d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7070', 'title': u'Update documentation for Rails::Application#env_config'}, {'body': u'This is a cleaner version of #6916 and #6162\n\nThis is a change from the behavior of passing in an Array of args.\n  This solution attempts to answer issue #3165', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f36caea738decf5aff3eebaa7ebabf9c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7069', 'title': u'Model.select takes a variable list of arguments'}, {'body': u'Do not enforce SSL on Tor hidden services (e.g. if this server hosts content both over SSL and Tor).\n\nCAs cannot verify .onion ownership for SSL (so it provides no auth),and SSL introduces leaks that actually degrade Tor security/privacy.\n\nCf. https://trac.torproject.org/projects/tor/wiki/doc/TorFAQ?version=1390#WhyisitbettertoprovideahiddenserviceWebsitewithHTTPratherthanHTTPSaccess', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/237338834f2f8948e862e91392a8c1b4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7068', 'title': u'Do not enforce SSL for Tor Hidden Service .onion URLs'}, {'body': u'This has always bugged me. Previously you had to do `cache [foo, bar, baz]` if you wanted a composite key. This PR allows you to do `cache foo, bar, baz, :with => { :these => :options }`. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/877677f3c0cc6f8822a57b6732933d31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7067', 'title': u'Use *args for cache view helper.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab36cdd7a51942c562ae942a0dd07b45?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7066', 'title': u"Fix activerecord model to_ary method comment 'see also' link"}, {'body': u'Optionally validate or exclude selected fields when calling `#valid?`. Test and code attached.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6c13f781b81579be36f2ec1193224db4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7065', 'title': u'Only validate desired fields'}, {'body': u"Observers are one of the few things eager-loading stuff, whereas associations/helpers etc are all lazy.\n\nthis pull adds lazy_observe to Observer, so that models can be observed when they are loaded and not when observers are loaded.\n\nin our app: rails c loads 45 AR models,\nwith lazy_observe this can be reduced to 0\n\nloadtime:\n45 -> 14.2s\n0 -> 12.0s\n\n - faster application startup\n - less memory on startup\n - less db queries on startup\n - gems can do their monkey-patching safely before models are loaded\n - easier to fork+test since less is loaded (spork / spin)\n - can boot an application with a database that is in a bad state (before migration / columns missing etc)\n\nthis pull is still missing tests, I'll convert the tests from https://github.com/grosser/lazy_observers if there is a consensus that this is wanted feature.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/59436ecd4fe6ad7c34f67654d839f05f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7064', 'title': u'Do not eager load models that are observerd'}, {'body': u"I've noticed a caveat with the :autosave option biting people before.\nQuestions arise about why they must explicitly save an associated object\nin their own before_save callbacks. I've updated the documentation as\nsuch to note to users that the :autosave callback occurs before any\nuser defined callbacks. They must save the associated record themselves\nif altering it in their own callbacks.\n\nSigned-off-by: David Celis <david@davidcelis.com>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b0144a16ba125a94460c5d45f07efb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7061', 'title': u'Update the documentation for the :autosave option on belongs_to'}, {'body': u"Often I need to build form(sign in or feedback form) with inputs which dont have value. But also I need specify custom style to it. So I use text_field_tag method in which second argument value and third options. But I dont need set value, so I put blank string or nil. As we know sending nil to method not good ruby practice, so I change it to more flexible way\n\n```ruby\n   text_field_tag 'field', :class => 'custom css'\n\n# is equal to\n\n   text_field_tag 'field', nil, :class => 'custom css'\n```\n\nAlso changed password field, email field, textarea and etc", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f11e6329d1bb972e6906455adbb90115?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7059', 'title': u'Make argument `value` optional in form tags helpers'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7058', 'title': u'Fix tests that depend on run order'}, {'body': u'If we use `SqlBypass.data_column=`, `find_by_session_id` method respect this assignment.\n\nAdditionaly, there were some problem, I fixed.\n\u30fbredundant select clause\n\u30fbquoted_column', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7057', 'title': u'Fix SqlBypass.data_column problem.'}, {'body': u'I think that calling send(store_attribute) twice is redundant.\n ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7056', 'title': u'Avoid to call send(store_attribute) twice.'}, {'body': u'Attempt to DRY things out a little. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/076ddab874e5e370a451f0da52afb85c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7054', 'title': u'move method for dependent option check to association'}, {'body': u"This way you can `require 'active_record/core_ext/time'` for example\nI see these libs are available through `active_record/time` but not\nindividually", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5012b2e9db5468ca91d34196155f756a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7053', 'title': u'Added time related req files to AS core_ext #6896'}, {'body': u"Make asset:precompile:all faster by not re-invoking the Rake environment.\n\nThere's a comment here about needing it, but since the digest assets should be identical to the non-digest assets, there shouldn't be a problem re-using the compilation cache.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f8ec7f90daf8b1defb8e318d663c0f17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7052', 'title': u'Faster rake asset:precompile:all'}, {'body': u'This is an attempt to address issue #6939, where an earlier migration\nadded a column to the database, and a later migration uses a model and\nreferences that column.\n\nWhen both migrations were run together with `rake db:migrate` the column\ninformation in memory still referenced the old table structure.\n\nRunning the migrations separately fixed this, as a new connection was\nthen established before referencing the model. Explicitly calling\n`reset_column_information` is a more reliable workaround.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/51ee7bed9ecbc33aec92517f1fbb6cc2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7050', 'title': u'Expand the caveat about models in migrations in the rails guide.'}, {'body': u'Sorry, so tiny fixes.\n\nfirst: there are two quote_value methods, instance / class method.\n        The class method is public (the instance one is private), so I guess we should the instance one.\n\nsecond: unique index names to be added / removed are duplicated. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7048', 'title': u'[tiny fixes] Remove more duplicated code.'}, {'body': u"Now, AR's test is break.\nI guess this issue is related to ac4d101a75335dc430a53203184e67753b6d99e0.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7046', 'title': u'Fix build. :extend is valid option.'}, {'body': u'Because there is IndifferentCoder.as_indifferent_hash method, we should removed duplicated code.\nAdditionally, for consistency in this file, I remove the namespace of HashWithIndifferentAccess.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7045', 'title': u'Remove duplicated code in the AR::Store.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/51ee7bed9ecbc33aec92517f1fbb6cc2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7044', 'title': u'Add note about needing mysql superuser for unit tests.'}, {'body': u'The instructions about configuration covered only rails-specific usage. This adds information on how to use observers in non-rails projects.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/51ee7bed9ecbc33aec92517f1fbb6cc2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7043', 'title': u'Add documentation for ActiveRecord::Observer.'}, {'body': u"Prepared statements (prepare/execute/close) were being used unnecessarily\nwhen no bind variables were present, and disabling prepared statement using\nprepared_statements:false was principally broken. While bind variables were\ncorrectly substituted with prepared_statements:false, the prepared statement\ninterface was still used, costing an extra two round trips per query.\n\nIn addition to making this behavioral change, I also cleaned up the internals\nof exec_stmt and exec_without_stmt so that they behave the same (calling log\nand constructing the ActiveRecord::Result in the same way).\n\nMoving the check for binds.empty? to exec_query also will mean that several\ncode paths explicitly calling exec_without_stmt could be cleaned up to once\nagain call exec_query instead. I have also left the check for binds.empty? in\nexec_stmt, since it is not a private method and could be called directly with\nan empty binds array. For the sake of clarity in this patch, I have not made\nthose changes.\n\n# The previous behavior #\n\nWhen issuing a Foo.find(1) with prepared_statements:true, the bind variable\nis present in the prepared query, and execute shows a value passed:\n\n    Connect\troot@localhost on rails_test\n    Query\tSET SQL_AUTO_IS_NULL=0\n    Statistics\n    Query\tSHOW FULL FIELDS FROM `foos`\n    Query\tSHOW TABLES LIKE 'foos'\n    Query\tSHOW CREATE TABLE `foos`\n    Prepare\tSELECT  `foos`.* FROM `foos`  WHERE `foos`.`id` = ? LIMIT 1\n    Execute\tSELECT  `foos`.* FROM `foos`  WHERE `foos`.`id` = 1 LIMIT 1\n    Close stmt\n    Quit\n\nWhen issuing a Foo.find(1) with prepared_statements:false, the bind variable\nhas already been removed and substituted with the value, but the prepared\nstatement interface is used anyway:\n\n    Connect\troot@localhost on rails_test\n    Query\tSET SQL_AUTO_IS_NULL=0\n    Statistics\n    Query\tSHOW FULL FIELDS FROM `foos`\n    Query\tSHOW TABLES LIKE 'foos'\n    Query\tSHOW CREATE TABLE `foos`\n    Prepare\tSELECT  `foos`.* FROM `foos`  WHERE `foos`.`id` = 1 LIMIT 1\n    Execute\tSELECT  `foos`.* FROM `foos`  WHERE `foos`.`id` = 1 LIMIT 1\n    Close stmt\n    Quit\n\n# With this patch applied #\n\nWhen issuing a Foo.find(1) with prepared_statements:true, the bind variable\nis present in the prepared query, and execute shows a value passed:\n\n    Connect\troot@localhost on rails_test\n    Query\tSET SQL_AUTO_IS_NULL=0\n    Statistics\n    Query\tSHOW FULL FIELDS FROM `foos`\n    Query\tSHOW TABLES LIKE 'foos'\n    Query\tSHOW CREATE TABLE `foos`\n    Prepare\tSELECT  `foos`.* FROM `foos`  WHERE `foos`.`id` = ? LIMIT 1\n    Execute\tSELECT  `foos`.* FROM `foos`  WHERE `foos`.`id` = 1 LIMIT 1\n    Close stmt\n    Quit\n\nWhen issuing a Foo.find(1) with prepared_statements:false, the bind variable\nhas been removed and substituted with the value, and the query interface is\nused instead of the prepared statement interface:\n\n    Connect\troot@localhost on rails_test\n    Query\tSET SQL_AUTO_IS_NULL=0\n    Statistics\n    Query\tSHOW FULL FIELDS FROM `foos`\n    Query\tSHOW TABLES LIKE 'foos'\n    Query\tSHOW CREATE TABLE `foos`\n    Query\tSELECT  `foos`.* FROM `foos`  WHERE `foos`.`id` = 1 LIMIT 1\n    Quit", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37cd63a9fd0344804fd6a991a55c283a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7042', 'title': u'Only use prepared statements when bind variables are present'}, {'body': u'fixing a misspelling in the documentation', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9e6166c600855c88ec5167c15850471a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7037', 'title': u'add second t to overwritten'}, {'body': u"These allow you to declare a mapping from generated column names to simplified\ndatabase column types (i.e. those used in migrations). This way scopes with\ncolumns generated in their select lists can also include the information as to what\nform that data takes. This saves the user from having to translate the data\nfrom a sql string wherever it's used.\n\nHere's an example of where I'd use this:\n\n```ruby\n\nclass Topic < ActiveRecord::Base\n  has_many :replies\n  scope :by_most_recently_replied, joins(:replies).group('topics.id')\n      .select('topics.*, MAX(replies_topics.written_on) AS latest_reply_written_on')\n      .order('latest_reply_written_on DESC').cast(latest_reply_written_on: :datetime)\nend\n\n>> topic = Topic.by_most_recently_replied.first\n>> topic.latest_reply_written_on.class\n=> Time\n```\n\nThe cast is applied to postgres columns only when there is no OID info for the column.\n\nWhat do you guys think? Remaining work is to test handling of binary data - not quite sure how to go about that but I don't expect any surprises.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4493ae064e6e2841f376fd1dc12b7ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7035', 'title': u'Add #cast and #cast! to Relation.'}, {'body': u'Fixed conflict from https://github.com/rails/rails/pull/5915 pull request', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/48491f8c7ff8dd92e4efa461842c8119?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7033', 'title': u'Restore "%" ERb/Erubis Trim Mode'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c7f9a7584d1cb70b75fd18ce37312da7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7032', 'title': u'Fix code comment to reflect its intent.'}, {'body': u'Requestng #6874 be back-ported to 3.2.\n\nDiscussion there had two of us (@steveklabnik and myself) thinking this may be a bug fix rather than new behavior.\n\nTest was written in the style of the existing 3.2 rename_table tests. I like the ones in master much more.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6340bd48e9f1248c6344d3008c0a08d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7031', 'title': u'Back-port #6874 to 3.2: psql adapter should rename a default pk sequence during rename_table'}, {'body': u'Dry up reseting the renamed table after each test.\n\nAlso made use of the AR::Base.connection object already\navailable from AR::MigrationTest#connection.\n\nMentioned this test refactoring in #6874', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6340bd48e9f1248c6344d3008c0a08d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7030', 'title': u'Add teardown method to AR::Mig::RenameTableTest'}, {'body': u'* Added the `DateAndTime::Calculations` module that is included in `Time` and `Date`. It houses common calculations to reduce duplicated code.\n* Simplified and cleaned-up the calculation code.\n* Removed duplication in tests by adding a behavior module for shared tests. I also added some missing tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22a9bb6a9ec077e4d666d98052790c05?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7029', 'title': u'Refactored common date and time calculations.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7028', 'title': u'Add indexes to create_join_table method'}, {'body': u'Fixes #6844.\nThis appears to be a jRuby bug, but it is by-passed by 5c51cd0.\n\nNo tests added because `actionpack/test/controller/send_file_test.rb` `send_file_stream` and `send_file_nostream` both fail under jRuby jruby 1.6.7 (ruby-1.9.2-p312) without this patch.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7027', 'title': u'Backport 5c51cd0'}, {'body': u'When a select tag is created for a field with errors, then the inserted\noptions will errantly have a <div class="field_with_errors"> wrapping\nthem.\n\nFixes issue #7017 for master', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/801783653bbf14efccd51a3122ca0ea8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7026', 'title': u'Fixed bug creating invalid HTML in select options'}, {'body': u'When a select tag is created for a field with errors, and that select\ntag has :prompt or :include_blank options, then the inserted first\noption will errantly have a `<div class="field_with_errors">` wrapping\nit.\n\nFixes issue #7017', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/801783653bbf14efccd51a3122ca0ea8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7025', 'title': u'Select options valid html'}, {'body': u'Ability to pass custom exception to `:strict` option of `validates`\nExample:\n\n``` ruby\nvalidates :token, :presence => true, :uniqueness => true, \n  :strict => TokenGenerationError\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7024', 'title': u'AM::Validation#validates: custom exception for :strict option'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/af6983cceac5aef7f452a8d4888e5208?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7023', 'title': u'Update documentation'}, {'body': u'The documentation is not always DRY. But in this case there is too much duplication.\n\nExtracted a peace of documentation from `validates_(presence|inclusion|format|etc)_of` to `validates` with a reference to the new place.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7022', 'title': u'AM::Validations: remove documentation duplicates'}, {'body': u"The documentation on the http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html was outdated about indenting decision. Let's update that.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7015', 'title': u'Update coding convention from master'}, {'body': u"Hi, I believe that `mattr_accessor` can be deprecated in favor of regular `attr_accessor` for modules.\n\nIf the core team agrees with that I'll update this PR by replacing all instances of mattr_accessor, and adding an entry to the changelog.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7014', 'title': u'Deprecate mattr_accessor'}, {'body': u"Hi, I believe that `mattr_accessor` can be deprecated in favor of regular `attr_accessor` for modules.\n\nIf the core team agrees with that I'll update this PR by replacing all instances of mattr_accessor, and adding an entry to the changelog.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7013', 'title': u'Remove mattr accessor'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7011', 'title': u'refactoring of reset_table_name in model_schema'}, {'body': u'Similar to assert_valid_keys method, assert_required_keys method validates if all required_keys that was passed exists in hash keys\n\nFor example\n```ruby\n{ :year => 2012 }.assert_required_keys(:year, :month) # => raises "ArgumentError: Key month is required"\n```\n\nUseful when you need check if required options was passed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e083b9550b21448a93a5ce4f2f5251e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7010', 'title': u'Added assert_required_keys method to hash'}, {'body': u"I like the respond_with syntax and I'd like to see it in generated controllers.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7009', 'title': u'Use respond_with for generated controllers'}, {'body': u"I find myself frequently removing nils and blanks from miscellaneous collections, form params, CSV data, etc. It would be nice if it were just a matter of calling something like...\n\n```ruby\n[1,2,nil, '', [3, '']].clean!\n# => [1,2, [3]]\n```\n\n\n\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/09edaa101c1df80158e7ab4101a2e65a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7008', 'title': u'Remove nil and blank values from arrays and hashes.'}, {'body': u"This version of ```extract!``` doesn't return pairs with nil values, if key is absent in receiver.\n\nAlso, it returns extracted hash of the same type as reciever (for example, on hash with indifferent access it returns hash with indifferent access)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7d116b912a4fc7986b40d5d0d0d811d6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7007', 'title': u'make Hash#extract! more symmetric with Hash#slice'}, {'body': u'This comment from the generator:\n\n```ruby\n    # Expands the lines which load the assets.\n    config.assets.debug = true\n```\n\ncould be more informative, eg.\n\n```ruby\n    # Turn debug mode off to concatenate and preprocess assets\n    config.assets.debug = true\n```\n\nOriginal post: #7005', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/908c9abc72ab86111a153b11cb584f26?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7006', 'title': u'A more informative comment for config.asset.debug'}, {'body': u"Hey guys,\n\nI fixed some broken links in 2.2 release notes, i18n, debugging, security, 2.3 release notes and plugins. \n\nUnfortunately, there are some broken links which I couldn't fix because I haven't found their new url yet.\n\n* httpOnly in security\n* in-place-editor plugin in security\n* deprecation_page in 2.2 release notes\n* rg in 2.3 release notes", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fdedc3252ca9832de241e2de97fc1519?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7004', 'title': u'[Guide] Fix broken links'}, {'body': u'I was looking around I found https://github.com/evan/bleak_house  and replaced it', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fdedc3252ca9832de241e2de97fc1519?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7003', 'title': u"Bleak House link doesn't exist (Guide)"}, {'body': u"Often it's useful to retrieve a random record. This provides\nan alternative to the often used .first or .last when a random record\nis actually what is intended.\n\n    Post.random\n    # => Returns a random Post record or nil", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/08c185f1f22e2722710981cdd73c3b87?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7001', 'title': u'Added a method for retrieving a random record.'}, {'body': u'`stored_attributes` and `serialized_attributes` are changed to class method only.\n\nPlease see #6997 comments.\ncc/ @carlosantoniodasilva @josevalim\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/7000', 'title': u'Use instance_accessor: false instead of instance_writer.'}, {'body': u'AR test is break.\n\nmaybe related to\nhttps://github.com/rails/rails/commit/b76b9e216463f045c8a5ca4b1a6a7994f2baa389\nhttps://github.com/rails/rails/commit/c433adffa23785d3727379902859f57bc3f68b27', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6999', 'title': u'Fix build. We changed the behavior of inspect method.'}, {'body': u"Hello,\n\nI allow myself to add some information on how to setup tools for testing on Fedora and CentOS and I remove the `bundle exec` statements because normally there aren't required now.\n\nI hope it can be useful.\n\nHave a nice day.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d27b53e2eeb6a053552332020628029?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6998', 'title': u'Add few information on Fedora and CentOS and remove "bundle exec" statements'}, {'body': u'I think stored_attributes and serialized_attributes should be class level attributes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6997', 'title': u'Added *instance_writer: false* to stored/serialized attributes.'}, {'body': u"I can't find corresponding test case.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6996', 'title': u'Remove unused code.'}, {'body': u"Last versions of Turn don't monkey patch MiniTest to setup\nthe natural language option. Here is an\n[example](https://github.com/TwP/turn/blob/master/try/test_autorun_minitest.rb#L3).\n\nThis patches the following behaviour:\n\n    $ rake test:units\n    `<top (required)>': undefined method `use_natural_language_case_names='\n    for MiniTest::Unit:Class (NoMethodError)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6995', 'title': u'update test_help to config properly turn natural language option'}, {'body': u"When generating namespaced model inside mountable engine, table_name_prefix was not including engine name:\n\n```\ncd my_engine\nrails g model namespaced/user\n```\nFile: my_engine/app/models/namespaced.rb:\n\n```ruby\nmodule MyEngine\n  module Namespaced\n    def self.table_name_prefix\n      'namespaced_'\n    end\n  end\nend\n```\n\nTable name prefix should include engine name: `my_engine_namespaced_`\n\nI added failing test and fix.\nI noticed that one test failed after this change, which I believe was wrong assumption.\nI also fixed this test according to current changes", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8085138938c34ae1af140bfc91f2fe56?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6993', 'title': u'Engine table name prefix generator fix'}, {'body': u'Please see #6977\nand https://github.com/kennyj/rails/commit/0cb11d26213983eacaecb665818a519bd4ff4c7e .\n\ncc/ @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6992', 'title': u'Allow people to register their own flash types.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6991', 'title': u'update performance test template to use test method'}, {'body': u'We discovered this issue in one of our production apps, because we tried to use `touch` as a custom mime type, which led to the `touch` method of `Object` being executed sometimes, causing vexing errors.\n\nThis is the case for any mime type with the same name as a method on Object, even private ones.\n\nThis is caused by the following execution path:\n\n1. `respond_to :touch` is called in a controller. This adds `:touch` to the list of mimes.\n2. `retrieve_collector_from_mimes` calls `Collector.new(mimes)`\n3. `initialize` calls `mimes.each { |mime| send(mime) }`\n4. `send(:touch)`, instead of triggering `method_missing` on the `AbstractController::Collector`, actually calls `Object.touch`. This can lead to any sort of behavior.\n\nA proposed fix for this issue is attached. It is based on generating the required methods on `Collector` after each mime type is registered, instead of relying on `method_missing`. That way, `send` always hits them instead of going up to `Object`.\n\nCheck out the commit messages for more info.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aea8f7ad3f630aa93ddcd199a833b672?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6990', 'title': u'Fix: Mime type names conflict with Object methods'}, {'body': u'Most common Rails authentication libraries use password_confirmation\nfield on registration which should be excluded by default alongside\nthe password field.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed68d9fac0a927b5ea3d4351f56b5811?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6988', 'title': u'Filter password_confirmation param from being logged.'}, {'body': u'This is a follow up of 07314e64fd62fb8e6165c8c539420160da9437e9\n\ncc @josevalim @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6987', 'title': u'Limit the number of records in Relation#inspect'}, {'body': u'Please see #6975.\nI think we should also merge to 3-2-stable.\n\ncc/ @tenderlove @rafaelfranca\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6986', 'title': u'Fix #6975. Round usec when writing timestamp attribute.'}, {'body': u'Query caching should be disabled for queries asking for a pessimistic lock. Otherwise the lock query may not reach the database, thus breaking the expected functionality.\n\nFixes #867', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d28da594945b3665f6c06bd4e7dc8e10?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6985', 'title': u'Disable query cache for lock queries'}, {'body': u'I often find myself specifiying version number for my apps. And usually do this by creating `version.rb` file inside `config/initializers` directory. I also think that rails should encourage developers to version their apps.\n\nThis patch adds `version.rb` template to rails app generator. Initially file is commented out, so It does not specify any version number unless developer manually enables it.\n\n**edit**\n\nAs @josevalim mentioned, this can also be done using `config/applicatoin.rb` file.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/523b735c515f4f89e7f4f1f31d2add74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6983', 'title': u'Generate config/initializers/version.rb file'}, {'body': u"If the request format is text/html then return the existing failsafe\nresponse. For all other formats return text/plain.\n\nThe original issue points out to return JSON at the appropriate time,\nhowever as @wycats pointed out, it's often better to return text/plain.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed68d9fac0a927b5ea3d4351f56b5811?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6981', 'title': u'Fixes issue #5660: Failsafe exception returns text/html and text/plain.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6980', 'title': u'fixed some white spaces'}, {'body': u'For instance:\n\n    a = [*1..5]\n    a.third = 0  # Now `a` equal [1, 2, 0, 4, 5]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6979', 'title': u'Add array named setters'}, {'body': u'Patches `CollectionAssociation#count` to return 0 without querying\nif the parent record is new. Consider the following code:\n\n    class Account\n      has_many :dossiers\n    end\n\n    class Dossier\n      belongs_to :account\n    end\n\n    a = Account.new\n    a.dossiers.build\n\n    # before patch\n    a.dossiers.count\n    # SELECT COUNT(*) FROM "dossiers" WHERE "dossiers"."account_id" IS NULL\n    # => 0\n\n    #\xa0after\n    a.dosiers.count # fires without sql query\n    # => 0\n\nFixes #1856.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6978', 'title': u'Count returns 0 without querying if parent is not saved'}, {'body': u'"notice" , "error", "warning" are common flash types.\n\nex. notice_stickie, twitter bootstrap.\n\nBut only notice, alert exist on current helper.It\'s highly inconvenient.\n\nsee https://github.com/xdite/bootstrap-helper\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/19e786a2a74377ff6e052d87fd8d1fa8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6977', 'title': u'add common flash types, such as error, warning'}, {'body': u'Hi,\n\nI thought some small documentation for the inheritance_column method would be nice.\nI hope you agree.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0a1802a0afcb2bcf9baa21fd2fb54828?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6976', 'title': u'Add documentation for inheritance_column method'}, {'body': u"It's related to #6050 but for 3.2 branch", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6973', 'title': u'Missed backport for 3.2'}, {'body': u'Missed backport for 3.2 related to #6050', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6972', 'title': u'Cherry picked wrapped keys in log for 3.2'}, {'body': u'Suppose the following query :\n\n    User.where(token: params[:token])\n\nIf `params[:token]` equals "abc", the generated sql query will be the following :\n\n    SELECT * FROM users WHERE token = \'abc\';\n\nHowever, if `params[:token]` equals {}, the generated sql query will be :\n\n    SELECT * FROM users;\n\nThis can actually be a security issue on some applications.\n\nMy patch transforms empty hash conditions to :\n\n    SELECT * FROM users WHERE users.id IS NULL;\n\nThis may not be the best way around this issue. But I\'m willing to improve it depending of the feedback provided here.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6971', 'title': u'fix querying with an empty hash'}, {'body': u'Before this patch, `count` returns an incorrect result when is\nexecuted with multiple columns:\n\n    User.select(\'distinct username, email\').count\n    # => SELECT count(*) FROM "users"\n\n    User.select(\'distinct users.*\').count\n    # => SELECT count(*) FROM "users"\n\nIt proposes to raise an ActiveRecordError instead.\n\n    >> User.select(\'distinct username, email\').count\n    # => ActiveRecord::ActiveRecordError: calculation of multiple columns is not\n    #    supported\n\n    >> User.select(\'distinct users.*\').count\n    # => ActiveRecord::ActiveRecordError: calculation of multiple columns is not\n    #    supported\n\nFixes #5554.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6970', 'title': u'fix calculation for a relation with multiple selected columns'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7d425eb75982fddc0438b8420c93189?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6969', 'title': u'Use ArgumentError vs. RuntimeError, which is more precise'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6968', 'title': u"CSV fixtures aren't supported by default anymore, update generated test_helper.rb to reflect that"}, {'body': u'This patch fixes quoting for ActiveSupport::Duration instances:\n\n    # before\n    >> ActiveRecord::Base.connection.quote 30.minutes\n    => "\'--- 1800\\n...\\n\'"\n\n    # after\n    >> ActiveRecord::Base.connection.quote 30.minutes\n    => "1800"\n\nAlso, adds a test for type casting ActiveSupport::Duration instances.\n\nRelated to #1119.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6967', 'title': u'fix quoting for ActiveSupport::Duration instances'}, {'body': u"test_rollback_when_saving_a_frozen_record in transactions_test.rb failed.\nThe runtime error's message returned 'hash' instead of 'Hash.' This commit \nchanges the test to reflect the message, which makes the test pass.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ec70e3175c0450768e5f920192a83dcb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6965', 'title': u"Change 'Hash' to 'hash'."}, {'body': u'I listed files to use `extend ActiveSupport::Concern` and not to require `active_support/concern`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6964', 'title': u"Added missing require 'active_support/concern' in Active Record"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6961', 'title': u'fix link and add activeresource link in release notes page [ci skip]'}, {'body': u"Hello\n\nI found more useful to see the abilities of the command line tools Rails provides so I decided to add more information on the options we can specify when we generate our models.\n\nI hope it's useful\n\nHave a nice day.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d27b53e2eeb6a053552332020628029?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6959', 'title': u'Add few information on the field types'}, {'body': u'It was not possible to test options request from a controller test_case. \n\nJust added the method options and refactored the head one.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ba1d6472ee5893bdfc012225e9afa263?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6957', 'title': u'Add the options method to action_controller testcase.'}, {'body': u'For instance, `$ rails g migration AddReferencesToProduct user:references supplier:references{polymorphic}` will generate:\n\n    add_reference :products, :user, index: true\n    add_reference :products, :supplier, polymorphic: true, index: true', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6956', 'title': u'Add references statements to migration generator'}, {'body': u'As part of the changes for Rails4 we want to sort out all the cryptography related things we have in place right now.  The first part of this will be to add PBKDF2 for key derivation, then we can switch the session store and cookies.signed to use derived keys instead of using the bare secret.\n\nSimilarly future functionality like encrypted cookies / sessions can utilize derived keys.\n\nSo before merging I want to get some feedback from @meder and @thaidn on the particulars of our implementation.  In particular, what are suitable default values for `iterations` and `key_size`.\n\nThis is a pre-requisite for #3955 #5034 and possibly others.\n\nNote to other committers: Please leave this one for me to merge', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/efa76b164a7de4a5730e4fa397cc4425?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6952', 'title': u'Add ActiveSupport::KeyGenerator as a simple wrapper around PBKDF2'}, {'body': u'Allows to easily set :from, :replay_to, etc. options in\nconfig/application.rb using simple syntax:\n\n    config.action_mailer.default_options = {from:"no-replay@example.org"}\n\nThis was not possible using #default method because\n\n    config.action_mailer.default(from: "no-replay@example.org")\n\nis interpreated as reader method and just returns nil.\nIt would not call ActionMailer::Base.default method. The only\nway of calling this method from config/application.rb was to use\nthe direct syntax which looks ugly in my opinion:\n\n```\n  config.assets.enabled = false\n  config.assets.version = \'1.0\'\n  config.encoding = "utf-8"\n  config.action_mailer.default_url_options= {\n    host:"example.org",\n    protocol:"https"\n  }\n  ActionMailer::Base.default(from: "no-replay@example.org")\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b81cae1fb43808ac23a2188258ca9e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6950', 'title': u'Introduce config.action_mailer.default_from='}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6948', 'title': u'remove test/dummy from gitignore when "plugin new -T"'}, {'body': u'Just fixing some simple hash syntax stuff in the Rails template generators.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/904e37d005ddd0d08bd846b2a01377ee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6947', 'title': u'Update using Ruby 1.9 hash syntax'}, {'body': u"By marshalling and unmarshalling jobs when adding them to the test queue, we can ensure that jobs created during test runs are valid candidates for marshalling, and, thus, that they can be used with queueing backends other than the default simple in-process implementation.\n\nAs Rails::Queueing::Queue (and TestQueue) are not marshallable, this ensures that a queued job does not contain a reference to the queue itself.\n\nThis establishes marshallability and a constrained object graph as a standard expectation for jobs, which is, I think, a reasonable expectation. Where an application explicitly does not care about this, authors are free to configure a different test queue implementation in the application's test environment.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2abf5beb51d5d66211d525a72c5cb39d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6946', 'title': u'Ensure that queued jobs are marshallable'}, {'body': u"Here's a test case and fix for issue #687.\n\nThe problem only exists when the evaluating block expressions.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d337e2cf7c6d03caac6988d83e0e7f66?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6943', 'title': u"Don't HTML escape ActionMailer plaintext templates"}, {'body': u'Similar to transform_keys i have added transform_vaules function\n\nFor example, we need read year and month option from params and set to DateTime#change method, with transform values we can use \n    \n    DateTime.now.change params.symbolize_keys.slice(:year, :month).transform_values(&:to_i)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e083b9550b21448a93a5ce4f2f5251e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6942', 'title': u'Added transform_values function to activesupport hash extension'}, {'body': u'The issue I encountered was that Rails mountable engines didn\'t work\ncorrectly with SASS and the Asset Pipeline.\n\nIn my testcase, I have an engine that specifies some asset gem in its `foo.gemspec`. In the `lib/foo/engine.rb` it requires the gem. Then `application.css.scss` did:\n\n    @import \'file_from_gem\';\n\nThat file would not be able to be found when trying out the engine\nusing the dummy application (`cd test/dummy && rails server`).\n\nIt *would* all work fine when the engine is tried out using a "full" Rails application as generated with `rails new fullapp`. Going over the diff between the generated test dummy and the full app, I found that changing the `Bundler.require` statement in `config/application.rb` fixed the issue, even though I\'m not completely sure why.\n\nTL;DR: The change in this commit fixes that @import statements that load css found in gems work correctly in the generated `test/dummy` application for Rails engines.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dfb445c996da29c8bd3856e900a6576a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6941', 'title': u'Generate a complete Bundler.require(...) statement for plugins'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6940', 'title': u'observer update refactoring'}, {'body': u'with this change root has always one assignment', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6938', 'title': u'small refactoring of as_json method'}, {'body': u'There exists no way to zero out counter caches other than to iterate over every record and call #reset_counters. This commit adds a #zero_counter method that zeros out the supplied counter.\n\n`Usage: Topic.zero_counter(:replies)`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36b068878026b17caaae630ff10940e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6937', 'title': u'Adds zero_counter method for zeroing out counter caches'}, {'body': u'This commit allows a user to do something like:\n```ruby\n    before_validation :do_stuff, :on => [ :create, :update ]\n    after_validation :do_more, :on => [ :create, :update ]\n```\n\nThis addresses issue #6744.\n\nThis also uses the unit tests from mandrews/rails/@0f115f4012779ec8691d2c20ad3be8033861c1b0\n(lightly modified) ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e91cde3a493c5c5828c70b1af0b74099?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6936', 'title': u'Fix collisions with before and after validation callbacks.'}, {'body': u'Fix bug with autosave collection association on new record with a marked\nfor destroy record in autosave collection.\n\nFixes #6918.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6935', 'title': u'Backport #3329 to 3-2-stable'}, {'body': u"If an attribute isn't modified, I think we shouldn't mark the store as changed.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6934', 'title': u"Don't mark the store as changed if an attribute isn't changed."}, {'body': u"It has always bugged me that there is a backtick here and not a single quote\nand that one ArgumentError has single quotes and not the other.\n\nI know it's a silly little change but it seems inconsistent enough to me to fix.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6927', 'title': u'Made ArgumentErrors consistent.'}, {'body': u"I wasn't certain if doing conditional `undef`s in the actual source was OK or if this stuff should be done on the objects in the test suite. If the later please say so and I'll update the PR.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6923', 'title': u'Fixed a few method redefine warnings'}, {'body': u'Add references schema statements.\n\nExamples:\n\n    add_reference :products, :supplier, polymorphic: true, index: true\n    remove_reference :products, :supplier\n\n`add_belongs_to`, `remove_reference` and `remove_references` are\nacceptable. `add_reference` is reversible.\n\nRelies on #6914', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6920', 'title': u'Reference statements'}, {'body': u'...4aaf0ae309bf410e2b786c4e3f6', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6919', 'title': u'making file name and class name consistant'}, {'body': u'This is just a clean merge of #6162 which references #3165 from @isaacsanders.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f7b2fe18bb8705a677051523cf62d30f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6916', 'title': u'Fixed merge: Model.select takes a variable list of arguments'}, {'body': u'and rename column test', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6914', 'title': u'Refactor migration test_helper'}, {'body': u'Default and null options', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6913', 'title': u'Add more options to column_exists? method'}, {'body': u"Sometimes mtime in files can be wrong (e.g. when you change your local time in travel or on other reasons). In this case code reload in rails don't work at all. This is very frustrating.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be74c8f8958cafb02ea319768e98daa4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6911', 'title': u'Bug with FileUpdateChecker with wrong mtime'}, {'body': u'When Rails::Paths::Root\'s []= is used to replace a path it should persist the previous path\'s glob.  Without passing the glob along we get gnarly bugs when trying to wire up things like engines.\n\n/cc @josevalim\n______\nFrom rails/engine.rb docs:\n```\n#   class MyEngine < Rails::Engine\n#     paths["app/controllers"] = "lib/controllers"\n#   end\n```\nThis works great. but if you did the same with something that was configured with a glob, like app/initializers, you get errors like this:\n\n```\nlib/active_support/dependencies.rb:245:in `load\': cannot load such file -- /Users/nick/Desktop/foo_engine/lib/foo_engine/initializers (LoadError)\n```\n\n``` ruby\nmodule FooEngine\n  class Engine < ::Rails::Engine\n    isolate_namespace FooEngine\n\n    config.paths[\'config/initializers\'] = "lib/foo_engine/initializers"\n  end\nend\n\n# Before the initializer override:\n>> FooEngine::Engine.config.paths["config/initializers"].glob\n=> "**/*.rb"\n\n# After the initializer override:\n>> FooEngine::Engine.config.paths["config/initializers"].glob\n=> nil\n```\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7ba6774b23fa1992e2363b50f1bc7808?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6910', 'title': u'Persist glob when replacing a path'}, {'body': u'as discussed, removing AV::Base.prepare.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0fe13386ba69a128e9fadc19ae9d96be?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6908', 'title': u'Av prepare2'}, {'body': u'Since fda24312d3, we have collation support for PostgreSQL.\nThus I extracted collation task implementation to database tasks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6906', 'title': u'Extract collation tasks to database tasks.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6905', 'title': u'Added a changelog entry about fda24312d3.'}, {'body': u'This was requested by @wycats in Rails-core mailing list (https://groups.google.com/forum/#!msg/rubyonrails-core/MhbmIeHBURU/EiXenlob1okJ)\n\n```\nactivemodel is used for ActiveModel::Naming for a few, mostly optional aspects of ActionPack related to automatically converting an ActiveModel compliant object into a key for params and routing. It uses only two methods of ActiveModel (ActiveModel::Naming.route_key and ActiveModel::Naming.param_key). I think we should remove this dependency, as the point of the ActiveModel API refactor in Rails 3 was to allow *any* object to work in AP. Additionally, only a few areas of the code use even the ActiveModel API.\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6904', 'title': u'Remove ActiveModel dependency from ActionPack'}, {'body': u'memcache-client was deprecated in favour of dalli in 2010.\n\nThe purpose of this PR is offer a better upgrade path for current users of  mem_cache_store as was suggested by @jeremy (https://github.com/rails/rails/pull/6296#issuecomment-5754159)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6903', 'title': u'Replace deprecated `memcache-client` gem with `dalli` in ActiveSupport::Cache::MemCacheStore'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6902', 'title': u'fix ActionMailer::Async docs and update to follow coding conventions'}, {'body': u'Missing dependency as described in #6898', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fbd4d6899a4a1c5e36b4011d4dad30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6900', 'title': u'Require URI in ConnectionSpecification'}, {'body': u'Since PostgreSQL 8.4, Collate and Ctype options are supported when creating database.\n\nPlease see also http://www.postgresql.jp/document/9.1/html/sql-createdatabase.html.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6895', 'title': u'Support collate for postgresql'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8d1c64e90229ca99fbb1002c1b0dcc8a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6894', 'title': u'fixing typo in active record from method'}, {'body': u"Some cleanup on multiparameter attributes assignment, it's not an easy code to follow and maintain. I've basically cleaned up some code, and moved the *instantiation* code to a `MultiparameterAttribute` class to avoid passing arguments here and there.\n\nI'm opening as a pull request now to ask for some feedback/review, and to allow inline comments if necessary. In case it's ok I plan to merge and continue the work later.\n\nAny feedback is welcome, thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6893', 'title': u'Multiparameter attributes refactoring'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6890', 'title': u'Skip test_setting_time_attribute for Oracle database'}, {'body': u'Add an optional parameter to blank? method, which is returned when self is blank.\n\nA little sugar to be more DRY:\n\n    a = b["foo"]["bar"]["stuff"].blank? ? b["foo"]["stuff"] : b["foo"]["bar"]["stuff"]\n\nbecomes\n\n    a = b["foo"]["bar"]["stuff"].blank? b["foo"]["stuff"]\n\nWe could use try() also, but I don\'t know which is the best. Maybe both would be good ?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d23ec6b59ff23f7ffb9e99d0ec5b5a2d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6888', 'title': u'Add an optional parameter to blank? method'}, {'body': u'See https://gist.github.com/3007749 for justification', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6886', 'title': u'Speed up Hash#transform_keys using Hash#each_key'}, {'body': u"SQLite doesn't support `time` columns, a warning should be issued to keep people out of trouble.\n\nRelates to #6344.\n\nFeedback is, as always, appreciated.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6883', 'title': u'Add warnings for SQLite time column.'}, {'body': u"sorry, I had some mistakes.\nI think they are individual commits, but if we should squash these, I'll update.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6880', 'title': u'Fix wrong commits. I had mistakes.'}, {'body': u"This pull request addresses a test_basic_model test error with Oracle enhanced adapter which ids start from 1000 as a default.\n\nThis fix has been tested with sqlite3, mysql, mysql2 and postgresql adapters.\n\n```ruby\n$ cd activerecord\n$ ARCONN=oracle ruby -Itest test/cases/inclusion_test.rb -n test_basic_model\nUsing oracle\nRun options: -n test_basic_model --seed 53307\n\n# Running tests:\n\nE\n\nFinished tests in 0.110588s, 9.0426 tests/s, 0.0000 assertions/s.\n\n  1) Error:\ntest_basic_model(BasicInclusionModelTest):\nActiveRecord::RecordNotFound: Couldn't find Teapot with id=1\n    /home/yahonda/git/rails/activerecord/lib/active_record/relation/finder_methods.rb:279:in `find_one'\n    /home/yahonda/git/rails/activerecord/lib/active_record/relation/finder_methods.rb:260:in `find_with_ids'\n    /home/yahonda/git/rails/activerecord/lib/active_record/relation/finder_methods.rb:38:in `find'\n    /home/yahonda/.rvm/gems/ruby-1.9.3-p194@railsmaster/bundler/gems/active_record_deprecated_finders-c5418c5119b3/lib/active_record_deprecated_finders/relation.rb:123:in `find'\n    /home/yahonda/git/rails/activerecord/lib/active_record/querying.rb:6:in `find'\n    test/cases/inclusion_test.rb:7:in `test_basic_model'\n    /home/yahonda/.rvm/gems/ruby-1.9.3-p194@railsmaster/gems/mocha-0.11.4/lib/mocha/integration/mini_test/version_230_to_262.rb:28:in `run'\n    /home/yahonda/git/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:37:in `block in run'\n    /home/yahonda/git/rails/activesupport/lib/active_support/callbacks.rb:348:in `_run__3118453750921688770__setup__callbacks'\n    /home/yahonda/git/rails/activesupport/lib/active_support/callbacks.rb:75:in `run_callbacks'\n    /home/yahonda/git/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:36:in `run'\n\n1 tests, 0 assertions, 0 failures, 1 errors, 0 skips\n$\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6879', 'title': u'Address test_basic_model test error with Oracle enhanced adapter'}, {'body': u'fix the bug limit of ENUM returns 0.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52c8b0a24dfaec053feba8ba4125ac5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6878', 'title': u'fix bug in limit of enum columns of mysql'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52c8b0a24dfaec053feba8ba4125ac5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6877', 'title': u'Fix bug in limit of enum columns of mysql'}, {'body': u'The previous approach lead to some hard to understand test failures in jRuby.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d813aed3bb5101c436cfd9a428c8ad1f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6876', 'title': u'refactored html_escape method to be safer and better self documenting'}, {'body': u'According to documentation you should be able to pass something like this as a collection:\n```\n[["Dollar", "$", {:class => "bold"}], ["Kroner", "DKK", {:onclick => "alert(\'HI\');"}]]\n```\nbut when you do it from `collection_select` the `:value_method` by default is `:last`.\n\nThis is the first commit from [#hermosillorb](http://hermosillorb.com) group, "\xa1Hola amigos!".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a523eea5c127daa5b5e3f9e7499d16b6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6875', 'title': u'Collection select not accepting hash at the end'}, {'body': u'Does it make sense to rename the default primary key sequence when a table is renamed?\n\nAs it is, if I ```rename_table :foo, :bar```, I end up with a table named "bar" whose id column is incremented by a sequence named "foo_id_seq". The names being out of sync complicates things when multiple DB users are used in production (e.g. one user for migrations and one user for app connections) and permissions need to be applied to tables and their associated sequences.\n\nAttached is proposed crazy sauce which renames the primary key sequence if its name matches the default PK sequence created by the adapter.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6340bd48e9f1248c6344d3008c0a08d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6874', 'title': u'Rename default sequence when table is renamed? [AR:postgres]'}, {'body': u'The current implementation on Rails is not capable of handling an object with time only, it only allows you to create an object with both time and date, which isn\'t really nice as you can create a time only column in almost all database systems.\n\nThis fix adds support for time only object creation (if the column is created as :time) by using Ruby\'s Time object. The date fields will default to "January 1, 1970" since Ruby doesn\'t have an object for time only. Implementation also includes specs showing what\'s the correct behavior and also a failure if you try to create a time only object of a column of type datetime.\n\nThis pull request fixes issue #6825.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a91bd6cef23eb3516245a092e196c4da?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6873', 'title': u'Fixes #6825, adds tests covering cases and error possibilities'}, {'body': u'...ch test starts with a clean slate.\n\nFixes #6867.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6870', 'title': u'Setup each test with default ActiveRecord timezone settings to ensure ea...'}, {'body': u'Before this gets rejected outright I would like to have a conversation.\n\nI submit that the harm of hiding the ActiveRelation object outweighs any benefit gained in the Rails console with having the object inspect `#to_a`\n\nI know others feel the same way, I believe it is not worth the hassle of trying to dig into the Relation object to find out what is going on and just have it return that relation.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6869', 'title': u'Remove ActiveRelation#inspect'}, {'body': u'#### WHAT\n\nAvoid creating many throwaway `String` and `Regexp` objects while using ActiveSupport\'s inflections.\n\n#### WHY\n\nBoth the `pluralize` and `singularize` methods are widely used in Rails (`AssetTagHelper` is a good example). They both call `apply_inflections`, which first tries to match against every `uncountables`, cycling thru and creating a new `Regexp` and `String` for each `uncountable`.  \n\n#### HOW\n\nThis patch seemed to be the simplest solution to caching `uncountable` regexp\'s that I could write. Here is the memprof and benchmark before the patch (w/1.8.7 REE):\n\n```\nMemprof.track { 1000.times { "hey".pluralize } }\n   9000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:312:String\n   9000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:312:Regexp\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:315:__unknown__\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:315:String\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:315:MatchData\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:312:__node__\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:310:String\n   1000 (irb):1:String\n      1 (irb):1:__varmap__\n\nBenchmark.ms { 1000.times { "hey".pluralize } }\n => 100.382089614868 \n```\n\nAnd after the patch:\n\n```\nMemprof.track { 1000.times { "hey".pluralize } }\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:318:__unknown__\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:318:String\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:318:MatchData\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:315:__node__\n   1000 /.../activesupport-3.2.6/lib/active_support/inflector/methods.rb:313:String\n   1000 (irb):3:String\n      1 (irb):3:__varmap__\n\nBenchmark.ms { 1000.times { "hey".pluralize } }\n => 51.4700412750244 \n```\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f86911c918d9c3eb1644189a50d74ccb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6864', 'title': u'ActiveSupport::Inflector optimization: minimize objects created'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6863', 'title': u'Guide update for Async ActionMailer'}, {'body': u'Deprecate usage of filter object with #before and #after\nmethods as around callback.\n\nThere is some code monkey patches objects passed to `set_callback` method. This should never happen.\nThe only one usage of this is found in `ActionController::Caching::Sweeper` which is easy to fix.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6859', 'title': u'AS::Callbacks: deprecate monkey patch code'}, {'body': u'the method has gone in this commit: 119e9e2dafb0cdc5b85613b730333679aef534af', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6858', 'title': u':update_details method no more exists on @lookup_context'}, {'body': u"If you selectively require core_exts (e.g., `require 'active_support/core_ext/string'`), it is possible for\n`active_support/core_ext/time/calculations` to be required when `ActiveSupport::TimeWithZone` is not available. If this happens, the next call to `Time.=== will` fail with a `NameError`. This pull fixes this issue.\n\nThen nature of this problem is not amenable to unit testing, but I can provide a [script][gist] which demonstrates the problem.\n\nThis bug was introduced in Rails 3.2.4 and is present in 3.2.5, 3.2.6, 3-2-stable, and master.\n\n[gist]: https://gist.github.com/2990831/", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/292ea489740972fd2437b28bbfbccac8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6857', 'title': u'Missing require breaks Time.=== when selectively loading ActiveSupport core_exts in 3.2.4+'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5187030ec0cd68b5026199e9e4054dda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6856', 'title': u'Add polymorphic option to model generator'}, {'body': u"sorry, tiny commits.\n\nI've seen around the database task a few day.\nI noticed this had some no good codes (consistency, global method ...and more).\nI've tried to fix these problem before trying #5547, #6648 and some improvements.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6855', 'title': u'Refactor and improve database tasks.'}, {'body': u'Within an engine mounted in a dynamic scope, I\'m trying to make an link to the same action but another scope (ie. changing the dynamic part of the scope) and it doesn\'t work.\n\nI need this to build a link to the current page in another locale. The scope defines the locale, and the current page is handled by the engine.\n\nI wrote a failing test to demonstrate the current behavior, which doesn\'t work. Rails generates an URL with the new scope in the query string, and the old scope in the path.\n\nIs there another way to change the dynamic scope inside the engine ?\nOr is this a bug that should be fixed ?\n\nThe output is:\n"/more-awesomeness/blog/link_to_another_scope" expected but was\n"/some-awesomeness/blog/link_to_another_scope?omg=more-awesomeness"\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/352f3b19dfbfc17e7f7498dc2f658cac?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6854', 'title': u'Changing scope in a mounted engine'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6853', 'title': u'add :nodoc: to internal implementations [ci skip]'}, {'body': u'The line number for the reader method is off by one due to the local variable `line` being reassigned to the writer\'s line.\n\nThis commit would provide correct line numbers for backtraces and method introspection (for example, `method(:reader).source_location`).\n\nI apologize in advance for the brevity of this commit -- I am submitting this from a phone using GitHub\'s "Edit this file" feature.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c69aac6da04a0bd37d2d4f5e3aa678e3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6847', 'title': u'correct line numbers for reader and writer methods'}, {'body': u"Execute_grouped_calculation is one of those places where\nActiveRecord forgets that it has ARel underpinnings, and\nassumes that the values provided to group_values are\nstrings. This artificially hobbles otherwise functional\ncode. This patch stops assuming that incoming values\nrespond to to_sym, stops using string interpolation for\ntable aliases on objects that support aliasing, and stops\nunnecessarily joining group_values on the relation.\n\nAdditionally, it calls to_sql, if available, on objects\nsent to column_alias_for, in order to get a more reasonable\nalias string than a non-string's default to_str method.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6842', 'title': u'Stop assuming strings for grouped calculations'}, {'body': u"Execute_grouped_calculation is one of those places where\nActiveRecord forgets that it has ARel underpinnings, and\nassumes that the values provided to group_values are\nstrings. This artificially hobbles otherwise functional\ncode. This patch stops assuming that incoming values\nrespond to to_sym, stops using string interpolation for\ntable aliases on objects that support aliasing, and stops\nunnecessarily joining group_values on the relation.\n\nAdditionally, it calls `to_sql`, if available, on objects\nsent to column_alias_for, in order to get a more reasonable\nalias string than a non-string's default to_str method.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6841', 'title': u'Stop assuming strings for grouped calculations'}, {'body': u'Adds support for ActionMailer to push messages to the Rails Queueing system and deliver async', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6839', 'title': u'Async actionmailer'}, {'body': u"If we want to add a database tasks (e.g. OracleDatabaseTasks) by external gems, according to the current implementation, we can't do it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6838', 'title': u'Added a feature to add a database task. e.g. OracleDatabaseTasks'}, {'body': u'I think the tasks tests should be moved to under the tasks dir.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6837', 'title': u'\u3010Active Record\u3011 Move tasks(rake) tests to under the tasks dir.'}, {'body': u'I prefer generated ruby code with ruby 1.9 hash syntax.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/13c60e2a5806406b537daa542d3495da?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6836', 'title': u'Ruby 1.9 hash syntax for generated code'}, {'body': u'The current implementation on Rails is not capable of handling an object with **time only**, it only allows you to create an object with both time **and** date, which isn\'t really nice as you can create a **time only** column in almost all database systems.\n\nThis fix adds support for time only object creation (if the column is created as **:time**) by using Ruby\'s Time object. The date fields will default to "January 1, 1970" since Ruby doesn\'t have an object for time only. Implementation also includes specs showing what\'s the correct behavior and also a failure if you try to create a time only object of a column of type datetime.\n\nThis pull request fixes issue #6825.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a91bd6cef23eb3516245a092e196c4da?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6835', 'title': u'Fixes #6825, adds tests covering cases and error possibilities'}, {'body': u'By some reasons, if someone will put these options in javascript_include_tag or stylesheet_link_tag it will\ncause strange errors (when sprockets is enable for app). For me it took about work day to detect what exactly happened.\n\nYou can easy reproduce the error: just create new rails 3.2 app, generate simple controller with one action, specify root action in routes and add :cache => true, :cache => "foo" or :concat => "foo" to the end of any javascript_include_tag or stylesheet_link_tag helpers.\n\nI am in the middle of migrating 2.3.x app to 3.2.x for my current project, so I have a lot of legacy :cache options. Unfortunately current exception is too hard to undersand situation for developers, without spending time to debugging Rails. \n\nI suggest to ignore :cache and :concat options for js and css sprockets tag helpers (like I have done). Also I think that sprockets may detect these options and say something (for example it can show warning). \n\nIf something wrong in my commit let me know and I will fix it asap. Hope it will help someone.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5cfb39bb33ec98fae943b5bfcb90b389?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6834', 'title': u'Sprockets should ignore :cache and :concat options'}, {'body': u'Currently specifying an environment name when DATABASE_URL is present\nprevents a sucessful connection. Passing a string such as "production"\ncauses DATABASE_URL to be ignored because\nActiveRecord::Base.establish_connection only uses it if no name is\npassed, but database.yml isn\'t loaded by the initializer if DATABASE_URL\nis defined.\n\nThis change causes the resolver to use DATABASE_URL instead of failing\non an unusable environment name without breaking the ability to\npass a valid url in a string.\n\nAmong other things, this fixes rake db:fixtures:load on Heroku Cedar.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/387ec488a7ef3282e7800de41a799d59?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6833', 'title': u"Ensure DATABASE_URL is not ignored when database.yml isn't loaded"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6832', 'title': u'add :nodoc: to internal implementations [ci skip]'}, {'body': u'ActiveRecord model constructors accept a hash of parameters which are used to invoke the corresponding attribute writer methods. Attribute writers are privately invoked with #send, but they are first screened with #respond_to? to avoid invoking private methods. This precludes the common practice of encapsulating members by allowing them to be initialized at construction but not reassigned after construction.\n\nThis patch enables the constructor to invoke private attribute writers by accepting an additional option (:with_private) along with the options which are used to control mass-assignment protection.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d856d2ac977eebd19b55bc4cbd7cf9a9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6831', 'title': u'Support initialization of private attributes'}, {'body': u"Warn users in cases where they have named a scope the same as an Array instance method. Delegation gives precedence to Arrays, so it could confuse the developer as to why their scope is never evaluated.\n\nThe following example illustrates this problem:\n\n```ruby\nclass Foo < ActiveRecord::Base\n  def self.reverse\n    order(:id => 'desc')\n  end\nend\n```\n\nWhen we call:\n\n```ruby\nFoo.scoped.reverse\n```\n\nThe scope is evaluated to an array and reverse is called on that array. The class method on Foo is never evaluated.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/75a9dbc77613323e74f66e8ed848eafd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6830', 'title': u'Warn on name collisions between Array instance methods and base class methods'}, {'body': u'The keys of the error messages are actually attribute names. It makes\nthe documentation easier to understand:\n\n    # Returns +true+ if the error messages include an error for the given\n    # +attribute+, +false+ otherwise.\n    #\n    #   person.errors.messages # => { :name => ["can not be nil"] }\n    #   person.errors.include?(:name) # => true\n    #   person.errors.include?(:age)  # => false\n    def include?(attribute)\n      (v = messages[attribute]) && v.any?\n    end', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6829', 'title': u'change param name to improve documentation'}, {'body': u'This allows us to mark the parent object as invalid if all associated objects\nin a presence validated association are marked for destruction.\n\nSee: #6812', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d541b1a02e460eb197c163092fb60781?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6827', 'title': u'Validates_presence_of associated object marked for destruction'}, {'body': u'Move all helper and routes logic into the AbstractController instead of letting the view decide which modules to include.\n\nThis is another step in decoupling view and controller.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0fe13386ba69a128e9fadc19ae9d96be?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6826', 'title': u'Simplify AV.prepare'}, {'body': u"I find myself looking at the ActiveSupport [Hash#extract! documentation](http://api.rubyonrails.org/classes/Hash.html#method-i-extract-21) over and over, wishing it didn't modify the original hash.  Of course, I simply forget that [#slice](http://api.rubyonrails.org/classes/Hash.html#method-i-slice) is available, but I figure I'm not the only one missing this.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e6ceef905d14ade228ea22c445d57bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6824', 'title': u'alias Hash#slice as #extract'}, {'body': u"Previous calculation was simple, but not correct when leap seconds get\ninvolved. Implemented 'Seconds Since the Epoch' according to 'Single\nUnix Specification'.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5009f255a6f0c386d40d6143948df8e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6823', 'title': u'Fix calculation of seconds since epoch'}, {'body': u'With this pr, the documentation of ActiveModel::AttributeMethods is covered :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6822', 'title': u'add :nodoc: to ActiveModel::AttributeMethods#attribute_method?'}, {'body': u"This patch addresses the difficulty of retrieving datetime fields. By default, the database holds a higher precision than the time as a String. Currently there isn't a sensible way to specify a precision on timestamp fields. \n\nHowever, you are able to get postgres to accept a precision by sending along a :limit option from ActiveRecord. This commit is an attempt to swap that responsibility with :precision, as I think it was intended.\n\nThis issue is discussed at length at the following links:\n- [#3519](https://github.com/rails/rails/issues/3519)\n- [#3520](https://github.com/rails/rails/issues/3520)\n\nAlso, kudos to @mattscilipoti for pointing it out in the above issues.\n\nThanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f2d06be136bf5fb34da25f62afefae7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6821', 'title': u'Allow precision option for postgresql datetimes'}, {'body': u'This patch is to remove a default from ActiveSupport\'s inflections. The\ncurrent default of words ending in "fe" to be pluralized as "ves" is\nstrange in that this is a grammatical exception rather than the rule.\nThe conversion of "f" to "ve" in pluralization is not as common as the\ncase of simply adding the "s" and, when the exception does occur, should\nwe really care? I believe it can end up causing more confusion than anything\nelse. Aside from words like "half" (which was covered in the same rule\nbut with a different regex case), or the words "life" (and perhaps "knife" for Chef\nusers), I am unsure as to why people would need to pluralize these words. I\nwould be open to discussion on what other words should be added to the list\nof irregulars, but when is the last time you saw `has_many :wives`?\n\nSigned-off-by: David Celis <david@davidcelis.com>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b0144a16ba125a94460c5d45f07efb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6820', 'title': u'Remove the default "f" => "ve" plural inflection.'}, {'body': u'... [ci skip]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6818', 'title': u'add :nodoc: to AM::AttributeMethods#instance_method_already_implemented?...'}, {'body': u'We have `attribute_method_prefix`, `attribute_method_suffix` and `attribute_method_affix`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6815', 'title': u'add :nodoc: to AM::AttributeMethods::AttributeMethodMatcher'}, {'body': u'- Correctly shows a noun article e.g. \'a\' or \'an\'.\n\n    `"apple".articleize    #=> "an apple"`\n    `"daffodil".articleize #=> "a daffodil"`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d759f33a47c4ee95df9276a625664a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6813', 'title': u"Added inflector method 'articleize'"}, {'body': u'1. Change in test name as already defined.\n2. ambiguous first argument; put parentheses or \neven spaces', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6808', 'title': u'Removed warnings.'}, {'body': u'This is a follow up to #4719. It appears that singularize and pluralize are supposed to be idempotent - i.e. when you call singularize or pluralize multiple times on the same string, you should get the same result. (At least for the "officially supported" cases that the stock inflector is designed to handle.) #4719 added the missing tests for regular cases, and this commit added the missing tests for the irregularities.\n\nWhile I\'m at that, I also synced up the irregularity test cases with the current set of irregularity cases that we ship out-of-the-box.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22bb3e56828870ee9a0dd93aeadbe04a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6806', 'title': u'Inflector: Added missing tests cases to ensure idempotency of singularize and pluralize'}, {'body': u"To test uploading a file without using fixture_file_upload, a posted ActionDispatch::Http::UploadedFile should not be paramified (just like Rack::Test::UploadedFile).\n(Rack::Test::UploadedFile and ActionDispatch::Http::UploadedFile don't share the same API, tempfile is not \naccessible on Rack::Test::UploadedFile as discussed in https://github.com/brynary/rack-test/issues/30)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5a8c34e4e2dd183810ea5e047cc821e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6805', 'title': u"Don't paramify ActionDispatch::Http::UploadedFile in tests"}, {'body': u'delete *column* because is unused by the method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6804', 'title': u'changed the firm of changes_from_zero_to_string?'}, {'body': u'I wanted to know if a string was plural or singular, so I added string extensions.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e5652f125c081a164dc8cd49ac125bd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6802', 'title': u'plural? and singular? methods for String'}, {'body': u'Currently, ActiveSupport\'s ```class_attribute``` method allows for specification of class-level attributes that also propagate down to instances of a given class. However, when there is no value explicitly defined, methods defined by ```class_attribute``` return nil. In most circumstances this is okay, however, if you\'re implementing a pseudo-abstract class, it is probably better to raise a NotImplementedError than return nil if this method gets called on the abstract class.<br/><br/>Current behavior is as follows:<br/><br/>```ruby<br/>class Foo<br/>  class_attribute :bar<br/>end<br/><br/>class Baz < Foo<br/>end<br/><br/>class Qux < Foo<br/>  self.bar = \'quux\'<br/>end<br/><br/>puts Foo.bar.inspect #=> nil<br/>puts Baz.bar.inspect #=> nil<br/>puts Qux.bar.inspect #=> "quux"<br/>puts Foo.new.bar.inspect #=> nil<br/>puts Baz.new.bar.inspect #=> nil<br/>puts Qux.new.bar.inspect #=> "quux"<br/>```<br/><br/>I propose that the following behavior be supported:<br/><br/>```ruby<br/>class Foo<br/>  class_attribute :bar, :default => lambda do |attribute|<br/>    raise NotImplementedError.new("#{attribute} is undefined")<br/>  end<br/>end<br/><br/>class Baz < Foo<br/>end<br/><br/>class Qux < Foo<br/>  self.bar = \'quux\'<br/>end<br/><br/>puts Foo.bar.inspect # raises error<br/>puts Baz.bar.inspect # raises error<br/>puts Qux.bar.inspect #=> "quux"<br/>puts Foo.new.bar.inspect #=> raises error<br/>puts Baz.new.bar.inspect #=> raises error<br/>puts Qux.new.bar.inspect #=> "quux"<br/>```<br/><br/>By allowing ```class_attribute``` to take a default lambda (and perhaps a raw value), classes can cleanly implement abstract values in a generic fashion. Of course, if ```:default``` isn\'t provided, the behavior would not change; thus, backward compatibility would be ensured.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/760f05cfef0021cfd2b3dd969579c4c2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4933', 'title': u'Fallback behavior for class_attribute'}, {'body': u"Currently, if we send an email and use the implicit template with it but not template exists, nothing fails.\nI don't think that's the behavior usually intended.\n\nThis will raise an `ActionView::MissingTemplate` in that case.\nIt already occurs like this when rendering an explicit template.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6801', 'title': u'Mailer with no implicit template'}, {'body': u"previously dynamic finders only worked in combination with the actual column name and not it's alias defined with #alias_attribute", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d6fcf10b07508fa819e43598a9364016?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6800', 'title': u'Dynamic finders for aliased attributes'}, {'body': u"Sorry, it's tiny refactor again.\n\nThe codes are repeated, and I love DRY.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6799', 'title': u"Refactor testcase codes. It's repeated."}, {'body': u'\uff0b tiny refactor (remove duplicated codes)\n\nrelated to #6782', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6798', 'title': u'Refactor db:structure:load task.'}, {'body': u'Rails does not check the length of the value of normal and permanent cookies, just signed cookies. This pull request changes this, so all cookies are checked.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ebecfa2fcf3adda56063f996b79ca6b6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6796', 'title': u'Check cookie overflow'}, {'body': u"Rails doesn't check the size of normal and permanent cookies. Only the size of signed cookies is checked. This pull request changes that, so every cookie size is checked as documented.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ebecfa2fcf3adda56063f996b79ca6b6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6795', 'title': u'Check cookie overflow'}, {'body': u'Corrects the AP test\u3002/cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e8f6a5f8b9e4096de0e583b64ea2a9fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6789', 'title': u'Correct the AP test\u3002'}, {'body': u'...cludeTag', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6787', 'title': u'add :nodoc: to AV StylesheetIncludeTag, JavascriptIncludeTag and AssetIn...'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6785', 'title': u"Rename testcase name. It's wrong in the context."}, {'body': u'A very small change that removes what I consider a duplicate test.\n\nComments welcome.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b09d62315dbafc471538dd71d404ad48?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6784', 'title': u'Remove extra test case.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6783', 'title': u'Rename MySQLTestPurge to MySQLPurgeTest for consistency.'}, {'body': u"I'm also inspired by #6761.  I've moved the logic for db:structure:dump into the task classes.\n\nFYI: I'm trying to solve #5547, and #6648 was my first PR for this problem.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6782', 'title': u'Refactor db:structure:dump task.'}, {'body': u'A bare-bones proposal to support a PUT request on resources:\n\nPUT /photos\n\nThis would result in a call to PhotosController#map. The purpose of this is to create a new convention for bulk updates on collections. The obvious corresponding database action would be update_all.\n\nThis implementation is by no means complete and only meant as a starting point for discussion. \nSuggestions and comments are welcome.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/150b7dfb3c10c343999c41183f3253cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6780', 'title': u'Map (PUT) action for resourceful routes'}, {'body': u"In the spirit of #6761 I've moved the logic for db:charset into the task classes.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/46fd60ea4dde74f3d46fcfd27ed700bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6779', 'title': u'Refactor db:charset task'}, {'body': u"This is cherry-picked test for the master branch that I've done here #6649", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6777', 'title': u"Added test for case when view doesn't have logger method when using Acti..."}, {'body': u'### Scenario\n\nA developer added a before_filter that did: `response.headers[\'Cache-Control\'] = \'no-transform\'` in order to avoid mobile carriers from making invalid modifications to content.\n\n### Issues\n\nexpires_* calls were no longer applied (see commit details), and as such, Rack::Cache begun caching all mobile renders.\n\n### Arguments\n\nIt may be considered that setting only "no-transform" should result in the above behavior. I would stand by this view point, to a large extent, but many developers find these areas confusing. During investigating the root causes, additional bugs or at least vague semantics were found that were also addressed. It can be argued that the commit aligns a little better with the documentation, and applies some notion of POLS, whereby Rails calls / data structures are authoritative. An alternative POLS for many developers may be that the "last modification to Cache-Control should win", in which case this is still a violation if the header is modified after expires_in in a conflicting way.\n\n### Extended commit message:\n\nThere are several aspects to this commit, that don\'t well fit into broken down\ncommits, so they are detailed here:\n\n * When a user uses response.headers[\'Cache-Control\'] = some_value, then the\n   documented convention in ConditionalGet is not adhered to, in this case,\n   response.cache_control is ignored due to `return if\n   self[CACHE_CONTROL].present?`\n * When a middleware sets cache-control headers that would clobber, they\'re\n   converted to symbols directly, without underscores. This would lead to bugs.\n * Items that would live in :extras if set through expires_in, are placed\n   directly in the @cache_control hash, and not respected in many cases\n   (somewhat adhering to the aforementioned documentation).\n * Although quite useless, any directive named \'extras\' would be ignored.\n\nThe general convention applied is that `expires_*` take precedence, but no longer\noverwrite everything and `expires_*` are ALWAYS applied, even if the header is\nset.\n\nI am still unhappy about the contents of this commit, and the code in general.\nIdeally it should be refactored to no longer use :extras. I\'d likely recommend\nexpanding @cache_control into a class, and giving it the power to handle the\nmerge in a more efficient fashion. Such a commit would be a larger change that\ncould have additional semantic changes for other libraries unless they utilize\nexpires_in in very standard ways.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b19b02a49b433c9e2e6e6c43785d2bfb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6776', 'title': u'Ensure that cache-control headers are merged'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e8f6a5f8b9e4096de0e583b64ea2a9fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6775', 'title': u'make events not use date and time to determine parent_of. fixes #5932'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6772', 'title': u' ORA-02289: sequence does not exist for `SELECT "BLACK_JOKES_SEQ".NEXTVAL FROM dual`'}, {'body': u"Example: let's say that we need to apply two migration on production. First one delete unused column A. Second one does complicated data migration that failed during migration. In this case source code will be rollback to previous working version, but only the last migration got reverted. Production will run previous working version of source code that expects column A to exists, but it is not.\n\nThe thing that ActiveRecord::Migrator rollbacks only last applied migration will create inconsistency between data and code. It could be sensitive in some cases in production mode.\n\nThis patch applies all migrations under same ddl transaction if it is supported by database, so that Database state and source code are always consistent.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6768', 'title': u'AR::Migration#migrate: apply all migration under same DDL transaction'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6767', 'title': u'Fix build: fix invalid syntax and sqlite rake failing tests'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6766', 'title': u'add :nodoc: to AR::Tasks and update to follow the coding conventions'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6765', 'title': u'Fix build: check if sqlite3 file exists before remove'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6764', 'title': u'bump AS deprecation_horizon to 4.0'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6762', 'title': u'bump AS deprecation_horizon to 4.1'}, {'body': u"Right now, this is a work in progress. I'm pushing it here for a few reasons:\n\n* Feedback before I get too carried away is welcome.\n* Everyone gets a little more visibility of how (I think) rake tasks should be approached.\n* I'm short of time, so others may wish to contribute (and if so, get in touch).\n\nBut as to what's happening in these commits, essentially:\n\n* I want to get every single rake task that has a db prefix down to a single line of code\n* All the logic ends up in classes and objects.\n* Easier to read, easier to maintain, easier to test, easier to reuse.\n* Currently, I've done this for db:create, db:drop, db:create:all and db:drop:all.\n* My plan is for adapter-specific tasks to end up in DatabaseTasks, but then there'll also be MigrationTasks, SchemaTasks, FixturesTasks, TestTasks, and maybe one or two others.\n\nAnd finally, my questions for right now:\n\n* Does anyone want to help?\n* Core committers, would something like this get accepted, or am I wasting my time?\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/29f82ebe1801087f04de6aaae92e19ea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6761', 'title': u'Get logic out of db rake tasks, and into classes and objects'}, {'body': u"bump tzinfo gem.\n\n[Updated] This PR is going to bump only tzinfo gem.\n\nFYI: I tried to bump journey too, but I couldn't do it. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6760', 'title': u'Bump tzinfo gem.'}, {'body': u'Non-`StandardError` `Exception`s are generally not meant to be caught without re-raising the exception, because they are often unrecoverable errors. I found some instances of these exceptions being unnecessarily caught.\n\nFor reference, here are a list of non-`StandardError` exceptions from a fresh irb session.\n\n```ruby\nObjectSpace.each_object(Class) do |c|\n  c < Exception && !(c < StandardError) && puts("#{c.name} < #{c.superclass}")\nend\n```\n```ruby\nGem::LoadError < LoadError\nSystemStackError < Exception\nNoMemoryError < Exception\nSecurityError < Exception\nNotImplementedError < ScriptError\nLoadError < ScriptError\nSyntaxError < ScriptError\nScriptError < Exception\nStandardError < Exception\nInterrupt < SignalException\nSignalException < Exception\nfatal < Exception\nSystemExit < Exception\nGem::SystemExitException < SystemExit\nIRB::Abort < Exception\n```\n\nIf one of the above exceptions does need to be caught, it would make more sense to specify a more specific exception class to catch (e.g. `ScriptError` when dynamically loading scripts).  However, the lines I changed didn\'t need to catch serious errors like those listed above.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d6af3d9442783aa00ef1e5d7772f997d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6759', 'title': u'Avoid unnecessary catching of Exception instead of StandardError.'}, {'body': u'Hi folks! Currently I have one engine with some migrations.\n\nWhen I run `rake db:schema:load` this task does not assign `ActiveRecord::Migrator.migrations_paths` with the path to migrations in the engine.\n\nThis PR is about to fix this issue. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f31eb518bd835c8e89ec545b8d168644?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6758', 'title': u'Fixing load config in some tasks'}, {'body': u'I\'m not sure if you want rake at 0.8 or 0.9, but I\'ve found "~> 0.8" to be sufficient for everything I\'m doing with it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16c4b19d8670085a428787f8b2438223?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6757', 'title': u'Fixed gem deps'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6756', 'title': u'Build fix actionpack'}, {'body': u'We removed csv fixture support by https://github.com/rails/rails/commit/1716da07204193c8acf967e2d75a53a82e4c7c28 .\n\nBut db:fixtures:load task try to read csv file yet.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6755', 'title': u"Don't read csv file during executing db:fixtures:load."}, {'body': u"If we migrate database on postgresql, we have many notice messages: e.g.\n\n```\nNOTICE: CREATE TABLE / PRIMARY KEY will create implicit index\n```\n\nI've already known `min_messages` option, but I guess that many people don't know this option. \nSo I guess we should change default min_messages to `warning`\u3000for convenience.\n\nWDYT?\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6754', 'title': u'\u3010PostgreSQL\u3011 Change default minimum log level to warning.'}, {'body': u'make it clearer that subscribers are not notified asynchronously, but saved for later use.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c098e9e645631061bd1dcb9ac7323d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6753', 'title': u'Documentation: "asynchronously" is misleading here'}, {'body': u'When using compute_source_path to determine the full path of an\nasset, if our source begins with \'/\', we don\'t want to include\nthe directory. Examples are illustrative:\n\n```\ncompute_source_path("foo", "stylesheets", "css")\n# => "/Users/steve/src/my_app/public/stylesheets/foo.css"\ncompute_source_path("/foo", "stylesheets", "css")\n# => "/Users/steve/src/my_app/public/foo.css"\n````\n\nBefore this patch, the second example would return the same as the\nfirst.\n\nFixes #5680.\n\nIf this is accepted, I will also backport to 3.2.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6752', 'title': u'Respect absolute paths in compute_source_path.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f16c5c991a2412243d8d00054e5dab2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6751', 'title': u'Extend assets cache store section in Assets Pipeline Guide [ci skip]'}, {'body': u'Trivial doc fix.\nThanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6748', 'title': u'Fix doc example for dasherize'}, {'body': u'This is currently not possible using `#default` method because\n\n```ruby\nconfig.action_mailer.default(from: "no-replay@example.org")\n```\n\nis interpreated as reader method and just returns nil. It does not call `ActionMailer::Base.default` method. The only way of calling `ActionMailer::Base` methods from `config/application.rb` is to use the direct syntax which is ugly in my opinion:\n\n```ruby\nconfig.assets.enabled = false\nconfig.assets.version = \'1.0\'\nconfig.encoding = "utf-8"\nconfig.action_mailer.default_url_options={host:"example.org", protocol:"https" }\nActionMailer::Base.default(from: "no-replay@example.org")\n```\n\nAlso the `:from` option is probably the same across multiple mailers. Other options like `:to, :subject, :cc, :bcc` etc. differ between mailing templates but `:from` is usually constant. So i think it deserves a simple way for setting it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b81cae1fb43808ac23a2188258ca9e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6747', 'title': u'Allow to easily set default :from option using railties in config/application.rb'}, {'body': u"composed_of is a complicated feature that's rarely used. So let's deprecate it in 3-2 and remove it in master.\n\nRelated: #6742\n\n/cc @jonleighton @tenderlove", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6743', 'title': u'Removing composed_of'}, {'body': u"composed_of is a complicated feature that's rarely used. So let's deprecate it. And remove it in Rails 4.\n\nRelated: #6743\n\n/cc @jonleighton @tenderlove", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6742', 'title': u'Deprecate composed of'}, {'body': u"composed_of is a complicated feature that's rarely used. So let's deprecate it. And remove it in Rails 4.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6741', 'title': u'Deprecate composed of'}, {'body': u'Historically, update_attribute and update_attributes are similar, but\nwith one big difference: update_attribute does not run validations.\nThese two methods are really easy to confuse given their similar\nnames. Therefore, update_attribute is being deprecated in favor of\nupdate_column, and will be removed in Rails 4.\n\nSee the discussion on rails-core here:\nhttps://groups.google.com/d/topic/rubyonrails-core/BWPUTK7WvYA/discussion', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6739', 'title': u'Deprecate update_attribute'}, {'body': u'Historically, update_attribute and update_attributes are similar, but\nwith one big difference: update_attribute does not run validations.\nThese two methods are really easy to confuse given their similar\nnames. Therefore, update_attribute is being removed in favor of\nupdate_column.\n\nSee the thread on rails-core here:\nhttps://groups.google.com/forum/?fromgroups#!topic/rubyonrails-core/BWPUTK7WvYA', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6738', 'title': u'Remove update_attribute.'}, {'body': u'Fix `db:schema:load` + `:dump`: look first in DATABASE_URL, then database.yml.\n\n\nCurrently when I run `heroku run rake db:migrate` on Heroku with the official\nRails 3.2.6 I get:\n\n    ...\n    <migrations>\n    ...\n    database configuration does not specify adapter\n\n... and then rake fails.\n\nMy findings:\n\nThis last line is printed by `db:schema:dump` called from within `db:migrate`.\n\n`db:migrate` "itself" (`ActiveRecord::Migrator.migrate`) uses\n`with_connection`, which succeeds, while `db:schema:dump` uses\n`ActiveRecord::Base.establish_connect(Rails.env)` followed by\n`ActiveRecord::Base.connection`, which fails.\n\nThe latter call unconditionally looks in config/database.yml for the database\nsettings, whereas the former uses whatever settings were initialized by Rails.\n\nWhen Rails is initializing, `Railties::ActiveRecord` calls\nActiveRecord::Base.establish_connection without parameters.\n\n\nRemoving the `Rails.env` argument allows `establish_connect` to probe for the\ncorrect settings itself, and then it picks `DATABASE_URL` first, regardless of\n`RAILS_ENV` or `RACK_ENV`. This seems to me the more proper behaviour.\n\n\nIf I set `RAILS_ENV=production`, not only `RACK_ENV=production`, for some reason\nthat works. Possibly heroku\'s database.yml contains a `#{RAILS_ENV}:` line or\nsomething along those lines, I haven\'t checked. Either way, it doesn\'t affect\nthe above reasoning for the proper behaviour of `db:schema:dump`.\n\nThis pull request also contains the equivalent fix for `db:schema:load`.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f79caabf1f8e37c60fcf930ff68e19ef?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6736', 'title': u'db:schema:load db:schema:dump: establish_connection(Rails.env) -> establ...'}, {'body': u'Fix `db:schema:load` + `:dump`: look first in DATABASE_URL, then database.yml.\n\n\nCurrently when I run `heroku run rake db:migrate` on Heroku with the official\nRails 3.2.6 I get:\n\n    ...\n    <migrations>\n    ...\n    database configuration does not specify adapter\n\n... and then rake fails.\n\nMy findings:\n\nThis last line is printed by `db:schema:dump` called from within `db:migrate`.\n\n`db:migrate` "itself" (`ActiveRecord::Migrator.migrate`) uses\n`with_connection`, which succeeds, while `db:schema:dump` uses\n`ActiveRecord::Base.establish_connect(Rails.env)` followed by\n`ActiveRecord::Base.connection`, which fails.\n\nThe latter call unconditionally looks in config/database.yml for the database\nsettings, whereas the former uses whatever settings were initialized by Rails.\n\nWhen Rails is initializing, `Railties::ActiveRecord` calls\nActiveRecord::Base.establish_connection without parameters.\n\n\nRemoving the `Rails.env` argument allows `establish_connect` to probe for the\ncorrect settings itself, and then it picks `DATABASE_URL` first, regardless of\n`RAILS_ENV` or `RACK_ENV`. This seems to me the more proper behaviour.\n\n\nIf I set `RAILS_ENV=production`, not only `RACK_ENV=production`, for some reason\nthat works. Possibly heroku\'s database.yml contains a `#{RAILS_ENV}:` line or\nsomething along those lines, I haven\'t checked. Either way, it doesn\'t affect\nthe above reasoning for the proper behaviour of `db:schema:dump`.\n\nThis pull request also contains the equivalent fix for `db:schema:load`.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f79caabf1f8e37c60fcf930ff68e19ef?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6735', 'title': u'Schema dump database url first'}, {'body': u"Setting `config.gzip_compression = true` will load the `Rack::Deflater` middleware & enable gzip compression. \n\nThis config setting is useful if the HTTP requests terminates directly at app server & no longer goes through a web  server(Example Heroku's Cedar stack). Therefore, gzip compression becomes responsibility of rack middleware. \n\nIn absence of this setting, people have resorted to hacking [config.ru directly](http://stackoverflow.com/questions/7236583/where-to-insert-rackdeflater-in-the-rack). this patch provides a clean way, if anyone want to enable gzip compression at app server level", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cb0b42e452cd13d469565a23a8abe441?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6728', 'title': u'Add config which enables gzip compression, Disabled by default'}, {'body': u"Signed-off-by: Marcelo de Moraes Serpa <fullofcaffeine@gmail.com>\n\n(Now pointing to the right branch @ rails/rails)\n\nHi guys,\n\nI'm not sure if someone already did that, so here's a pull request with the patch for 2.3 from http://seclists.org/oss-sec/2012/q2/504 applied.\n\nCheers,\n\nMarcelo.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d85beb3ce5d586dd494a25aec0965578?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6725', 'title': u'2 3 stable'}, {'body': u"Hi guys,\n\nI'm not sure if someone already did that, so here's a pull request with the patch for 2.3 from http://seclists.org/oss-sec/2012/q2/504 applied. \n\nCheers,\n\n- Marcelo.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d85beb3ce5d586dd494a25aec0965578?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6723', 'title': u'2 3 stable - with AR sql injection vulnerability patch (http://seclists.org/oss-sec/2012/q2/504)'}, {'body': u'Verbatim as attached to http://seclists.org/oss-sec/2012/q2/504', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/568db64de3c7c90b07411d58cbb5484d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6722', 'title': u'Backported rails 2.3 fix for CVE-2012-2695'}, {'body': u'.../o them [nil] turns into [] and that is quite innocent.\n\ngenerated  SQL - `IN (NULL)`\ncompact! did all the job.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6721', 'title': u"These lines don't help to mitigate CVE. They only turn [nil] into nil, w..."}, {'body': u"This is Justin Collins' SQL Injection patch for 2.3.x, adapted for 2-2-stable. Fixes CVE-2012-2695.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f06b9fd0e5a878aec3252cbc8d4012d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6719', 'title': u'CVE-2012-2695 fix for 2-2-stable'}, {'body': u'In Ruby 1.8, the order in which `keys` will return keys, or `each` yield pairs is undefined.\n\nI guess, this is why the following test is breaking the build:\n\n```ruby\ndef test_dup_call_parent_dup_when_include_validations\n    book = Book.new\n    book[\'title\'] = "Litterature"\n    book[\'author\'] = "Foo"\n    duped = book.dup\n\n    assert_equal book.keys, duped.keys\n    assert_equal book.values, duped.values\nend\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6716', 'title': u'Fix Build'}, {'body': u' I think we need assert here to test things. And to tell us if these are failing. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6715', 'title': u'Need a assert here in tests'}, {'body': u'It looks strange having some of the values in three k/v pair\nblocks and then having the remainder one per line.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0bc875c603399dbfb1f166548c64dd76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6714', 'title': u'reformating ESCAPED_CHARS hash'}, {'body': u"Adds possibility to use [uuid-datatype](http://www.postgresql.org/docs/9.1/static/datatype-uuid.html) instead of saving uuids in strings.\n\nHope I didn't messed up anything.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b85d2c78cae9885b7f1ad2b5f808a450?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6713', 'title': u'Add uuid datatype support to PostgreSQL adapter'}, {'body': u'I found following warning in Ruby2.0.0dev(2012-06-12 trunk 36037).\n\n```\nactivesuport/lib/active_support/core_ext/load_error.rb:9: warning: method redefined; discarding old path\n```\n\nRuby2.0 already has LoadError#path.\n\nsee http://bugs.ruby-lang.org/issues/show/5221\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8f39a252784d5a99589be6e20c4553fb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6711', 'title': u'fix method redefined warning in Ruby2.0'}, {'body': u'So this condition is no more needed now.\n\nSee: https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb#L5', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6709', 'title': u'current AR::ConnectionAdapters::SQLite3Adapter supports only SQLite3 ~> 1.3.6'}, {'body': u'`git ls-files` has `--exclude-standard` option that excludes standard git exclusions from the list, which totally fits the purpose of `git ls-files`ing in this case.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6708', 'title': u"ignore .gitignore'd files in rake test:uncomitted"}, {'body': u'Removed Ruby < 1.8.6 support in a test case.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6706', 'title': u'TimeZone format is always /[+-]\\d{2}:\\d{2}/ in Ruby 1.9'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6705', 'title': u'both string and symbol will be interpolated as string no need to convert to_s'}, {'body': u'This if statement was introduced in 6ea4dd4a65f85f165f71cf1c866dea578dae9e49.\nThe comment says, "no Proc#binding in Ruby 2" in this commit, but the actual plan for Ruby 2 now is "100% compatible with Ruby 1.9.3" (Matz) http://vimeo.com/43590847', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6704', 'title': u'Proc always respond_to :binding'}, {'body': u'campus <-> campuses', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f54bf20a6ff4b4ecc285be230e37874e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6700', 'title': u'Update b5d82e20a8be3bf6b588f780640505d7ec12d126'}, {'body': u"I found following warning in Ruby2.0.0dev(2012-06-11 trunk 36028).\n\n```\nrails/activesupport/lib/active_support/multibyte/chars.rb:136: warning:\ncharacter class has duplicated range: /\\b('?[\\S])/\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8f39a252784d5a99589be6e20c4553fb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6699', 'title': u'fix warning in Ruby2.0.0'}, {'body': u'This pull request address errors discussed in be4ecdcc87984e9421ff5d5c90d33f475e0fbc01 for master branch.\n\n```ruby\n  1) Error:\ntest_dont_add_if_before_callback_raises_exception(AssociationCallbacksTest):\nActiveRecord::StatementInvalid: OCIError: ORA-00911: invalid character: SELECT  1 AS _one FROM "POSTS"  WHERE "POSTS"."AUTHOR_ID" = 1 AND "POSTS"."ID" = 3 AND ROWNUM <= 1\n    stmt.c:253:in oci8lib_191.so\n```\n\nTested with postgresql, mysql, mysql2 and sqlite3 adapters also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6698', 'title': u'Address ORA-00911 errors because of the heading underscore.'}, {'body': u'https://groups.google.com/d/topic/rubyonrails-core/IquCr3-vNVE/discussion generated some good discussion, but also some plain noise because the "where" method in Active Record isn\'t documented.\n\nI decided to fix that. This commit adds rdoc for #where, based on both the Rails Guide and a perusal of the Active Record test suite. I\'m opening a pull request, rather than just committing to docrails, because I want some input on style and substance for documenting this important method.\n\nI also found examples in the test suite of condition templates like this:\n\n    User.where("field = \'%s\'", "value")\n\nI don\'t see this printf-style mentioned anywhere in the guides or other external documentation; I\'m wondering if it\'s still valid/considered in good taste. If it is, then I\'d appreciate a pointer to which %-escapes are supported.\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4daf6f4daceb77bbd6cb266ea6281a5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6697', 'title': u'Documentation for where method on relations'}, {'body': u"If someone receives a routing error, they likely need to view the routes. Rather than making them visit '/rails/info/routes' or run `rake routes` we can give them that information on the page.\n\nScreenshot:\n![Screeshot](http://f.cl.ly/items/1i0O3X1i2X1B3s1p302p/Screen%20Shot%202012-06-09%20at%208.36.00%20PM.png)\n\nActionDispatch Tests Pass", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6696', 'title': u'Show Routes while Debugging RoutingError'}, {'body': u"If You've the following model\n\n```ruby\nclass Post < ActiveRecord::Base\n  scope :since, Proc.new { where('written_on >= ?', Time.now - 1.day) }\n  scope :to,    Proc.new { where('written_on <= ?', Time.now) }\nend\n```\n\nand you call `Post.since.to`, we get an exception.\n\nBecause `since` method return ActiveRecord::Relation instance, and this class's method_missing call Array's method firstly.\nThus ActiveRecord::Relation#to is same to Array#to, we get an exception.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6695', 'title': u'Fix #6635. We should call Scoping methods, before calling Array methods.'}, {'body': u'Broken here 03f2249153ae4d2078646e6796d8b9e5ef747fba', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6694', 'title': u'Build fix broken here 03f2249153ae4d2078646e6796d8b9e5ef747fba'}, {'body': u"*Problem*\n\nUnable to run functional / integration tests with Rails 2.3.5 and Test-Unit 2.5 due to \n\n    gems/activesupport-3.2.5/lib/active_support/testing/deprecation.rb:48:in `message': uninitialized constant Test::Unit::ActiveSupport::Deprecation (NameError)\n        from gems/test-unit-2.4.9/lib/test/unit/ui/console/testrunner.rb:182:in `output_fault_in_detail'\n\n*Reason and Fix*\n\nactive_support/testing/deprecation.rb surrounds Test::Unit::Error#message with a call to ActiveSupport::Deprecation.silence, however Test::Unit now declares it's own Test::Unit::ActiveSupport module, which of course lacks the Deprecation module.\n\nPrepending the call with :: fixes the problem.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36feb4959db6ab8259a44962f0fa761f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6693', 'title': u'Bugfix: Namespace collision with test-unit-activesupport 1.0.0'}, {'body': u"When new programmers push their code to a production server and receive an error they often don't know to check the logs, this simple reminder will help. Most professional applications have custom error pages so this change shouldn't affect them. The wording of the message should not confuse non-developer visitors.\n\nI run into this while going through getting started tutorials like Rails Girls: http://guides.railsgirls.com/heroku/ with users. Specifically when users push their code to Heroku and then don't migrate their databases. They're often confused about what to do next and won't instinctively check the logs without someone else telling them to. Hopefully this should help.\n\nScreenshot of 404: http://cl.ly/3j1S0k3I3K292u3x2q3K\n\n\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6692', 'title': u'Add Prompt to 404 & 500 Pages to Check Logs in Production'}, {'body': u'I fixed the copy source dir of stylesheet templates.\n\n````\n% rake rails:templates:copy\nrake aborted!\nNo such file or directory - /Users/suginoyasuhiro/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/railties-3.2.5/lib/rails/generators/rails/stylesheets/templates\n````', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a0a01586fbc5903ba30b421c5b73c6c7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6690', 'title': u"Fix: 'rake rails:templates:copy' doesn't work"}, {'body': u'Found here\n\nhttps://github.com/rails/rails/blob/3-2-stable/actionpack/test/template/url_helper_test.rb#L106-113\n\nsame as \n\nhttps://github.com/rails/rails/blob/3-2-stable/actionpack/test/template/url_helper_test.rb#L131-138\n\nand \n\nhttps://github.com/rails/rails/blob/3-2-stable/actionpack/test/template/url_helper_test.rb#L115-120\n\nsame as\n\nhttps://github.com/rails/rails/blob/3-2-stable/actionpack/test/template/url_helper_test.rb#L140-145\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6689', 'title': u'Duplicate test removed'}, {'body': u'BufferedLogger accepts `level` as a parameter to the constructor. It was ignoring this parameter and was not setting the appropriate log level of the underlying Logger.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7b02f93158e77deb0b0e316efec9321?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6688', 'title': u'BufferedLogger level while creation'}, {'body': u"What \n====\n\nI propose reverting to the old implementation of `ActiveRecord#attributes` (changed in c4809d9984ab5d20759075a96ddea6096ab93802).\n\nWhy\n====\nThe current way that `attributes` builds its attributes hash creates `(n * 2) + 1` extraneous arrays, where `n` is the number of attribute keys. Switching back to the old implementation reduces this to 0.\n\nFor instance, I have a model with 43 columns; with Memprof (on 1.8.7) we can see that `attributes` normally creates 87 Arrays because of the `map` usage:\n\n```\n1.8.7 :010 > Memprof.track { my_record.attributes }\n     87 /.../activerecord-3.2.5/lib/active_record/attribute_methods.rb:184:Array\n      1 /.../activerecord-3.2.5/lib/active_record/attribute_methods.rb:184:__node__\n      1 /.../activerecord-3.2.5/lib/active_record/attribute_methods.rb:184:Hash\n```\n\nNow when we switch back to the original implementation that builds a hash with `each` (despite having 2 more LOC), we can see the benefit:\n\n```\n1.8.7 :010 > Memprof.track { my_record.attributes }\n      1 /.../activerecord-3.2.5/lib/active_record/attribute_methods.rb:184:Hash\n      1 /.../activerecord-3.2.5/lib/active_record/attribute_methods.rb:179:Array\n```\n\nI didn't verify the object count in 1.9 myself, but I did a 1.9 GC profile and confirmed that GC did run fewer times overall with this change (over a large sample).\n\nNote\n====\nafaik, `attributes` isn't actually used that often, however `serializable_hash` uses it. Since `serializable_hash` would most likely be used in apis where it's common to return lists of many records, it seems worthy of optimizing this method.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f86911c918d9c3eb1644189a50d74ccb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6687', 'title': u'ActiveRecord#attributes optimization: minimize objects created'}, {'body': u"Previously if you had a primary key without a sequence on a db whose connector\nresponded to :pk_and_sequence_for, the primary key would be missed by the schema\ndumper. This fixes that problem by checking :pk_and_sequence_for, then\n:primary_key.\n\nNot sure how to go about testing this - it's easy to get into this state in a DB like postgres\nby creating a table with a normal sequence ID, then later migrating to drop that ID and\ncreate a new primary key column of e.g. varchar. None of the other tests seem to do\nanything like that, though, so I thought I'd ask before venturing out myself.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/966f28048f6e420c942ecb6d132eb07e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6686', 'title': u'Fix non sequence pkey dumps'}, {'body': u"No one uses thread-safe mode because it's disabled by default\nThis makes thread-safe mode configuration over convention\n\nIf thread-safe mode were the happy path, more people would use it", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4131d2f57a0db2a2b4d9a62bd389fd44?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6685', 'title': u'Enable threadsafe! by default'}, {'body': u'This commit makes available two new options to has_secure_password:\n\n- encrypted_attribute: The attribute for the encrypted password.\n                       Replaces the hard-coded `password_digest` attribute\n\n- password_attribute: The instance method for the password\n                      Replaces the hard-coded `password` method\n\nExample usage:\n\n    # Schema: User(name:string, encrypted_password:string)\n    class User < ActiveRecord::Base\n      has_secure_password :encrypted_attribute => :encrypted_password,\n                          :password_attribute  => :passw\n    end\n\nThe User model will now use `encrypted_password` for the digested password, and\nwill make available @user.passw.\n\nWith no options specified, defaults are `password_digest` and `password`, so no\naction will be required to update this method from older versions.\n\nNote: config.filter_parameters will need to be changed from the default `password` if\nsomething different is being used.\n\nUse cases: Legacy database (eg. Django applications use a `password` column for digest), conflicting plugins ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eb56e6fa19ee55379e313367f049c1f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6684', 'title': u'Remove naming constraints from has_secure_password'}, {'body': u'Several tests that passed when run in the order they are loaded by rake test were failing when run in different sequences due to problems with the implementation of #assert_queries and #assert_no_queries as well as incorrect assumptions made about how many queries might be executed by a database adapter in various cases.\n\n#assert_no_queries was simply broken (but happened to not fail in `rake test` because of caching, etc.) because it tried to temporarily change SQLCounter.ignored_sql, but at that point, the instance of SQLCounter was already using a regular expression built from the original value of SQLCounter.ignored_sql.\n\nIgnoring SQL was also not really working with mysql or postgresql either, because not all of the necessary SQL was being ignored for those adapters.\n\nSome tests were trying to avoid counting metadata queries by invoking <model>.columns, but this was unreliable. Needed to depend on SQL-ignoring instead.\n\nSome tests thought they knew exactly how many queries the connection adapter would perform in order to retrieve metadata, but the assumptions were unwarranted. Needed to assert >=1 queries vs no queries around specific statements instead.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4f6079564f02b87e4c0989585439eb39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6683', 'title': u'Fix fragile #assert_queries implementation and usages.'}, {'body': u"At the end of initialize_dup was added the call to super if it exists,\nso it also works with 1.8.7 where initialize_dup doesn't exist.\nThis issu was introduced with the pull request #6324", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6682', 'title': u'Dup validation fix backport for 1 9 3'}, {'body': u'Cheery-picked from 3-2-stable\n\n\ncc @rafaelfranca ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6681', 'title': u'Plugin gen fix'}, {'body': u'Simple change from "backed" to "baked".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/12495e0381d9c477dfe4901ec794f7b8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6680', 'title': u'Fix typo in ActiveRecord::Store'}, {'body': u'if we are passing -T which is skip_test_unit\n\nSee issue #6673 for more details.\n\nI saw that we are not creating dummy app even if \nwe do skip_test_unit. \n\nFixes #6673', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6678', 'title': u'Fix issue 6673'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6677', 'title': u'Removed protected as we already doing it above.'}, {'body': u"This will skip assigning the attributes if an empty Hash was provided.\n\nI've noticed this behavior kicking in when using something like collection#others.build (without any parameters):\n\n```ruby\nclass Task < ActiveRecord::Base\n  belongs_to :account\nend\n\nclass Account < ActiveRecord::Base\n  has_many :tasks\nend\n\naccount = Account.first\naccount.tasks.build\n```\n\nThis will call assign_attributes on task twice:\n\n * first with {} as a parameter when Task object is initialized\n * second when the association is created with {:account_id => 666} as parameter (replace 666 with the actual account id).\n\nShould also apply to 3.2 branch.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea56ccf76f99b961b2d66a0b4b8359a7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6676', 'title': u"Don't assign the attributes if the list is empty"}, {'body': u"...ing, fixes #6393\n\nThis happens when A has_many many B and A accepts_nested_attributes B that has a numeric colum\nwith initial 0 value. So a.update_attributes({:b_attributes => { :id => b.id, :numeric => 'foo' }})\npasses the validation test but, the value of :numeric doesn't change.\nhis commit forces that the update fails with the above conditions.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6675', 'title': u'Validates_numericality_of is skipped when changing 0 to to non-empty str...'}, {'body': u'... using debug (irb).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1ac1bdc800919b45b1002b05254d3a68?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6674', 'title': u'Fix for #inspect @ OrderedHash to keep its order while seeing the log or...'}, {'body': u"See https://github.com/rails/rails/pull/6569 for info.\n\nI only ran ActiveModel tests, so if you have bad test isolation you might have to fix some tests outside ActiveModel, if they use validates_format_of.\n\nDiscussion:\nObviously the description in the security guides is not enough since ^$ are misused even in most of the ActiveModel tests. You even give an exploitable regexp as an example in http://edgeguides.rubyonrails.org/active_model_basics.html!\nSo if the problem is present even in core Rails then I don't think there's anything to think about.\n\nWe have seen this exploited on Github, Soundcloud, Tumblr, your own docs, your own tests, even veteran Rails developers make this mistake. Yes I always said this only partially solves the problem BUT it is the best solution I've seen, because it does cover the vast majority of vulnerabilities and at the same time the effect on proper code is negligible, even more so because proper code usually does not need to use ^$ in format validation (it really is a corner case). And even if you have this corner case the error goes away by adding one simple option to your validator.\nThere is no way of completely solving this without changing the Ruby language defaults and breaking loads of existing code, which wouldn't make sense because this is how behavior for RegExp is defined in Ruby and I doubt this will change, nor is there a real reason to change it.\nAnd again I will reiterate, the vast majority of related vulnerabilities come when a bad regexp is used with validates_format_of, and in the vast majority of cases using ^$ in validates_format_of is wrong so this change affects almost no one who already has proper code. The ^$ are mostly useful with gsub and extracting subpatterns, not for validation.\n\nI mean think about it, when did you need a validation that accepts multiline input and only needs 1 of the lines to match the RegExp to be valid? Never? With that in mind it would not be such a stretch anymore to say it's actually a vulnerability or at least poor behavior and not just an educational problem. Using ^$ in format validators is a corner case and should be treated as such. If you need validation like that you are doing something really weird and there's probably a better way to do it without requiring validation like that.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eda6e2638857d20ae499d26432e1a221?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6671', 'title': u'Bad Regexp exploits "fix" master branch'}, {'body': u'See https://github.com/rails/rails/pull/6569\nfor master: https://github.com/rails/rails/pull/6671\nThis is a backport for 3-2-stable branch with exception changed to a deprecation warning.\n\nI only ran ActiveModel tests, so if you have bad test isolation you might have to fix some tests outside ActiveModel, if they use validates_format_of :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eda6e2638857d20ae499d26432e1a221?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6670', 'title': u'Bad Regexp exploits "fix" backport into 3-2-stable'}, {'body': u'See https://github.com/rails/rails/pull/6569\nThis is a backport for 3-2-stable branch with exception changed to a deprecation warning.\n\nI only ran ActiveModel tests, so if you have bad test isolation you might have to fix some tests outside ActiveModel, if they use validates_format_of :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eda6e2638857d20ae499d26432e1a221?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6669', 'title': u'Bad Regexp exploits "fix" backport into 3-2-stable (fixed)'}, {'body': u'It is necessary to compact arrays with nil values.\n\nFor example, if we enforce\n```ruby  \n  config.active_record.whitelist_attributes = true\n````\non_load hook will call attr_accessible(nil) on ActiveRecord\nand it appears that ActiveRecord class attribute _accessible_attributes now is set to \n```ruby\n{ :default => #<ActiveModel::MassAssignmentSecurity::WhiteList: {""}> }\n````\n(https://github.com/rails/rails/blob/master/activemodel/lib/active_model/mass_assignment_security.rb#L183)\n\nAnd when we try to set attr_accessible on any other model, for example\n```ruby\n  class User < ActiveRecord\n    attr_accessible :admin\n  end\n````\nand call accessible_attributes,  we can get a blank value together with \'admin\'\n```ruby\n  User.accessible_attributes = ["", "admin"]\n````', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/99def679b53960b3765dc9b46f4b05e3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6668', 'title': u'Compact array of values added to PermissionSet instance'}, {'body': u'Oracle Adapter does not support foreign keys if :polymorphic => true is used.\n\nSee [line 105](https://github.com/rsim/oracle-enhanced/blob/master/lib/active_record/connection_adapters/oracle_enhanced_schema_definitions.rb).\n\nThis pull request has been tested with sqlite3, mysql, mysql2 and postgresql adapters.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6667', 'title': u'Skip two tests with polymorphic if current adapter is Oracle Adapter.'}, {'body': u"\n\n## Problem\n\nAfter a member of a team adds commits new code and a migration, other developers might not notice the migration and will get `NoMethodError`, `UnknownAttributeError`, or other exceptions raised.\n\nI've seen this behavior confuse beginner rails developers and seasoned devs. Usually they are capable of figuring out they need to run migrations, but the error is misleading, frustrating, and potentially time consuming.\n\n\n## Solution\n\nraise error for pending migration\n\nCan be configured by setting `config.active_record.migration`. Setting to `:page_load` will raise an error on each page refresh if there are migrations that are pending. Setting to `:page_load` is defaulted in development for new applications.\n\nSetting `config.active_record.migration` to `:app_start` will raise an error when the app is initialized if there are pending migrations. Setting to `:app_start` is defaulted in test mode.\n\nThis check is turned off in production.\n\nThe check can be disabled by setting `config.active_record.skip_migration_errors = true`. This is useful when the error would conflict with fixing the problem such as having an error on `:app_start`  and trying to run `rake db:migrate` which starts the app. A convenience rake task is also included to be run before `:environment` is loaded on crucial tasks.\n\n\n## Notes\n\nThis PR picks up where #4165 left off.\n\nScreenshot of `:page_load` error: http://cl.ly/0Q0t3z1s3R2Z142p2o1B\n\nScreenshot of `:app_start` error: http://cl.ly/1k0c1i2O0v122T3P2Y1n\n\nRailties Tests are green: https://gist.github.com/2885779\n\nAR Tests are green: https://gist.github.com/2885796\n\ncc/ @jonleighton\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6665', 'title': u'Notify A User they Have Pending Migrations '}, {'body': u'See https://github.com/rails/rails/pull/6569\nThis is a backport for 3-2-stable branch with exception changed to a deprecation warning.\nNOTE: The exception is changed into a warning in the second commit (and the two tests are also updated accordingly). I only ran ActiveModel tests, so if you have bad test isolation you might have to fix some tests outside ActiveModel, if they use validates_format_of :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eda6e2638857d20ae499d26432e1a221?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6664', 'title': u'Bad Regexp exploits "fix" backport into 3-2-stable'}, {'body': u"Issue #3993 was about Sprockets not acting as documented in production environments.\n\nSpecifically, during assets precompile, 'javascript_include_tag' et al are supposed to notice when the included path is a directory, and use an 'index.js' or 'index.css' file from inside that directory as a manifest:\n\nhttp://guides.rubyonrails.org/asset_pipeline.html#using-index-files\n\n#3993 was closed when a fix (SHA: df84577) was merged. The problem is that the fix is not only incorrect, it actually introduced a new bug.\n\nThe fix as merged converts paths pointing to index.* files into paths pointing at their enclosing directories. This is the opposite of the documented behavior -- if the original path is a directory, 'index' needs to be added to the path to find the file inside the directory.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e74788860015ac3a1484634ddd844939?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6662', 'title': u'Index js css fix'}, {'body': u"Issue \\#3993 was about Sprockets not acting as documented in production environments.\n\nSpecifically, during assets precompile, 'javascript_include_tag' et al are supposed to notice when the included path is a directory, and use an 'index.js' or 'index.css' file from inside that directory as a manifest:\n\nhttp://guides.rubyonrails.org/asset_pipeline.html#using-index-files\n\n\\#3993 was closed when a fix (SHA: df8457748ebbfa092c4c10aedda57aeef2f28776) was merged.  The problem is that the fix is not only incorrect, it actually introduced a new bug.\n\nThe fix as merged converts paths pointing to index.* files into paths pointing at their enclosing directories.  This is the opposite of the documented behavior -- if the original path is a directory, 'index' needs to be *added* to the path to find the file inside the directory.\n\nThat commit therefore broke asset precompile such that any existing asset files named 'index.(js|css)' are completely skipped over, without fixing the original issue.  This commit fixes the new bug and makes the feature work as documented, actually resolving \\#3993.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e74788860015ac3a1484634ddd844939?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6655', 'title': u'Index js css fix'}, {'body': u'Fixes not-quite-working PostgreSQL auto-reconnection on `Connection#verify!` and puts test coverage in place so that it should continue to work.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4f6079564f02b87e4c0989585439eb39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6654', 'title': u'Postgresql auto reconnect 2'}, {'body': u"Issue \\#3993 was about Sprockets not acting as documented in production environments.\n\nSpecifically, during assets precompile, 'javascript_include_tag' is supposed to notice when the included path is a directory, and use an 'index.js' or 'index.css' file from inside that directory as a manifest:\n\nhttp://guides.rubyonrails.org/asset_pipeline.html#using-index-files\n\n\\#3993 was closed when a fix (SHA: df8457748ebbfa092c4c10aedda57aeef2f28776) was merged.  The problem is that the fix is not only incorrect, it actually introduced a new bug.\n\nThe fix as merged converts paths pointing to index.* files into paths pointing at their enclosing directories.  This is the opposite of the documented behavior -- if the original path is a directory, 'index' needs to be *added* to the path to find the file inside the directory.\n\nThat commit therefore broke asset precompile such that any existing asset files named 'index.(js|css)' are completely skipped over, without fixing the original issue.  This commit fixes the new bug and makes the feature work as documented, actually resolving \\#3993.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e74788860015ac3a1484634ddd844939?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6653', 'title': u'Index js css fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/761e511b755afd61716f28153118f9a0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6650', 'title': u'testing'}, {'body': u"Just backport that metal controller doesn't have logger method for 3.2 /cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6649', 'title': u'Logger in metal backport for 3.2'}, {'body': u"Please see https://github.com/rails/rails/issues/5547.\n\n@daemon says:\n\n> For mysql/oracle rake task db:structure:dump has it's own dumper implementation, but for other databases it uses external utils to build dump.\n>\n> And it does matter when you use views/triggers/procedures with mysql: tests are simply failing because mentioned objects are missing in test db after dump/load.\n\nI agree with him.\n\np.s. I want to tell me where to write the test cases of this (railties ? but this is mysql speficic fix)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6648', 'title': u'Use mysql native commands when dumping/loading on mysql. Partially Fix #5547.'}, {'body': u"This code was [originally written](https://github.com/rails/rails/commit/9d7aae7) this way in order to absorb API difference between MiniTest < 1.4 and >= 1.4.\n\nRuby >= 1.9.3 is shipped with MiniTest >= 2.5.1, so we can simplify the code here.\n\n```\n% ruby -v -rminitest/spec -e 'p MiniTest::Spec.instance_methods.include?(:__name__)'\nruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-darwin11.1.0]\ntrue\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6647', 'title': u'MiniTest::Spec shipped with Ruby >= 1.9.3 always responds_to __name__'}, {'body': u"Support unicode character route in config/routes.rb, e.g.:\n\n  get '\u3053\u3093\u306b\u3061\u306f', :controller => 'home', :action => 'index'\n\nIn current Rails, we had to draw encoded route, e.g.:\n\n  get Rack::Utils.escape('\u3053\u3093\u306b\u3061\u306f'), :controller => 'home', :action => 'index'\n\nPlease see also https://github.com/rails/rails/issues/3470", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6646', 'title': u'Support unicode character route directly in config/routes.rb. Fix #3470.'}, {'body': u"Inspired by @elisehuard's GC talk at EuRuKo, I tried to reduce instances of `String` in Rails code.\n\nI haven't done actual performance benchmarks, but number of `ObjectSpace.each_object(String).count` was significantly decreased on my simple test app.\n\n```\nbefore: 128696\nafter: 121995\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6645', 'title': u'Reduce number of String instance'}, {'body': u'`Module#instance_methods` returns an Array of Symbols in Ruby >= 1.9\nSo this was not actually testing anything', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6644', 'title': u'fix meaningless test case'}, {'body': u'`application_controller.rb` is always in the same location, this patch fixes an issue where the path generated in namespaced controllers isn\'t correct.\n\ne.g. `require_dependency "test_app/application_controller"` instead of `require_dependency "test_app/some/module/application_controller"`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2735068c913a072744a799e3c0833b7b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6643', 'title': u'Fixed the application_controller require_dependency path generated by the app generator'}, {'body': u'This is a backport of b0e2fc84 to Rails 3.2.\nSee #5843 and #3859 also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6642', 'title': u'Fix human attribute_name to handle deeply nested attributes'}, {'body': u'When running rails generate controller <something> the controller file created has a redundant white line at the top. This patch just removes it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/33f024c93e8eb6291427b657904b253c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6640', 'title': u'Remove white line at the top of a generated controller file'}, {'body': u'Returning either nil or 0 is rather confusing for a predicate and changes behaviour of this method. Test is adapted accordingly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/98400edc296fd449feb1eb3ba0c6af78?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6639', 'title': u'predicate xhr? on ActionDispatch::Request returns Boolean again'}, {'body': u'Changes:\n\n* Add `instance_accessor` option to opt out of the instance writer and\n  instance reader methods.\n* Raises `NameError` if the name of the attribute is not valid.\n* Update documentation and tests.\n* Add CHANGELOG entry in activesupport.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6638', 'title': u'add instance_accessor option to config_accesor'}, {'body': u"@josevalim I had to implement it in previous PR, but I don't know why I didn't do it ;) This can be replaced into one line code of course. And if I squash both commits, can it be backported on 3.2, 3.1 branches?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6632', 'title': u'One-liner code for logger in ActionView::Helpers::ControllerHelper'}, {'body': u"Hi,\n\nI would like to use a block in button helper like this:\n\n```erb\n<%= form_for @message do |f| %>\n\n  <%= f.button do %>\n    Send a message to <strong><%= @user.name %></strong>\n  <% end %>\n  # => <button name='button' type='submit'>\n  #      Send a message to <strong>Name</strong>\n  #    </button>\n\n<% end %>\n```\n\nThis pull request is similar to #6556, but for *FormHelper#button*. I also added the example section containing 2 examples. Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bcd6fc0618a420ba3d59fe5bfaf2b323?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6631', 'title': u'Accept a block in FormHelper#button'}, {'body': u"When I use Metal controller and my template contains some errors, I'm getting `undefined method `logger' for` because Metal controller doesn't contain logger method. When error is raised in my template, this line https://github.com/rails/rails/blob/master/actionpack/lib/action_view/template.rb#L297 trying to check logger but checking pass because this method have already been delegated.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6630', 'title': u"Metal controller doesn't have logger method, check it and then delegate"}, {'body': u"`save!` and variants are super useful when we have some generic exception handler setup, for example with `rescue_from`, and we expect the operation to succeed.\n\n`destroy` actions would benefit the same way of a `destroy!` version in the same way (especially since they so often succeed).\n\nDoesn't it sound great too? destroy!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6629', 'title': u'+ ActiveRecord::Base#destroy!'}, {'body': u'When using `rails plugin new app_name --skip-gemspec`, the generated Gemfile still references (the now invalid) `gemspec` command. This patch allows the Gemfile to still have valid content.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2735068c913a072744a799e3c0833b7b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6628', 'title': u"Fixed the Gemfile when gemspec is skipped in the 'rails plugin new' command"}, {'body': u'If JavaScript runtime is not installed, execjs fails with error quietly,\nwhile tests continue to run. This should not happen since it causes tests\nto fail for unknown reason (#6621).\n\nThis commit assures that if JavaScript runtime is not installed, an assertion\nis raised.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8c4b4a99d5794c95f52c58a2bf8e1710?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6627', 'title': u"bundle exec rake assets:precompile shouldn't fail quietly."}, {'body': u'When I have incoming request with `:html` format and I want to render some json(using jbuilder for example), I put render :partial into my layout/template directly. It looks like: `render partial: "something", formats: :json`. But when this partial contain `json.partial!` then I have error that partial cannot be found and formats contain only `:html`. Guys from my team often using back situation, when incoming format :json, and they need to return a few rendered partials in that json, they using render partial: "name", formats: :html, and format will be missing on the second render :partial. I\'ve implemented adding new formats to lookup context.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6626', 'title': u'Add additional formats to lookup context'}, {'body': u'It is common practice to use protocol-less URIs when serving a site from both http and https.  This form ("//cdn.host/blah/foo.css") allows the same content to be served (and cached) for both normal and secure sites, leaving the user agent to resolve the protocol.\n\nCurrently, the asset host plumbing doesn\'t recognize this as a valid URI form (it is, says RFC 3986 section 4.2).  If I specify my asset host of "//a.example.com/assets", loading asset "foo.png" results in an invalid URI "http:////a.example.com/assets/foo.png" on HTTP and "https:////a.example.com/assets/foo.png" on HTTPS.\n\nThis patch correctly recognizes my protocol-less URI as valid and doesn\'t attempt to add the proto.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee075c7c5bdcad2baed4915630fe9a39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6625', 'title': u'Asset host doesn\'t recognize protocol agnostic "//" links.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f16c5c991a2412243d8d00054e5dab2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6623', 'title': u'Remove trailing whitespaces and replace tabs with spaces'}, {'body': u'The original PR (on the master) was https://github.com/rails/rails/pull/6619.\n\nThere is a problem when dealing with Time with Timezone field.\nIf value is not change, definitely _will_change! method is executed.\n\nPlease see https://github.com/rails/rails/issues/6591.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6622', 'title': u'[3-2-stable back ported] Fix #6591 Rails 3.2.5 Regression: incorrect _changed? for datetimes'}, {'body': u"There is a problem when dealing with Time with Timezone field.\nIf value is not change, definitely _will_change! method is executed.\n\nPlease see https://github.com/rails/rails/issues/6591.\n\nI'll submit this PR to 3-2-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6619', 'title': u'Fix #6591 Rails 3.2.5 Regression: incorrect _changed? for datetimes'}, {'body': u"The resolver tests fail if the mysql gem is not installed; this breaks\nbeing able to run the sqlite3 tests without that gem. \n\nTo reproduce:\n\nbundle install --without db\ncd active record\nbundle exec rake test_sqlite3\n\nThis fix ensures the tests will only run if the mysql gem is installed.\n\nA better solution might be to move these tests into the per-adapter tests,\nand test each adapter's resolver.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4daf6f4daceb77bbd6cb266ea6281a5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6616', 'title': u'resolver tests fail if mysql adapter not installed'}, {'body': u'Just like [683fc4d](https://github.com/rails/rails/commit/683fc4db00f496e5225928afb4d4e932e0fcdc48) this removes the :confirm option.\n\n/cc @rafaelfranca\n\nThe PR adding the deprecation is #6613', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eb96709a889695c9d0fe3edf4648ab7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6614', 'title': u"Remove `:confirm` in favor of `:data => { :confirm => 'Text' }` option"}, {'body': u'Just like [21141e7](https://github.com/rails/rails/commit/21141e777bdce8534e3755c8de7268324b3d8714) this PR deprecates the `:confirm` option.\n\n/cc @rafaelfranca\n\nRelated to #6614', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eb96709a889695c9d0fe3edf4648ab7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6613', 'title': u"Deprecate `:confirm` in favor of `:data => { :confirm => 'Text' }` option"}, {'body': u"`%Q[]` was originally used because there's a `\\n` [inside the string](https://github.com/rails/rails/blob/193e4de20646a025bf6dd3f90d1f9a53edb1cecf/railties/test/application/rake_test.rb#L157).\n\nNow that the `\\n` is no longer there, it is more readable to use single quotes instead.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38becc6fc03453ccb1edfcdea1122408?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6611', 'title': u'Use single quote instead of %Q on route_inspect_test'}, {'body': u"Fixes #6604 which was a great idea by @mpapis\n\nThis change allows, for example when generating an application using Rails 3.2.5, the application to use 3.2.5 -> 3.2.x but not 3.3 or greater and not less than 3.2.5.\n\nI believe that this is a good idea given that security issues are often fixed with patch releases and that it is safe to do so as these versions are tested for regressions which, when found, are solved with a subsequent release.\n\nI couldn't find any tests that are related to this change and all railties tests passed (eventually). \n\nThanks :-)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6610', 'title': u'Modified generated Gemfile to allow patch versions of Rails.'}, {'body': u"I know it's a WIP guide but it stood out :-) I first looked on docrails and couldn't find this file.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6607', 'title': u'Updated guide to say Rails 4.0 requires 1.9.3 or higher, not Rails 3.2.'}, {'body': u"`model` feels more natural for programmers, and this would make library authors a bit happier since it's compatible with `DM::Collection`\nhttps://github.com/datamapper/dm-core/blob/9d9f739/lib/dm-core/collection.rb#L45", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6606', 'title': u'AR::Relation#model would be a better API than AR::Relation#klass'}, {'body': u'I was writing a tiny patch enabling `AR::Relation#merge` to accept a collection association instance.\nIn AR 3 we need to call `scoped` like this, but I thought it could be done implicitly.\n\n\n```\neuruko = Conference.find_by_name(\'euruko\')\n# runs separate queries for Relation and association\nAttendee.where(name: \'matz\').merge(euruko.attendees)\n\n  Attendee Load (0.3ms)  SELECT "attendees".* FROM "attendees" WHERE "attendees"."conference_id" = 1\n  Attendee Load (0.2ms)  SELECT "attendees".* FROM "attendees" WHERE "attendees"."name" = \'matz\'\n```\n\n```\n# merging into one query\nAttendee.where(name: \'matz\').merge(euruko.attendees.scoped)\n\n  Attendee Load (0.3ms)  SELECT "attendees".* FROM "attendees" WHERE "attendees"."name" = \'matz\' AND "attendees"."conference_id" = 1\n```\n\nSo I finished writing my patch, rebased my patch against master, then noticed that this feature was already implemented in the series of `merge` refactoring done by @jonleighton\nI\'m not sure whether this was intentional or not (because there\'s no explicit test case for this), but I love this feature to be officially supported. So let me push my test case alone.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6605', 'title': u'a test case that ensures AR::Relation#merge can merge associations'}, {'body': u'## Changes:\n\n* Update `include_root_in_json` default value to false for default value\n  to false for `ActiveModel::Serializers::JSON`.\n* Remove unnecessary change to include_root_in_json option in\n  wrap_parameters template.\n* Update `as_json` documentation.\n* Fix JSONSerialization tests.\n\n## Problem:\n\nIt\'s confusing that AM serializers behave differently from AR,\neven when AR objects include AM serializers module.\n\n    class User < ActiveRecord::Base; end\n\n    class Person\n      include ActiveModel::Model\n      include ActiveModel::AttributeMethods\n      include ActiveModel::Serializers::JSON\n\n      attr_accessor :name, :age\n\n      def attributes\n        instance_values\n      end\n    end\n\n    user.as_json\n    => {"id"=>1, "name"=>"Konata Izumi", "age"=>16, "awesome"=>true}\n    #\xa0root is not included\n\n    person.as_json\n    => {"person"=>{"name"=>"Francesco", "age"=>22}}\n    #\xa0root is included\n\n    ActiveRecord::Base.include_root_in_json\n    => false\n\n    Person.include_root_in_json\n    => true\n\n    # different default values for include_root_in_json\n\n## Proposal:\n\nChange the default value of AM serializers to false, update\nthe misleading documentation and remove unnecessary change\nto false of include_root_in_json option with AR objects.\n\nResult:\n\n    class User < ActiveRecord::Base; end\n\n    class Person\n      include ActiveModel::Model\n      include ActiveModel::AttributeMethods\n      include ActiveModel::Serializers::JSON\n\n      attr_accessor :name, :age\n\n      def attributes\n        instance_values\n      end\n    end\n\n    user.as_json\n    => {"id"=>1, "name"=>"Konata Izumi", "age"=>16, "awesome"=>true}\n    #\xa0root is not included\n\n    person.as_json\n    => {"name"=>"Francesco", "age"=>22}\n    # root is not included\n\n    ActiveRecord::Base.include_root_in_json\n    => false\n\n    Person.include_root_in_json\n    => false\n\n    # same behaviour, more consistent\n\nFixes #6578.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6597', 'title': u'change AMS::JSON.include_root_in_json default value to false'}, {'body': u'Put the table name between backticks... harden exploitation of CVE-2012-2661\n\nSo far the only exploitation path I found, is using the lack of backtick in this part of the statement', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/652d2718c654758a2b7a068a057fdab6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6595', 'title': u'Put the table name between backticks... harden exploitation of CVE-2012-...'}, {'body': u"Backport of be623677 #5394\n\nWhen I made that PR 3 months ago I wasn't sure what the procedure was regarding backports. I believe this should be backported as I don't believe anyone is using cache_key and expecting to get the encoded object id on instances of `ActiveRecord::Relation` for example.\n\nIn that way I feel that it is more on the side of 'bugfix' vs change of behavior.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6594', 'title': u'Backport cache key patch'}, {'body': u'Skip test_remove_column_with_array_as_an_argument_is_deprecated with Oracle adapter.\n\nBecause Oracle adapter supports only remove_column :table_name, :column_name syntax\nand it has never supported remove_column :table_name, [:column_name].\n\n```ruby\n$ cd activerecord\n$ rake test_oracle\n\n... snip ..\n\n  1) Error:\ntest_remove_column_with_array_as_an_argument_is_deprecated(MigrationTest):\nActiveRecord::StatementInvalid: OCIError: ORA-00904: "[hat_name, hat_size]": invalid identifier: ALTER TABLE "HATS" DROP COLUMN "[hat_name, hat_size]"\n    stmt.c:253:in oci8lib_191.so\n    /home/yahonda/.rvm/gems/ruby-1.9.3-p194@v324rc1/gems/ruby-oci8-2.1.2/lib/oci8/oci8.rb:474:in `exec\'\n    /home/yahonda/.rvm/gems/ruby-1.9.3-p194@v324rc1/gems/ruby-oci8-2.1.2/lib/oci8/oci8.rb:282:in `exec_internal\'\n    /home/yahonda/.rvm/gems/ruby-1.9.3-p194@v324rc1/gems/ruby-oci8-2.1.2/lib/oci8/oci8.rb:275:in `exec\'\n    /home/yahonda/git/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_oci_connection.rb:471:in `exec\'\n    /home/yahonda/git/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_oci_connection.rb:88:in `exec\'\n    /home/yahonda/git/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_adapter.rb:595:in `block in execute\'\n    /home/yahonda/git/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:280:in `block in log\'\n    /home/yahonda/git/rails/activesupport/lib/active_support/notifications/instrumenter.rb:20:in `instrument\'\n    /home/yahonda/git/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:275:in `log\'\n    /home/yahonda/git/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_adapter.rb:1312:in `log\'\n    /home/yahonda/git/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_adapter.rb:595:in `execute\'\n    /home/yahonda/git/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_schema_statements.rb:261:in `remove_column\'\n    /home/yahonda/git/rails/activerecord/test/cases/migration_test.rb:884:in `block in test_remove_column_with_array_as_an_argument_is_deprecated\'\n    /home/yahonda/git/rails/activesupport/lib/active_support/testing/deprecation.rb:29:in `collect_deprecations\'\n    /home/yahonda/git/rails/activesupport/lib/active_support/testing/deprecation.rb:7:in `assert_deprecated\'\n    /home/yahonda/git/rails/activerecord/test/cases/migration_test.rb:883:in `test_remove_column_with_array_as_an_argument_is_deprecated\'\n    /home/yahonda/.rvm/gems/ruby-1.9.3-p194@v324rc1/gems/mocha-0.11.4/lib/mocha/integration/mini_test/version_230_to_262.rb:28:in `run\'\n\n```\n\nThis test has been committed to 3-2-stable branch only #6219 .', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6593', 'title': u'Skip test_remove_column_with_array_as_an_argument_is_deprecated with Oracle'}, {'body': u'This is a failing test for #6591', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a2034173a41f180ef7e182a130438e8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6592', 'title': u'Add failing test for 3.2.5 datetime attribute regression'}, {'body': u"This pull is against 3-2-stable, not master.  If accepted, I'll quickly put together a pull for master, as well.\n\nPolymorphic routes currently only use `arg.to_model` when [generating the path directory or name portion](https://github.com/rails/rails/blob/3-2-stable/actionpack/lib/action_dispatch/routing/polymorphic_routes.rb#L100) of a route. They do not use the `to_param` value from the delegated model for the generated route IDs (since it currently [passes the arguments directly](https://github.com/rails/rails/blob/3-2-stable/actionpack/lib/action_dispatch/routing/polymorphic_routes.rb#L127) to the named route functions without converting them to models).\n\nSince `to_model` is supposed to act as the ActiveModel stand-in for an object, and the polymorphic routing mechanism already takes `to_model` in to account for a small bit of it, I think this is a bug in the router to not fully follow through with its usage.  It also significantly limits the usefulness of creating `to_model` stand-ins.\n\nSo, this pull has a test to exploit the bug where I exercise that the delegate is not currently being used for to_param.  And, then the fix simply passes the args collection after having converted it to models.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cfaf1fb96eb0b184e3134d62c45fe8d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6588', 'title': u'Correct the use of to_model in polymorphic routing'}, {'body': u'Backporting #6586 patch to 3-2-stable, as I found a blank line in a `rails generate`d contoller on my new Rails 3.2.5 app.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6587', 'title': u'Backporting #6586 patch to 3-2-stable'}, {'body': u'The controllers generated by `rails g` have an extra blank line at the very top.\nThese blank lines were introduce by 7c95be54b4c3f8ad2273eea39afa233f8f8b31c1\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6586', 'title': u'remove unneeded blank line from !namespeced? generated controllers'}, {'body': u'AR `explain` returns nicely formatted String, but it looks miserable on our Rails console.\n\n```\n> User.where(id: 2).explain\n  User Load (0.1ms)  SELECT "users".* FROM "users" WHERE "users"."id" = 2\n  EXPLAIN (0.1ms)  EXPLAIN QUERY PLAN SELECT "users".* FROM "users" WHERE "users"."id" = 2\n => "EXPLAIN for: SELECT \\"users\\".* FROM \\"users\\"  WHERE \\"users\\".\\"id\\" = 2\\n0|0|0|SEARCH TABLE users USING INTEGER PRIMARY KEY (rowid=?) (~1 rows)\\n" \n```\n\nWith this patch, `explain` returns a `p`-friendly String instance.\n\n```\n> User.where(id: 2).explain\n  User Load (0.2ms)  SELECT "users".* FROM "users" WHERE "users"."id" = 2\n  EXPLAIN (0.1ms)  EXPLAIN QUERY PLAN SELECT "users".* FROM "users" WHERE "users"."id" = 2\n => EXPLAIN for: SELECT "users".* FROM "users"  WHERE "users"."id" = 2\n0|0|0|SEARCH TABLE users USING INTEGER PRIMARY KEY (rowid=?) (~1 rows)\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6584', 'title': u'improve readability of AR explain result'}, {'body': u'Because Ruby >= 1.9.3 is shipped with Rake > 0.9\n\n```\n% ruby -v -rrake -e \'p defined? Rake::DSL\'\nruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-darwin11.1.0]\n"constant"\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6583', 'title': u'Revert "Only include Rake::DSL if it\'s defined."'}, {'body': u'Fixes the issues reported by #6559', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/75cb325d7b55a6659fc050f6fa822c7c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6581', 'title': u'Properly add duration parts'}, {'body': u'CVE-2012-2660\n\nBut is this branch now officially closed?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd2ee04ed34353f9679324c44f50e073?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6580', 'title': u'Strip [nil] from parameters hash'}, {'body': u"Current implementation of `AR::Relation#none` replaces the `Relation` instance, and consequently clears all extension methods defined on self by proceeding scopes.\n\nFor example, with this AR model and scope,\n\n```ruby\nclass User < ActiveRecord::Base\n  scope :anonymous_extension, -> { scoped } do\n    def one\n      1\n    end\n  end\nend\n```\n\nThe `one` method was removed from `none`ed relation before this patch,\n\n```\n> User.anonymous_extension.none.one\nNoMethodError: undefined method `one' for []:ActiveRecord::NullRelation\n```\n\nNow `one` properly calls the extension method.\n\n```\n> User.anonymous_extension.none.one\n => 1\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6579', 'title': u'modulize AR::NullRelation'}, {'body': u"The options hash has a lot of non-similar data stored in it. It makes it difficult to keep track of what exactly is stored inside. Perhaps an alternative to using a hash is to store options in a class and make the information accessible via methods. @jonleighton expressed the Mapper class was in need of refactoring. I'm starting with what I consider low-hanging fruit given my skill level.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1237fa7ee270ace2ebb53c8cab91a6b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6574', 'title': u'Added Options class to Mapper'}, {'body': u'Extracted redirect logic from ActionController::Force::ClassMethods.force_ssl\n\nPrior to this patch the existing .force_ssl method handles both defining\nthe filter and handling the logic for performing the redirect.\n\nWith this patch the logic for redirecting to the HTTPS protocol is\nseparated from the filter logic that determines if a redirect should\noccur.  By separating the two levels of behavior, an instance method\nfor ActionController (i.e. #force_ssl_redirect) is exposed and available\nfor more granular SSL enforcement.\n\nCleaned up indentation.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9b7461edb06ce10e12f865220e43948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6571', 'title': u'Extracted redirect logic from ActionController::Force::ClassMethods.forc...'}, {'body': u'Extracted redirect logic from ActionController::Force::ClassMethods.force_ssl\n\nPrior to this patch the existing .force_ssl method handles both defining\nthe filter and handling the logic for performing the redirect.\n\nWith this patch the logic for redirecting to the HTTPS protocol is \nseparated from the filter logic that determines if a redirect should \noccur.  By separating the two levels of behavior, an instance method\nfor ActionController (i.e. #force_ssl_redirect) is exposed and available\nfor more granular SSL enforcement.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9b7461edb06ce10e12f865220e43948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6570', 'title': u'Extracted redirect logic from ActionController::Force::ClassMethods.forc...'}, {'body': u'Explanation of the "issue": http://homakov.blogspot.co.uk/2012/05/saferweb-injects-in-various-ruby.html\n\nWhile I do not agree with Egor that this is an actual vulnerability in Ruby or something that can be fixed, I do agree it is an issue that should be addressed (e.g. through an educated warning). I propose a "solution" by incorporating a warning into validates_format_of, which I believe is the source of most of related vulnerabilities (caused by programmer error).\n\nThe proposed change is to throw an exception from validates_format_of when a Regexp containing the ^ or $ anchor is used, unless the programmer explicitly acknowledges his awareness about the multiline behavior by passing a :multiline => true option to validates_format_of.\n\nI believe this solution is good because of several reasons:\n1. The vast majority of users that are using validates_format_of do not want multiline matching. Consequently, the vast majority of users that are using proper Regexp will not be affected by this change at all.\n2. The vast majority of users who are using ^ or $ inside validates_format_of are not aware of their multiline behavior, or are copy-pasting Regexp, and will be affected by this change, consequently fixing a security vulnerability in their application.\n3. The minority of users who do need multiline behavior in validates_format_of simply need to add the new :multiline => true option to their validators. So if this is mentioned in the changelog or the users are running any kind of tests that at least load the model using validates_format_of (exception is raised when validates_format_of is called on the class - so at model load), they will be aware of what needs to be done (trivial - add an option).\n4. When people fix their validators they will most likely become familiar with the issue and will be able to fix potential vulnerabilities related to Regexp used outside of validates_format_of.\n\nWhile this check does not cover all possible related vulnerabilities, I think it should cover most of them, and the cost of this is very low (not a lot of people need multiline behavior). Performance hit is also negligible as the check is only performed when the model is loaded.\n\nRegarding tests in ActiveModel:\nI added a test for this case. Due to the change, some existing test cases needed to have the :multiline => true option added. It may be possible that in these existing tests, use of \\A and \\Z would be more appropriate - I will let the core developers decide this. In any case I have made all the ActiveModel pass, but I did not run tests of other parts of Rails so the whole test suite should be ran before thinking about merging this commit. The exception message string might also need to be written differently.\n\nI hope this work will be appreciated and considered for merging. I think the issue is important as Egon demonstrated in his blog post - this vulnerability was present in many big Rails projects such as Github, Soundcloud, Tumblr etc., so it should not be completely ignored.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eda6e2638857d20ae499d26432e1a221?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6569', 'title': u'Bad Regexp exploits "fix" (with warning)'}, {'body': u'CoffeeScript files to `rake stats` task\n\nOrignal PR was #2270\n\nThanks to @nfm \n\nWas trying to merge those commits but got conflicts as that one is for 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6566', 'title': u'Add code statistics for Javascript and'}, {'body': u'I have got an error while trying to redirect non ASCII url. So lets escape it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bc5e8ad4fa9c924887327d33933f0d09?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6563', 'title': u'Escape path before redirection'}, {'body': u"\nDependency.rb expects the symbol to be named :platforms as opposed to platform. RubyMine's inspections indicate that the symbol should be named :platforms.\nUpdating tests.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/70d63510b63e2b8b6ebcd9595f1879e2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6562', 'title': u"3-2-stable Changed symbol platform to platforms for the commented out call to gem 'therubyracer'."}, {'body': u"\nDependency.rb expects the symbol to be named :platforms as opposed to platform. RubyMine's inspections indicate that the symbol should be named :platforms.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/70d63510b63e2b8b6ebcd9595f1879e2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6561', 'title': u"Changed symbol platform to platforms for the commented out call to gem 'therubyracer'."}, {'body': u"\nDependency.rb expects the symbol to be named :platforms as opposed to platform. RubyMine's inspections indicate that the symbol should be named :platforms.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/70d63510b63e2b8b6ebcd9595f1879e2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6560', 'title': u"Changed symbol platform to platforms for the commented out call to gem 'therubyracer'."}, {'body': u"This reverts commit ebfa58abc895c0639211cb896a47b04e424322c8.\n\nThis change caused a regression in my application's tests:\n\n* Failing build http://travis-ci.org/#!/resolve/refinerycms/builds/1461242\n\nBroken tests pass after this change is reverted.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6558', 'title': u'Fix regression'}, {'body': u'After a Rails process has opened a connection to a PostgreSQL server, if the PostgreSQL server is subsequently restarted, or the connection has been otherwise severed, the connection would fail with an exception the next time a query was attempted using that connection.\n\nWith these changes, the connection will automatically be repaired on the next query, assuming it is safe to do so (e.g. we were not in the middle of a transaction).\n\nSome of the commits on this branch are also to fix test failures or intermittent test failures/fragilities that are unrelated or only tangentially related to the auto-reconnect changes (2 failures on TC before I started, tests that fail only when run in certain combinations, etc.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4f6079564f02b87e4c0989585439eb39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6557', 'title': u'Postgresql auto reconnect'}, {'body': u'Make possible to use a block in button_to helper if button text is hard\nto fit into the name parameter, e.g.:\n\n    <%= button_to [:make_happy, @user] do %>\n      Make happy <strong><%= @user.name %></strong>\n    <% end %>\n    # => "<form method="post" action="/users/1/make_happy" class="button_to">\n    #      <div>\n    #        <button type="submit">\n    #          Make happy <strong>Name</strong>\n    #        </button>\n    #      </div>\n    #    </form>"\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6556', 'title': u'accept a block in button_to helper'}, {'body': u"Since the environment is initialized each time rake is run, routes don't need to be re-loaded. This comes form a discussion on another pull request: https://github.com/rails/rails/pull/6461#r869953", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6555', 'title': u'Remove Unused Route Reloading Code'}, {'body': u'See #6553, which should be accepted first.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6554', 'title': u'Remove deprecated ActiveSupport::JSON::Variable.'}, {'body': u"Backport of #6546 and deprecate ActiveSupport::JSON::Variable\n\nSee #6536 for the reasoning.\n\nI'm still new to the Rails code base (but intend on being a regular contributor), hopefully I went about this the correct way.\n\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6553', 'title': u'3 2 stable json patch'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6552', 'title': u'Fix warning: already initialized constant Rails.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6551', 'title': u"Add a railtie's changelog entry about runner hook."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6550', 'title': u'Some of the warnings removed from "railties"'}, {'body': u'Pry allows developer to go deep inside of ruby and rails class infrastructure - https://github.com/pry/pry\nThe console becomes very powerful, `cd` and `ls` make class/method navigation extremely comfortable.\nBonuses: highlighting, nice inspects, shell shortcuts and other - check the manual.\n\nHuge thanks to @drogus for https://github.com/rails/rails/commit/dd655d88d660da8c094d20948ee721d29852f723 and https://github.com/rails/rails/commit/951b58206255791587e2491435a80cf0ab3b797b \n\nTo discuss: \nHow to handle if user has no pry installed? Probably just downgrade to IRB and show a message "Pry is not found, using IRB"?\nWhat about moving requirement process inside of rails? I mean `config.console = :pry` looks more neat.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6549', 'title': u'Make Pry(a feature rich console) default rails console'}, {'body': u'I found the next issue between CollectionAssociation `delete`\nand `destroy`.\n\n    class Person < ActiveRecord::Base\n      has_many :pets\n    end\n\n    person.pets.destroy(1)\n    # => OK, returns the destroyed object\n\n    person.pets.destroy("2")\n    # => OK, returns the destroyed object\n\n    person.pets.delete(1)\n    # => ActiveRecord::AssociationTypeMismatch\n\n    person.pets.delete("2")\n    # => ActiveRecord::AssociationTypeMismatch\n\nAdding support for deleting with a fixnum or string like\n`destroy` method. Backport of #6511.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6547', 'title': u'Add support for CollectionAssociation#delete by Fixnum or String'}, {'body': u"Tests are a bit lame, but relevant I guess. Let me know if you think they're unnecessary.\n\nRelates to #6536.\n\nas_json should return the closest Ruby representation it can. `nil`, `true`, and `false` are all simple singletons that can be represented easily without using a string representation.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6546', 'title': u'True, False, and Nil should be represented in as_json as themselves.'}, {'body': u"*exists?* finder method now returns *false* with the *false* argument\n\n```ruby\nTopic.exists?(false)\n=> false\n```\n\nI would like to propose this solution. I think it may be acceptable.\nChanges don't affect on any other cases.\nDiscussion in issue #6431.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/406a9d04de19cb80e798862b9772f491?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6544', 'title': u'exists?(false) returns false'}, {'body': u'  Assertions on file permissions only pass with some combinations of\nfile create mode and the process file mode creation mask. This mask\nshould be applied on the file create mode before related assertions.\n\n  I needed to raise the permissions allowed by my file mode creation\nmask to make the tests on File#atomic_write pass. It fix these tests\nfor any umask value.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a0b419452eceda9515088289b3a66e14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6541', 'title': u'Make  tests pass with umask'}, {'body': u'Test was failing against JRuby. \n\nIt loads like [Constant3 Constant1]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6535', 'title': u'JRuby return different Array for module contents.'}, {'body': u'This is a back-port of rails/rails#6525. See the commit notes there for\ndetails.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c2a5fff725fde524bb84503528bd1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6532', 'title': u'Exceptions like Interrupt should not be rescued in tests.'}, {'body': u'This is a back-port of rails/rails#6525. See the commit notes there for\ndetails.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c2a5fff725fde524bb84503528bd1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6531', 'title': u'Exceptions like Interrupt should not be rescued in tests.'}, {'body': u'rails/rails#6525 back-ported to 3-2-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c2a5fff725fde524bb84503528bd1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6530', 'title': u'Exceptions like Interrupt & NoMemoryError should not be rescued in tests (for 3-2-stable)'}, {'body': u'removed last instances of encoding aware from master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c6186a95958ec40ebdff8a43088f745b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6529', 'title': u'encoding aware removal. Not required in master!'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6528', 'title': u'update Gemfile template to 1.9 hash syntax'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6527', 'title': u'Add tests to delete by fixnum or string id with has many through associations'}, {'body': u"Hi,\n\nI'm interested in using the ActiveSupport::Testing::Performance module and was surprised to see that it requires and calls code from ActionView.  I'd like to use this module in a context without ActionView, and now that we've moved NumberHelpers to ActiveSupport (https://github.com/rails/rails/pull/6315), we can do this.\n\nIn this pull request I'm changing ActiveSupport::Testing::Performance to use ActiveSupport::NumberHelper instead of ActionView::Helpers::NumberHelper.  Also, to my knowledge this logic was untested, so I have added tests for the formatting logic (which pass before and after the code change).\n\nAny and all feedback is welcome.\n\nThanks!\n-Andrew.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aed424af11b9f92cca6c051f75f013b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6526', 'title': u'Decoupling ActiveSupport from ActionView'}, {'body': u"Neither Test::Unit nor MiniTest rescue exceptions like Interrupt or\nNoMemoryError, but ActiveSupport::Testing::SetupAndTeardown#run which\noverrides MiniTest::Unit::TestCase#run currently rescues them.\n\nRescuing an Interrupt exception is annoying, because it means when you\nare running a lot of tests e.g. when running one of the rake test tasks,\nyou cannot break out using ctrl-C.\n\nRescuing exceptions like NoMemoryError is foolish, because the most\nsensible thing to happen is for the process to terminate as soon as\npossible.\n\nThis solution probably needs some finessing e.g. I'm not clear whether\nthe assumption is that only MiniTest is supported. Also early versions\nof MiniTest did not have this behaviour. Finally\nActiveSupport::Testing::Performance also suffers from the same\nproblem, but I have not fixed it here.\n\nIntegrating with Test::Unit & MiniTest has always been a pain. It would\nbe great if both of them provided sensible extension points for the kind\nof things that both Rails and Mocha want to do, but in the meantime\nhopefully this is of some help.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c2a5fff725fde524bb84503528bd1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6525', 'title': u'Exceptions like Interrupt & NoMemoryError should not be rescued in tests.'}, {'body': u"This is for #5261.\n\nThis pull request fixes the issue outlined in https://github.com/rails/rails/commit/302c912.\n\nIt takes the approach that bi-directional associations need to be kept in sync by the developer, not the framework. Also, if the database is modified via SQL or a method that is a fancy wrapper for SQL (like increment_counter), it is the developer's responsibility to re-synchronize the models. I believe that this is an acceptable approach and it is one that is commonly implemented by other ORMs such as Hibernate.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4d4c378e3a10e2d01a636a33c359734c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6524', 'title': u'Identity map master'}, {'body': u'Commits:\n\n- remove unnecessary require\n\n    AS::Multibyte are no longer required by access and filters string\n    core extensions.\n\n- make AS::Multibyte::Chars work w/o multibyte core ext\n\n    Use ActiveSupport::Multibyte::Chars.new instead of String#mb_chars.\n    It allows to use ActiveSupport::Multibyte::Chars without requiring\n    String multibyte core extension.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6522', 'title': u'ActiveSupport require and dependencies'}, {'body': u"FinderMethods#construct_limited_ids_condition will raise ThrowResult if the limited reflection comes back empty. The other callers of #construct_limited_ids_condition handle this exception (more specifically, the callers of construct_relation_for*), but #exists? didn't until now.\n\nThe included test hits this condition, and after the tests runs green.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4493ae064e6e2841f376fd1dc12b7ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6521', 'title': u'Fix that #exists? can blow up with ThrowResult exception'}, {'body': u'Cherry picked as discussed [here](https://github.com/rails/rails/commit/dd8c6f05562ff37060bf102c6ab80dd4f0b4cdbd#-P0)\n\ncc @carlosantoniodasilva\n\nP.S. was not able to run the test suite, trying to figure it out.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6519', 'title': u'Display annotations in coffee files'}, {'body': u"Previous my fix was reverted (See https://github.com/rails/rails/commit/0a8aec2c97ab93721d5671555f22975da0a20422 ).\nAnd on master, the AR::Base is already loaded durring initialization.\n\nTo resolve original issues and AR::Base loading problem, I added 3 commits.\n\nFirst: I added a testcase for original issue.\nSecond: I changed the timing of AR::Base loading (some tests weren't success).\nThird: I fixed original issues.\n\n/cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6518', 'title': u'(Try again) Fix #5847 and #4045.'}, {'body': u'Passing a falsey option value for a validator currently causes that validator to\nbe enabled, just like "true":\n\n    ActiveModel.validates :foo, :presence => false\n\nThis is rather counterintuitive, and makes it inconvenient to wrap `validates` in\nmethods which may conditionally enable different validators.\n\nAs an example, one is currently forced to write:\n\n      def has_slug(source_field, options={:unique => true})\n        slugger = Proc.new { |r| r[:slug] = self.class.sluggify(r[source_field]) if r[:slug].blank? }\n        before_validation slugger\n        validations = { :presence => true, :slug => true }\n        if options[:unique]\n          validations[:uniqueness] = true\n        end\n        validates :slug, validations\n      end\n\nbecause the following reasonable-looking alternative fails to work as expected:\n\n      def has_slug(source_field, options={:unique => true})\n        slugger = Proc.new { |r| r[:slug] = self.class.sluggify(r[source_field]) if r[:slug].blank? }\n        before_validation slugger\n        validates :slug, :presence => true, :slug => true, :uniqueness => options[:unique]\n      end\n\n(This commit includes a CHANGELOG entry, a test, and all activemodel and activerecord tests pass as before.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/04f3babefa4ba85e7904b40e6846e217?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6517', 'title': u"Don't enable validations when passing false hash values to ActiveModel.validates"}, {'body': u'Passing a falsey option value for a validator currently causes that validator to\nbe enabled, just like "true":\n\n    ActiveModel.validates :foo, :presence => false\n\nThis is rather counterintuitive, and makes it inconvenient to wrap `validates` in\nmethods which may conditionally enable different validators.\n\nAs an example, one is currently forced to write:\n\n      def has_slug(source_field, options={:unique => true})\n        slugger = Proc.new { |r| r[:slug] = self.class.sluggify(r[source_field]) if r[:slug].blank? }\n        before_validation slugger\n        validations = { :presence => true, :slug => true }\n        if options[:unique]\n          validations[:uniqueness] = true\n        end\n        validates :slug, validations\n      end\n\nbecause the following reasonable-looking alternative fails to work as expected:\n\n      def has_slug(source_field, options={:unique => true})\n        slugger = Proc.new { |r| r[:slug] = self.class.sluggify(r[source_field]) if r[:slug].blank? }\n        before_validation slugger\n        validates :slug, :presence => true, :slug => true, :uniqueness => options[:unique]\n      end\n\n(This commit includes a test, and all activemodel and activerecord tests pass as before.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/04f3babefa4ba85e7904b40e6846e217?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6516', 'title': u"Don't enable validations when passing false hash values to ActiveModel.validates"}, {'body': u'...generator. Closes #6311', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6515', 'title': u'Set X-Frame-Options to SAMEORIGIN and add description to application.rb ...'}, {'body': u"Without this patch, `number_to_currency()` treats `-0.0` as if it were a positive number and fails to apply the `:negative_format` option.  \n\nI tried to write this to support multiple rubies.  In modern rubies, it will invoke `phase()` but looking at the docs for older rubies I couldn't find a satisfactory alternative, and had to settle for slicing the first char off of `to_s()`.  Please tell me there's a better way. :-)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/908c9abc72ab86111a153b11cb584f26?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6512', 'title': u'Fix handling of negative zero in number_to_currency'}, {'body': u'I found the next issue between CollectionAssociation `delete`\nand `destroy`.\n\n    class Person < ActiveRecord::Base\n      has_many :pets\n    end\n\n    person.pets.destroy(1)\n    # => OK, returns the destroyed object\n\n    person.pets.destroy("2")\n    # => OK, returns the destroyed object\n\n    person.pets.delete(1)\n    # => ActiveRecord::AssociationTypeMismatch\n\n    person.pets.delete("2")\n    # => ActiveRecord::AssociationTypeMismatch\n\nAdding support for deleting with a `fixnum` or `string` like\n`destroy` method.\n\nAlso, fixes #6509.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6511', 'title': u'Add support for CollectionAssociation#delete by Fixnum or String'}, {'body': u'I found the next issue between CollectionAssociation `delete` and `destroy`:\n\n    class Person < ActiveRecord::Base\n      has_many :pets\n    end\n\n    person.pets.destroy(1)\n    # => OK, returns the destroyed object\n\n    person.pets.destroy("2")\n    # => OK, returns the destroyed object\n\n    person.pets.delete(1)\n    # => ActiveRecord::AssociationTypeMismatch\n\n    person.pets.delete("2")\n    # => ActiveRecord::AssociationTypeMismatch\n\nI was not sure about adding support for delete by fixnum or string.\nThat\'s why i prefer to remove destroy by fixnum or string option.\nI sincerely think that is better to delete or destroy passing a record\nor an object.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6509', 'title': u'Remove support for CollectionAssociation#destroy by Fixnum or String'}, {'body': u"allow routes like\n\n```ruby\nget :index => 'a#b'\n```\n\nin addition to\n\n```ruby\nget 'index' => 'a#b'\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ba162f227525e37d91a86ef11789cc98?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6508', 'title': u'Allow simple symbols in routes'}, {'body': u'- Change hash rocket for new notation', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9105810d4c65850d3f4a98f0ee7ea3ae?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6504', 'title': u'code cleanup for benchmarkable_test'}, {'body': u'Rake tasks:\n\n* guides:generate (executes generate:html)\n* guides:validate\n* guides:generate:html\n* guides:generate:kindle\n* help (default) - the text is almost the same than in rails_guides/generator.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40bd727b22d74930f292b63d45a71b07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6502', 'title': u'[Guides] refactor rakefile to have a :guides namespace and a task that shows help'}, {'body': u'Rails currently supports this:\nPerson.pluck(:id) # SELECT people.id FROM people\n\nI added two possibilities:\nPerson.pluck(:id) # SELECT people.id FROM people\nPerson.pluck([:id, :name]) # SELECT people.id, people.name FROM people\nPerson.pluck(:id, :name) # SELECT people.id, people.name FROM people\n\nBecause I made some stupid mistakes while updating my own fork of rails/rails this is a new fork and a follow up of the discussion located here: https://github.com/rails/rails/pull/5472', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f2b113a55e42f840085008edd2938d57?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6500', 'title': u'ActiveRecord::Calculations#pluck accepts multiple columns'}, {'body': u"rails plugin new --full generates a full rails application as an engine, but the --help description suggests that the --full option just adds integration testing... it's much more than that", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0dba10774351090583ce306ef0ca805b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6499', 'title': u'Clarify and correct the description for the --full option of the plugin_...'}, {'body': u'Solve this issue:\n```\ncustomer.address.street # => "Quiet Road"\ncustomer.address_street = "Noisy Road"\ncustomer.address.street # => "Quiet Road"\n```\nWhere:\n```\nclass Customer\n  composed_of :address, :mapping => [ %w(address_street street), %w(address_city city) ]\nend\n\n\nclass Address\n  attr_reader :street, :city, :country\n\n  def initialize(street, city, country)\n    @street, @city, @country = street, city, country\n  end\nend\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ceb745dc6fd0e274005d8c9637cca631?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6498', 'title': u'Clear aggregation cache after setter method calls.'}, {'body': u"sanitize is not always required so we cannot force it by default. let's just\nwhitelist protocols and everybody's happy\n\nMy commit was wrong - I didn't realize how it will impact on `raw` text.\n\n@tenderlove also should I bump gem version of rails_autolink ? It's bugfix so I just pushed it to the 1.0.8", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6495', 'title': u"auto_link shouldn't always sanitize"}, {'body': u'Backports 3fbc8f385bfd5e486cdbd4da6c1604f5c312770b to get rid of unneeded memcache require', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6494', 'title': u'memcache require not needed for cache store'}, {'body': u"One little thing...all the methods in this file are normal method followed by bang....until you get down to the end...this PR just switches the order of `deep_symbolize_keys` and `deep_symbolize_keys!` to follow that convention.\n\nI know it's small...but it's been bugging me.\n\nI think this is last time I touch this file...maybe...hopefully...not sure what else I could do to it. ;)\n\ncc/ @rafaelfranca", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/185fff6d3aa5c70e337fa84b302050b1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6493', 'title': u'Reorder deep_symbolize_keys methods'}, {'body': u"Third attempt of https://github.com/rails/rails/pull/6488\n\nI apologize for the mess.\n\n@rafaelfranca this is probalby more what you had in mind (I squashed all my commits, and left @yahonda's separate).\n\n@tenderlove could you review this one?\n\nOh, I upgraded to ruby 1.9.3 (was on 1.9.2), and I can run all the sqlite3 and postgresql tests with no errors:\n\n    postgresql\n    Finished tests in 231.744746s, 14.9475 tests/s, 45.5501 assertions/s.\n    3464 tests, 10556 assertions, 0 failures, 0 errors, 32 skips\n\n    sqlite3\n    Finished tests in 179.844340s, 18.5438 tests/s, 56.3932 assertions/s.\n    3335 tests, 10142 assertions, 0 failures, 0 errors, 12 skips", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/27598e1b77ce41fb0bd8a6fc4a3715d4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6492', 'title': u'Fair connection pool2'}, {'body': u'I added too the result of running `rails generate controller welcome index`:\n\n    create  app/controllers/welcome_controller.rb\n      route  get "welcome/index"\n\nI think it\'s important because without it, the user don\'t know which files are generated and that some routes are generated either.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40bd727b22d74930f292b63d45a71b07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6491', 'title': u'[getting started] Update Setting the Application Home Page to show the generated get "welcome/index" route'}, {'body': u'This is a second attempt of https://github.com/rails/rails/pull/6416\n\nIt makes the connection pool "fair" with respect to waiting threads.  I\'ve done some more measurements here: http://polycrystal.org/2012/05/24/activerecord_connection_pool_fairness.html  The patch is also cleaned up compared to the first attempt; the code is much more readable.\n\nIt includes some test fixes from @yahonda that this patch triggered (though the failures seem unrelated to the code)\n\nI am still getting test failures, but I see the same failures against master: https://gist.github.com/2788538  And none of these seem related to the connection pool.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/27598e1b77ce41fb0bd8a6fc4a3715d4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6488', 'title': u'Make connection pool fair'}, {'body': u'At 1bd4d1c67459a91415ee73a8f55d2309c0d62a87 was added Range#sum\noptimized version for arithmetic progressions. This improvment injected\na defect with not integer range boundaries. The defect was fixed by\ne0adfa82c05f9c975005f102b4bcaebfcd17d241. The second commit really\ndisabled optimization at all because in Ruby integer-valued numbers are\ninstances of Fixnum and Bignum classes. We should #use is_a?\n(#kind_of?) method instead #instance_of? to check if value is numerical:\n\n    1.class                 # => Fixnum\n    1.instance_of?(Integer) # => false\n    1.is_a?(Integer)        # => true\n\n    -100_000_000_000.class                 # => Bignum\n    -100_000_000_000.instance_of?(Integer) # => false\n    -100_000_000_000.is_a?(Integer)        # => true\n\nMoreover original implementation of Range#sum has a defect with reverse\nrange boundaries. If the first boundary is less than the second range is\nempty. Current commit fixes and tests this case too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6487', 'title': u'Fix Range#sum optimized version'}, {'body': u'We should sanitize it to avoid javascript:// xss.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6485', 'title': u'auto_link sanitize output'}, {'body': u'This fixes changes made in railties/lib/rails/paths.rb in\n4001835db00ce44cb75bca33ec02cd76b8ccc790. This also makes sure failures\nin build 4008.1[1] pass.\n\nAlso closes #6482 and #6473\n\n[1] http://travis-ci.org/#!/rails/rails/jobs/1429671/L203', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6483', 'title': u'Return Pathname from Rails::Paths::Path#paths. Fixes build 4008.1'}, {'body': u'This fixex build 4008.1[1] because of the changes made in\n\n4001835db00ce44cb75bca33ec02cd76b8ccc790\n\n[1] http://travis-ci.org/#!/rails/rails/jobs/1429671', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6482', 'title': u'Fixes build 4008.1'}, {'body': u'RoutePresenter has been removed, this test is not needed. Related conversation:\n\nhttps://github.com/rails/rails/commit/c3e3102904c98a6e05bee33616288323278692b8#commitcomment-1374990\n\n```shell\n~/documents/projects/rails/railties (schneems/sextant-routes)   \n\u2192 bundle exec rake test:regular TEST=test/application/route_inspect_test.rb \n/Users/schneems/.rvm/rubies/ruby-1.9.3-rc1/bin/ruby -w -I"lib:test:/Users/schneems/Documents/projects/rails/railties/../activesupport/lib" -I"/Users/schneems/.rvm/gems/ruby-1.9.3-rc1@railscore/gems/rake-0.9.2.2/lib" "/Users/schneems/.rvm/gems/ruby-1.9.3-rc1@railscore/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb" "test/application/route_inspect_test.rb" \nRun options: --seed 18733\n\n# Running tests:\n\n..............\n\nFinished tests in 0.223237s, 62.7136 tests/s, 85.1113 assertions/s.\n\n14 tests, 19 assertions, 0 failures, 0 errors, 0 skips\n\n```\n\nFixes the tests for route_inspect_test', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6481', 'title': u'Remove Unnecessary Test from route_inspect_test'}, {'body': u'backport PR', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6479', 'title': u'Patch 9, xss in legacy auto_link'}, {'body': u"I got feeling that solution for https://github.com/rails/rails/issues/1951 are incorrect by nature. We include path namespacing in partial so even if we define custom resolver or just modify append_view_path we can't avoid namespacing. I am not sure how to fix this, but for my needs (defining one partial template for front/backend of my application using to_partial_path) this simple fix works. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2b92928f3f39951cc97dc02a59fbb117?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6478', 'title': u'Absolute partial paths need to be preserved in namespace'}, {'body': u"PQstatus doesn't properly test if future operations will succeed. A\nPQping function is added to libpq in PostgreSQL 9.1, but if we rely\non it, everyone on earlier versions of Postgres is out of luck,\nand the pg gem wouldn't have the 'fix' until the next release.\n\nThanks to @cbrecabarren and @ged for handling all the dirty details.\n\nCloses #3392.\n\n/cc @tenderlove @jonleighton", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6477', 'title': u'Properly discover a connection is closed in postgresql_adapter'}, {'body': u"I started implementing a responsive design for the Rails guides. I've only tested it on Apple laptops & portable devices, but I wanted to get feedback before going much further. What further do we need to do to pull this in and get it deployed?\n\n(Note: I originally requested this on lifo/docrails and was asked to send it here instead)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9d778043b9c008cf3f5c6bc52e648c53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6475', 'title': u'Responsive guides'}, {'body': u'commit 4001835db00ce44cb75bca33ec02cd76b8ccc790', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6473', 'title': u'Build fix for pathname removal.'}, {'body': u'...15295bb11d', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6472', 'title': u'subsequent commit of use File.join commit:4e5175e9570304a5efd148d11b062f15295bb11d'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6471', 'title': u'Fixes possible backward incompatibility'}, {'body': u"This helps to render url's correctly in templates when rendering them in processes where request object is not present.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f7412b373affd1d6db10752cf5d69315?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6468', 'title': u'Adding ability to pass protocol in image_path helper as option'}, {'body': u"Fixes #6464\n\nSynchronize the contents of the release method in ConnectionPool due to\nerrors when running in high concurrency environments.\n\n    Detected invalid hash contents due to unsynchronized modifications with concurrent users\n    org/jruby/RubyHash.java:1356:in `keys'\n    /usr/local/rvm/gems/jruby-1.6.7@new_import/gems/activerecord-3.2.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:294:in `release'\n    /usr/local/rvm/gems/jruby-1.6.7@new_import/gems/activerecord-3.2.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:282:in `checkin'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d35d964695abd1bac108370eaf001af3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6467', 'title': u'Synchronize the body of the ConnectionPool#release method to improve thread safety.'}, {'body': u'...deep_*_keys to use deep_transform_keys.\n\nGeneralizes the deep_stringify_keys and friends that were added by @lucashungaro.\n\nOpen to suggestions.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/185fff6d3aa5c70e337fa84b302050b1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6466', 'title': u'Add Hash#deep_transform_keys and Hash#deep_transform_keys! Also convert ...'}, {'body': u'\n\nAn AR ConnectionSpec `wait_timeout` is pre-patch used for three\ndifferent things:\n\n* mysql2 uses it for MySQL\'s own wait_timeout (how long MySQL\n  should allow an idle connection before closing it), and\n  defaults to 2592000 seconds.\n* ConnectionPool uses it for "number of seconds to block and\n  wait for a connection before giving up and raising a timeout error",\n  default 5 seconds.\n* ConnectionPool uses it for the Reaper, for deciding if a \'dead\'\n  connection can be reaped. Default 5 seconds.\n\nPreviously, if you want to change these from defaults, you need\nto change them all together. This is problematic _especially_\nfor the mysql2/ConnectionPool conflict, you will generally _not_\nwant them to be the same, as evidenced by their wildly different\ndefaults. This has caused real problems for people #6441 #2894\n\nBut as long as we\'re changing this, forcing renaming the\nConnectionPool key to be more specific, it made sense\nto seperate the two ConnectionPool uses too -- these two\ntypes of ConnectionPool timeouts ought to be able to be\nchanged independently, you won\'t neccesarily want them\nto be the same, even though the defaults are (currently)\nthe same.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6463', 'title': u'ConnectionPool wait_timeout no longer used for different types of timeouts. #6441'}, {'body': u'Rebased version of pull #3393', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/59436ecd4fe6ad7c34f67654d839f05f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6462', 'title': u'Add license field to gemspecs, by Matt Griffin'}, {'body': u'Bring the functionality of [Sextant](http://github.com/schneems/sextant) natively to Rails 4. Rather than having to initialize your Rails application ever time you run `$ rake routes` we can utilize the currently running server to generate routes in much less time. To view routes go to `/rails/info/routes`, the section in `<pre>` will match `$ rake routes`\n\n![](http://f.cl.ly/items/2q2U3l2S340X1Q3i0K2F/Screen%20Shot%202012-05-22%20at%205.36.39%20PM.png)\n\ncc/ @pixeltrix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6461', 'title': u'View your Routes without waiting on Rake'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5cba606090e5f29f910274796748f20a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6455', 'title': u'Remove unnecessary comment.'}, {'body': u'There were some classes no longer exists, it needs some review, mainly in the Rack::Builder and middlewares part.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40bd727b22d74930f292b63d45a71b07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6454', 'title': u'[guides] Update rails on rack'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6453', 'title': u'Added session.keys and session.values back to ActionDispatch::Request::Session'}, {'body': u'Since all date related helpers share the same behavior, I decided to remove some unnecessary duplication.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eb96709a889695c9d0fe3edf4648ab7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6452', 'title': u'Refactor date related input helpers'}, {'body': u"Ruby 1.8 raises a TypeError when trying to modify a frozen Hash, while\nRuby 1.9 raises a RuntimeError instead. Also, Ruby < 1.9.3 uses a\nlowercase 'hash' in the exception message while Ruby >= 1.9.3 uses an\nuppercase 'Hash' instead. This commit normalizes those issues in the\ntest case.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22bb3e56828870ee9a0dd93aeadbe04a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6451', 'title': u'Fixes the build break caused by 9ee8528 in #6445.'}, {'body': u"A version of #6449 on the master branch.\n\nCurrently, running rails generate resource admin/blog_post gives the following:\n\n```ruby\nMyApplication::Application.routes.draw do\n  namespace :admin do resources :blog_posts end\nend\n```\n\nThis patch fixes the whitespace, so it's generated as follows:\n\n```ruby\nMyApplication::Application.routes.draw do\n  namespace :admin do\n    resources :blog_posts\n  end\nend\n```\n\nIt's something that's been bugging me for ages, so I figured it was worth fixing. \n\nAll feedback welcome. Thanks guys!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6450', 'title': u'Master branch: Fixed generated whitespace in routes when using namespaced resource.'}, {'body': u"Currently, running `rails generate resource admin/blog_post` gives the following:\n\n```ruby\nMyApplication::Application.routes.draw do\n  namespace :admin do resources :blog_posts end\nend\n```\n\nThis patch fixes the whitespace, so it's generated as follows:\n\n```ruby\nMyApplication::Application.routes.draw do\n  namespace :admin do\n    resources :blog_posts\n  end\nend\n```\n\nIt's something that's been bugging me for ages, so I figured it was worth fixing. I haven't checked to see if this is still an issue on master, but I'll add another PR if so.\n\nThanks guys!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6449', 'title': u'Fixed generated whitespace in routes when using namespaced resource.'}, {'body': u"I was looking for instructions on backporting changes the other day and\nwasn't able to find it anywhere. I updated the contrib guides based on\nthe disccusion in #6420 and #6215.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22bb3e56828870ee9a0dd93aeadbe04a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6447', 'title': u'Added instructions for backporting changes to guides.'}, {'body': u'this pull request fixes #6328 and it was also discussed on https://github.com/rails/rails/pull/6436', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6446', 'title': u'Mini xml 4'}, {'body': u'This is a 3-2-stable backport for #6420 which was merged into master.\n\nCurrently, when saving a frozen record, an exception would be thrown\nwhich causes a rollback. However, there is a bug in active record that\n"defrost" the record as a side effect:\n\n    >> t = Topic.new\n    => #<Topic id: nil, ...>\n    >> t.freeze\n    => #<Topic id: nil, ...>\n    >> t.save\n    RuntimeError: can\'t modify a frozen Hash\n    >> t.frozen?\n    => false\n    >> t.save\n    => true\n\nThis patch fixes the bug by explictly restoring the frozen state on the\nattributes Hash after every rollback.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22bb3e56828870ee9a0dd93aeadbe04a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6445', 'title': u'Restore the frozen state on rollback. (Backports #6420)'}, {'body': u"I didn't know *hstore*, I didn't know that hstore_test.rb was skipped.\nI think that we should create *hstore* when building databases.\n\nor should guides be updated ?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6444', 'title': u'Create hstore extension when building PostgreSQL databases (for rails contributor).'}, {'body': u'Made the change as per the following text in [routing guide](http://edgeguides.rubyonrails.org/routing.html#using-root):-\n*"You should put the root route at the top of the file,\nbecause it is the most popular route and should be matched first."*\n\nHowever, if root is best left at bottom. We will have change text in guide. so both things don\'t contradict', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cb0b42e452cd13d469565a23a8abe441?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6440', 'title': u'Move root method at TOP of routes file'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8853f712852b03ba6646b59b1723f44d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6439', 'title': u'refactor lazy_load_hooks load position, fix #6435'}, {'body': u'The Gemfile of new application uses ruby 1.9 hashes. Gem method of\ngenerators should use them too. It prevents from mixing two kinds of\nsyntax in one file.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6437', 'title': u'Use new hash syntax for generators gem method'}, {'body': u'fixes #6328', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6436', 'title': u'Mini xml'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8853f712852b03ba6646b59b1723f44d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6435', 'title': u'remove useless require'}, {'body': u'Writing some tests discovered noisy bug with delete_if behaviour when trying to compare key with symbol.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6434', 'title': u'Bugfix. delete_if accepts symbols and strings indifferently for key comparsion.'}, {'body': u'Little whitespace fix too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6433', 'title': u'Fixed typo new_defautls -> new_defaults.'}, {'body': u"This is an old bug where rake db:schema:dump imported all columns with the type enum as :limit => 0, making schema.rb don't work on with anything that relies on it(db:schema:load).\n\nThis issue were raised here: https://rails.lighthouseapp.com/projects/8994/tickets/997-dbschemadump-saves-enum-columns-as-varchar0-on-mysql\n\nAnd there's other posts on the web about it.\n\nI solved it by setting the limit as the biggest enum value string size. I wonder if shouldn't we just set it as like 255 to only make it work.\n\nI think it's also time that rails supports enum columns. There's plugins that do that, but I would gadly make it work.\n\nFeel free to comment about the code or the regexp, I will also gadly change it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56e905e1e4a9137194df95dce0a73a30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6432', 'title': u'Fixed bug where enums limit were getting set as 0'}, {'body': u'Got hit by this bug today. Credits should go to Josep M. Bach <josep.m.bach@gmail.com>, see #881.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6429', 'title': u'Fix bug when Rails.application is defined but is nil. See #881'}, {'body': u"Re-opening #6425 for further discussion as requested by @josevalim in #6427\n\nThis is a fix for #6404\n\nThe Template cache in the Resolver can be accessed by multiple threads similtaneously in multi-threaded environments. The cache is implemented using a Hash, which isn't threadsafe in all VMs (notably JRuby).\n\nThis includes three commits, the first puts a global lock around the whole process. The second improves this to add a more granular lock. Finally, some readability improvements for the caching logic.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6428', 'title': u'Make the Resolver template cache threadsafe'}, {'body': u'This is a backport of the following for 3-2-stable:\n685192bbcba7f887236ddf43ebb7d7dcf7409bd9 and\n719b008f1dae30c5fb6d09a371ae8d949c867a0c', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6427', 'title': u'Resolver concurrency fix, backport for 3-2-stable'}, {'body': u"This was already applied to 3-2 in commit 565c1b0a0772ac6cf91c77e9285806f7b028614c, so here's the 'forward-port'.\n\nThis addresses an issue where in multi-threaded environments\nmultiple threads can attempt to compile a template at the same time,\nwhich occasionally causes particular templates to end up in a bad\nstate.\n\nSo, add synchronization such that only a single thread can attempt to\ncompile a template at one time.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6426', 'title': u'Prevent concurrent compilation of templates - closes #6400'}, {'body': u"Replacement for #6412\n\nThis is a fix for #6404\n\nThe Template cache in the Resolver can be accessed by multiple threads\nsimiltaneously in multi-threaded environments. The cache is implemented\nusing a Hash, which isn't threadsafe in all VMs (notably JRuby).\n\nThis includes two commits, the first puts a global lock around the whole process.\nThe second improves this to add a more granular lock.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6425', 'title': u'Resolver concurrency fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f16c5c991a2412243d8d00054e5dab2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6424', 'title': u'Refactoring: just turn unless/else into if/else'}, {'body': u'closes #6310\n\nbackported https://github.com/rails/sprockets-rails/pull/11 to 3-2-stable branch', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6423', 'title': u"assets: don't add extension if other given and file exists"}, {'body': u"Here's an updated version of #6412 with a more detailed commit message (@drogus)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6422', 'title': u'Resolver concurrency fix'}, {'body': u'My first patch for rails!\n\nWhen saving a frozen? record, active record would raise an exception to complain about the frozen attributes, rollback the transaction. However, it also has the side effect of unfreezing the record after the rollback. This behaviour is undesirable and incorrect (saving a frozen? record twice in a roll would fail for the first time and succeed in the second time). This patch fixes the bug by explicitly restoring the frozen? state after a rollback.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22bb3e56828870ee9a0dd93aeadbe04a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6420', 'title': u'Restore frozen state on rollback, fixes #6417'}, {'body': u"When saving a `frozen?` record, active record would raise an exception to complain about the frozen attributes, rollback the transaction. However, it also has the side effect of unfreezing the record after the rollback. This behaviour is undesirable and incorrect (saving a `frozen?` record twice in a roll would fail for the first time and succeed in the second time). This patch fixes the bug by explicitly restoring the `frozen?` state after a rollback.\n\nThis is my first patch for rails, so I apologize in advance if this should go in master instead of 3-2-stable. I can reapply this to master if that's more appropriate.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22bb3e56828870ee9a0dd93aeadbe04a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6419', 'title': u'Restores frozen state after rollback, fixes #6417 (for 3-2-stable)'}, {'body': u"This is the diff in #6238 applied to 3-2-stable.\n\n/cc @tenderlove Thank you for merging #6238. Can you please consider this one as well, so Heroku app devs don't have to wait for Rails 4 to get the fix?\n\nThanks so much!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d7b97642d7aeaf1011ec19e5779144e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6418', 'title': u"Postgresql doesn't accept limits on binary (bytea) columns (for 3-2-stable)"}, {'body': u'Introduction: I\'m using JRuby in a Java servlet container to run an application that uses ActiveRecord.  This is a fully multithreaded environment where a thread pool services http requests, possibly in parallel.  I\'ve been having problems with timeouts when obtaining a database connection with only moderate concurrent requests.\n\n(Reducing the size of the thread pool to match that of the connection pool may be one option, but I am running multiple apps in the servlet container all sharing one thread pool...  So for now, the thread pool is 32 and the connection pool is 5).\n\nI\'m putting this patch out there to solicit comments.  I think it needs more testing.  I may have a chance this week to test in a real application, but for now I only have my two benchmark scripts ar_test.rb (for JRuby) and ar_test_mri.rb. Notably, I have not tested the behavior when connections are removed explicitly or removed by the reaper.\n\nI also do not understand the distinction between PoolFullError and ConnectionTimeoutError.  I also introduced an @available array of connections ready to be checked out.  At the time this seemed like a reasonable idea, but I had to make some inelegant additions (essentially everywhere @connections is modified, @available must be also, e.g. #clear_reloadable_connections).\n\nI apologize for the length of this report.\n\ntl;dr **the fairness patch reduces outliers in time to acquire a connection but needs review and testing**\n\nThe test suite passes, tested on Linux/Ruby-1.9.2-p290.\n\n    activerecord$ bundle exec rake test_sqlite3\n    Finished tests in 193.646555s, 17.1859 tests/s, 52.2653 assertions/s.\n    3328 tests, 10121 assertions, 0 failures, 0 errors, 12 skips\n\n----\n\nThis patch makes the connection pool "fair" in the first-come, first-served sense.  It also avoids using the Timeout class (which spawns a dedicated thread for each connection checkout attempt that needs to to wait with a timeout).\n\nI\'ve added two tests that fail before applying this patch.  The first ensures the connection pool is fair by queuing up several waiting threads and ensuring they acquire connections in order as connections are made available.  The connections are trickled in one by one because we don\'t actually care when two connections become available that order is strictly preserved.\n\nThe second queues up two groups of waiting threads, then checks in enough connections for group 1 all at once.  The test ensures that only the group 1 threads acquired connections.\n\nA third test is the money test but was removed because it was unreliable.  It attempted to test latency in a Java-servlet-like environment by setting up a thread pool and having each thread check connections in and out.\n\nInstead, I used ar_test.rb to obtain histograms of the time per simulated request (checkout connection; sleep 0.01s; checkin connection).\n\nTests with ar_test.rb and JRuby 1.6.6\n=====================================\n\nActiveRecord 3.2.3, JRuby 1.6.6\n-------------------------------------\n\n    $ bundle exec jruby --1.9 ar_test.rb\n    10000 reqs in 24.666 = 405.4 req/s\n    min/max/mean 0.01/2.37/0.08\n    histogram\n    [0.00,0.03) ooooooooooooooo\n    [0.03,0.05) o\n    [0.05,0.08) oooooooooooooooooooooooooooooooo\n    [0.08,0.10) ooooo\n    [0.10,0.13) o\n    [0.13,0.15) oooooo\n    [0.15,0.18) o\n    [0.18,0.20) oo\n    [0.20,0.22) o\n    [0.22,0.25) oo\n\nActiveRecord edge without fairness patch JRuby 1.6.6\n----------------------------------------------------\n\n    Gave up after long time.  Many errors like this (notice time much longer than 5 s timeout):\n\n    took 120.067s to acquire and release\n    execution expired /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:106:in `await\'\n\n\nActiveRecord edge with fairness patch, JRuby 1.6.6\n--------------------------------------------------\n\n    $ bundle exec jruby --1.9 ar_test.rb\n    ActiveRecord::VERSION 4.0.0.beta\n    10000 reqs in 24.8 = 403.7 req/s\n    min/max/mean 0.06/1.48/0.08\n    histogram\n    [0.00,0.03) \n    [0.03,0.05) \n    [0.05,0.08) ooooooooooooooooooooooooooooooooooooooooooooooooo\n    [0.08,0.10) ooooooooooo\n    [0.10,0.13) o\n    [0.13,0.15) o\n    [0.15,0.18) o\n    [0.18,0.20) o\n    [0.20,0.22) o\n    [0.22,0.25) o\n\nTests with ar_test_mri.rb and JRuby 1.6.6\n=====================================\n\nActiveRecord 3.2.3, Ruby 1.9.2-p290\n-------------------------------------\n\n    Sometimes errors like this:\n\n    could not obtain a database connection within 5 seconds (waited 5.000125524999999 seconds). The max pool size is currently 5; consider increasing it. /home/pat/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/activerecord-3.2.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:248:in `block (2 levels) in checkout\'\n\n    $ bundle exec ruby ar_test_mri.rb  # ruby 1.9.2-p290\n    ActiveRecord::VERSION::STRING 3.2.3\n    10000 reqs in 21.0 = 475.7 req/s\n    min/max/mean 0.01/4.74/0.07\n    histogram\n    [0.00,0.03) ooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n    [0.03,0.05) o\n    [0.05,0.08) o\n    [0.08,0.10) \n    [0.10,0.12) o\n    [0.12,0.15) o\n    [0.15,0.17) o\n    [0.17,0.20) o\n    [0.20,0.22) o\n    [0.22,0.25) ooo\n\nActiveRecord edge without fairness patch, Ruby 1.9.2-p290\n---------------------------------------------------------\n\n    Again, many "execution expired" errors.\n\nActiveRecord edge with fairness patch, Ruby 1.9.2-p290\n------------------------------------------------------\n\n    $ bundle exec ruby ar_test_mri.rb   # ruby 1.9.2-p290\n    ActiveRecord::VERSION::STRING 4.0.0.beta\n    10000 reqs in 21.147658059 = 472.86559921202286 req/s\n    min/max/mean 0.01/0.12/0.07\n    histogram\n    [0.00,0.03) o\n    [0.03,0.05) o\n    [0.05,0.08) ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n    [0.08,0.10) o\n    [0.10,0.12) o\n    [0.12,0.15) \n    [0.15,0.17) \n    [0.17,0.20) \n    [0.20,0.22) \n    [0.22,0.25) \n\nSo in both Ruby 1.9.2 and JRuby, ActiveRecord 3.2.3 has perhaps a better median but more variation with a few requests taking significantly longer than the others.\n\nI\'m only including ar_test_mri.rb here.  The ar_test.rb script has only had cosmetic changes and is available in this other pull request: https://github.com/rails/rails/pull/6398\n\n    require \'active_record\'\n    require \'thread\'\n\n    SHUTDOWN = Object.new.freeze    # used to shutdown threads in pool\n\n    config = {\n      \'adapter\' => \'sqlite3\',\n      \'database\' => \':memory:\'\n    }\n\n    ActiveRecord::Base.establish_connection(config)\n    ActiveRecord::Base.clear_active_connections!\n\n    times = []\n    times.extend(MonitorMixin)\n\n    work = Queue.new\n\n    thread_pool_size = 32\n    nrequests = 10000\n\n    threads = (1..thread_pool_size).map do |i|\n      Thread.new do\n        while work.pop != SHUTDOWN\n          t0 = Time.now\n          begin\n            ActiveRecord::Base.connection_pool.connection\n            sleep 0.010\n            ActiveRecord::Base.clear_active_connections!\n          rescue => err\n            puts "#{err.message} #{err.backtrace.join("\\n\\t")}"\n          ensure\n            times.synchronize { times << (Time.now - t0) }\n          end\n        end\n      end\n    end\n\n    t0 = Time.now\n\n    nrequests.times { |i| work.push i }\n    thread_pool_size.times { work.push SHUTDOWN }\n    threads.each(&:join)\n\n    elapsed = Time.now - t0\n\n    puts "ActiveRecord::VERSION::STRING #{ActiveRecord::VERSION::STRING}"\n    puts "#{nrequests} reqs in #{elapsed} = #{nrequests/elapsed} req/s"\n    puts "min/max/mean %0.2f/%0.2f/%0.2f" % [times.min, times.max, times.reduce(&:+)/times.size]\n\n    def clamp(n, min, max)\n      [[n, min].max, max].min\n    end\n\n    def hist(values, nbuckets = 10, min = values.min, max = values.max)\n      step = (max - min) / nbuckets.to_f\n      buckets = Array.new(nbuckets, 0)\n      values.each do |v|\n        i = clamp(((v - min) / step).floor, 0, nbuckets-1)\n        buckets[i] += 1\n      end\n\n      start = 0\n      buckets.each do |count|\n        print "[%0.2f,%0.2f) " % [start, start + step]\n        ntics = (count.to_f / values.size * 60).ceil # 60 screen cols\n        puts \'o\' * ntics\n        start += step\n      end\n    end\n\n    puts \'histogram\'\n    hist(times, 10, 0.00, 0.25)\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/27598e1b77ce41fb0bd8a6fc4a3715d4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6416', 'title': u'Make connection pool fair with respect to waiting threads.'}, {'body': u"I would like to start a discussion about ensuring that every helper is requireable on its own. In my project at work, I have tests that sits outside of Rails. One of my classes uses a helper out of ActionView. I shouldn't have to require all of ActionView or ActionPack just to be able to use one method from one helper. I should be able to just require the file I need and keep going.\n\nUnfortunately, this is not the case for NumberHelper -- if you require it and then try to use one of its methods, you get:\n\n~~~\n~/code/github/forks/rails/actionpack on ruby 1.9.3-p125-falcon (master)\n$ ruby -I actionpack/lib -r action_view/helpers/number_helper -e 'h = Object.new.extend(ActionView::Helpers::NumberHelper); h.number_to_currency(2)'\n/Users/elliot/code/github/forks/rails/actionpack/lib/action_view/helpers/number_helper.rb:131:in `number_to_currency': undefined method `symbolize_keys' for {}:Hash (NoMethodError)\n\tfrom -e:1:in `<main>'\n~~~\n\nI've quickly patched NumberHelper so that this is possible. However, I imagine that some of the other helpers are this way, too, and if so I'd be happy to fix them and add tests to confirm that this works.\n\nI appreciate how Yehuda Katz tried to keep this in mind when working on Rails 3, but it seems that this mindset has been abandoned since he left, which is a bit of a shame. What's the consensus on this issue?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e9e852b18079792bc5f4ec52b8e37c53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6414', 'title': u'ActionView: Ensure that NumberHelper is requireable on its own'}, {'body': u"This is a fix for #6404\n\nThe Template cache in the Resolver can be accessed by multiple threads\nsimiltaneously in multi-threaded environments. The cache is implemented\nusing a Hash, which isn't threadsafe in all VMs (notably JRuby).\n\nThis includes two commits, the first puts a global lock around the whole process.\nThe second improves this to add a more granular lock.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6412', 'title': u'Make the Resolver template cache threadsafe'}, {'body': u"Here's an updated fix for #6404, moving the caching into a separate threadsafe class.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6411', 'title': u'Resolver concurrency fix'}, {'body': u'As requested by @rafaelfranca in this thread: https://github.com/rails/rails/pull/2036', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8538bd148e2bc82674009a35eabc8948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6410', 'title': u'TagHelper creates invalid data attributes when value is a BigDecimal'}, {'body': u'Changed `AbstractController::Callbacks` to use `define_method` when creating `before_filter`, `after_filter`, etc. instead of `class_eval`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11591979f29ab9c2bb58868232d07b88?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6409', 'title': u'Refactor Filter Methods'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a8ff938bbf4767e0a2e325f5b6598dd3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6408', 'title': u'Fixed typo in AR test name'}, {'body': u'Updated block style with respect to #6406', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6407', 'title': u'Template concurrency fixes'}, {'body': u"This rolls in josevalim's request for a comment for the fix for #6400 in pull request #6401.\n\nAlso two new commits fixing another concurrency issue #6404. First a simplistic implementation, then a more optimal one - but one that probably needs further discussion.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6406', 'title': u'Template concurrency fixes'}, {'body': u"This rolls in josevalim's request for a comment for the fix for #6400.\n\nAlso two new commits fixing another concurrency issue #6404. First a simplistic implementation, then a more optimal one - but that probably needs further discussion.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6405', 'title': u'Fix template compilation concurrency issue, and template caching concurrency'}, {'body': u"I've added next_quarter of Time same as next_month and next_year.(and also prev_quarter method)\n\nBest regards.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36061ba990c53f6df458f987c50f4741?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6402', 'title': u'Add prev_quarter and next_quarter method'}, {'body': u'This addresses issue #6400.\n\nI made the change against 3.2.3-rc2, but it also applies almost cleanly against master (just a few whitespace issues) and cleanly against 3.1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7550f06afec9b1ffffa7687c5e2b93d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6401', 'title': u'Fix template compilation concurrency issue'}, {'body': u'- Fixes #5899', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5d38ab152e1e3e219512a9859fcd93af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6399', 'title': u'Raise Assertion instead of RoutingError for routing assertion failures.'}, {'body': u'I am running JRuby 1.6.7 (1.6.6 locally) on Glassfishv3, OpenJDK.  I am running a Rack\napplication that uses ActiveRecord 3.0.12 and/or 3.2.3.  Glassfish\nmaintains a thread pool which it uses to service HTTP requests in a\nmultithreaded fashion.  I am running into concurrency problems.\n\nI have created a small JRuby-only test script that, at least on my\nmachine, reliably triggers the error.  The script sets up active\nrecord and then in a thread pool with 32 threads acquires and releases\nconnections from the connection pool.\n\nWith activerecord 3.2.3 and master (2012-05-19) I see the following error:\n\n    Detected invalid hash contents due to unsynchronized modifications with concurrent users org/jruby/RubyHash.java:1356:in `keys\'\n      /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in `release\'\n      /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:255:in `checkin\'\n      /home/pat/.rbenv/versions/jruby-1.6.6/lib/ruby/1.9/monitor.rb:201:in `mon_synchronize\'\n      /home/pat/.rbenv/versions/jruby-1.6.6/lib/ruby/1.9/monitor.rb:200:in `mon_synchronize\'\n      /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:250:in `checkin\'\n      /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:158:in `release_connection\'\n      /home/pat/.rbenv/versions/jruby-1.6.6/lib/ruby/1.9/monitor.rb:201:in `mon_synchronize\'\n      /home/pat/.rbenv/versions/jruby-1.6.6/lib/ruby/1.9/monitor.rb:200:in `mon_synchronize\'\n      /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:156:in `release_connection\'\n      /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:373:in `clear_active_connections!\'\n      org/jruby/RubyHash.java:1229:in `each_value\'\n      /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:373:in `clear_active_connections!\'\n      /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_handling.rb:93:in `clear_active_connections!\'\n      ar_test.rb:85:in `(root)\'\n      org/jruby/RubyProc.java:258:in `call\'\n\nAfter applying my patch, I do not get the concurrency error.  I am\nalso able to run the test suite for sqlite3 and postgresql.\n\n    $ bundle exec rake test_sqlite3\n    Finished tests in 189.794817s, 17.5242 tests/s, 53.2839 assertions/s.\n    3326 tests, 10113 assertions, 0 failures, 0 errors, 12 skips\n\n    $ bundle exec rake test_postgresql\n    Finished tests in 232.008693s, 14.8874 tests/s, 45.3517 assertions/s.\n    3454 tests, 10522 assertions, 0 failures, 0 errors, 32 skips\n\n----\n\nAfter this patch, I do get another error with connection timeouts that\nI am also seeing on my Glassfish system:\n\n    took 135.078s to acquire and release\n    execution expired /home/pat/dev/ruby/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:106:in `await\'\n    ...\n\nI believe it happens because the connection pool queue does not grant\na newly available connection to the first waiter in the queue.  But\nI\'ll leave for a future bug report; I\'m yet not sure if ActiveRecord\nor JRuby is at fault.\n\n----\n\nHere is the test script.  The expected output is nothing.  It prints\nany exceptions that are raised.  It runs for a long time, and may or\nmay not be able to reproduce the concurrency error, but on my system\nit does reproduce it reliably.  I\'m not sure how to turn this script into a useful unit test,\nmostly since it needs to run for a "long time" to even trigger the bug.\nAny suggestions?\n\nExecuted like this:\n\n    bundle exec jruby --1.9 ar_test.rb\n\nThe Gemfile:\n\n    source \'http://rubygems.org\'\n\n    gem \'activerecord-jdbch2-adapter\'\n\n    gem \'activerecord\', :path => \'../rails/activerecord\'\n    gem \'activesupport\', :path => \'../rails/activesupport\'\n    gem \'activemodel\', :path => \'../rails/activemodel\'\n    gem \'active_record_deprecated_finders\', :path => \'../active_record_deprecated_finders\'\n\nThe script itself:\n\n    require \'java\'\n\n    require \'active_record\'\n    require \'thread\'\n\n    config = {\n      \'adapter\' => \'jdbch2\',\n      \'database\' => \'mem:db\'\n    }\n\n    ActiveRecord::Base.establish_connection(config)\n    ActiveRecord::Base.clear_active_connections!\n\n    executor = Java::java.util.concurrent.Executors.newFixedThreadPool(32)\n\n    task = proc do\n      t0 = Time.now\n      begin\n        ActiveRecord::Base.connection_pool.connection\n        sleep (rand(50) / 1000.0)\n        ActiveRecord::Base.clear_active_connections!\n      rescue => e\n        [Time.now - t0, e]\n      else\n        [Time.now, nil]\n      end\n    end\n\n    n = 100000\n    (1..n).map do\n      executor.submit(task)\n    end.map do |future|\n      time, err = future.get\n      if err\n        puts "took #{time}s to acquire and release"\n        puts "#{err.message} #{err.backtrace.join("\\n\\t")}"\n      end\n    end\n\n    executor.shutdown\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/27598e1b77ce41fb0bd8a6fc4a3715d4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6398', 'title': u'Synchronize read and modification of @reserved_connections '}, {'body': u'When I executed rake command in activerecord directory, I had 2 failures.\nI realize the cause of this problem - exception.message method returns localized messesage string.\n\n```\n$ ARCONN=postgresql ruby -Ilib:test test/cases/adapter_test.rb\n\n  1) Failure:\ntest_foreign_key_violations_are_translated_to_specific_exception(ActiveRecord::AdapterTest) [test/cases/adapter_test.rb:134]:\n[ActiveRecord::InvalidForeignKey] exception expected, not\nClass: <ActiveRecord::StatementInvalid>\nMessage: <"PG::Error: ERROR:  \u30c6\u30fc\u30d6\u30eb\\"fk_test_has_fk\\"\u3078\u306e\u633f\u5165\u3001\u66f4\u65b0\u306f\u5916\u90e8\u30ad\u30fc\u5236\u7d04\\"fk_name\\"\u306b\u9055\u53cd\u3057\u3066\u3044\u307e\u3059\\nDETAIL:  \u30c6\u30fc\u30d6\u30eb\\"fk_test_has_pk\\"\u306b\u30ad\u30fc(fk_id)=(0)\u304c\u3042\u308a\u307e\u305b\u3093\\n: INSERT INTO fk_test_has_fk (fk_id) VALUES (0)">\n---Backtrace---\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:790:in `async_exec\'\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:790:in `block in execute\'\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:288:in `block in log\'\n/home/kennyj/rails/activesupport/lib/active_support/notifications/instrumenter.rb:18:in `instrument\'\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:283:in `log\'\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:789:in `execute\'\ntest/cases/adapter_test.rb:140:in `block in test_foreign_key_violations_are_translated_to_specific_exception\'\n---------------\n\n  2) Failure:\ntest_uniqueness_violations_are_translated_to_specific_exception(ActiveRecord::AdapterTest) [test/cases/adapter_test.rb:127]:\n[ActiveRecord::RecordNotUnique] exception expected, not\nClass: <ActiveRecord::StatementInvalid>\nMessage: <"PG::Error: ERROR:  \u91cd\u8907\u30ad\u30fc\u304c\u4e00\u610f\u6027\u5236\u7d04\\"index_subscribers_on_nick\\"\u306b\u9055\u53cd\u3057\u3066\u3044\u307e\u3059\\nDETAIL:  \u30ad\u30fc (nick)=(me) \u306f\u3059\u3067\u306b\u5b58\u5728\u3057\u307e\u3059\\n: INSERT INTO subscribers(nick) VALUES(\'me\')">\n---Backtrace---\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:790:in `async_exec\'\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:790:in `block in execute\'\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:288:in `block in log\'\n/home/kennyj/rails/activesupport/lib/active_support/notifications/instrumenter.rb:18:in `instrument\'\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:283:in `log\'\n/home/kennyj/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:789:in `execute\'\ntest/cases/adapter_test.rb:128:in `block in test_uniqueness_violations_are_translated_to_specific_exception\'\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6397', 'title': u'Fix a problem of translate_exception method in a Japanese (non English) environment.'}, {'body': u"I found the following output in the Travis CI.\n\n```\n...\n.NOTE: MiniTest::Unit::TestCase#assert_block is deprecated, use assert. It will be removed on or after 2012-06-01. Called from /home/vagrant/builds/rails/rails/activesupport/test/ts_isolated.rb:13:in `block (2 levels) in <class:TestIsolated>'\n...\n```\n\nI can reproduct this problem by the following command.\n\n```\n$ bundle exec rake test:isolated\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6396', 'title': u"Don't use assert_block method. It will be removed."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6395', 'title': u'Fix warning: shadowing outer local variable - constant.'}, {'body': u'I noticed that rails http authentication currently always returns a string like "HTTP Basic: Access denied." regardless of the request Accept header. \n\nWe got reports of this causing some clients problems (I guess they are expecting json, and always attempting to parse the body as json). \n\nI thought I\'d experiment with modifying rails to respond with some valid json when accept is for json, and likewise for xml.\n\nIs this a good idea?\n\nfor json it will now return something like:\n\n```json\n{"error":"HTTP Basic: Access denied."}\n```\n\nor xml\n```xml\n<error>HTTP Basic: Access denied.</error>\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c68d7d0679939320c3c17b6b318cd1e2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6394', 'title': u'http basic auth failures respect request.accept for json/xml'}, {'body': u"Example:\n\n```ruby\n# Having a class with a collection:\nclass Person < ActiveRecord::Base\n  has_many :pets\nend\n\nperson.pets.size   # => 2\nperson.pets.empty? # => false\n\n# defining a criteria inside a block\nperson.pets.empty? { |pet| pet.name.nil? } # => true\n```\n\nIf it's accepted, i will update CollectionProxy#empty? documentation.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6392', 'title': u'CollectionAssociation#empty? can take a block to define a criteria'}, {'body': u'This pull request fixes route inspection for routes that are redirection.\n\nroutes.rb:\n\n```ruby\nFooBar::Application.routes.draw do\n  match "/foo" => redirect("/bar")\nend\n```\n\n`rake routes` now:\n\n```\nfoo  /foo(.:format) :controller#:action"\n```\n\nafter patch, fixed:\n\n```\nfoo  /foo(.:format)  Redirect (301)\n```\n\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e28434223c9c5d2ee0d7f7b7c887b36a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6391', 'title': u'Redirect route inspect'}, {'body': u'@jonleighton I feel guilty even submitting a pull request this small, but it looks like a 1.8-incompatible syntax change made it into a backport from 4.0. :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6390', 'title': u'Invalid ruby18 syntax in habtm'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6388', 'title': u'Fix warning: possibly useless use of % in void context'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6387', 'title': u"Fix test: can't convert Regexp to String"}, {'body': u'It seems that we didn\'t have consistency of *logs name* ("SCHEMA"), and I fixed it.\nIn addition, *name* arguments usually weren\'t used, and I also fixed it. \n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6386', 'title': u'Fix logs name consistency.'}, {'body': u'Extended from https://github.com/lifo/docrails/commit/3c91c8127050c7abbe091c19052f9813a62b1af7#commitcomment-1346945', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6385', 'title': u'add docs to CollectionProxy'}, {'body': u"I've just made various small changes to the text_helpers file to make it more readable and standardise it a little. The only tiny functionality change is a `===` vs `==` which I've annotated inline.\n\nI've symbolised the keys of the options hash and used `options.fetch(:foobar, x)` instead of `options[:foobar] ||= x` as per discussion at https://groups.google.com/forum/?hl=en&fromgroups#!topic/rubyonrails-core/jjIDHOhqT9E\n\nI'm happy to revert or change any bits that people don't like, but I'm also happy to implement the changes that people do like more widely, just to try and standardise the style as much as possible. It just takes less brain cycles if the code all looks the same.\n\nI hope it's helpful.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6384', 'title': u'Tidied and standardised text_helper implementations.'}, {'body': u'\\cc @vijaydev @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6383', 'title': u'Add oscardelben to authors'}, {'body': u'In the `up`, `down` methods the migration action can never be `add`, as that is handled in the `change` method,', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6382', 'title': u'Refactor migration generator'}, {'body': u'related to #6352', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6380', 'title': u"doesn't modify params in SafeBuffer#%"}, {'body': u'Deprecation messages to go with #6371 (cc @rafaelfranca)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6377', 'title': u'Deprecate old APIs for highlight, excerpt and word_wrap'}, {'body': u"The current implementation of numeric timestamps is to only include up\nto the second. Unfortunately, when running tests, many things can (and\nshould) happen within a single second and precision of a full second\nisn't enough. Milliseconds may be good here, but with fast-enough\nCPUs, a single test example may execute within that one-millisecond\nboundary, which may include multiple calls.\n\nMore importantly, in a production environment, precision of one second can\nbe far too much for cache invalidation (`AR::Base#cache_key` uses\n`Time#to_s(:numeric)`), as when two clients update the same record\nsimultaneously, the first update will be cached. Since the second update\nassigns the same value to `updated_at`, the first cached value is not\ninvalidated unless done so manually.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76de16cb97b382f990c4798277e37bab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6376', 'title': u'Increase numeric-timestamp precision to \xb5seconds'}, {'body': u"# Bug Description:\n\nIf the `:controller` option in an url_for call contains a leading slash it\nwill be removed, which causes side-effects:\n\n```ruby\nmy_controller = '/Example'\nurl_for(:controller => my_controller)\nputs my_controller # => 'Example'\n```\n\nThe side-effects then affect plugins like will_paginate, which store the options to pass to `url_for` in an instance_variable. The functionality then breaks after the first call to `url_for`.\n\n# Resolution:\n\nThe route-set does not directly manipulate the string passed into `#url_for`.\nIt creates a copy without the leading slash if necessary.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6375', 'title': u'remove side effects on :controller option in #url_for'}, {'body': u'Ragrding #6331 issue. Two methods, find_by_sql and count_by_sql are moved into Relation class. This should allow to easily manipulate the connection. Tests are passing.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a3e5e19a0d90edfd4eb094385f6617a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6374', 'title': u'Relocating find_by_sql into Relation'}, {'body': u'cc @josevalim @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6373', 'title': u'AS::Callbacks: fix run_callbacks for objects with negative id'}, {'body': u"The docs suggest that the middleware stack is an Array, and yet some\ncommon Array methods do not work (#unshift #shift #pop and #push) are\nthe most common array operations that are not implemented that I can\nthink of.\n\nTo this end, I have implemented them simply by delegating to the\nmiddlewares Array directly\n\n( This commit also fixes two whitespace issues, I will rebase them out if they shouldn't get to piggyback)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f39a093535874d323647c1cb64a6e36b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6372', 'title': u'Add some common Array methods to the middleware stack'}, {'body': u'A (hopefully) working pull request as per #6370 (cc @rafaelfranca)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6371', 'title': u'Removed old text_helper apis for highlight, excerpt and word_wrap'}, {'body': u'I have removed the old API functionality from text helpers as per https://groups.google.com/forum/#!msg/rubyonrails-core/Ta4JrLykxYA/t-pm4DyW_AMJ (cc @rafaelfranca)\n\nI will follow up with depreciation warnings in another pull request on the stable branch.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6370', 'title': u'Removed old API functionality from actionpack text helpers'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6368', 'title': u'Support migrating from Hash to HashWithIndifferentAccess for accessing attributes.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6367', 'title': u'Fix validators docs [3-2-stable]'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6366', 'title': u'Fix validators docs'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6365', 'title': u'Fix warning: ambiguous first argument.'}, {'body': u'All klass.connection and @klass.connection are now just connection, which is delegated to klass. Tests are passing', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a3e5e19a0d90edfd4eb094385f6617a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6364', 'title': u'ActiveRecord::Relation select problem'}, {'body': u'Missed this line of documentation in #6361. Sorry for the extra PR. :/', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/185fff6d3aa5c70e337fa84b302050b1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6363', 'title': u'Fix documentation around duplicable regarding Class and Module.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6362', 'title': u'AS::Callbacks: simplify logical statement'}, {'body': u'One approach to resolve #6265.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/185fff6d3aa5c70e337fa84b302050b1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6361', 'title': u'Remove special cases for duplicable? on Class and Module'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6360', 'title': u'Fixed logger bug introduced by #2237'}, {'body': u'I started working on this since there were some other pull requests that were too old for a merge and the guys who created the pull requests didn\'t have time to update. Here they are: #5789 and #3826.\n\nI didn\'t add `input[type="time"]` because #5715 is handling this.\n\nComments are welcome.\n\nThanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eb96709a889695c9d0fe3edf4648ab7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6359', 'title': u'Add HTML5 inputs'}, {'body': u'Now that migrations support instance methods, we should use the same instance\nrather than relying on delegation to a global instance. This allows\nsubclassing AR::Schema.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6358', 'title': u'Call methods on the correct instance in AR::Schema.define'}, {'body': u"Currently, it's hard to find where the mass-assignment error is because of poor logging.\n```\nWARNING: Can't mass-assign protected attributes: title, taken_on, url\n```\n\nso, this patch improves logging such as:\n```\nWARNING: Can't mass-assign protected attributes for Photo: title, taken_on, url\n        test/unit/photos_test.rb:5:in `new'\n        test/unit/photos_test.rb:5:in `block in <class:PhotosTest>'\n```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf7b553387b247d737c60cfceabb2cea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6357', 'title': u'Improve logging of ActiveModel::MassAssignmentSecurity::Sanitizer'}, {'body': u'A user had an issue with a model name survey_analysis and a controller name survey_analyses while using CanCan.\n\nPlease see [here](https://github.com/ryanb/cancan/issues/595) for full details.\n\nThis trivial change fixes that issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7e7bb3bc9e522f86e090f1732adacada?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6356', 'title': u'Fix an issue with inflection'}, {'body': u'Recently, the dependency on safe_join was removed from number_helper.  When this happened, delimiters and separators were no longer being html_escaped.\n\nFor example, \n```ruby\nnumber_with_delimiter(1000, :delimiter =>\'<script></script>\')\n```\nwill produce the string\n```ruby\n"1<script></script>000" \n```\nmarked as html_safe.\n\nThis pull request makes both delimiters and separators html_escaped, and adds tests for this behavior.\n\nSee https://github.com/rails/rails/commit/ecfb32cd165c0763befb7eed7e348438db928cef for more info\n\nLikely interested parties: @carlosantoniodasilva and @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aed424af11b9f92cca6c051f75f013b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6355', 'title': u'NumberHelper.number_with_delimiter should html_escape both delimiters and separators'}, {'body': u"- access & filters don't use multibyte ext\n- transliterate requires only AS::Multibyte but not multibyte ext", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6354', 'title': u'remove unnecessary require'}, {'body': u'closes #6352', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6353', 'title': u'fix safe string interpolation with SafeBuffer#%'}, {'body': u'This patch is yet another small step to make `Callbacks` a library of my dream.\n\nBenchmark:\nhttps://gist.github.com/2710476\n\n```\nRunning benchmark with current working tree\nCheckout HEAD^\nRunning benchmark with HEAD^\nCheckout to previous HEAD again\n\n                    user     system      total        real\n-----------------------------------------------set_callback\nAfter patch:    0.010000   0.000000   0.010000 (  0.014398)\nBefore patch:   0.030000   0.000000   0.030000 (  0.031771)\n\n-------------------------------------------define_callbacks\nAfter patch:    0.020000   0.000000   0.020000 (  0.011218)\nBefore patch:   0.010000   0.000000   0.010000 (  0.011084)\n\n----------------------------------------------run_callbacks\nAfter patch:    0.000000   0.000000   0.000000 (  0.003216)\nBefore patch:   0.000000   0.000000   0.000000 (  0.003345)\n\n----------------------------------------------skip_callback\nAfter patch:    0.010000   0.000000   0.010000 (  0.012708)\nBefore patch:   0.020000   0.000000   0.020000 (  0.017077)\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6351', 'title': u'AS::Callbacks remove useless code, improve performance'}, {'body': u"As it is if you enter an out of range `:limit` for a migration or new table, the raise is rescued and it defaults to `integer`.  Based on `change_schema_test.rb` I guess it must have been because it was expected some people would use `:limit => 11` for MySQL expecting an `int(11)`, which isn't the same thing as an 11 byte int, which is what :limit is for.\n\nI believe this should raise, if it isn't a valid value, rather than silently changing what the user has specified, wrong as it may be.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6349', 'title': u'Integer limit out of range should be allowed to raise. Closes #6272'}, {'body': u'Updated version of #2310', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/98f11c73a95318bbf85e419c1727434d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6348', 'title': u'Allow ActiveSupport::Deprecation features to be used by rails applications and library authors'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6347', 'title': u'Fix misprint in AR changelog'}, {'body': u"No other adapter makes this check, and if we're already here, I'm pretty sure that check is useless.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6346', 'title': u'Remove useless check of adapter'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6345', 'title': u'Remove tab'}, {'body': u'Relates to #6247.\n\nSQLite3 does not support the \'time\' data type.  I feel like we shouldn\'t pretend it does.\n\nAs it is now, if you create a new record with time only, the year gets set as the current year in the database.  However, as in issue #6247 when you do `Alert.all` it shows the year as being 2000.  Subsequently you get this behavior:\n\n``` irb\nirb(main):028:0> Alert.create(start: Time.now)\n   (0.1ms)  begin transaction\n  SQL (0.8ms)  INSERT INTO "alerts" ("created_at", "start", "updated_at") VALUES (?, ?, ?)  [["created_at", Wed, 16 May 2012 03:54:09 UTC +00:00], ["start", 2012-05-15 22:54:09 -0500], ["updated_at", Wed, 16 May 2012 03:54:09 UTC +00:00]]\n   (2.4ms)  commit transaction\n=> #<Alert id: 7, start: "2012-05-15 22:54:09", created_at: "2012-05-16 03:54:09", updated_at: "2012-05-16 03:54:09">\nirb(main):029:0> Alert.all\n  Alert Load (0.3ms)  SELECT "alerts".* FROM "alerts" \n=> [#<Alert id: 7, start: "2000-01-01 03:54:09", created_at: "2012-05-16 03:54:09", updated_at: "2012-05-16 03:54:09">]\nirb(main):030:0> Alert.last.start < Time.utc(2000, 1, 1, 3, 55, 0)\n  Alert Load (0.2ms)  SELECT "alerts".* FROM "alerts" ORDER BY "alerts"."id" DESC LIMIT 1\n=> true\nirb(main):031:0> Alert.where(\'start < ?\', Time.utc(2000, 1, 1, 3, 55, 0))\n  Alert Load (0.3ms)  SELECT "alerts".* FROM "alerts" WHERE (start < \'2000-01-01 03:55:00.000000\')\n=> []\n\n```\nIt isn\'t very consistent to show `start: "2000-01-01"` and yet not find it.  The reason is it really has year 2012 in the database.\n\nI realize the year is just a dummy year since Ruby doesn\'t support any concept of time only.  But the difference is MySQL and PostgreSQL don\'t actually store the year in the database, where as SQLite does, and it doesn\'t match what Rails displays.\n\nAs an aside, I had to add:\n\n``` ruby\nActiveRecord::Base.time_zone_aware_attributes = false\nActiveRecord::Base.default_timezone = :local\nTime.zone = nil\n```\nto a couple of the tests, because when I changed line 955 to skip SQLite3 adapter, those lines getting skipped at the end were causing those other two tests to fail.  I don\'t see any tests that set those attributes and not set them back, but I guess something funny is going on there.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6344', 'title': u"SQLite3 doesn't actually support the 'time' type."}, {'body': u'The reason for this is that the sqlite3 adapter requires 1.3.6\n\nhttps://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6343', 'title': u'Bump sqlite3 gem'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6342', 'title': u'Use try instead of checking for nil object'}, {'body': u'If one wants to use use Sass for application.css.sass the comment block indentation is invalid.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6341', 'title': u'Changing the indentation level of the block comment close for Sass'}, {'body': u'If one wants to use use Sass for application.css.sass the comment block indentation is invalid.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6340', 'title': u'Changing the indentation level of the block comment close for Sass'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ac590f036f709b213aa8a3e446e7b7ae?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6339', 'title': u'Change multiple line unless to single line'}, {'body': u'If one wants to use use SASS for application.css.sass the comment block indentation is invalid.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6338', 'title': u'Changing the indentation level of the block comment close for SASS'}, {'body': u'If one wants to use use Sass for application.css.sass the comment block indentation is invalid.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6337', 'title': u'Changing the indentation level of the block comment close for Sass'}, {'body': u"3f352d0 introduced a failing test on PostgreSQL.  The column lookup would be 'DISTINCT credit_limit', which isn't a column in the database.  As a result, the pluck returns an array of strings, and the test fails.  I'm not familiar enough with the guts of AR to know why it doesn't fail for the other databases.\n\nI'm not really sure that my change is the way to go about fixing this.  It seems a bit sloppy.  I'm sure some of you will have better ideas.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6336', 'title': u'Fixes issue where SQL fragments prevented type casting based on column'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eb96709a889695c9d0fe3edf4648ab7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6333', 'title': u'Remove unnecessary calls to primary_key on sqlite3_adapter'}, {'body': u'Travis exports `BUNDLE_GEMFILE`, this overwrites current dir `Gemfile` here: https://github.com/rails/rails/blob/master/railties/lib/rails/generators/app_base.rb#L256.\nIt was changing context and running `install` command on `BUNDLE_GEMFILE` instead of `Gemfile` here https://github.com/rails/rails/blob/master/railties/test/generators/plugin_new_generator_test.rb#L102.\n\nMost important addition here is validating that `#{destination_root}/Gemfile.lock` was created - which assures `bundle install` was run in proper `Gemfile` context.\n\nAs I had to run `ruby install.rb 4.0.0.beta` to make the test pass I assume it might still be failing - unless `rails ~> 4.0.0.beta` is installed ... maybe it already is?\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3ec52ed58eb92026d86e62c39bdb7589?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6332', 'title': u'improve tests for bundle_command'}, {'body': u'add a backport for initialize_dup', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6329', 'title': u'Backport dup validation 3 2'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6327', 'title': u'remove backported string interpolation'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6326', 'title': u'Removing empty lines of inflectors/transliterate'}, {'body': u"We should only test the before_seq isn't same to the after_seq when using sequencer.\n\nPlease see this comments on https://github.com/rails/rails/pull/6123 .", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6325', 'title': u'Remove unnecessary assertions. '}, {'body': u"...for 3-2-stable\n\nIt Fixes #5953 the 3-2-stable, it's the same pull request of #6284", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6324', 'title': u'Dup validation 3 2'}, {'body': u"Along with this change simply being more concise, I think it's also preferable that we teach people to use the `update_all` method where possible instead of:\n\n    Product.all.each do |product|\n      product.update_attributes!(:flag => 'false')\n    end\n\nThis example above can get *extremely* slow with a lot of records because it first loads all the products into memory before writing to the database.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/420250f8607578bcf27f757d79dc4e5b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6323', 'title': u"Documentation: make the 'Using Models in Your Migrations' example code more concise."}, {'body': u'@vijaydev', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6322', 'title': u'corrected some misspelling'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6321', 'title': u'Backporting docs'}, {'body': u'the issue can be reproduce with:\n\n    printf "source :rubygems\\n\\ngem \'rails\'\\n" > Gemfile\n    bundle install\n    bundle exec rails new app1\n    rails new app2\n    ls -l app*/Gemfile.lock\n\nIn the case of `app1` the command `bundle install` was run in context of already loaded Gemfile, which had totally different effect then expected.\n\nThis also fixes #6314.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3ec52ed58eb92026d86e62c39bdb7589?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6318', 'title': u'fix `bundle exec rails new app` not running `bundle install` properly'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4995c7ce9523ce00dea01362cb976196?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6317', 'title': u'add tests and external file backtrace for Routing::Mapper#draw'}, {'body': u'Hi,\n\nIn an earlier pull request I hoped we could decouple ActiveSupport from ActionView:\n\nhttps://github.com/rails/rails/pull/5675\n\nIt was suggested by @josevalim that instead of that approach, we move the number helpers from ActionView to ActiveSupport.  In addition to his suggestion, this approach was a feature request in a separate issue:\n\nhttps://github.com/rails/rails/issues/3214\n\nIn this pull request I\'ve moved the functionality from NumberHelper in ActionView to ActiveSupport and added the methods to Numeric.  So instead of including NumberHelper and writing "number_to_human(123)", you could just include ActiveSupport and write "123.to_human".  The original NumberHelper methods are all left in place and accept the same options and behave the same (and just pass through to the AS implementation in Numeric).\n\nOther interested parties may include: @carlosantoniodasilva, @fxn, and @yfeldblum.\n\nLet me know if you\'d like any changes to this implementation.\n\nThanks,\nAndrew.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aed424af11b9f92cca6c051f75f013b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6315', 'title': u'Moving number helper from ActionView to Active Support'}, {'body': u"Not sure if is valid but I'm opening this PR to discuss it. I think it could be useful to avoid security issues by default.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/89e57a28dfdb85e07b33f92783dbe349?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6313', 'title': u'Changing gitignore template to ignore files with sensitive data by default'}, {'body': u"This addresses the issue brought up in #2394.\n\nI built this based on [@josevalim's suggestion](https://github.com/rails/rails/issues/2394#issuecomment-1920786), which involves creating a raw template and adding a deprecation message for default template handlers.\n\nOne issue with this as it stands is that the tests now throw some warnings; I should probably fix those up, but I wanted to get feedback on my test and this code first. I'm 99% sure that it's all good, but I've never dived into this part of Rails before.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6309', 'title': u'Created a Raw handler for templates.'}, {'body': u'according to this commit 1c481be331f32a7', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6308', 'title': u'remove useless tests for Range#step'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6307', 'title': u'Refactor App Generator Test'}, {'body': u'This was changed on master, but not on 3-2.  I believe it should be updated on 3-2 as well, as the current documentation is not correct.\n\nRelates to #6291', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6306', 'title': u'3 2 stable guide fix'}, {'body': u'finally got green build with ruby-prof changes.\n\nsecond commit fixes \n\n```ruby\n\n\n/Users/arunagw/checkouts/rails/actionpack/lib/action_view/helpers/number_helper.rb:257:in `number_with_delimiter\': undefined method `safe_join\' for #<ActiveSupport::Testing::Performance::Metrics::Objects:0x007f97305de098> (NoMethodError)\n\tfrom /Users/arunagw/checkouts/rails/activesupport/lib/active_support/testing/performance.rb:242:in `format\'\n\tfrom /Users/arunagw/checkouts/rails/activesupport/lib/active_support/testing/performance.rb:105:in `report\'\n\tfrom /Users/arunagw/checkouts/rails/activesupport/lib/active_support/testing/performance.rb:91:in `run_profile\'\n\tfrom /Users/arunagw/checkouts/rails/activesupport/lib/active_support/testing/performance.rb:45:in `block in run\'\n\tfrom /Users/arunagw/checkouts/rails/activesupport/lib/active_support/testing/performance.rb:43:in `each\'\n\tfrom /Users/arunagw/checkouts/rails/activesupport/lib/active_support/testing/performance.rb:43:in `run\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:787:in `block in _run_suite\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:780:in `map\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:780:in `_run_suite\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:770:in `block in _run_suites\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:770:in `map\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:770:in `_run_suites\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:746:in `_run_anything\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:909:in `run_tests\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:896:in `block in _run\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:895:in `each\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:895:in `_run\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:884:in `run\'\n\tfrom /Users/arunagw/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/1.9.1/minitest/unit.rb:664:in `block in autorun\'\n[[:puke, [ApplicationTests::TestTest, "test_performance_test", #<MiniTest::Assertion: Run options: --seed 42815\n\n\n```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6305', 'title': u'Ruby prof fixes'}, {'body': u'Requiring RubyGems does nothing on Ruby 1.9.3, since it is already loaded:\n\n```\nruby -e \'p require "rubygems"\'\nfalse\n```\n\nSo, I think we can remove it safely from boot.rb and other files, since Rails 4 will require Ruby 1.9.3+.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4995c7ce9523ce00dea01362cb976196?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6303', 'title': u'require "rubygems" is obsolete in Ruby 1.9.3'}, {'body': u'This add strong_parameters by default in new 4.0 apps.\n\nSee also rails/strong_parameters#23', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6301', 'title': u'Integrate strong_parameters by default'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6300', 'title': u'Upgrade sprockets to 2.0.4'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6299', 'title': u'Upgrade sprockets to 2.1.3'}, {'body': u'Alert for any suggestion.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6298', 'title': u'fixme: use minitest skip instead of return nil'}, {'body': u'memcache-client was deprecated in favor of dalli in 2010, now users should be using dalli_store instead of the old mem_cache_store', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6296', 'title': u'Remove ActiveSupport::Cache::MemCacheStore'}, {'body': u'This should simplify a lot of our code, similarly to what `try` does.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6295', 'title': u'Add Object#send_if_responds_to'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6294', 'title': u'Adding examples and docs [3-2-stable]'}, {'body': u"Some refactoring for collection rendering:\n\n* Remove post template assignment: there is no need for this assignment, given we are rendering a collection with different templates.\n* Remove segments array with `<<` in favor of `Array#map`\n* Use local vars whenever possible, including a local var for indexing\n* Cache local template keys, remove defaults from find_template\n\nThis is somewhat related to the discussion in #6006. [Here are some quick benchmarks](https://gist.github.com/2553080). If it's necessary I can try to prepare another.\n\n@josevalim could you take a look please?\n\nAny feedback is welcome. Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6293', 'title': u'Improve and cleanup a bit partial renderer'}, {'body': u'Update guides for whitelist security.  Not applicable on master.\n\nCloses #6286.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6292', 'title': u'3 2 stable guides fix'}, {'body': u"This uses the `:en` locale as default fallback for number helpers, such as `number_with_precision` and brothers. The overall idea is that we should always have fallbacks when using such helpers, instead of letting them raise different errors due to missing arguments. The implementation basically fetches the defaults for :en and merges the translations with the given locale.\n\nAfter some discussion it seems a good path to use the default `:en` translations that ship with the framework as fallbacks instead of constants, to avoid the duplicated defaults. I'd like some feedback on this, thanks.\n\nCloses #4420, #2802, #2890.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6290', 'title': u'Number helpers defaults'}, {'body': u"urgent: ESCAPED_CHARS doesn't return escaped html symbols - wrong implementation!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6288', 'title': u'Update activesupport/lib/active_support/json/encoding.rb'}, {'body': u'related #6277\n@spastorino @josevalim are OK to turn it true by default \nI :thumbsup: it too, this will mitigate some XSS holes - check showcases I made in that issue.\nbut seems @wycats didn\'t like this idea and proposed me to use escaping on the client side. It looks a little bit weird to me(escaping HTML on client side). I see no single reason to send smht like this \n```\n{"body": "<p>body</p>"} \n```\n\nit\'s definitely not the Rails way. Anyway, it\'s just an option that saves JSON-backend based apps from XSS and lame code either :). ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6287', 'title': u'set escaping HTML in json encoding to +true+'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6285', 'title': u'missplelling error in abstract_mysql_adapter'}, {'body': u"If an istance that include validation is duped it keep track of errors of its 'parent', because both errors instances point to the same ActiveModel::Errors instance. This happen when before to call dup, ``` save or valid?``` is called. This Fixes #5953 and it was discussed on the pull request https://github.com/rails/rails/pull/5958", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6284', 'title': u'clean the erros if an object that includes validation  is duped.'}, {'body': u'I think it will be more intuitive  to have `only` as opposite for `except`. Because everywhere we can find these two methods/keys together.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ceb745dc6fd0e274005d8c9637cca631?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6283', 'title': u'Add Hash#only as alias for Hash#splice.'}, {'body': u'Rename `ActiveRecord::Fixtures` class to `ActiveRecord::FixtureSet`.<br/><br/>Instances of this class normally hold a collection of fixtures (records) loaded either from a single YAML file, or from a file and a folder with the same name.<br/><br/>This change makes the class name singular and makes the class easier to distinguish from modules like `ActiveRecord::TestFixtures`, which operates on multiple fixture sets, or `DelegatingFixtures`, `::Fixtures`, etc., and from the class `ActiveRecord::Fixture`, which corresponds to a single fixture.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6282', 'title': u'Rename "ActiveRecord::Fixtures" to "ActiveRecord::FixtureSet"'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6281', 'title': u'mispelling errors in render_text_test.rb'}, {'body': u'I think it just wrong to call private methods with `try` method. WDYT?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6280', 'title': u"Object#try can't call private methods"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6279', 'title': u'mispelling error in actionpach changelog'}, {'body': u'It misses  two commas in performance tests, the code is commented but we get an error when we use this part of code to configure the performance tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f94f8f42364591025aaed622d499f27?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6278', 'title': u'Add commas missing in performance tests'}, {'body': u'A while ago whitelist_attributes was commented and people could un comment it.\nescaping html in json is as well as mass assignment appears to be a security issue(XSS) and IMHO at least  comment should presented in application.rb\n\nrelated https://gist.github.com/2655020\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6277', 'title': u"Comment for active_support's option in application.rb"}, {'body': u"Fixes these bugs with rails console:\n\n```term\n$ rails c special-production\nLoading development environment\n\n$ rails c -e test\ninvalid option: -e (OptionParser::InvalidOption)\n\n$ rails c --environment=test\ninvalid option: --environment=test (OptionParser::InvalidOption)\n\n$ rails c RAILS_ENV=test\nLoading development environment\nNo such file or directory - special-test (Errno::ENOENT)\n```\n\nConsole commands that use IRB need the ENV['RAILS_ENV'] to be set before config/application.rb loads and shifts ARGV so IRB doesn't fail.\n\nThe code to set this up was previously executed outside of a class definition in commands/console.rb and commands/dbconsole.rb . I've moved it to a class to remove duplication and add tests.\n\nIt seems that the original intention was that all these methods of setting the environment should be supported. (Plus it makes it consistent with other commands.)\n\n```term\n$ rails c --help\nUsage: console [environment] [options]\n    -s, --sandbox                    Rollback database modifications on exit.\n    -e, --environment=name           Specifies the environment to run this console under (test/development/production).\n                                     Default: development\n        --debugger                   Enable the debugger.\n```\n\nSee also https://github.com/rails/rails/pull/3949 which this pull request replaces.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a6ad943eee0cec3804b89bc7bf865293?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6276', 'title': u'Fix various bugs with console arguments and improve test coverage'}, {'body': u'Refactored simple_format into another method called `paragraph_split`<br/><br/>With the `paragraph_split` method, you are now able to split paragraphs and wrap those in any tag you may want without confining yourself to the `<p>` tag.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b7d890bed68fa564c18ff00dfd8207cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6273', 'title': u'Feature/simple format refactoring'}, {'body': u'Currently, documented "escape_html_entities_in_json" option is not working. As well as use_standard_json_time_format and encode_big_decimal_as_string parameters for JSON Encoder.<br/><br/>Developer should add them to application.rb (because it is an env-independent options). At the moment additions will not impact on JSON encoder settings - the patch fixes it.<br/><br/>Not sure about adding it to the generator of application.rb.<br/>escape_html_entities_in_json is a very important option though, what about only this? / @wycats @josevalim<br/><br/>Bonus question: Why escape_html_entities_in_json is false? It was true a while ago and everything was OK.. thanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6271', 'title': u'configuration for active_support and JSON Encoding'}, {'body': u'Currently, documented "escape_html_entities_in_json" is not working. As well as use_standard_json_time_format and encode_big_decimal_as_string parameters for JSON Encoder.<br/><br/>Developer should add them to application.rb (because it is env-independent options). Currently additions will not impact anyhow on ActiveSupport - the patch fixes it.<br/><br/>Not sure about adding it to a generators. escape_html_entities_in_json is very important option though, should be added? / @wycats @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6270', 'title': u'configuration for active_support and JSON Encoding'}, {'body': u'The same how it done in Hash#slice test. https://github.com/edtsech/rails/blob/master/activesupport/test/core_ext/hash_ext_test.rb#L414', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ceb745dc6fd0e274005d8c9637cca631?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6269', 'title': u'Add test Hash#except can receive more than one argument.'}, {'body': u'.according with http://en.wikipedia.org/wiki/Robots_exclusion_standard', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/84ae9a1597150016abc3d68b39ccd7d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6268', 'title': u"In robots.txt User-agent should be all downcase except for the first 'U'"}, {'body': u'First of all, it is false, since Rails 3.0, <br/> * <tt>ActiveSupport.escape_html_entities_in_json</tt> now defaults to false.<br/> * ActiveSupport.escape_html_entities_in_json from true to false to match previously announced Rails 3 defaults *DHH*<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6267', 'title': u"No, it's false, by default + It's a not working option. "}, {'body': u'Remove unused private method `yaml_fixtures_key`.<br/><br/>This method was introduced in the initial commit in 2004, and has been removed form `master` in #4254.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6266', 'title': u'Remove unused private method'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6263', 'title': u'3 1 stable'}, {'body': u'Thanks to @carlosantoniodasilva for b7080e767fdf8bf147abe5cc61ec4668f4404ee7', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6262', 'title': u'Ruby prof fix'}, {'body': u'Update performance profiler to work with latest ruby-prof changes.<br/><br/>[Failing build](http://travis-ci.org/#!/rails/rails/jobs/1299018/L326)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6261', 'title': u'Fix build 3-1-stable'}, {'body': u'Having been in discussions about the "best" way convert hash keys to a) integers last week and b) camelcase strings this week, I thought this would be helpful.<br/><br/>Also refactored `Hash#stringify_keys`, `Hash#stringify_keys!`, `Hash#symbolize_keys`, `Hash#symbolize_keys!` methods to use the transform_key methods.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/185fff6d3aa5c70e337fa84b302050b1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6259', 'title': u'Add Hash#transform_keys and Hash#transform_keys!'}, {'body': u'Plugin generator crashes when using the --dummy-path option<br/><br/>Code was assuming the application name in `config/application.rb`<br/>was module Dummy.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a59cda5de705716cbd18195a4dd68a56?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6258', 'title': u'Fixes issue #6251'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40bd727b22d74930f292b63d45a71b07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6253', 'title': u'remove duplicate usage of Rack::Utils.status_code in LogSubscriber#process_action'}, {'body': u':unless_exist is already supported in memcachestore, and is very useful for any kind of locking implementation,<br/>e.g. [gem_of_thrones](https://github.com/grosser/gem_of_thrones)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/59436ecd4fe6ad7c34f67654d839f05f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6252', 'title': u'add unless_exist option to memory store'}, {'body': u"Rails allows to destroy models marked as read only. This pull request fixes that.<br/><br/>I'm gonna backport this pull request to 3-2-stable, if this one get's accepted.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ebecfa2fcf3adda56063f996b79ca6b6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6250', 'title': u"Don't allow to destroy readonly models"}, {'body': u"When generating an error message, a format lookup is done for the<br/>following keys:<br/>errors.models.MODEL.attributes.ATTRIBUTE.format<br/>errors.models.SUPERCLASS.attributes.ATTRIBUTE.format (if there's a superclass with I18n support)<br/>errors.attributes.ATTRIBUTE.format<br/>errors.format<br/><br/>If none of these keys are associated with an error format, the default<br/>'%{attribute} %{message}' is used.<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c9a6862c54191c2c9cfc389b354ddb37?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6249', 'title': u'Error message generation now supports more flexible error format lookup'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6244', 'title': u'Remove key argument from run_callbacks to fix build'}, {'body': u"Ruby's all about aesthetics, wouldn't it be cool if we could use is_an? for method calls with arguments that start with a vowel.<br/><br/>E.g: ` [].is_an? Array # => true`<br/><br/>Yay or nay?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ecd20118eccc74fbe790e75a923de7e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6243', 'title': u'Improved readability for object introspection (is_a?)'}, {'body': u'@josevalim this fix the build.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6242', 'title': u'Removing key argument from run_callbacks method in abstract_controller'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6241', 'title': u'AS::Callbacks#run_callbacks remove key argument'}, {'body': u"PostgreSQL doesn't take a limit for binary columns so developers must choose between removing :limit from their binary column definitions, and not being able to target pgsql.<br/><br/>This change drops :limit specifications, when migrations are applied against a pgsql database. It's not ideal, because the limit information is lost. However, the mysql adapters do something similar to :text columns, so I hope the approach is OK.<br/><br/>This is a pain point for other developers:<br/>http://stackoverflow.com/questions/4976368/heroku-migration-type-modifier-is-not-allowed-for-type-bytea<br/>http://forums.xkcd.com/viewtopic.php?f=11&t=19087<br/><br/>The schema change in my commit makes the AcitiveRecord test suite fail on pgsql. After the adapter change, the tests pass again.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d7b97642d7aeaf1011ec19e5779144e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6238', 'title': u"Postgresql doesn't accept limits on binary (bytea) columns."}, {'body': u"I would like to get some feedback before pushing it. Is it safe to return `new_target` from `replace`? I think that it should be fine as this becomes new target anyway, but maybe I'm missing something.<br/><br/>Another way would be to return new collection object, but target seems better as that's what you also get in `replace` in ruby.<br/><br/>/cc @tenderlove @jonleighton", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6237', 'title': u'Fix CollectionAssociation#replace to return new target (closes #6231)'}, {'body': u'Simple update to ignore the Gemfile.lock when generating an engine.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1ccb5123d1af92e24b32cec62abcf9a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6234', 'title': u'ignore Gemfile.lock'}, {'body': u"Hi there,<br/><br/>Upgrading Rails 2.3 application to Rails 3 I run into issue where `ActiveResource::TimeoutError` doesn't load when application starts.<br/><br/>This is the vanilla Rails app to reproduce this issue https://github.com/spectator/rails_activeresource_exception<br/><br/>Given this line in a controller<br/>```ruby<br/>rescue_from ActiveResource::TimeoutError, :with => :service_error<br/>```<br/>application fails to start with `uninitialized constant ActiveResource::TimeoutError` unless `ActiveResource::Base` is explicitly called.<br/><br/>For example (rails console):<br/>```shell<br/>Loading development environment (Rails 3.2.3)<br/>1.9.3p194 :001 > ActiveResource::TimeoutError<br/>NameError: uninitialized constant ActiveResource::TimeoutError<br/>\tfrom (irb):1<br/>\tfrom /Users/spectator/.rvm/gems/ruby-1.9.3-p194@rails_activeresource_exception/gems/railties-3.2.3/lib/rails/commands/console.rb:47:in `start'<br/>\tfrom /Users/spectator/.rvm/gems/ruby-1.9.3-p194@rails_activeresource_exception/gems/railties-3.2.3/lib/rails/commands/console.rb:8:in `start'<br/>\tfrom /Users/spectator/.rvm/gems/ruby-1.9.3-p194@rails_activeresource_exception/gems/railties-3.2.3/lib/rails/commands.rb:41:in `<top (required)>'<br/>\tfrom script/rails:6:in `require'<br/>\tfrom script/rails:6:in `<main>'<br/>1.9.3p194 :002 > ActiveResource::Base<br/> => ActiveResource::Base <br/>1.9.3p194 :003 > ActiveResource::TimeoutError<br/> => ActiveResource::TimeoutError <br/>```<br/><br/>Autoloading this constant helps to solve this issue.<br/><br/>Submitting to 3-2-stable, because `ActiveResource` is gone in master. All tests pass.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cba03b55d97669f58abd4784f2e6b161?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6230', 'title': u'ActiveResource::TimeoutError is not loaded'}, {'body': u'Cosmetics. Just a bit more consistent :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c82630c82a3c675d2928804f432fcf17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6229', 'title': u'Use single quotes on static strings in app template '}, {'body': u'This is a companion pull request for #6227 updating the CHANGELOG for activesupport to document the addition of #beginning_of_hour and #end_of_hour core extensions as merged to the 3-2-stable branch in #6170.<br/><br/>This pull request contains 2 commits.  The first is the inclusion as outlined above.  The second brings the 3-2-stable CHANGELOG up-to-date by adding missing entries for previous releases.<br/><br/>/cc @vijaydev<br/><br/>Thanks,<br/><br/>Mark.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6228', 'title': u'Updated activesupport CHANGELOG [for 3-2-stable]'}, {'body': u'This pull request consists of 2 commits, pick either/or/none at your pleasure. :)<br/><br/>The first contains an addition to the CHANGELOG for the addition of #beginning_of_hour and #end_of_hour core extensions as merged in #6156.<br/><br/>The second contains a consistency update for CHANGELOG entry indentation.<br/><br/>I will open up a second pull request for a similar change against 3-2-stable shortly.<br/><br/>/cc @vijaydev<br/><br/>Thanks,<br/><br/>Mark.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6227', 'title': u'Updated activesupport CHANGELOG'}, {'body': u'The pull request ensures that, when record gets committed to DB, transaction state gets updated from latest values. Without the patch, calling `save` from `after_commit :on => :create` callback will trigger `after_commit :on => :create` again, which I think is wrong. The current behaviour is also not historically consistent with, https://github.com/freelancing-god/after_commit . <br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6cb0b3e9e50fe72285047eac56209f49?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6226', 'title': u'Update tranasaction state when record gets commited '}, {'body': u'html5 validation error for  options_from_collection_for_select', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6225', 'title': u'HTML5 validation error with options_from_collection_for_select, fixes #5...'}, {'body': u'String is Enumerable in 1.8.7, which means that passing a String to remove_column was generating deprecation warnings during tests.<br/><br/>http://travis-ci.org/#!/rails/rails/jobs/1283165', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6223', 'title': u'Stop showing deprecations for Ruby 1.8.7 with remove_column'}, {'body': u'For now, when you pass a no value to  ```<option>``` and ```<select>``` helper it generates:<br/><br/>```html<br/>..<br/><option value="">foo</option><br/>..<br/>```<br/>instead of<br/><br/>```html<br/>..<br/><option>foo</option><br/>..<br/>```<br/><br/>According to http://www.w3schools.com/tags/tag_option.asp ```value``` is an optional attribute for th e ```<option>``` tag ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6222', 'title': u'<option value="">foo</option>  instead of <option>foo</option> in form_option_helper'}, {'body': u'Deprecate the use of<br/><br/>```ruby<br/>AcitiveRecord::Fixtures::instantiate_fixtures(object, fixture_set_name, fixture_set, load_instances = true)<br/>```<br/><br/>use instead<br/><br/>```ruby<br/>AcitiveRecord::Fixtures::instantiate_fixtures(object, fixture_set, load_instances = true)<br/>```<br/><br/>(without the unused `fixture_set_name` parameter).<br/><br/>To be able to remove the unused parameter in PR #4254.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6221', 'title': u'Deprecate  AcitiveRecord::Fixtures::instantiate_fixtures  unused parameter'}, {'body': u'From:<br/><br/>    define_attribute_methods [:name, :age]<br/><br/>To:<br/><br/>    define_attribute_methods :name, :age', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6220', 'title': u'Allow define_attribute_methods to pass multiple values'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6219', 'title': u'Fix build - 3.2'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6218', 'title': u'Fix docs to support 1.8 syntax'}, {'body': u'Addresses issue of has_secure_password validating password_digest.<br/><br/>Closes #2884.<br/>Closes #5418.<br/>Closes #6185.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6215', 'title': u'Fix has secure password'}, {'body': u'/cc @vijaydev', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6214', 'title': u'Adding docs to alias_attribute method in 3-2-stable'}, {'body': u"cc @vijaydev<br/><br/>Sorry i didn't see your last change in docrails", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6213', 'title': u'Removing attribute_accessor docs duplication'}, {'body': u'/cc @vijaydev', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6212', 'title': u'Removing attribute_accessor docs duplication'}, {'body': u'I changed this in `docrails/master`. I would like to add this to `3-2-stable` too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6211', 'title': u'Adding docs to attribute accessor methods.'}, {'body': u'database.yml.example is created with project along with database.yml<br/><br/>database.yml has also been gitignored.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f9961873414a964cb8aa6d81aa2e2293?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6210', 'title': u'database.yml.example created in app generator'}, {'body': u'added here ceb1dcc3dbd4f3e5d42f46bb5746c87c1fcf47ff', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6205', 'title': u'Adding test for humans.txt'}, {'body': u'This is a bunch of fixes that make railties tests working with rubygems from version 1.3 up to 1.7.<br/>Also adds some info on setting up dev environment in the README, their incomplete but helpful in order to run the railties tests.<br/><br/>Replaces #4422<br/><br/>/cc @jeremy @rafaelfranca', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c82630c82a3c675d2928804f432fcf17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6202', 'title': u'Fix railties (and tests) for latest rubygems'}, {'body': u'Creative title.<br/><br/>@josevalim as per your request, the same pull request made against master which are you already pulled into 3-2-stable ( in https://github.com/rails/rails/pull/6198 )<br/><br/>@twinturbo addresses your concern, no conflict, tests pass and compatible with your accepted pull ( https://github.com/rails/rails/pull/6148 )', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9d5d0ed59a8ea51f69e7f7dd4adb7bd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6201', 'title': u'Allow explicitly set content-type via head method when status code allows it according to the RFCs'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6200', 'title': u'locking ruby-prof for now.'}, {'body': u'Discussion is in #3436<br/><br/>This allows people using the :head method to pass content_type as an option.<br/><br/>The other issue in #3436 is what the value should be set to by default. As I note, according to the RFC the head method content-type value should be set to the value which would be received under content-negotiation for a GET request to the same resource. As this is a much more complicated and separate issue, I do not attempt to solve it here.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9d5d0ed59a8ea51f69e7f7dd4adb7bd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6198', 'title': u'Address ActionPack head method not respecting explicitly set content-type #3436'}, {'body': u"Optimized all images from the official guides with http://imageoptim.com/, for an overview of the file changes in size see: https://gist.github.com/2629041<br/><br/>I went over each image used by the guides, and checked the diffs manually. These optimizations should be safe to use with the guide's design.<br/><br/>note: Originally I have created this pull request on the docrails project, these changes were not suited for that particular project (wherefore my apologies).<br/>After a short conversation with fxn on twitter, I decided to continue this here on rails.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ecd20118eccc74fbe790e75a923de7e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6194', 'title': u'Optimizing all images used in the guides'}, {'body': u'Having a duplicated column specified in a select with order on the same column makes Oracle complain about "ORA-00918: column ambiguously defined" when an order is defined on such column.<br/><br/>This was introduced in #5153 with `first`s default order and discussed in #6147.<br/><br/>I believe this change keeps the test purpose without stepping on Oracle\'s toes.<br/><br/>Cheers!<br/><br/>/cc @tenderlove @yahonda', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6193', 'title': u'Fix failing AR test on Oracle'}, {'body': u'Adds migration and schema dump support for macaddr, inet and cidr column types in the PostgreSQL adapter.<br/><br/>Converst inet and cidr types to NetAddr::CIDR objects, instead of using IPAddr, since NetAddr::CIDR handles subnets better.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ef16c122bdbe053704f2307cea255867?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6192', 'title': u'Add support for macaddr, inet, and cidr types to PostgreSQL adapter'}, {'body': u'Need to investigate why build is failing because of <br/>ruby-prof.<br/><br/>For now Build is Green. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6191', 'title': u'Locking ruby-prof for now. '}, {'body': u"We don't need ingore these files for PostgreSQL for example.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6189', 'title': u'Ignore sqlite3 files only for new application with sqlite3 database'}, {'body': u'Updated the pull request and retested against rails:master, as requested', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/59117dd496b61b6e451ccd12786ab128?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6186', 'title': u'Set the primary key during #copy_table if necessary. Fixes [#2312]'}, {'body': u'To avoid suicide when users see the message<br/>"Password digest can\'t be blank" followed by message<br/>"Password can\'t be blank"', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/364f6cf160096fc0b9f78e6afb670ea3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6185', 'title': u'"Password digest can\'t be blank" message from has_secure_password'}, {'body': u'closes #6179', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6183', 'title': u'wrap time ranges with timezones'}, {'body': u'/cc @carlosantoniodasilva, @drogus, @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d3e25fb9d7126b6ad9b9e75b1095e074?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6182', 'title': u'Change unless + else into if + else'}, {'body': u'/cc @drogus, @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d3e25fb9d7126b6ad9b9e75b1095e074?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6181', 'title': u'Change unless + else into if + else'}, {'body': u'Replace "data-disable_with" with "data-disable-with".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1961fef04b12f9366acd7c0f8ce0297b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6180', 'title': u'Fix typo in submit_tag helper documentation'}, {'body': u'common use-case when you are passing `params` as `:checked` option:<br/><br/>```ruby<br/>:checked => params[:contact_ids]<br/>```<br/>in this case params[:contact_ids] is an array of strings so you should convert it with `to_i` if you want this work. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6176', 'title': u'check checkboxes with array of strings as :checked option'}, {'body': u"@vijaydev follows the changes you asked in #5153. Please see if it's satisfactory and let me know if you want any improvements.<br/><br/>Cheers!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6175', 'title': u'Update `first`, `last` and `take` in guides'}, {'body': u'Avoids unwanted implicit ordering introduced by `first` changes in #5153.<br/><br/>Should close #6147 as well.<br/><br/>Cheers!<br/><br/>/cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6173', 'title': u'Use `take` instead of `first` to avoid unwanted implicit ordering'}, {'body': u"Rationale: easier to understand what's going on, easier to read.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6171', 'title': u'Switch token_tag if block'}, {'body': u'Like it says on the tin.  This is a backport of the feature merged to master in pull request #6156 that adds `beginning_of_hour` and `end_of_hour` to activesupport  `Time` and `DateTime` calculations core extensions and associated test coverage.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6170', 'title': u'Backport beginning and end of hour support for Time and DateTime to 3-2-stable'}, {'body': u"In Ruby 1.9.2, it's better to use `respond_to_missing?` than `respond_to?`, as it also handles method creation.<br/><br/>I see there are others in other rails packages, I'll create additional pull requests when I get a chance.<br/><br/>Thanks", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6169', 'title': u'Respond to missing'}, {'body': u"Because now if we change this line https://github.com/rails/rails/blob/master/activerecord/lib/active_record/aggregations.rb#L255 <br/>to smth like that: <br/>```<br/>@aggregation_cache[name] = nil<br/>```<br/>related tests won't be failed.<br/>Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ceb745dc6fd0e274005d8c9637cca631?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6167', 'title': u'Add test for caching aggrigration part in write_method.'}, {'body': u'`constantize` is meant to avoid looking up in `Object`, e.g. so that `"String::Fixnum".constantize` raises an error.<br/><br/>Unfortunately, the ancestor chain is not looked up at all.<br/><br/>    class A<br/>      Foo = :bar<br/>    end<br/>    class B < A<br/>    end<br/>    "B::Foo".constantize # => raises an error, should return B::Foo (which is == A::Foo)<br/><br/>I ran into this when registering an observer (say "some_class/observer"), where `SomeClass::Observer` is defined in a base class of `SomeClass`. That currently fails, as `Observer` has to be defined directly in `SomeClass`.<br/><br/>One solution is for me to write:<br/><br/>    class SomeClass < SomeBaseClass<br/>      Observer = Observer # to satisfy Rails constantize lookup!!<br/>    end<br/><br/>I hope you appreciate the irony :-)<br/><br/>I feel that there is no reason for `constantize` to be so strict, though. The attached patch fixes this.<br/><br/>Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6165', 'title': u'Make constantize look down the ancestor chain (excluding Object)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6163', 'title': u'Use Hash#fetch instead of has_key? check'}, {'body': u'This is a change from the behavior of passing in an Array of args.<br/>This solution attempts to answer issue #3165<br/><br/>cc/ @josevalim @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f36caea738decf5aff3eebaa7ebabf9c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6162', 'title': u'Model.select takes a variable list of arguments'}, {'body': u"This fixes the following scenario:<br/><br/>    resources :contacts do<br/>      post 'new', action: 'new', on: :collection, as: :new<br/>    end<br/><br/>Where the /new path is not generated because it's considered a canonical<br/>action, part of the normal resource actions:<br/><br/>    new_contacts POST   /contacts(.:format)          contacts#new<br/><br/>ActionPack tests are ok (except for 3 failing on master related to latest session changes). <br/>Fixes #2999", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6160', 'title': u'Force given path to http methods in mapper to skip canonical action checking'}, {'body': u"I'm not too sure why a partial can't start with an uppercase letter.<br/>In any case, this patch adjusts the error message accordingly.<br/>Thanks", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6159', 'title': u'Adjust error message for partial names starting with an uppercase letter...'}, {'body': u'This commit is a backport from the guide in the master branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1879a6cc51ed32603914c8aa4248a20f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6158', 'title': u'improvements in "caching_with_rails" guide'}, {'body': u'While working on the `beginning_of_hour`/`end_of_hour` feature submitted in #6156, I noticed several misnamed tests in `activesupport/test/core_ext/time_with_zone_test.rb` for each of the `beginning_of_`* and `end_of_`* methods as well as for the `future_with_time_current_as_time_with_zone` test.<br/><br/>This pull request enables these tests and fixes the beginning_of_month test which contained a broken assertion.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6157', 'title': u'Enable misnamed time_with_timezone_tests in activesupport core_ext'}, {'body': u"This feature was initially proposed in #598.<br/><br/>This pull request consists of implementations and test coverage fro #beginning_of_hour and #end_of_hour methods for Time and DateTime core extensions within activesupport. No implementation has been provided for Date (beginning_of_hour and end_of_hour for a Date seems nonsensical).<br/><br/>While this feature has been based on master, I'm more than happy to submit it against 3-2-stable for any future 3.2.x release.<br/><br/>For anybody wanting to monkey patch their existing Rails applications with this code, take this gist and place in an initializer: https://gist.github.com/2595181", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6156', 'title': u'Beginning and end of hour support for Time and DateTime'}, {'body': u"This feature was initially proposed in #598.<br/><br/>This pull request consists of implementations and test coverage fro #beginning_of_hour and #end_of_hour methods for Time and DateTime core extensions within activesupport.  No implementation has been provided for Date (beginning_of_hour and end_of_hour for a Date seems nonsensical).<br/><br/>While this feature has been based on master, I'm more than happy to submit it against 3-2-stable for any future 3.2.x release.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6155', 'title': u'(Stale) Beginning and end of hour support for Time and DateTime'}, {'body': u'/cc @josevalim, @vijaydev', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d3e25fb9d7126b6ad9b9e75b1095e074?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6154', 'title': u'Update documentation for button_to.'}, {'body': u"* Allow configuring a different queue consumer<br/>* Make sure to not use default queue consumer with custom queue implementation<br/>* Allow overriding exception handling in threaded consumer<br/><br/>I'm unsure if this configuration should go to environment files, any thoughts?<br/><br/>Railties tests are green. Let me know if something needs improvement, thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6153', 'title': u'Configurable queue consumer'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6152', 'title': u'Just cherry-picked fixes for asset precompile for 3-1-stable'}, {'body': u"The code in [active_record/connection_adapters/sqlite3_adapter.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb) is slightly dublicated by [rails/commands/dbconsole.rb#L76-83](https://github.com/rails/rails/blob/master/railties/lib/rails/commands/dbconsole.rb#L76-83).<br/><br/>I don't think it's very bad, but I suggest to improve db console a little more. In #6012 I covered db console with tests and we can now improve it a little.<br/><br/>The first commit - abort if we execute `rails db` on memory dtabase. The second - to use rails root expand path as here: [connection_adapters/sqlite3_adapter.rb#L21](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb#L21).<br/><br/>The first improvment I found only investigating code, but the second is from real life. I developed gem and executed dummy server `./spec/dummy/scripts/rails server`. It worked well. But  `./spec/dummy/scripts/rails db` failed with not resolved path to db file.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6150', 'title': u'Rails db console improvements'}, {'body': u"I would like to make sure these helper methods include only once every asset.<br/><br/>Different expansions could include the same asset, at least in one of the projects I'm working on, so those assets could be included more than once, so it would be great have this change for us :)<br/><br/>I'm doing this pull request for Rails 3.2 because we would like to have it in this version.<br/><br/>In order to have it also done in latest rails, it seems we need to do the change in rails_sprockets gem, it seems this code was moved to there in master.<br/><br/>Cheers,<br/>Jorge", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/10349623c33510dcf7a6c0805d948465?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6149', 'title': u"Make sure that javascript_include_tag/stylesheet_link_tag methods don't consider duplicated assets"}, {'body': u'This commit makes head responses pass rack-lint. I came across this bug while implementing HTTP caching in our application. According to rack-lint the content-type header must not be present for 1xx, 204, 205, and 304. I was getting weird 500s in our app because responses were blowing up in rack-lint. This commit fixes that. All the other tests pass.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/877677f3c0cc6f8822a57b6732933d31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6148', 'title': u'Make ActionController#head pass rack-link'}, {'body': u'One small step to get rid of conditional optimization in routes.<br/>Now routes are optimized even when globbing is used.<br/><br/>See performance difference for: `URL generation with globbing`<br/>https://gist.github.com/f42886c14e3661623c65<br/><br/>```<br/><br/>Running benchmark with current working tree<br/>PROFILE: interrupts/evictions/bytes = 7/0/1136<br/>Checkout HEAD^<br/>Running benchmark with HEAD^<br/>PROFILE: interrupts/evictions/bytes = 8/0/1168<br/>Checkout to previous HEAD again<br/><br/>                    user     system      total        real<br/>------------------------------------------------draw routes<br/>After patch:    0.300000   0.000000   0.300000 (  0.303803)<br/>Before patch:   0.300000   0.010000   0.310000 (  0.312239)<br/><br/>--------------------------------------simple URL generation<br/>After patch:    0.010000   0.000000   0.010000 (  0.006227)<br/>Before patch:   0.010000   0.000000   0.010000 (  0.006297)<br/><br/>-------------------------URL generation with params as hash<br/>After patch:    0.070000   0.000000   0.070000 (  0.074639)<br/>Before patch:   0.070000   0.010000   0.080000 (  0.075167)<br/><br/>-----------------URL generation with handle_positional_args<br/>After patch:    0.080000   0.000000   0.080000 (  0.082639)<br/>Before patch:   0.080000   0.000000   0.080000 (  0.083506)<br/><br/>-------------------------------URL generation with globbing<br/>After patch:    0.010000   0.000000   0.010000 (  0.007267)<br/>Before patch:   0.070000   0.010000   0.080000 (  0.078637)<br/><br/>-------------------------------------handle_positional_args<br/>After patch:    0.000000   0.010000   0.010000 (  0.003361)<br/>Before patch:   0.000000   0.010000   0.010000 (  0.003353)<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6144', 'title': u'RouteSet: optimize routes generation when globbing is used'}, {'body': u'This makes it possible to filter invalid input values before they are passed<br/>into the value-object (like empty strings). This behaviour is only relevant<br/>if the :allow_nil options is set to true. Otherwise you will get<br/>the resulting NoMethodError.<br/><br/>This pull-request is the same as #3421 but with the correct merge target.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6143', 'title': u'allow the :converter Proc form composed_of to return nil'}, {'body': u'There were several places where parsing the :size option took 3 lines:<br/><br/>```ruby<br/>if size = options.delete(:size)<br/>  options[:width], options[:height] = size.split("x") if size =~ %r{^\\d+x\\d+$}<br/>end<br/>```<br/><br/>I refactored it so now you do this:<br/><br/>```ruby<br/>extract_size!(options, :width, :height)<br/># OR<br/>extract_size!(options, :cols, :rows)<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/971870b4576ac335818c999092ef826c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6142', 'title': u"refactored extracting :size => 'XxY' into an extract_size! method"}, {'body': u'Removing 1.8 targeted code. Despite the 1.9/bundler note I see no warnings.<br/><br/>Removing unnecessary call to `to_sym`.<br/><br/>Cheers!<br/><br/>/cc @josevalim @mikel', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6141', 'title': u'Minor ActionMailer tweaks'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6139', 'title': u'use extract_options!'}, {'body': u'Remove some code dups.<br/><br/><br/>Ensure no performance degrade (probably compiler optimization saved our souls):<br/><br/>https://gist.github.com/2584434<br/><br/>```<br/><br/>Running benchmark with current working tree<br/>Checkout HEAD^<br/>Running benchmark with HEAD^<br/>Checkout to previous HEAD again<br/><br/>                    user     system      total        real<br/>------------------------------------------------draw routes<br/>After patch:    0.300000   0.010000   0.310000 (  0.310616)<br/>Before patch:   0.300000   0.000000   0.300000 (  0.311043)<br/><br/>--------------------------------------simple URL generation<br/>After patch:    0.010000   0.000000   0.010000 (  0.006107)<br/>Before patch:   0.010000   0.000000   0.010000 (  0.006176)<br/><br/>-------------------------URL generation with params as hash<br/>After patch:    0.080000   0.000000   0.080000 (  0.075196)<br/>Before patch:   0.070000   0.010000   0.080000 (  0.075134)<br/><br/>-------------------------------URL generation with globbing<br/>After patch:    0.070000   0.000000   0.070000 (  0.077017)<br/>Before patch:   0.080000   0.000000   0.080000 (  0.077661)<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6138', 'title': u'RouteSet: remove some code dups'}, {'body': u'As mentioned in `caching_with_rails.textile`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6137', 'title': u'cache_store has an extra option of :null_store.'}, {'body': u"Test file `activerecord/test/cases/session_store/sql_bypass.rb` wasn't sufixed by `_test.rb` and so wasn't caught by the test suite.<br/><br/>Also, `SqlBypass` implemented a `new_record?` interface while the tests where expecting it to offer `persisted?`. Since this was part of a [commit](https://github.com/rails/rails/commit/f1c13b0dd7b22b5f6289ca1a09f1d7a8c7c8584b) that was then [reverted](https://github.com/rails/rails/commit/75015d1b5cae80826ef41add3c84d1dd51fee259) I wasn't sure which one was preferred. I went with `persisted?`.<br/><br/>And last but not least, forced session_id to be passed as a string to the sql queries since postgresql was complaining about type mismatch (string column vs integer value on where clause).<br/><br/>Cheers", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6136', 'title': u'Bring SqlByPassTest to light and fix broken tests'}, {'body': u'I have a few places where I really only care to assert that the URL matches a regular expression.<br/><br/>This patch allows it while keeping the semantics the same when a `String` or `Hash` is passed to `assert_redirected_to`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3da9aebb918d0d1b12d66fcca93c289d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6135', 'title': u'Allows assert_redirected_to to accept a regular expression'}, {'body': u'Change CollectionProxy#method_missing to use scoped.public_send, to avoid a\nproblem described in issue #2508 when trying to use class methods with names\nlike "open", that clash with private kernel methods. Also changed the dynamic\nmatcher instantiator to send straight to scoped, to avoid another roundtrip\nto method_missing.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6134', 'title': u'Fix issue with private kernel methods and collection associations'}, {'body': u'If a user gets a routing error due to a view helper such as using user_path without an :id they must go to their logs to see the backtrace. By adding in the trace template, a user can see which line the error occurred on without leaving the browser.<br/><br/>When a routing error occurs outside of the view the application trace will be blank and will not confuse developers.<br/><br/><br/>Before PR: http://cl.ly/3x332b0V2d0E0Q1G0C1t<br/>After PR: http://cl.ly/2O431D0A1u2Q2p130A3t', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6131', 'title': u'Add backtrace to development routing error page'}, {'body': u'When using proper restful routes an :id parameter is expected on the show, edit, update and delete. If omitted in the view layer an error will be thrown. So a link to the show action like this:<br/><br/>    <%= link_to \'user\', user_path %><br/><br/>This will produce an error like this:<br/><br/>    No route matches {:action=>"show", :controller=>"users"}<br/><br/>Since we know that the :id is missing, and this route likely needs it we can add extra debugging information to the error message.<br/><br/>    No route matches {:action=>"show", :controller=>"users"}, :id key is missing<br/><br/><br/>This will help new and seasoned developers look closer at their :id parameter in their view helpers. While not all errors will be a result of a missing :id key, this error message implies the most likely cause without declaring it the culprit.<br/><br/>Before PR: http://cl.ly/121J0o3x2F2m2s3j0F3q<br/>After PR: http://cl.ly/2t0A082x2L3k3e2M2Q0U<br/>After PR (other params): http://cl.ly/3N1w0N161b213n0x2c0U<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6130', 'title': u'Give descriptive error message when :id missing'}, {'body': u'When using proper restful routes an :id parameter is expected on the show, edit, update and delete. If omitted in the view layer an error will be thrown. So a link to the s<br/>    <br/>    <%= link_to \'user\', user_path %><br/>    <br/>This will produce an error like this:<br/>    <br/>    No route matches {:action=>"show", :controller=>"users"}<br/>    <br/>Since we know that the :id is missing, and this route likely needs it we can add extra debugging information to the error message.<br/>    <br/>    No route matches {:action=>"show", :controller=>"users"}, :id key is missing<br/>    <br/><br/>This will help new and seasoned developers look closer at their :id parameter in their view helpers. While not all errors will be a result of a missing :id key, this error message implies the most likely cause without declaring it the culprit.<br/><br/>Before PR: http://cl.ly/121J0o3x2F2m2s3j0F3q<br/>After PR: http://cl.ly/2t0A082x2L3k3e2M2Q0U<br/>After PR (other params): http://cl.ly/3N1w0N161b213n0x2c0U<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6129', 'title': u'Give descriptive error message when :id missing'}, {'body': u'Same as #6089 for 3-2-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6128', 'title': u'Fix #4979 against 3-2-stable'}, {'body': u"test_multiparameter_attributes_on_time_will_ignore_hour_if_missing and test_multiparameter_attributes_on_time_with_empty_seconds tests in BasicTest always got a Failure<br/>when executed separably with -n option with sqlite3, mysql, mysql2 and postgresql adapters.<br/>It always successfully finished when 'rake test' <br/><br/>It looks when each test executed default_timezone is :utc, however all of unit test executed <br/>it is set to :local.<br/><br/>```ruby<br/>$ for i in sqlite3 postgresql mysql mysql2<br/>> do<br/>> ARCONN=$i ruby -Itest test/cases/base_test.rb  -n test_multiparameter_attributes_on_time_will_ignore_hour_if_missing<br/>> ARCONN=$i ruby -Itest test/cases/base_test.rb  -n test_multiparameter_attributes_on_time_with_empty_seconds<br/>> done<br/>Using sqlite3<br/>Run options: -n test_multiparameter_attributes_on_time_will_ignore_hour_if_missing --seed 17766<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 0.189333s, 5.2817 tests/s, 5.2817 assertions/s.<br/><br/>  1) Failure:<br/>test_multiparameter_attributes_on_time_will_ignore_hour_if_missing(BasicsTest) [test/cases/base_test.rb:773]:<br/>Expected: 2004-12-12 00:12:02 +0900<br/>  Actual: 2004-12-12 00:12:02 UTC<br/><br/>1 tests, 1 assertions, 1 failures, 0 errors, 0 skips<br/>Using sqlite3<br/>Run options: -n test_multiparameter_attributes_on_time_with_empty_seconds --seed 16678<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 0.189986s, 5.2636 tests/s, 5.2636 assertions/s.<br/><br/>  1) Failure:<br/>test_multiparameter_attributes_on_time_with_empty_seconds(BasicsTest) [test/cases/base_test.rb:900]:<br/>Expected: 2004-06-24 16:24:00 +0900<br/>  Actual: 2004-06-24 16:24:00 UTC<br/><br/>1 tests, 1 assertions, 1 failures, 0 errors, 0 skips<br/>Using postgresql<br/>Run options: -n test_multiparameter_attributes_on_time_will_ignore_hour_if_missing --seed 33097<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 0.382025s, 2.6176 tests/s, 2.6176 assertions/s.<br/><br/>  1) Failure:<br/>test_multiparameter_attributes_on_time_will_ignore_hour_if_missing(BasicsTest) [test/cases/base_test.rb:773]:<br/>Expected: 2004-12-12 00:12:02 +0900<br/>  Actual: 2004-12-12 00:12:02 UTC<br/><br/>1 tests, 1 assertions, 1 failures, 0 errors, 0 skips<br/>Using postgresql<br/>Run options: -n test_multiparameter_attributes_on_time_with_empty_seconds --seed 9872<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 0.366155s, 2.7311 tests/s, 2.7311 assertions/s.<br/><br/>  1) Failure:<br/>test_multiparameter_attributes_on_time_with_empty_seconds(BasicsTest) [test/cases/base_test.rb:900]:<br/>Expected: 2004-06-24 16:24:00 +0900<br/>  Actual: 2004-06-24 16:24:00 UTC<br/><br/>1 tests, 1 assertions, 1 failures, 0 errors, 0 skips<br/>Using mysql<br/>Run options: -n test_multiparameter_attributes_on_time_will_ignore_hour_if_missing --seed 1384<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 0.301228s, 3.3197 tests/s, 3.3197 assertions/s.<br/><br/>  1) Failure:<br/>test_multiparameter_attributes_on_time_will_ignore_hour_if_missing(BasicsTest) [test/cases/base_test.rb:773]:<br/>Expected: 2004-12-12 00:12:02 +0900<br/>  Actual: 2004-12-12 00:12:02 UTC<br/><br/>1 tests, 1 assertions, 1 failures, 0 errors, 0 skips<br/>Using mysql<br/>Run options: -n test_multiparameter_attributes_on_time_with_empty_seconds --seed 34149<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 0.274967s, 3.6368 tests/s, 3.6368 assertions/s.<br/><br/>  1) Failure:<br/>test_multiparameter_attributes_on_time_with_empty_seconds(BasicsTest) [test/cases/base_test.rb:900]:<br/>Expected: 2004-06-24 16:24:00 +0900<br/>  Actual: 2004-06-24 16:24:00 UTC<br/><br/>1 tests, 1 assertions, 1 failures, 0 errors, 0 skips<br/>Using mysql2<br/>Run options: -n test_multiparameter_attributes_on_time_will_ignore_hour_if_missing --seed 21813<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 0.371418s, 2.6924 tests/s, 2.6924 assertions/s.<br/><br/>  1) Failure:<br/>test_multiparameter_attributes_on_time_will_ignore_hour_if_missing(BasicsTest) [test/cases/base_test.rb:773]:<br/>Expected: 2004-12-12 00:12:02 +0900<br/>  Actual: 2004-12-12 00:12:02 UTC<br/><br/>1 tests, 1 assertions, 1 failures, 0 errors, 0 skips<br/>Using mysql2<br/>Run options: -n test_multiparameter_attributes_on_time_with_empty_seconds --seed 12874<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 0.328632s, 3.0429 tests/s, 3.0429 assertions/s.<br/><br/>  1) Failure:<br/>test_multiparameter_attributes_on_time_with_empty_seconds(BasicsTest) [test/cases/base_test.rb:900]:<br/>Expected: 2004-06-24 16:24:00 +0900<br/>  Actual: 2004-06-24 16:24:00 UTC<br/><br/>1 tests, 1 assertions, 1 failures, 0 errors, 0 skips<br/>$<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6126', 'title': u'Address failures by setting default_timezone explicitly.'}, {'body': u'See https://github.com/rails/rails/issues/2593 for details.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf3ed91eed72fa093f7e99779135890b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6125', 'title': u'Adding proc evaluation for action caching layout parameter'}, {'body': u'This pull request addresses a failure at test_clear_cash_when_setting_table_name with Oracle.<br/><br/>```ruby<br/>$ ARCONN=oracle ruby -Itest test/cases/base_test.rb  -n test_clear_cash_when_setting_table_name<br/>Using oracle<br/>Run options: -n test_clear_cash_when_setting_table_name --seed 1556<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 5.911268s, 0.1692 tests/s, 0.5075 assertions/s.<br/><br/>  1) Failure:<br/>test_clear_cash_when_setting_table_name(BasicsTest) [test/cases/base_test.rb:1519]:<br/>Expected: "cold_jokes_id_seq"<br/>  Actual: "cold_jokes_seq"<br/><br/>1 tests, 3 assertions, 1 failures, 0 errors, 0 skips<br/>```<br/><br/>This pull request has been tested with sqlite3,postgresql, mysql and mysql2 adapters.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6123', 'title': u'To address sequence name differences at test_clear_cash_when_setting_table_name'}, {'body': u'ActionDispatch::Http::Headers should support the common Ruby idiom of using #fetch to return the value or a default.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/627f0a46a5ea5729951b8224833ca653?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6122', 'title': u'Enable ActionDispatch::Http::Headers to support fetch'}, {'body': u'This patch removes `hash_for_*` methods from routing module and use `handle_possional_args` directly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6121', 'title': u'ActionPack routes: remove some useless code.'}, {'body': u'Build fix finally! Sorry about previous one.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6120', 'title': u'Fix build for railties generators '}, {'body': u"Rails boot.rb permanently depends from rubygems.<br/>https://github.com/rails/rails/blob/master/railties/lib/rails/generators/rails/app/templates/config/boot.rb#L1<br/><br/>Checking Gem const presence doe's not make sense.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6119', 'title': u'Gem const presence checking has been removed'}, {'body': u'As syntax changed here 5eb32af28b16cf8d26ce291232239892154227d4', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6118', 'title': u'build fix for SharedGeneratorTests'}, {'body': u"Rake files on repository has executable attribute on my system Lion 10.7.3<br/>fixed<br/><br/>There is no shebang line here https://github.com/jimweirich/rake/blob/master/Rakefile<br/>The purpose of Rakefile is to declare rake tasks like Gemfile or Vagrantfile<br/>it doe's not make sense to Rakefile directly", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6116', 'title': u'Rakefile executable attributes and shebang lines has been removed'}, {'body': u'...te<br/><br/>Rakefile is a config. There is no reason to run this file directly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6112', 'title': u'shebang line and exec attr has been removed from new app Rakefile templa...'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6111', 'title': u'Use new hash syntax in generated Gemfile'}, {'body': u'Related to a06a84bf77082a7435973fa1b6c8254fb410f243', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6109', 'title': u'Build fix for plugin new generator change'}, {'body': u"It's unnecessary to send caller from all places where used ActiveSupport::Deprecation.warn, because we can only call `caller(2)` from `warn` method and get the same callstack", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6107', 'title': u'Make callstack attribute optional in AS:Deprecation'}, {'body': u"Fixed display errors caused by mixing Ruby and HTML code inside the same pre tag.<br/><br/>This error can be seen in http://api.rubyonrails.com searching `options_for_select`. The example code snippets mix HTML and Ruby code, which causes the closing `option` tags not to display correctly. I've fixed this by converting the HTML code to Ruby comments.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a02325308aeb3a657be050213f7acf8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6106', 'title': u'Documentation fix in options_for_select helper. '}, {'body': u'As noted in #5849, Rails does not currently support module namespaces containing underscores. This is largely due to how ActiveSupport::Inflector.camelize and ActiveSupport::Inflector.underscore currently work.\n\nThis pull request essentially introduces a new convention whereby module namespaces containing underscores are translated to paths with *two* underscores for each underscore, and vice versa. For example:\n\n```\n"API::V0_1_0" --> "api/v0__1__0"\n```\n\n```\n"api/v0__1__0" --> "API::V0_1_0"\n```\nI\'m not married to this convention by any stretch, I\'m just throwing it out there as a straw man.\n\nIn addition to this fix for the 3-2-stable branch, I\'ve also made this change for the 3-0-stable, 3-1-stable, and master branches as well. You can find them in the following branches in my repo (if you want a separate pull request for each just let me know):\n\nunderscores-in-namespaces-3-0-stable\nunderscores-in-namespaces-3-1-stable\nunderscores-in-namespaces-3-2-stable\nunderscores-in-namespaces-master\n\nI can also fix this for the 2.x series branches as well if you want, just let me know.\n\nThanks,\nBrian', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/390d2e69569ba48d2335312717ff2d38?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6105', 'title': u'Support for underscores in module namespaces'}, {'body': u'Reading through the Queue code I found a couple of local vars assigned and never used, I guess no one will miss them :-)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a02325308aeb3a657be050213f7acf8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6102', 'title': u'Removing unused local vars in Queue tests'}, {'body': u"Hi guys,<br/><br/>I did some refactoring of single-line class definitions. `Class.new` seems more readable than using semicolon, don't you think?<br/><br/>Looking forward for your feedback.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/076ddab874e5e370a451f0da52afb85c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6100', 'title': u'improve redability'}, {'body': u'Rake files on repository has executable attribute on my system Lion 10.7.3<br/>fixed<br/><br/>(without ci/travice.rb)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6097', 'title': u'Rakefile executable attributes has been removed'}, {'body': u"This is an addendum to https://github.com/rails/rails/pull/2532 <br/><br/>Adds the same to_json behaviour to BigDecimal NaN and +/-Infinity.<br/><br/>```ruby<br/>  {'nan' => BigDecimal(0.0)/(0.0) }.to_json<br/>  # => { 'nan' : null }<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5a3cdca851be0f6fea2a746b78afa0b8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6096', 'title': u'JSON: encode BigDecimal NaN/Infinity as null.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6095', 'title': u'It fixes #3993 assets:precompile task that does not detect index files'}, {'body': u"As @twinturbo objected in pull request #6063, here's a separate request for this change and expanded reasoning.<br/><br/>Reasons to make `notify_observers` public:<br/><br/>- consistent with the fact that `notify_observers` in the stdlib's `Observable` is public.<br/>- consistent with the fact that the singleton method `notify_observers` is public:<br/><br/>    Foo.notify_observers(:my_event, the_foo) # => currently ok<br/>    the_foo.notify_observers(:my_event) # => currently not ok<br/><br/>- `notify_observers` is not the right level to restrict access. Some actions would be best kept private (say :after_save) but custom actions could very well be triggered by external clients. The class and its instances simply act as a rendez-vous point where complete strangers to the class can communicate.<br/><br/>Example:<br/><br/>An observer implements `:after_save` to detect some state change. If detected, it wants to send a custom notification `:some_state_changed`, so other observers can be notified and don't have to reimplement the state change logic. It shouldn't have to use `send`.<br/><br/>Thanks", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6093', 'title': u'notify_observers should be public'}, {'body': u'Fixes #4001.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/31c4a590d4c752f53038d786516c4c74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6092', 'title': u"Don't type cast values that don't respond to to_i to 1"}, {'body': u"This patch adds a new method for plucking all the IDs from a relation. This is useful when you need ID's for API's.<br/><br/>Original issue here: #5812", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/877677f3c0cc6f8822a57b6732933d31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6091', 'title': u'Add ActiveRecord::Base#ids - Close #5812'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6089', 'title': u'delete_all raise an error if a limit is provided - fixes #4979'}, {'body': u'Title says it all. Same thing as #6086, but working against 3-2 stable. This patch also appends the table name if a symbol is given, so `pluck(:id)` will select the id from the correct table when includes/joins are used.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/877677f3c0cc6f8822a57b6732933d31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6088', 'title': u'Fix #5990 Against 3-2 Stable'}, {'body': u"Title says it all. This makes `ActiveRecord#pluck` respect `includes`. I'm also making a fix against 3.2-stable", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/877677f3c0cc6f8822a57b6732933d31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6086', 'title': u'Close #5990 - Make #pluck respect includes'}, {'body': u'It fixes  #3047, #2483.<br/><br/>The bug can be easily reproduced:<br/>```<br/>rails new foobar<br/>cd foobar<br/>rails generate scaffold post<br/>rake db:sessions:create db:migrate<br/>sed -i \'\' "s/cookie_store.*/active_record_store, key: \'_foobar_session\', domain: :all/" config/initializers/session_store.rb<br/>rails server # open http://localhost:3000/posts<br/>```<br/><br/>Also I\'ve provided failing test.<br/><br/>This patch introduces support of domain option for all stores not only cookie store.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6084', 'title': u'Support cookie jar options for all cookie stores'}, {'body': u'These ivars were missed in d142572567 when close checks were removed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6083', 'title': u'Remove a couple of unused ivars left from previous refactoring'}, {'body': u"Currently if cookie is set to the same value then it will be streamed back to client. But it's needed only if there is expires option. Also when deleting unexisting cookie the deletion will be streamed back also.<br/><br/>I've improved these edge cases and provided a couple of small improvements of code nearby.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6082', 'title': u'Stream cookies only if needed'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6080', 'title': u'Improve changelog of new :silence deprecation behavior'}, {'body': u'introduced here 17c990b153f8635874c006a7460ee95817543fc1', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6079', 'title': u'build fix for observing_test.rb'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6078', 'title': u'allow send_file/send_data to skip disposition header, closes #2973'}, {'body': u'_Remake of #2173_.<br/><br/>Boolean arguments are bad. You guys knew it when changing `ActiveRecord::Base#save` from `save(false)` to `save(:validate => false)`.<br/><br/>I suggest also remove boolean argument `include_seconds` from `distance_of_time_in_words` and `time_ago_in_words`, replacing in with `include_seconds => true` hash option. Of course to keep it as deprecated option. This is somehow a resurrection of #898.<br/><br/>Also it makes `time_ago_in_words` to pass options hash, including a `locale` key, which makes in compatible with `distance_of_time_in_words`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4486876726bcef5b87268564fc29e6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6077', 'title': u'Replace boolean argument with an options hash.'}, {'body': u'introduced here<br/>bad44e4f8f690039bd0db92ac25f10af536c6e71', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6076', 'title': u'Build fix for observed_classes'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6075', 'title': u'railties variable is not required here.'}, {'body': u"I used Rubymine's unused variable inspection to find cases of assignments that weren't used.  I went through them by hand, making sure the inspections were legitimate, before I changed them.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1223303a3bb3379a1b7b0e3d30e0aa71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6074', 'title': u'Remove some unused variable assignments'}, {'body': u"This fixes issue #3217.<br/><br/>Previously, a call to AR#create that raised AR::RecordInvalid would leave a record in an inconsistent state -- it wouldn't actually be saved in the database, but #persisted? => true and #id would be non-nil. This patch also merges clean into 3-2-stable, for now.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3969d15a64e76f79cf1038bcf3960ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6073', 'title': u'Restore state on create when ActiveRecord::RecordInvalid is raised'}, {'body': u'Remove redundant test and make test simpler and more specific.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6072', 'title': u'Observer: simplify tests'}, {'body': u'Also addresses [issue #1034] [pull #6068]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6071', 'title': u'Fix Observer by acting on singleton class [#3505]'}, {'body': u"MySQL does not allow defaults on TEXT/BLOB types. In strict mode this causes an error, in 'default' mode they are ignored.<br/><br/>Modify test schema.rb to use a VARCHAR rather than a TEXT in this case.<br/><br/>Part of #5988", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c72c888bea79af1f4d39c3eadef77d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6070', 'title': u'Fix test schema.rb '}, {'body': u"MySQL, by default, opts to truncate or replace rather than 'fail fast' on incompatible data. This can lead to confusion, frustration and data loss.<br/><br/>This is inconsistent with two other popular database engines: PostgreSQL will error (since v 7.2) and sqlite will simply allow the original data (rather than modifying it).<br/><br/>Defaulting to STRICT_ALL_TABLES will ease error discovery and prevent new applications from depending on MySQL's quirks.<br/><br/>Original issue: #5988", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c72c888bea79af1f4d39c3eadef77d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6069', 'title': u'Use strict mode in mysql'}, {'body': u'I\'m trying to fix #3505 issue:<br/><br/>I need help with this:<br/><br/>    rails/activemodel/lib/active_model/observing.rb:199: warning: previous definition of observed_classes was here<br/>    rails/activemodel/lib/active_model/observing.rb:199: warning: method redefined; discarding old observed_classes<br/><br/>I\'m getting those warnings in this test:<br/><br/>    test "passes observers to subclasses" do<br/>        FooObserver.instance<br/>        bar = Class.new(Foo)<br/>        assert_equal Foo.observers_count, bar.observers_count<br/>    end<br/><br/>I don\'t know how to check if the method is already defined in the subclass?<br/><br/>      def observe(*models)<br/>        models.flatten!<br/>        models.collect! { |model| model.respond_to?(:to_sym) ? model.to_s.camelize.constantize : model }<br/><br/>        unless self.singleton_class.respond_to?(:observed_classes)<br/>          define_singleton_method(:observed_classes) { models }<br/>        end<br/>      end', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6068', 'title': u'observed_classes get redefined properly - fixes #3505'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/70c77c026a5027962949bf4d2a47a24f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6067', 'title': u'Fix typo'}, {'body': u"I believe this removes 1.8 support, I'm not sure what else I need to remove or update so let me know please! <br/><br/>/cc @fxn", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/095062f50c1bebb0bbd9d33899ebeda4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6066', 'title': u'Remove ActiveSupport 1.8 backports'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/70c77c026a5027962949bf4d2a47a24f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6065', 'title': u'Remove repeated word'}, {'body': u'Some fixes in guides for deprecated information and tests for deprecated information about Range#===<br/><br/>/cc @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6064', 'title': u'Fix guides for as core ext'}, {'body': u"I wanted to use observers to send custom events and noticed that #notify_observers only accepts one argument.<br/><br/>Unless there's a good reason not too, it woud be nice to accept extra arguments and pass them on.<br/><br/>Thanks", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6063', 'title': u'Allow extra arguments for Observers'}, {'body': u'Small fixes and improvements for Observers.<br/>Thanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6062', 'title': u'Tweak observer'}, {'body': u'Title says it all.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/877677f3c0cc6f8822a57b6732933d31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6061', 'title': u'Close #3886 - Add THEAD and TBODY to scaffold markup'}, {'body': u"I have to carry around some snippets 'cause I always use these methods (specially deep_symbolize_keys) when I use YAML files with custom app configuration. Some people I know also have their own versions, so I thought adding them to ActiveSupport was a good idea.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c3a1c4bf5666ff36baab24a44ef72e56?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6060', 'title': u'Adding deep versions of stringify_keys and symbolize_keys (plain and bang) for nested hashes'}, {'body': u'This fixes:\n\n* Boolean with inverted logic\n* Integer with inverted logic\n* BigDecimal with inverted logic\n\nFixes #3995\n\ncc @sobrinho @carlosantoniodasilva', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6059', 'title': u'Change check_box to work inverting the checked and unchecked value'}, {'body': u'I had to use subqueries in my project, several times. And I used this pattern:<br/><br/>```ruby<br/>Record.from("(#{sub_query.to_sql})")<br/>Record.from("(#{sub_query.to_sql}) a")<br/>```<br/><br/>Which doesn\'t feel right. I much prefer just to pass ActiveRecord::Relation objects:<br/><br/>```ruby<br/>Record.from("(#{sub_query.to_sql})")    -> Record.from(sub_query)<br/>Record.from("(#{sub_query.to_sql}) a")  -> Record.from(:a => sub_query)<br/>```<br/><br/>So this pull request add this functionality.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7a0e72a6f55811246bb5d9a946fd2e49?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6058', 'title': u'Relation#from to accept other Relation objects'}, {'body': u'Doing a little bit of cleanup as per https://github.com/rails/rails/pull/6056#issuecomment-5406848', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9b7461edb06ce10e12f865220e43948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6057', 'title': u'Removed extraneous .present? check for AR::Base#reload'}, {'body': u'Cleaned up "DEPRECATION WARNING: Passing options to #find is<br/>deprecated. Please build a scope and then call #find on it."', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9b7461edb06ce10e12f865220e43948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6056', 'title': u'Removed deprecation warning for #find as a result of AR::Base#reload'}, {'body': u'Issue #6045', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/406a9d04de19cb80e798862b9772f491?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6054', 'title': u'Prevent creating valid time-like objects from blank string from db'}, {'body': u'TestCase#process generates an incorrect controller_class_name for anonymous classes. The name has a "_controller" suffix, which ought not to be there. This change simply removes that suffix.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bce1d1b7c3ec7b577dcb42e254899e6b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6053', 'title': u'Fix controller_class_name for anonymous controllers.'}, {'body': u'DEPRECATION WARNING: Passing options to #find is deprecated. Please<br/>build a scope and then call #find on it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9b7461edb06ce10e12f865220e43948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6052', 'title': u'Removed deprecation warning for #find as a result of AR::Base#reload'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6051', 'title': u'Fix the build'}, {'body': u'I\'ve noticed that my log contains wrong incoming parameters like this<br/>Parameters: {"user_id"=>1, "users"=>{"user_id"=>1, "action"=>"update", "controller"=>"users"}}<br/>When it should be {"user_id"=>1, "action"=>"update", "controller"=>"users", "users"=>{"user_id"=>1}}<br/>But incoming parameters in controller look ok.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6050', 'title': u'Show in log correct wrapped keys'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6048', 'title': u'Fix build and add JSONP change to CHANGELOG'}, {'body': u'Add changelog entry for the mimetype change for jsonp requests:\nd4dd1af341dcc1908b594567991845324df0ee56\n\nFix failing test: Mime::JS generates "text/javascript" instead of\n"application/javascript"', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6047', 'title': u'Add changelog entry for jsonp mimetype change, fix failing test'}, {'body': u'nil.stubs is not allowed in new version of mocha<br/><br/>We can lock mocha in 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6046', 'title': u'Lock mocha to fix build'}, {'body': u'After this commit we can use regexp as separator in String#truncate https://github.com/rails/rails/commit/5a7513593f64e0ff7e4de1ee37bac5eeddfae270', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6044', 'title': u'Tests for regexp separator in String#truncate'}, {'body': u'For example:<br/>`h3. \u524d\u60c5\u63d0\u8981` -> `<h3 id="id-b06fb2be768e9ac684d9f7788d3333de">1 \u524d\u60c5\u63d0\u8981</h3>`<br/><br/>When there is non English header, it may cause mistake when guide generation.<br/>For example: <br/>`h3. This Guide Assumes` -> `<h3 id="this-guide-assumes">1 This Guide Assumes</h3>`<br/>`h3. \u524d\u60c5\u63d0\u8981` -> `<p>h3(#). 1 \u524d\u60c5\u63d0\u8981</p>`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a01ae9942939ee2b3954a6727d2bb92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6043', 'title': u'Make non English title indexable (such as Chinese or Japanese) using MD5'}, {'body': u'Patch for issue #2084 /cc @steveklabnik', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ceb745dc6fd0e274005d8c9637cca631?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6042', 'title': u'Update the coerced attribute in the aggrigate part for right caching.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd9079e8f5b64c6e9b6a3ad2ade0a5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6041', 'title': u'Fixed typo in ActiveSupport::Inflector#titleize'}, {'body': u'Please see issue #6033<br/><br/>This commit allows one to easily opt-out of the specific BigDecimal JSON serialization (ie. get actual numeric serialization instead of having a string-wrapped number)<br/><br/>I think this should be the default behaviour in a future major release as this breaks the principle of least surprise and assumes that users always have control of the parsing end. It should be made opt-in instead when breaking backwards compatibility is acceptable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dfdb8d531262b99f987902fe25f868c1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6040', 'title': u'BigDecimal string wrapping in JSON serialization can now be opted-out'}, {'body': u'Cheery-picked from master f98d929e675fb68a4f031ff09ccc8b1dfe00454e', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6038', 'title': u'Warning removed 3 2 stable'}, {'body': u'* Remove warning of queue method redefinition\n* Remove warning of AS::Testing::Declarative redefining method\n* Refactor RoutesReloader a bit to avoid extra hash objects\n\nLet me know if something needs improvement, thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6036', 'title': u'Remove some warnings and minor refactor in RoutesReloader'}, {'body': u'Avoid changing the given options hash in #human_attribute_name, and some\nminor refactoring. Any feedback is welcome, thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6035', 'title': u'Refactor AMo::Translation, avoid changing options in human attr name'}, {'body': u'So once upon a time, Rails always loaded the session unless you explicitly used session :off.  Loading itself is not so important but loading the session also triggers writing a session cookie back on the response, so obviously it is very important to turn session cookies off on shared resources, particularly if you\'re using cache control to make them publicly cacheable.  So you always knew to do session :off when you had a controller sending that kind of header.<br/><br/>When sessions were changed to be lazily loaded in the 2.x days, session :off was removed since it was no longer required.<br/><br/>But in the refactoring of the flash code from the controller stack into the middleware stack in the 3.x series, the code was not just moved over directly - the commit (ead93c5) also rewrote a couple of the methods in a way that meant that the middleware now ALWAYS loads the session in order to clear flashes, and so\xa0ALWAYS writes back a session cookie.  Because Rails no longer has session :off, and middleware can\'t be skipped on a per-controller basis without building an entire new stack, this is not good.<br/><br/>It gets much worse though.  Tests/specs don\'t really run the real flash or session code - they have to set aup a fake context one way or another so IIRC they never did - and the test session setup code does not have the same bug.  So tests written to confirm that the controllers don\'t set session cookies are falsely passing.<br/><br/>The really bad thing came in Rails 3.1, which turned on Rack::Cache by default, even for existing apps.  Unlike most caches, Rack::Cache - at that time (I\'m told they\'ve put in a patch since) - would cache any responses that you mark cacheable even if they have cookies, and will cache and serve the cookie.<br/><br/>Every other HTTP cache I\'ve seen will either ignore the cacheable headers because there\'s a cookie, or strip the cookie.  (Of course, it is programmer error to have cacheable headers and a cookie header, but if the programmer error is in the framework and that\'s an unannounced change that tests don\'t reveal, this can get into production, and has.)<br/><br/>So by Rails 3.1 we had a silent behavior change to always send session cookies even on responses marked cacheable, false negatives from tests designed to check session cookies were not being sent, and a default infrastructure change that meant that other people\'s sessions cookies were sent out on cacheable objects even though that\'s clearly crazy, even on HTTPS.<br/><br/>This caused us a very expensive privacy breach because all customers ended up with session of customer who first happened to hit the shareable resources, since all future responses came from Rack::Cache instead of the actual session.<br/><br/>(In case you\'re wondering why we didn\'t hit this as soon as we went to the 3.0 version that had the middleware change, we\'re using HTTPS - so the only cache that could possible see the response is one on our servers, which means only Rack::Cache.  But as I say, any other server-side caching software I\'ve ever used would not have done this anyway.)<br/><br/>Although Rack::Cache may now be more sane, we still need to fix the regression in Rails that caused sessions to be always sent, because it\'s simply not supposed to work that way, not to mention a liability.<br/><br/>I patched this for 3.1: https://github.com/willbryant/rails/tree/flash_must_not_load_session_on_every_request_3-1-stable<br/>The same patch rebased for 3.2: https://github.com/willbryant/rails/tree/flash_must_not_load_session_on_every_request_3-2-stable<br/>And this pull request is the same patch rebased against master: https://github.com/willbryant/rails/tree/flash_must_not_load_session_on_every_request<br/><br/>We have been using this patch in production on 3.1 for a while now and have had no issues.  Essentially it just sweeps the flash the first time it is requested, rather than before every request irrespective of whether it uses flash.<br/><br/>This is a behavior change, but only back to the behavior we had before the middleware refactor (ead93c5).  As far as I can see from the commit message (just "Move Flash into middleware") that was not supposed to be a behavior change - I think Josh may have just tidied up and not noticed the implication.<br/><br/>FWIW, aside from not having the above problem, the original behavior is in any case much more useful.  To me it makes no sense to be clearing the flash if you haven\'t referenced the flash: for example, if you have various "whole page" actions which will render the flash in the page layout, but you also have an ajaxy autocompleter search action which only returns json autocomplete results, it makes no sense to have the ajaxy autocompleter search action clear the flash.<br/><br/>So with this patch we go back to the old behavior - when you look at the flash, it will be swept, otherwise, it won\'t.  The session cookie will therefore not be loaded to sweep the flash unless you use the flash.<br/><br/>Although it\'s just a straight rebase, it\'d probably be fair to say that the original commit message might no longer need reference Rack::Cache for master if their patch has gone in since.  I haven\'t looked into whether it\'s present in the Rack::Cache versions pulled in to the 3.2 or 3.1 branches now, but it wasn\'t at the time I wrote the patch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c9a2d6b6be7599854a75793ecd872d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6034', 'title': u'Fix the Flash middleware loading the session on every request '}, {'body': u'Original issue #1102', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6032', 'title': u'wrap translate defaults to use translate helper features'}, {'body': u'This way if my text is long I don\'t have to do something like this:<br/><br/>```haml<br/>.text<br/>  = truncate(@text, :length => 27)<br/>  - if @text.size >= 27<br/>    = link_to "continue", notes_path, .....<br/>```<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/950f96a8711d959f744ad043631d36a2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6031', 'title': u'Truncate now has the ability to receive a html option that allows it to call rails helpers.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6029', 'title': u'removed deprecation warnings'}, {'body': u'This should fix the problem in Travis CI server.<br/>(http://travis-ci.org/#!/rails/rails/jobs/1194988)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6028', 'title': u'Create plpgsql language if not available'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6027', 'title': u'Rails::Engine#endpoint has been refactored'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6026', 'title': u'Add parentheses to hide Ruby warning'}, {'body': u'* Use merge!, remove reverse_merge\n* Use case statement instead of is_a? checks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6025', 'title': u'Refactor AMo::Errors'}, {'body': u'Return earlier if attribute already changed in *_will_change! methods,\nto avoid obtaining the value and duplicating it when possible.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6024', 'title': u'Improve AMo::Dirty *_will_change! method'}, {'body': u'TestQueue#contents is now #jobs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6023', 'title': u'Fix failing test related to TestQueue'}, {'body': u'This is a backport of ba77ff3c1b583fdacf733404bbf4508042b45656 per request.<br/><br/>cc @luismreis', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6022', 'title': u'Do not mutate options hash'}, {'body': u"This will make sure you know when there's an exception occur.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6021', 'title': u'Log the exception from the ThreadConsumer'}, {'body': u'`Rails::Queueing::TestQueue` is working as a LIFO while it should be a FIFO (as we expect the first queued job to be run first).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/51551985507c89d0e745e148c20866b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6020', 'title': u'Rails::Queueing::TestQueue run order'}, {'body': u'`Rails::Queueing::TestQueue` is working as a LIFO while it should be a FIFO (as we expect the first queued job to be run first).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/51551985507c89d0e745e148c20866b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6020', 'title': u'Rails::Queueing::TestQueue run order'}, {'body': u'closes #5970', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6018', 'title': u'mailer can be anonymous'}, {'body': u"The HTML5 spec let's us use anything as the ID element, so we don't need to sanitize the dom id's for valid names anymore(Not that it did anything in the first place)<br/><br/>This was discussed in issue #6015", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/095062f50c1bebb0bbd9d33899ebeda4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6017', 'title': u'Removed the sanitize_dom_id method'}, {'body': u'A proposal to dynamically add context specific (as in DCI context) validations to individual ActiveModel instances.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/724641c1ed45e490242b4e8c0fbf60cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6014', 'title': u'Inject Validations'}, {'body': u"Add tests for Rails::DBConsole. I tried to not modify original code, but I should add such changes:<br/>* extract `find_cmd` from body of `start` method (I think to put one method to another was just misprint)<br/>* Wrap global `ENV` changes (to not polute ENV in tests)<br/>* Wrap system `exec`<br/><br/>I executed all tests also and checked `rails db` with edge rails works well.<br/><br/>\\cc @drogus<br/>Piotr, I see that you covered Rails::Console with tests. What do you think about my commit? I want to suggest some fix in Rails commands, but it's better to test existing code before. If it looks fine I'll add tests for all commands also.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6012', 'title': u'Cover Rails::DBConsole with tests'}, {'body': u"SQLite adapter is NOT compatible with SQLite 3. Why Rails should continue support this antiques? I don't know. I think that only mad can say 'Lets work with rails3 (4?) but with SQLite < 3.<br/><br/>I suggest to stop drag this heritage and continue support only sqlite3.<br/><br/>cc @fxn @tenderlove", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6011', 'title': u'Remove old sqlite adapter'}, {'body': u'Tests for ```named_scope``` failed with error ```ArgumentError: Unknown key: conditions```. This commit should fix it', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6009', 'title': u'fix named_scope tests'}, {'body': u'Tests for ``named_scope`` failed with error ```ArgumentError: Unknown key: conditions```. This commit should fix it', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6008', 'title': u'Fix named scope tests'}, {'body': u'This problem very detailed described at this [issue](https://github.com/rails/rails/issues/5990).<br/><br/>Also in progress of work with this issue I find that something like this returns error<br/><br/>```ruby<br/>Company.create!(:name => "test", :contracts => [Contract.new(:developer_id => 7)])<br/>Company.includes(:contracts).maximum(:developer_id)<br/>```<br/><br/>This bug fixed at second commit in this pull request', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6007', 'title': u'handle includes/join correctly for calculation'}, {'body': u"Pull request #5310 added the possibility to render layouts with collections. This patch allows access to the current object and object_counter being rendered inside the layout, the same way they are inside the partial.<br/><br/>Let me know if something needs to be improved. Thanks.<br/><br/>*ps: I'm working on some refactorings in PartialRenderer, that I'll be sending as a separate pull request.*", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6006', 'title': u'Partial layout collection item'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2b92928f3f39951cc97dc02a59fbb117?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6005', 'title': u'File.join match more cross-platform.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6004', 'title': u'remove calls to deprecated find(:first) in actionpack test suite'}, {'body': u"`url_for` method changes controller that passed to the method. Example:  <br/>```ruby<br/>controller = '/projects'<br/>url_for {:controller => controller, :action => 'status'}<br/>puts 'Side effect!' if controller == 'projects'<br/>```<br/>I suppose `url_for` shouldn't change any arguments it takes.  <br/>Controller is changed [here](https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/routing/route_set.rb#L490)<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/95093ef6858597d0455f6821ba4ae1a0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6003', 'title': u'Fix side effect on strings in url_for'}, {'body': u'- use safe_join in number helper<br/>- refactor content_tag_for helper:<br/>  - do not use merge! just for 2 values<br/>  - there is no need to check block arity', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6002', 'title': u'Tiny refactoring in NumberHelper and RecordTagHelper'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/6001', 'title': u'remove unnecessary else statement'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6000', 'title': u'use #present? instead of negative #blank'}, {'body': u"I remember @tenderlove was saying once that reduce backtrace size is a good idea.<br/>And maybe it is especially good for Callbacks because they might appear several times per action call and also they are so ugly.<br/><br/>So, this patch reduce it by one<br/><br/>``` diff <br/>  activerecord (3.2.3) lib/active_record/connection_adapters/abstract/connection_pool.rb:467:in `call'<br/>  actionpack (3.2.3) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'<br/>  activesupport (3.2.3) lib/active_support/callbacks.rb:405:in `_run__3245509492598542750__call__654369043753597113__callbacks'<br/>-  activesupport (3.2.3) lib/active_support/callbacks.rb:405:in `__run_callback'<br/>  activesupport (3.2.3) lib/active_support/callbacks.rb:81:in `run_callbacks'<br/>  actionpack (3.2.3) lib/action_dispatch/middleware/callbacks.rb:27:in `call'<br/>  actionpack (3.2.3) lib/action_dispatch/middleware/reloader.rb:65:in `call'<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5999', 'title': u'AS::Callbacks#run_callbacks optimized to reduce backtrace'}, {'body': u'@fxn moving the EXPLAIN stuff down to the SQLite3 adapter ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5998', 'title': u'EXPLAIN only for sqlite3'}, {'body': u'Small refactoring of test from #5902 - kudos for @carlosantoniodasilva', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5997', 'title': u'Namedspaced generator indent method test refactoring'}, {'body': u'I want to make code inside AS core_ext more readable and understandable. Some simple stuff for starters.<br/>Any advice?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5996', 'title': u'AS core_ext refactoring'}, {'body': u"I'm submitting this PR to master.<br/>The original PR was https://github.com/rails/rails/pull/5879.<br/>We should load active_record/base before loading some application models.<br/><br/>/cc @jonleighton", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5995', 'title': u'Fix #5847 and #4045. Load AR::Base before loading an application model.'}, {'body': u"I'm sumitting to master.<br/>The original PR was https://github.com/rails/rails/pull/5879.<br/>We should load active_record/base before loading some application models.<br/><br/>/cc @jonleighton", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5994', 'title': u'Fix #5847 and #4045. Force load AR::Base before loading an application model.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5992', 'title': u'Use any? instead of !empty?'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5989', 'title': u'Shadowing variable warning removed'}, {'body': u'Cherry-picking all commits from #5852, that Github for some reason is not showing. Should be ok to go now.<br/><br/>Closes #5852<br/><br/>/cc @jeremy @twinturbo', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5986', 'title': u'Add a "silence" behavior to completely turn off deprecation warnings.'}, {'body': u'This version fixes encoding issues under Ruby 1.9. <br/><br/>I prefer do a conservative upgrade to 2.2.0 in 3-2-stable branch. In master I upgraded it to 2.4.0', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5984', 'title': u'Upgrade sprockets version to 2.2.0'}, {'body': u"Disabled by default but should be handy for people running rails without using any frontend proxy e.g Cedar stack on Heroku. Added in production environment on advice from @sikachu, as that's the place it going to be needed.  ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cb0b42e452cd13d469565a23a8abe441?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5983', 'title': u'Added comment on how to enable gzip compression'}, {'body': u'This should be handy for people running rails without using any frontend proxy e.g Cedar stack on Heroku.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cb0b42e452cd13d469565a23a8abe441?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5981', 'title': u'Added comment on how to enable gzip compression'}, {'body': u"I did this couple times already in pull requests #1758 and #2035 for earlier rails version. I still think that logic in remote_ip is not ideal and don't cover some important things.<br/><br/>/cc @jeremy, @sikachu", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5980', 'title': u'Remote ip logic and validation.'}, {'body': u'Sqlite3 adapter is inherited from sqlite and it supports explain. And based on https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb#L121 we may say that sqlite adapter supports explain too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5979', 'title': u'sqlite supports explain too'}, {'body': u"For all connection adapters method ```translate_exception``` has 2 parameters ```exception``` and ```message```. <br/><br/>https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb#L588<br/><br/>https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L1245<br/><br/>https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/sqlite_adapter.rb#L552<br/><br/>But in parent class this method has another parameters. Let's clean up this.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5978', 'title': u'cleanliness in method parameters'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5977', 'title': u'Minor refactor of serializable hash'}, {'body': u'This method already defined in https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract/quoting.rb#L90 and included here https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L51', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5976', 'title': u'already defined in quoting'}, {'body': u'`escape_hstore` uses quotation marks around keys and values only if it seems necessary. However, it currently breaks in the presence of some non-ASCII characters. Instead of trying to guess which characters are safe, it seems better to always use quotes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab7e9b99372e6a833721735df9265400?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5973', 'title': u'Always quote hstore keys and values'}, {'body': u'Add extra order clause to fix failing test on Ruby 1.8.7, related to hash ordering.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5971', 'title': u'Build fix for 3-2-stable'}, {'body': u'AR store attributes now have predicate methods (model.store_attribute?) like regular attributes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aa012716306af231efe9022c2b9205a3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5969', 'title': u'added predicate methods for AR store attributes'}, {'body': u'This was a backport from `master`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5968', 'title': u"Fix build. It seems that the Mocha's behavior were changed."}, {'body': u"I think the password attribute should not update if we don't generate a new password.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5966', 'title': u'Fix secure_password setter'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5965', 'title': u'Refactor SecurePassword#authenticate'}, {'body': u"I think that the Mocha's behavior were changed.<br/>* Mocha::StubbingError: stubbing method on nil<br/>* Mocha::StubbingError: can't stub method on frozen object<br/><br/>BTW: we can change a behavior of stubbing method on nil<br/>by Mocha::Configuration.allow(:stubbing_method_on_nil)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5963', 'title': u"Fix build. It seems that the Mocha's behavior were changed."}, {'body': u'`hash_for_*` methods are private and not designed to be called by end user. <br/><br/>Their API can be changed without backward compatibility, that is why they should not be tested. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5962', 'title': u'Remove tests for undocumented private methods'}, {'body': u'Separated left side url generation(before query string)<br/>from right side url generation(after query string)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5961', 'title': u'ActionDispatch::HTTP::Url#url_for refactor method'}, {'body': u'related: http://homakov.blogspot.com/2012/04/whitelist-your-routes-match-is-evil.html', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5960', 'title': u'Delete insecure and "bad practice" code. '}, {'body': u'See https://github.com/rails/rails/pull/5957/files#r725801', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5959', 'title': u'Refactor hash creation in routeset'}, {'body': u"If an ActiveRecord instance is cloned, this keeps track of errors of this 'parent', because both errors instances point to the same ActiveModel::Errors instance. This happen when before to call dup, save or valid? is called", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5958', 'title': u'Create a new errors reference in dup'}, {'body': u'Currently positional arguments are handle with a nasty hack: bypassing them though options hash.<br/>This make code wider and harder to understand.<br/><br/>This patch merges it all together and removes `options[:_positional_args]` and `options[:_positional_keys]` hack.<br/><br/>Ensure no performance degrade:<br/><br/>https://gist.github.com/2479082<br/><br/><br/>```<br/><br/>$ diffbench perf.rb<br/>Running benchmark with current working tree<br/>Stashing changes<br/>Running benchmark with clean working tree<br/>Applying stashed changes back<br/><br/>                    user     system      total        real<br/>----------------------------------Url helper module builder<br/>After patch:    0.410000   0.000000   0.410000 (  0.409276)<br/>Before patch:   0.410000   0.000000   0.410000 (  0.413838)<br/><br/>--------------------------------------simple URL generation<br/>After patch:    0.010000   0.000000   0.010000 (  0.005349)<br/>Before patch:   0.000000   0.000000   0.000000 (  0.005511)<br/><br/>--------------------URL generation with optional parameters<br/>After patch:    0.090000   0.000000   0.090000 (  0.091728)<br/>Before patch:   0.100000   0.000000   0.100000 (  0.092634)<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5957', 'title': u'RouteSet: decomplecting a way to handle positional args'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5956', 'title': u'Upgrading mocha 0.11.2'}, {'body': u'Removed complicated route generation structure:<br/><br/>``` diff<br/>- {:url => {:only_path => false}, :path => {:only_path => true}}.each do |kind, opts|<br/>+ [true, false].each do |only_path|<br/>```<br/><br/>Which improve the code readability and reduce string concatenation and hash merge overhead.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5955', 'title': u'RouteSet: simplify routes helpers generation code'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5954', 'title': u'Add missing requires in routes'}, {'body': u'<br/><br/>See #5907 and<br/>https://github.com/floehopper/mocha/pull/77', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5952', 'title': u'Lock mocha to older version 3 2 stable from mocha.'}, {'body': u'<br/><br/>See #5907 and <br/>https://github.com/floehopper/mocha/pull/77<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5951', 'title': u'Locking mocha to older version as waiting to fix from mocha.'}, {'body': u'Support string substitutions in the order clause in ActiveRecord.<br/><br/>This helps cases when you want to order on an expression. For example:<br/><br/>```ruby<br/>value = 10<br/>MyModel.order([\'(id % ?)\', value])<br/>```<br/><br/>Note that it uses a heuristic to distinguish between ordering by a list of values, and a single value that happens to be a string substitution (an sql sanitization). If the first item in an array is a string that contains a question mark, it is assumed that the intent is for that array to be a string substitution. I\'m of course open to suggestions on this heuristic.<br/><br/>This is also very useful in geospatial queries where the order clause sometimes contains function calls, as in:<br/><br/>```ruby<br/>loc = get_location<br/>max_dist = get_max_dist<br/>MyLocation.order([\'st_distance("latlon", ?) < ?\', loc, max_dist])<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e06aa8f63d2a1753a2b352bc1cabbde2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5949', 'title': u'Support string substitution in the order clause'}, {'body': u'It\'s incredibly annoying to negate things in Active Record! I can do:<br/><br/>    Person.where(:name => "Jacob")<br/><br/>but to negate it, I\'d have to use a SQL fragment like this:<br/><br/>    Person.where("name <> ? ", "Jacob")<br/><br/>I want support:<br/><br/>    Person.where(:name.not => "Jacob")<br/><br/>This is inspired by the DataMapper way (http://datamapper.org/docs/find.html)<br/><br/>It turns out Arel actually has a LOT of predicates that are not exposed by Active Record.  So why not expose them all? (see: https://github.com/brynary/arel/blob/master/lib/arel/predications.rb)<br/><br/>Examples of using predicates directly defined by arel:<br/><br/>    Person.where(:name.matches => "%opher")<br/>    Person.where(:age.gt => 10)<br/><br/>Examples of the special "not" predicate:<br/><br/>    Person.where(:name.not => nil)<br/>    Person.where(:name.not => ["Jacob","Micah"])', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dc893f8ae12045dc71048a0c6a56fc01?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5948', 'title': u'Expose Arel predicates... somehow?'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5947', 'title': u'Silence warning about MultiJson.decode'}, {'body': u'The test for actionpack actually failed to run.<br/><br/>```<br/>[~/Projects/rails/actionpack] rake<br/>/Users/sikachu/.rvm/rubies/ruby-1.9.3-p125-perf/bin/ruby -w -I"lib:test" -I"/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/rake-0.9.3.beta.1/lib" "/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/rake-0.9.3.beta.1/lib/rake/rake_test_loader.rb" "test/abstract/abstract_controller_test.rb" "test/abstract/callbacks_test.rb" "test/abstract/collector_test.rb" "test/abstract/helper_test.rb" "test/abstract/layouts_test.rb" "test/abstract/render_test.rb" "test/abstract/translation_test.rb" "test/controller/action_pack_assertions_test.rb" "test/controller/addresses_render_test.rb" "test/controller/assert_select_test.rb" "test/controller/base_test.rb" "test/controller/caching_test.rb" "test/controller/capture_test.rb" "test/controller/content_type_test.rb" "test/controller/default_url_options_with_filter_test.rb" "test/controller/filters_test.rb" "test/controller/flash_hash_test.rb" "test/controller/flash_test.rb" "test/controller/force_ssl_test.rb" "test/controller/helper_test.rb" "test/controller/http_basic_authentication_test.rb" "test/controller/http_digest_authentication_test.rb" "test/controller/http_token_authentication_test.rb" "test/controller/integration_test.rb" "test/controller/layout_test.rb" "test/controller/localized_templates_test.rb" "test/controller/log_subscriber_test.rb" "test/controller/mime_responds_test.rb" "test/controller/new_base/bare_metal_test.rb" "test/controller/new_base/base_test.rb" "test/controller/new_base/content_negotiation_test.rb" "test/controller/new_base/content_type_test.rb" "test/controller/new_base/metal_test.rb" "test/controller/new_base/middleware_test.rb" "test/controller/new_base/render_action_test.rb" "test/controller/new_base/render_context_test.rb" "test/controller/new_base/render_file_test.rb" "test/controller/new_base/render_implicit_action_test.rb" "test/controller/new_base/render_layout_test.rb" "test/controller/new_base/render_partial_test.rb" "test/controller/new_base/render_streaming_test.rb" "test/controller/new_base/render_template_test.rb" "test/controller/new_base/render_test.rb" "test/controller/new_base/render_text_test.rb" "test/controller/new_base/render_xml_test.rb" "test/controller/output_escaping_test.rb" "test/controller/params_wrapper_test.rb" "test/controller/record_identifier_test.rb" "test/controller/redirect_test.rb" "test/controller/render_js_test.rb" "test/controller/render_json_test.rb" "test/controller/render_other_test.rb" "test/controller/render_test.rb" "test/controller/render_xml_test.rb" "test/controller/request/test_request_test.rb" "test/controller/request_forgery_protection_test.rb" "test/controller/rescue_test.rb" "test/controller/resources_test.rb" "test/controller/routing_test.rb" "test/controller/runner_test.rb" "test/controller/selector_test.rb" "test/controller/send_file_test.rb" "test/controller/show_exceptions_test.rb" "test/controller/test_test.rb" "test/controller/url_for_integration_test.rb" "test/controller/url_for_test.rb" "test/controller/url_rewriter_test.rb" "test/controller/view_paths_test.rb" "test/controller/webservice_test.rb" "test/dispatch/callbacks_test.rb" "test/dispatch/cookies_test.rb" "test/dispatch/debug_exceptions_test.rb" "test/dispatch/header_test.rb" "test/dispatch/mapper_test.rb" "test/dispatch/middleware_stack/middleware_test.rb" "test/dispatch/middleware_stack_test.rb" "test/dispatch/mime_type_test.rb" "test/dispatch/mount_test.rb" "test/dispatch/prefix_generation_test.rb" "test/dispatch/rack_cache_test.rb" "test/dispatch/rack_test.rb" "test/dispatch/reloader_test.rb" "test/dispatch/request/json_params_parsing_test.rb" "test/dispatch/request/multipart_params_parsing_test.rb" "test/dispatch/request/query_string_parsing_test.rb" "test/dispatch/request/url_encoded_params_parsing_test.rb" "test/dispatch/request/xml_params_parsing_test.rb" "test/dispatch/request_id_test.rb" "test/dispatch/request_test.rb" "test/dispatch/response_test.rb" "test/dispatch/routing_assertions_test.rb" "test/dispatch/routing_test.rb" "test/dispatch/session/cache_store_test.rb" "test/dispatch/session/cookie_store_test.rb" "test/dispatch/session/mem_cache_store_test.rb" "test/dispatch/session/test_session_test.rb" "test/dispatch/show_exceptions_test.rb" "test/dispatch/static_test.rb" "test/dispatch/test_request_test.rb" "test/dispatch/test_response_test.rb" "test/dispatch/uploaded_file_test.rb" "test/dispatch/url_generation_test.rb" "test/template/active_model_helper_test.rb" "test/template/asset_tag_helper_test.rb" "test/template/atom_feed_helper_test.rb" "test/template/capture_helper_test.rb" "test/template/compiled_templates_test.rb" "test/template/compressors_test.rb" "test/template/date_helper_i18n_test.rb" "test/template/date_helper_test.rb" "test/template/erb/form_for_test.rb" "test/template/erb/tag_helper_test.rb" "test/template/erb_util_test.rb" "test/template/form_helper_test.rb" "test/template/form_options_helper_i18n_test.rb" "test/template/form_options_helper_test.rb" "test/template/form_tag_helper_test.rb" "test/template/html-scanner/cdata_node_test.rb" "test/template/html-scanner/document_test.rb" "test/template/html-scanner/node_test.rb" "test/template/html-scanner/sanitizer_test.rb" "test/template/html-scanner/tag_node_test.rb" "test/template/html-scanner/text_node_test.rb" "test/template/html-scanner/tokenizer_test.rb" "test/template/javascript_helper_test.rb" "test/template/log_subscriber_test.rb" "test/template/lookup_context_test.rb" "test/template/number_helper_i18n_test.rb" "test/template/number_helper_test.rb" "test/template/output_buffer_test.rb" "test/template/output_safety_helper_test.rb" "test/template/record_tag_helper_test.rb" "test/template/render_test.rb" "test/template/resolver_patterns_test.rb" "test/template/sanitize_helper_test.rb" "test/template/sprockets_helper_test.rb" "test/template/sprockets_helper_with_routes_test.rb" "test/template/streaming_render_test.rb" "test/template/tag_helper_test.rb" "test/template/template_error_test.rb" "test/template/template_test.rb" "test/template/test_case_test.rb" "test/template/test_test.rb" "test/template/testing/fixture_resolver_test.rb" "test/template/testing/null_resolver_test.rb" "test/template/text_helper_test.rb" "test/template/translation_helper_test.rb" "test/template/url_helper_test.rb" <br/>/Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/time/calculations.rb:2: warning: loading in progress, circular require considered harmful - /Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/time/zones.rb<br/>\tfrom /Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/rake-0.9.3.beta.1/lib/rake/rake_test_loader.rb:4:in `<main>\'<br/>\tfrom /Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/rake-0.9.3.beta.1/lib/rake/rake_test_loader.rb:4:in `select\'<br/>\tfrom /Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/rake-0.9.3.beta.1/lib/rake/rake_test_loader.rb:15:in `block in <main>\'<br/>\tfrom /Users/sikachu/.rvm/rubies/ruby-1.9.3-p125-perf/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'<br/>\tfrom /Users/sikachu/.rvm/rubies/ruby-1.9.3-p125-perf/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'<br/>\tfrom /Users/sikachu/Projects/rails/actionpack/test/abstract/abstract_controller_test.rb:1:in `<top (required)>\'<br/>\tfrom /Users/sikachu/.rvm/rubies/ruby-1.9.3-p125-perf/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'<br/>\tfrom /Users/sikachu/.rvm/rubies/ruby-1.9.3-p125-perf/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'<br/>\tfrom /Users/sikachu/Projects/rails/actionpack/test/abstract_unit.rb:28:in `<top (required)>\'<br/>\tfrom /Users/sikachu/Projects/rails/actionpack/test/abstract_unit.rb:28:in `require\'<br/>\tfrom /Users/sikachu/Projects/rails/actionpack/lib/abstract_controller.rb:6:in `<top (required)>\'<br/>\tfrom /Users/sikachu/Projects/rails/actionpack/lib/abstract_controller.rb:6:in `require\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/ruby/shim.rb:12:in `<top (required)>\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/ruby/shim.rb:12:in `require\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/date/calculations.rb:4:in `<top (required)>\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/date/calculations.rb:4:in `require\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/date/zones.rb:2:in `<top (required)>\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/date/zones.rb:2:in `require\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/time/zones.rb:1:in `<top (required)>\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/time/zones.rb:1:in `require\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/time/calculations.rb:2:in `<top (required)>\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/time/calculations.rb:2:in `require\'<br/>/Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:15: warning: method redefined; discarding old slice<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/i18n-0.6.0/lib/i18n/core_ext/hash.rb:2: warning: previous definition of slice was here<br/>/Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/hash/deep_merge.rb:9: warning: method redefined; discarding old deep_merge!<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/i18n-0.6.0/lib/i18n/core_ext/hash.rb:25: warning: previous definition of deep_merge! was here<br/>/Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/hash/except.rb:14: warning: method redefined; discarding old except<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/i18n-0.6.0/lib/i18n/core_ext/hash.rb:8: warning: previous definition of except was here<br/>/Users/sikachu/Projects/rails/actionpack/lib/abstract_controller/layouts.rb:312: warning: instance variable @_layout not initialized<br/>/Users/sikachu/Projects/rails/actionpack/lib/abstract_controller/layouts.rb:312: warning: instance variable @_layout not initialized<br/>/Users/sikachu/Projects/rails/actionpack/lib/abstract_controller/layouts.rb:312: warning: instance variable @_layout not initialized<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/mail-2.4.4/lib/mail/core_extensions/nil.rb:6: warning: method redefined; discarding old blank?<br/>/Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/object/blank.rb:48: warning: previous definition of blank? was here<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/mail-2.4.4/lib/mail/core_extensions/object.rb:6: warning: method redefined; discarding old blank?<br/>/Users/sikachu/Projects/rails/activesupport/lib/active_support/core_ext/object/blank.rb:15: warning: previous definition of blank? was here<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/mail-2.4.4/lib/mail/core_extensions/shell_escape.rb:33: warning: character class has duplicated range: /([^A-Za-z0-9_\\s\\+\\-.,:\\/@\\n])/<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/mail-2.4.4/lib/mail/patterns.rb:11: warning: assigned but unused variable - lwsp<br/>/Users/sikachu/Projects/rails/actionpack/lib/abstract_controller/layouts.rb:312: warning: instance variable @_layout not initialized<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/memcache-client-1.8.5/lib/memcache.rb:303: warning: assigned but unused variable - key_count<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/memcache-client-1.8.5/lib/memcache.rb:812: warning: assigned but unused variable - key<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/memcache-client-1.8.5/lib/memcache.rb:24: warning: assigned but unused variable - e<br/>/Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/memcache-client-1.8.5/lib/continuum_native.rb:38: warning: assigned but unused variable - e<br/>/Users/sikachu/Projects/rails/actionpack/test/template/render_test.rb:493: warning: mismatched indentations at \'end\' with \'def\' at 473<br/>/Users/sikachu/Projects/rails/activesupport/lib/active_support/dependencies.rb:251:in `require\': /Users/sikachu/Projects/rails/actionpack/test/template/render_test.rb:493: syntax error, unexpected $end, expecting keyword_end (SyntaxError)<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/dependencies.rb:251:in `block in require\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/dependencies.rb:236:in `load_dependency\'<br/>\tfrom /Users/sikachu/Projects/rails/activesupport/lib/active_support/dependencies.rb:251:in `require\'<br/>\tfrom /Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/rake-0.9.3.beta.1/lib/rake/rake_test_loader.rb:15:in `block in <main>\'<br/>\tfrom /Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/rake-0.9.3.beta.1/lib/rake/rake_test_loader.rb:4:in `select\'<br/>\tfrom /Users/sikachu/.rvm/gems/ruby-1.9.3-p125-perf/gems/rake-0.9.3.beta.1/lib/rake/rake_test_loader.rb:4:in `<main>\'<br/>rake aborted!<br/>Command failed with status (1): [/Users/sikachu/.rvm/rubies/ruby-1.9.3-p125...]<br/>Tasks: TOP => default => test => test_action_pack<br/>(See full trace by running task with --trace)<br/>[~/Projects/rails/actionpack] <br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5946', 'title': u'Fix broken test from the earlier merge conflict'}, {'body': u"Mocha is explicitly using Object#method when stubbing a method. So, I've made Request#method to acts like Object#method if there's an argument passed to it.<br/><br/>Also, there's a bad merge conflict that doesn't allow the test to even run. I've fixed that as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5945', 'title': u'Fix mocha compatibility in 3-2-stable'}, {'body': u"Mocha is explicitly using `Object#method` when stubbing a method. So, I've made `Request#method` to acts like `Object#method` if there's an argument passed to it.<br/><br/>Also, there's a bad merge conflict that doesn't allow the test to even run. I've fixed that as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5944', 'title': u'Fix mocha compatibility in 3-2-stable'}, {'body': u'This will render the error message on `:#{attribute}_confirmation` instead<br/>of on `attribute` itself. When rendering confirmation errors inline on the<br/>form with form builders such as `SimpleForm` and `Formtastic` it is<br/>confusing to the end user to see the confirmation error message on the<br/>attribute element. Instead it makes more sense to have this validation<br/>error render on the confirmation field instead.<br/><br/>The i18n message has been updated for the confirmation validator error<br/>message to include the original attribute name.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5942', 'title': u'confirmation validation error attribute'}, {'body': u'I had several problems with deep_dup in rails and here is my proposition to improve logic of Hash#deep_dup and expand it from hash to all objects.<br/>For example, the following cases will be affected:<br/><br/>```ruby<br/>{ :a => 1, { :b => [1, 2] } }.deep_dup<br/>[1, [3, 4]].deep_dup<br/>[1, { :a => 2 } ].deep_dup<br/>```<br/>and more complicated with combination of all listed above.<br/><br/>P.s. thanks to @brainopia for consultation and refactoring', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5939', 'title': u'Nice logic for deep_dup in rails'}, {'body': u"For 3-2-stable this should be the URL's ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5936', 'title': u'Updated other README to point 3-2-stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5935', 'title': u'As ARes is removed from master then 3-2-stable URL should be in README.'}, {'body': u"Hi,<br/><br/>Some system clocks, particularly on virtual non-realtime environments can as tick with very low clock resolution. In such an environment the Event#parent_of? method can erroneously conclude that multiple instrumentation events that take place within a single tick are all each other's parents.<br/><br/>To work around this I implemented entry and exit counters for instrumentation events. These counters should reset with each transaction.<br/><br/>I'm not married to this implementation, but I would love to work with you guys on the issue. It's one of the things that is holding us up from implementing the Notifications API in the New Relic Ruby agent.<br/><br/>Regards,<br/>Jon Guymon", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8d0c72645c53ccbef24e0c03c87e9603?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5932', 'title': u'ActiveSupport::Notifications::Event#parent_of? is not reliable in environments with poor clock resolution.'}, {'body': u'* Move reference? method to class to remove duplicated code\n* Move to_sym typecast from #initialize to .parse method (make it\n easier to refactor reference?), remove AS object/blank require\n* Use []= instead of merge!({})\n* Remove in? in favor of include?, remove AS object/inclusion require', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5930', 'title': u'Refactor GeneratedAttributes'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5929', 'title': u'`rake notes` and `rake notes:custom` now support css, scss, and css.'}, {'body': u"Code trick for leap years from `distance_of_time_in_words` doesn't have meaning for time disnances in seconds:<br/><br/>``` ruby<br/># https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/date_helper.rb#L97-101<br/>fyear = from_time.year                                         <br/>fyear += 1 if from_time.month >= 3<br/>tyear = to_time.year<br/>tyear -= 1 if to_time.month < 3<br/>leap_years = (fyear > tyear) ? 0 : (fyear..tyear).count{|x| Date.leap?(x)}<br/>```<br/><br/>Because `10.year` => `ActiveSupport::Duration - 10 years`. And iteration `(fyear..to_year)` raises an exception.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5928', 'title': u'Use leap years trick in distance_of_time_in_words only for distances between real date points'}, {'body': u"In accordance with documentation https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/date_helper.rb#L63-64 `distance_of_time_in_words` should have the same result independent of args order.<br/><br/>Because of leap years trick https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/date_helper.rb#L97-102 result for long time distances can differ.<br/><br/>In the test case which I added result was 'about 28 years' instead of 'almost 28 years`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5927', 'title': u'Distance of time in words should work correct if from time > to_time'}, {'body': u'This patch quotes the arguments when calling pg_dump in db:structure:dump, otherwise the task fails when there are spaces.<br/><br/>fixes #5913<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f63a259f9b2375e2e900b8cfcc1420fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5925', 'title': u'Quote arguments in db:structure:dump for PostgreSQL.'}, {'body': u'note that signed cookies must also be read with the signed method `cookies.signed[:key]` ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a3da5e88217881b9ca61a5740b3d304f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5924', 'title': u'Improve signed cookies documentation'}, {'body': u'They was deprecated in Rails 3.2.4.<br/><br/>Related with #5922.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5923', 'title': u'Remove button_to_function and link_to_function helpers'}, {'body': u"Since the Rails community is getting the [unobtrusive javascript](http://en.wikipedia.org/wiki/Unobtrusive_JavaScript) as best practices we don't need these helper anymore.<br/><br/>Closes #5886 and #3093", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5922', 'title': u'Deprecate link_to_function and button_to_function'}, {'body': u'Relevant discussion [here](https://github.com/rails/rails/pull/5815/)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cb0b42e452cd13d469565a23a8abe441?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5921', 'title': u'Add a comment encouraging developers to move js to bottom'}, {'body': u"rake < 0.9 doesn't define Rake::DSL.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1c881ecb7bf966f44fecaa5387ab26b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5919', 'title': u'Rake dsl fix'}, {'body': u'fixed #5903', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5918', 'title': u'Force ssl pass query params correctly'}, {'body': u'Was introduced here: https://github.com/rails/rails/issues/5854', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5917', 'title': u'Remove circular require warning'}, {'body': u'Restored support for the "%" ERb/Erubis _trim mode_.  This can be activated with:<br/><br/>    config.action_view.erb_trim_mode = "%"  # or "%-" whitespace trim<br/><br/>With that mode active, you can use a single percent sign at the beginning of a line to engage Ruby mode (without inserting results).  It allows for template code like this:<br/><br/>    % if current_user.try(:admin?)<br/>      <%= render "edit_links" %><br/>    % end<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4299e35bacef054df40583da2d51edea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5915', 'title': u'Restore "%" ERb/Erubis Trim Mode'}, {'body': u'http://www.w3.org/TR/html5-diff/', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f2b38133a59126871ff01b402721d4db?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5912', 'title': u"new projects' doctype lowercase by default"}, {'body': u'This prevents stupid mistakes, like this:<br/><br/>```ruby<br/>  config.after_initialize do<br/>    # Whoops, doesn\'t do anything and will silently fail. Not quite good.<br/>    config.middleware.use ExceptionNotifier,<br/>      :email_prefix => "[N44 WEB ERROR] ",<br/>      :sender_address => %{"Rails Notifier" <do-not-reply@nebula44.com>},<br/>      :exception_recipients => EXCEPTION_RECIPIENTS # this is defined in config/initializers/config.rb<br/>                                                    # and cannot be accessed before initialization.<br/>                                                    # So junior programmer moves it to #after_initialize<br/>                                                    # and things go boom.<br/>  end<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fabcc1d848dda362619201b7159323e5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5911', 'title': u'Do not allow editing middleware stack after it has been built.'}, {'body': u"Running `rails dbconsole` takes:<br/>```<br/>real 0m3.389s<br/>user 0m2.862s<br/>sys 0m0.518s<br/>```<br/>But I just want to connect to database and I don't want to type database name, password, etc. But it takes so long ~ 3 sec. I've removed application initialization for it and it takes now:<br/>```<br/>real 0m0.683s<br/>user 0m0.602s<br/>sys 0m0.073s<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5910', 'title': u'More faster rails dbconsole'}, {'body': u'Rake files on repository has executable attribute on my system Lion 10.7.3<br/>fixed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5909', 'title': u'Rakefiles executable attributes has been removed'}, {'body': u"So Mocha got an update to new version and our actionpack started failing after that<br/><br/>```ruby<br/><br/> 1) Error:<br/>test_parameters(RequestTest):<br/>ArgumentError: wrong number of arguments (1 for 0)<br/>    /Users/arunagw/checkouts/rails/actionpack/lib/action_dispatch/http/request.rb:79:in `method'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.11.0/lib/mocha/class_method.rb:39:in `hide_original_method'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.11.0/lib/mocha/class_method.rb:15:in `stub'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.11.0/lib/mocha/central.rb:13:in `stub'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.11.0/lib/mocha/object.rb:121:in `block in stubs'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.11.0/lib/mocha/argument_iterator.rb:15:in `call'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.11.0/lib/mocha/argument_iterator.rb:15:in `each'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.11.0/lib/mocha/object.rb:117:in `stubs'<br/>    /Users/arunagw/checkouts/rails/actionpack/test/dispatch/request_test.rb:438:in `block in <class:RequestTest>'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.11.0/lib/mocha/integration/mini_test/version_230_to_262.rb:28:in `run'<br/><br/>3507 tests, 15952 assertions, 0 failures, 1 errors, 0 skips<br/><br/>```<br/><br/><br/>So after research i found that mocha internally doing some stuff with <pre> method </pre><br/><br/>We have one function <pre>method</pre> in our request model which is not having any argument. <br/><br/>This is why we are getting above error that mocha is giving 1 argument for stubbee<br/><br/>here you can found that call https://github.com/floehopper/mocha/compare/24314c2e77...master#L68R39<br/><br/>I tried to fix this in test itself as we don't want to change much things.<br/><br/>Please let me know your suggestions. I will make changes according to that.<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5907', 'title': u'Trying to fix mocha upgrade failures'}, {'body': u'This method is not documented, but I use it in my generators.<br/><br/>``` ruby<br/>code = <<-ROUTES.strip_heredoc<br/>  get "admin/login"<br/><br/>  get "admin/logout"<br/>ROUTES<br/><br/>route indent(code).strip<br/>```<br/><br/>And this code also used for example here: https://github.com/rails/rails/blob/master/railties/lib/rails/generators/rails/scaffold_controller/templates/controller.rb#L1', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5902', 'title': u"Don't indent blank lines in named base generators"}, {'body': u'Given the following MySQL table (you know we sometimes should unfortunately work on some legacy DB or non-Rails DB like this):<br/><br/>```SQL```<br/>CREATE TABLE `btree_pk_tables` (<br/>  `id` int(11) NOT NULL auto_increment,<br/>  PRIMARY KEY  USING BTREE (`id`)<br/>)<br/>```<br/><br/>`BtreePkTable.primary_key` becomes `nil` because of Regexp bug.<br/>Attached a patch with test cases. Tested on MySQL 5.1, Ruby 1.9.3.<br/><br/>Because this bug happens on current stable version of AR, I hope this to be backported to 3-2-stable branch. I confirmed that the Regexp works either on Ruby 1.9 and Ruby 1.8.7, so it should work.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5900', 'title': u'current MySQL driver fails to fetch PK name when the PK has USING option'}, {'body': u'This reverts the revert of the fix for #5667 and backports the fix for the regression (#5718) described in #5667 to 3-2-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5cf7402a65fd705228c748682654cac?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5898', 'title': u'Readds the fix for #5667 and back ports the regression fix from #5718'}, {'body': u'This reverts commit 9b14e3f.<br/><br/>Rationale: https://github.com/rails/rails/pull/5861#issuecomment-5212898', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5896', 'title': u'Revert #5861'}, {'body': u"Preloading AR doesn't work when no `ActionDispatch` is available since `AR::SessionStore` inherits from `ActionDispatch::Something`.<br/><br/>So I needed `ActiveSupport::Autoload.autoloads` to remove `SessionStore` from preloading.<br/>I discovered that `autoloads` is a instance method and is used nowhere, so I guess this was overlooked.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/64afebe5db598b0b043f35560bf940df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5895', 'title': u'Expose ActiveSupport::Autoload.autoloads'}, {'body': u'The logger can sometimes be `nil` when AR records are used outside of Rails, this adds a check.<br/><br/>This patch is not necessary on 3-1-stable or master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6621ca717b64e2e1717b2af82e3762b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5894', 'title': u'Fix nil logger on 3.2'}, {'body': u'Added a compatibility mode for asp.net style json date + time encoding. This is evidently a common format in the .net world (for example http://stackoverflow.com/questions/206384/how-to-format-a-json-date just refers to it as the json date format).<br/><br/>Some times ruby people like me have to play nicely with .net (whilst we secretly plot its doom). Hopefully this will save the future peoples some trouble.<br/><br/>EDIT: for clarity the asp.net format I am refering to looks like: "/Date(1224043200000)/"', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eeabd716b6e14654574b3bb0a1589144?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5893', 'title': u'ASP.net json date compatibility'}, {'body': u"I guess that this code isn't used and we should use active_support/time.rb.<br/><br/>sorry and close it, if I'm wrong.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5891', 'title': u"Remove unused and duplicated code. We should use 'active_support/time.rb'."}, {'body': u'The rake stats task was not showing any information about modules, with this change a module column shows in rake stats output.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d3e29c8ef1a4b0aa614f4042d2dd4a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5890', 'title': u'Add module stats to rake stats task'}, {'body': u'When running <br/>ruby railties/bin/rails new /tmp/myapp --dev<br/>Bundle install fails because active_record_deprecated_finders gem is not released.<br/>I added the gem dependency pointing to the git repo in the generated Gemfile.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5acc32b4414f4887a1c9ce72b7a8c346?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5889', 'title': u'Add missing dependency for active_record_deprecated_finders'}, {'body': u"`SpawnMethods#merge` has been left conspicuously un-documented for quite a while. <br/><br/>Here, I've added some documentation to it so that it is clear what the method does, and added some usage examples.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c768c410a9edc944ea04c724b775093?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5887', 'title': u'Add documentation to the SpawnMethods#merge method.'}, {'body': u'Patch to solve issue here: https://github.com/rails/rails/issues/3093<br/><br/>Allows you to pass a block to link_to_function (similar to link_to) if the link text is too complex to be passed as a string argument.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5895e46682709b1bc8aeb0677231be73?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5886', 'title': u'Added option to pass block to link_to_function'}, {'body': u'Refactor the code to a simpler form instead of depending on and/&& semantics.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5882', 'title': u'Fixing the build'}, {'body': u'...range of custom accessor in model.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5881', 'title': u'More flexible ranges behaviour. Allows to validate inclusion in numeric ...'}, {'body': u'Just re-opening #5875 with a cleaner patch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5880', 'title': u'Stamp out ruby-debug with debugger every where else in the code base'}, {'body': u'This PR closes #5847 and #4045.<br/>Please see these issues<br/><br/>I think these commits should be merged to 3-2-stable.<br/>And the testcase only should be merged to master (already passed), because AR::Base is loaded initially. <br/>meybe by https://github.com/rails/rails/commit/d0bb43d621c471659d03504f48f0197c0ae3b57c<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5879', 'title': u'Fix #5847 and #4045. Force load AR::Base before loading an application model.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5878', 'title': u'Refactor Observer.observed_class'}, {'body': u"This feature was implemented at 0bda6f1ec664fcfd1b312492a6419e3d76d5baa7, documented by 1e26bda0959c313ce5c1816bf4958b542050e5e2 and removed at 0809c675ef5831852b7c1aa8497402b2beff5185.<br/><br/>But the description is still here: https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/routing/redirection.rb#L75-79<br/><br/>I suggest to reimplement it (it's simple only 3 lines of code in this PR) or remove it from the documentation.<br/><br/>@joshk, @tenderlove what do yout think about it?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5877', 'title': u'Return routing redirect :path interpolation'}, {'body': u"Thank you ````ruby-debug19```` you served us well. Time for NKOTB.<br/><br/>Previous commit #5835 only removed the most obvious and visible +ruby-debug19+ presence (in a new Rails app's Gemfile), this pull request one goes postal on ruby-debug* within guides and other generated messages.<br/><br/>/cc @vijaydev Feel free to further edit/improve the guides.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5875', 'title': u'Stamping out ruby-debug19 and its cohorts with extreme prejudice'}, {'body': u'In continuance of #5835 , an appropriate patch to weed out ruby-debug19 from Rails-3-2 master as well. It is likely a large number of people are going to generate new Rails 3.2 apps on ruby1.9.3 for sometime in the future. The guidance should be to use the debugger gem on that platform.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5874', 'title': u'replace ruby-debug19 with debugger on Rails 3-2 stable'}, {'body': u"Now it's impossible to find in docs, how to disable prepared statements in postgresql", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/31d38c337e675c6bbb694b5530f9c84e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5873', 'title': u'Add to guides info how to disable prepared statements'}, {'body': u'When we use external connection pool manager (pgBouncer, for example), and set prepared_statements to false, system query still use prepared statements and we can get error like this:<br/><br/>```<br/>activerecord-3.2.3/lib/active_record/connection_adapters/postgresql_adapter.rb:1180:in `prepare\': PG::Error: ERROR:  prepared statement "a1" already exists (ActiveRecord::StatementInvalid)<br/>:             SELECT COUNT(*)<br/>            FROM pg_class c<br/>            LEFT JOIN pg_namespace n ON n.oid = c.relnamespace<br/>            WHERE c.relkind in (\'v\',\'r\')<br/>            AND c.relname = $1<br/>            AND n.nspname = ANY (current_schemas(false))<br/>```<br/><br/>This errors occur because we try to create prepared statement in reused postgresql session, where this prepared statement already exists.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/31d38c337e675c6bbb694b5530f9c84e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5872', 'title': u'Remove prepared statement from system query in postgresql adapter'}, {'body': u'ActionController::RoutingError are raised in router execution time and can\nnot be rescued in a controller.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5871', 'title': u'Remove unused test code.'}, {'body': u'The change is made due to importance of the attribute name (e.g. Name:) on the page (versus just stylistic / appearance sake tag).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/78f0ed42644d4d53e2d93261e067e522?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5869', 'title': u'Changes b tag to strong'}, {'body': u'Rendering a partial with a path, but missing filename like this...<br/><br/>```render :partial => "templates/subdir/"```<br/><br/>raises this error:<br/><br/>```undefined method `to_sym\' for nil:NilClass```<br/><br/>from ```ActionView::PartialRenderer#retrieve_variable``` because it doesn\'t match the template name regexp. I think instead that method should return ```variable``` as ```nil``` instead, raising the ```ArgumentError``` further on instead.<br/><br/>(there\'s a corresponding pull request for master too: https://github.com/rails/rails/pull/5865) ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f86911c918d9c3eb1644189a50d74ccb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5866', 'title': u'Catch nil.to_sym errors in partial_renderer, and raise ArgumentError instead'}, {'body': u'Rendering a partial with a path, but missing filename like this...<br/><br/>```render :partial => "templates/subdir/"```<br/><br/>raises this error:<br/><br/>```undefined method `to_sym\' for nil:NilClass```<br/><br/>from ```ActionView::PartialRenderer#retrieve_variable``` because it doesn\'t match the template name regexp. I think instead that method should return ```variable``` as ```nil``` instead, raising the ```ArgumentError``` further on instead.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f86911c918d9c3eb1644189a50d74ccb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5865', 'title': u'Catch nil.to_sym errors in partial_renderer, and raise ArgumentError instead'}, {'body': u'remove autoload for OrderedHash, usages removed already', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5864', 'title': u'remove autoload for OrderedHash, usages removed already'}, {'body': u"The 'production' environment name is currently checked for setting up<br/>the default log_level to 'info' but that won't work if the environment<br/>is copied to staging.rb, for instance. Better to have it explicitly set.<br/><br/>Please, take a look at the whole discussion in this thread:<br/><br/>https://groups.google.com/forum/?fromgroups#!topic/rubyonrails-core/sLG7EpAWQfg", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2abdb50caf0dc5b510330f68b02db8e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5863', 'title': u'Make log_level explicit in production.rb template'}, {'body': u'Already in master 57baa0e97aa4b444706007fe5b9e9ecb5e462df5', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5862', 'title': u'multi_json upgrade and also updated the new API'}, {'body': u"It's using new API now.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5861', 'title': u'Multi json fix 3 2 stable'}, {'body': u'Multi_json also upgraded.<br/><br/>They have upgraded there API. This PR will fix build. Also need to backport in 3-2-stable I guess.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5860', 'title': u'fixed broken build after multi_json upgrade'}, {'body': u'The release date details have been taken from<br/>http://weblog.rubyonrails.org/2012/3/30/ann-rails-3-2-3-has-been-released/ as well as [45d6cd94](https://github.com/rails/rails/commit/45d6cd94b3ef2ec77166def41f29188445b35608)<br/><br/>Cheers, M.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dcfde00ac1fae8b575b2f9b39c7e244b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5858', 'title': u'Update Rails 3.2.3 release date in changelogs as March 30, 2012'}, {'body': u'Broken after this 6a054b0038bac288a1f6e45feb5470f4ee492081', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5856', 'title': u'fix scaffold_generator_test.rb'}, {'body': u'This method does not add any extra behavior.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5855', 'title': u'Remove ActiveModel::Serializers::Xml::Serializer::Attribute#add_extra_behavior'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/877677f3c0cc6f8822a57b6732933d31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5852', 'title': u'Add a "silence" behavior to completely turn off deprecation warnings.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5851', 'title': u'Activerecord cache key as timestamp , fixed #5845'}, {'body': u'Activerecord cache key as timestamp,', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5850', 'title': u'3 2 stable'}, {'body': u'There is a bug in `titleize` method. Here is example:<br/><br/>`"simple-test".titleize #=> "Simple Test"`<br/><br/>As you see dash disappeared but it should be presented in titled message', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6228fc7c96122d25c088b7dee54db273?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5848', 'title': u'Fix dash disappearing for titleize method'}, {'body': u'because we have one newline in Gemfile template: https://github.com/rails/rails/blob/master/railties/lib/rails/generators/rails/app/templates/Gemfile#L6', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5846', 'title': u'remove extra new line from generated Gemfile'}, {'body': u'Cache key for ActiveRecord model is calculated using `to_s(:number)` method on `updated_at` timestamp.<br/><br/>This approach rounds the `cache_key` to whole number of seconds. If record is changed twice within a second, later change wont change the `cache_key`, which leads to inconsistent state. <br/><br/>Common example would be user accidentally clicking twice on an ajaxified link with some kind of toggle behavior. Even though it will toggle it twice, cache will change only once.<br/><br/>I changed the `cache_key` to include float timestamp rather than :number representation of time.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1654007a2c516b65e016df5cf57308e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5845', 'title': u'Activerecord cache key as timestamp'}, {'body': u'Cache key for ActiveRecord model is calculated using `to_s(:number)` method on `updated_at` timestamp.<br/><br/>This approach rounds the `cache_key` to whole number of seconds. If record is changed twice within a second, later change wont change the `cache_key`, which leads to inconsistent state. <br/><br/>Common example would be user accidentally clicking twice on an ajaxified link with some kind of toggle behavior. Even though it will toggle it twice, cache will change only once.<br/><br/>I changed the `cache_key` to include float timestamp rather than :number representation of time.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1654007a2c516b65e016df5cf57308e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5844', 'title': u'Activerecord cache key as timestamp'}, {'body': u'When a model nests another model that also nests yet another model<br/>using accepts_nested_attributes_for method, its Errors object can<br/>have an attribute name with "contacts.addresses.street" style.<br/><br/>In this case, the dots within the namespace should be substituted<br/>with slashes so that we can provide the translation under the<br/>"activemodel.attributes.person/contacts/addresses.street" key.<br/><br/>This commit is related to #3859.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5843', 'title': u'Fix human attribute_name to handle deeply nested attributes'}, {'body': u'Rename notify_observers argument *arg to *args to make it more clear that the method accepts multiple arguments (follows arguments naming convention)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5842', 'title': u'Rename notify_observers argument *arg to *args to make it more clear'}, {'body': u"count_observers didn't really make sense to me, as the convention is to use collection_count instead.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5841', 'title': u'Rename Observing#count_observers to Observing#observers_count'}, {'body': u'always returns the object instance', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5840', 'title': u'No need for if_params at the end of the initializer as an initializer'}, {'body': u'Currently,<br/><br/>`<%= render :partial => "user", :layout => "layouts/user", :object => user, :as => :user %>`<br/><br/>In _user.erb.html<br/><br/>`<%= user.first_name %>`<br/><br/>In layouts/_user.erb.html<br/><br/>`<div id="<%= dom_id(user) %>"><%= yield %></div>`<br/><br/>would throw an exception in the layout not having access to the `user` local variable.<br/><br/>This pull fixes that.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4aaee371503ba4eb27788dc6744503c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5839', 'title': u'Rendering a partial with objects or collections using :as and a layout breaks'}, {'body': u'Correcting some confusion. The Pacific/Pago_Pago zone should have been labeled "American Samoa" not "Samoa". They\'re 75 miles apart but different.<br/><br/>It\'s especially important because at the end of 2011 Samoa (and also Tokelau) jumped across the international dateline to be on the same day as New Zealand and Australia. They switched to UTC+13 and left American Samoa at UTC-11.<br/><br/>Documentation about the dateline change is at IANA in the file \'austalasia\'.<br/><br/>Pacific/Fakaofo and Pacific/Apia are in TZInfo and present in ruby 1.9.3. Perhaps this is a Rails 4.0 tweak.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fcbce6b52271aee17138ac7432972378?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5838', 'title': u'Incorporating Pacific Island zone changes circa Dec 31 2011'}, {'body': u"This pull request addresses the following ORA-00972 error because Oracle supports 30 byte maximum sequence name length.<br/><br/>```ruby<br/>$ ARCONN=oracle ruby -Itest test/cases/migration_test.rb -n 'test_rename_table_with_prefix_and_suffix'<br/>Using oracle<br/>Run options: -n test_rename_table_with_prefix_and_suffix --seed 55032<br/><br/># Running tests:<br/><br/>... snip ...<br/>E<br/><br/>Finished tests in 0.979560s, 1.0209 tests/s, 3.0626 assertions/s.<br/><br/>  1) Error:<br/>test_rename_table_with_prefix_and_suffix(MigrationTest):<br/>ArgumentError: New sequence name 'prefix_awesome_things_suffix_seq' is too long; the limit is 30 characters<br/>    /home/yahonda/Dropbox/git/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_schema_statements.rb:105:in `rename_table'<br/>    /home/yahonda/Dropbox/git/rails/activerecord/lib/active_record/migration.rb:467:in `block in method_missing'<br/>    /home/yahonda/Dropbox/git/rails/activerecord/lib/active_record/migration.rb:439:in `block in say_with_time'<br/><br/>1 tests, 3 assertions, 0 failures, 1 errors, 0 skips<br/>```<br/>It was originally reported at #4190 and was closed because Oracle oracle enhanced adapter did not work with rails master branch for a while.<br/><br/>Recently, Oracle oracle enhanced adapter is working with the rails master branch and found this error still exists.<br/><br/>This pull request has been tested with postgresql, mysql, mysql2 and sqlite3 adapters.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5837', 'title': u'Fix ORA-00972 error at test_rename_table_with_prefix_and_suffix'}, {'body': u"Splitting a list into the first elements and the rest of the elements (head/teal, car/cdr) is a fairly common pattern in programming. We have .first already, so here's a convenience method for rest.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b0144a16ba125a94460c5d45f07efb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5836', 'title': u'Add Array#rest, a convenience method to return all elements but the first'}, {'body': u'...by-debug19 and move to debugger. Whats the consensus here? If we want better adoption on ruby1.9, please lets just use this fork.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5835', 'title': u"Update Gemfile to use 'debugger' instead of unmaintained 'ruby-debug19'"}, {'body': u'That example would fail if new were called without attributes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5833', 'title': u'Improve documentation.'}, {'body': u"This PR fixes a wrong return value from reset_sequence_name method.<br/><br/>Please see @ebeigarts's comment on https://github.com/rails/rails/pull/5267.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5832', 'title': u'Fix a wrong return value from reset_sequence_name method.'}, {'body': u'I suggest small improvement in satinize_css method (`sanitize text, attributes: %w[style ...]`).<br/>Let downcase style properties keys to make output cleaner.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5831', 'title': u'Downcase sanitized css properties'}, {'body': u'attn: @fxn.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6944576a4252ea5303f0b978f8604a30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5830', 'title': u'Update RDoc to mention integer coercion in ActiveRecord\u2019s find by id'}, {'body': u"the first thing Rails devs do after running a migration is usually open that file in an editor. I added an --editor option here that does this for you automatically. I didn't see an easy way to test this (do the generators have their own tests?) but if there's a place where that should go, I'll gladly add them to this patch.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f7d969d7a72376fab89cba3554c18ec1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5829', 'title': u'Add an --editor option to ActiveRecord migration generator'}, {'body': u'Method #new_escaped was introduced at 2005 :  5727dc2f42874e32f8cac3c176a085de07b24dd9<br/>and become useless after refactoring a1df2590744ed126981dfd5b5709ff6fd5dc6476<br/><br/>Method Result#to_s is really used in 2 tests. I suggest to keep it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5823', 'title': u'Remove obsolete code'}, {'body': u'This automatically adds the `lock_version` field to all forms when the model has optimistic locking.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5822', 'title': u'Automatically add the lock_version hidden field to forms'}, {'body': u"Following issue: Lets look at creating mountable Engine (Also discussed here: #2594)<br/><br/>    rails plugin new foobar --mountable<br/>    cd foobar<br/>    rails g model foo bar:string<br/>    rake app:foobar:install:migrations<br/><br/>The last command will fail with: `Don't know how to build task 'railties:install:migrations'`<br/><br/>So I might provide a possible fix here.<br/>There might be cooler solutions here, but I'm not familiar with the `Rails::Engine`.<br/>I'm also not that familiar with this TestFramework, so please have a look.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c28a3b5af4b4431542240f1036ef1e89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5821', 'title': u'Provided fix for calling rake tasks within mountable engines'}, {'body': u'All respond to changes are cherry-picked already.<br/><br/>This one will fix the build for ruby-2.0 for 3-2-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5820', 'title': u'More ruby 2 0 fixes'}, {'body': u'Define array methods in ActiveRecord::Associations::CollectionProxy if they are not defined or delegated.<br/>In this way, we have a performance boost invoking some array methods which are not defined in CollectionAssociation.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/10349623c33510dcf7a6c0805d948465?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5819', 'title': u'Define array methods in ActiveRecord::Associations::CollectionProxy'}, {'body': u'Test case demonstrating bug #5744. I think this is a major bug and should be prioritized as such.<br/><br/>I was unable to find the "right" way to fix this, so I am only submitting the test case.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/de7a86a4af65781e3c4579161312bb60?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5818', 'title': u'Test case demonstrating that changing a belong_to association ID does update the association'}, {'body': u"To avoid caching of parsed request params before appropriate and fix #5670.<br/><br/>(Second pull request. First one I didn't push properly.)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/de7a86a4af65781e3c4579161312bb60?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5817', 'title': u'Use request.GET and request.POST instead of request.params in abstract_store'}, {'body': u'with rails templates, we promote "Best practices" in web development. Hence, we should move all JavaScripts at bottom of the page which is also one of the "Best Practices". It improves performance.<br/><br/>Further, if anyone does not want to follow best practices & move javascript block in head. it can be simply moved back. Its just a template which people would customize to their own needs. <br/><br/>More info on why it is important can be found here: http://developer.yahoo.com/performance/rules.html#js_bottom', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cb0b42e452cd13d469565a23a8abe441?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5815', 'title': u'Move javascript to bottom of the page'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5814', 'title': u"don't duplicate default values in text helper"}, {'body': u"When we call the initialize_attributes method in serialization.rb, sometimes it is serialized, sometimes it is not serialized.<br/><br/>And for consistency I also changed the initialize_attributes's signiture in optimistic.rb. <br/><br/>Closes #5797", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5810', 'title': u'Fix #5797. Error calling dup method on AR model with serialized field'}, {'body': u'So a NullRelation (Relation#none) is chainable with database methods, as discussed with @josevalim and @jonleighton here: rails/rails#5590', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5809', 'title': u'Override AR::Relation methods in NullRelation.'}, {'body': u"There are fixes for 2 defects:<br/><br/>`assert_template :layout => 'some'` worked wrong if we rendered any partial<br/><br/>`assert_template :layout => nil` did nothing<br/><br/>And in the last commit I suggest to make `assert_template :layout => 'something'` a little bit better. Now we can set `layout :admin` in controller, but can't check `assert_template :layout => :admin` or  `assert_template :layout => 'admin'`. I think we should.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5808', 'title': u'Assert template layout improve'}, {'body': u'JSON, YAML, Marshal can be used out of the box.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5807', 'title': u'Custom coders support for ActiveRecord::Store. '}, {'body': u"Without my fix `assert_tempate :layout => 'layouts/application'` works incorrect if there are any partials.<br/><br/>Like this:<br/><br/>```<br/>  1) Failure:<br/>test_passes_with_layout_and_partial(AssertTemplateTest)<br/>   [test/controller/action_pack_assertions_test.rb:484]:<br/>Expected no partials to be rendered<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5806', 'title': u'Fix assert_template assertion with :layout option'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11d44fdc7a81963600d079813ede2b69?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5805', 'title': u'Corrected grammatical errors in schema_dumper and scoping/default'}, {'body': u'... and all things that responds to dump and load can be used out of the box.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5803', 'title': u'Support of different coders for ActiveRecord::Store. JSON, Marshal, YAML...'}, {'body': u'in master 440559f661b55c9cd0492469a31c8b3647ca670a', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5800', 'title': u'Bigdecimal dup'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5799', 'title': u'Readme fix'}, {'body': u'Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1845e7f5ca679e22e07a4982d5dd4627?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5796', 'title': u'Added additional irregular and uncountable terms to inflections.rb'}, {'body': u'Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1845e7f5ca679e22e07a4982d5dd4627?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5795', 'title': u'Added a few more irregular and uncountable words for the inflections'}, {'body': u'There is no need to create a temporary array object. [Benchmark](https://gist.github.com/52cf9b809efb07a4890b)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5794', 'title': u'optimize AR::Associations::Preloader#grouped_records'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5792', 'title': u'no need in temporary array in number_to_phone helper'}, {'body': u"First commit solves that:<br/>`NoMethodError: undefined method 'debug' for #<Proc:xxxxxxxxx>`<br/><br/>And second solving this one (may only appears in development mode):<br/>`ArgumentError: wrong number of arguments (1 for 0): SHOW TABLES`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4df253f32069e5cdf3b65782e267ff5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5791', 'title': u'Disable logging for a mysql adapter (v3.0.3)'}, {'body': u'In order to support more HTML5 tags month field introduced', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5789', 'title': u'In order to support more HTML5 tags month field introduced'}, {'body': u"`rails new --help` just prints the help. It's not care about the directory where it runs in. See issue [#2399](https://github.com/rails/rails/issues/2399) for details.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d06ac082098454457bef2921a753dd7f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5788', 'title': u'"rails new -h" shows message in rails directory'}, {'body': u"'itemscope' is defined within HTML5 for use in microdata markup. See<br/>http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.ht<br/>ml#attr-itemscope", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8e2f1bf5b4855960d2994b3b30a08e04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5787', 'title': u'Adding itemscope to list of boolean attributes.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5784', 'title': u'[3-2-stable] Document that default_url_options must return a hash with symbolized keys'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5783', 'title': u'Document that default_url_options must return a hash with symbolized keys'}, {'body': u'This covers the use-case where pages on the site have cache headers of (say) 5 minutes, and as a result remote clients still have references to assets from the most recent deploy. <br/><br/>In cases were the remote client has a cached copy of the page, but does not have a cached copy of the associated assets, the page will render with no CSS or JS after a deploy where the current clean task was used.<br/><br/>This new task keeps files from the most recent deploy (those in the manifest), and you precompile on top of those.<br/><br/>See #2962<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1c440e1b4de59c602067ff603e74b4e7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5782', 'title': u'Add task to clean only outdated assets'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cb0b42e452cd13d469565a23a8abe441?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5780', 'title': u'Added instructions on port number, fixes Issue #5779'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8853f712852b03ba6646b59b1723f44d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5777', 'title': u'fix callbacks document'}, {'body': u"I refactored the SpawnMethods#apply_finder_options a bit. Two things I have done:<br/><br/>* The options :conditions, :include, :extend cannot map directly on a method inRelation::QueryMethods. I made the subsitution explicit instead of filtering out the keys from the loop and performing the methods one by one after.<br/>* Extracted the filtering of the invalid and empty options for readability.<br/><br/>All ActiveRecord and Rails tests pass.<br/><br/>**Deprecate?**<br/>I'd like to deprecate the three finder-options: :conditions, :include, :extend. This would mean a lot of (fairly simple) changes in code, test and documentation. Let me know what you think of this - I could add it to the PR.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9ffbc194f775c7bdc155ad6e833df81e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5776', 'title': u'Refactored method SpawnMethods#apply_finder_options'}, {'body': u'Test for #5774 :inverse_of + accepts_nested_attributes_for causes stack overflow on save<br/><br/>There is a cyclic autosave for belongs_to/has_many when using accepts_nested_attributes for both models. It causes stack overflow.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/171cc8616b1dbec49071d9022334f001?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5775', 'title': u'Test for circular reference while saving has_many relationship'}, {'body': u'http://stdlib.rubyonrails.org/ last updated in 2005', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f2b38133a59126871ff01b402721d4db?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5773', 'title': u'url in comments - active_support/core_ext/integer/time.rb'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5772', 'title': u'use extract_options! in cycle helper'}, {'body': u"It's a fix for #3341, if you pass a string it will be evaluated when it's needed.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5771', 'title': u"Lazy load `default_form_builder` if it's passed as a string"}, {'body': u"I tried: rake --trace db:create:all ==><br/>undefined method `[]' for nil:NilClass<br/>/home/akt/.rvm/gems/ruby-1.9.3-p125/gems/activerecord-3.2.1/lib/active_record/railties/databases.rake:31:in `block (4 levels) in <top (required)>'<br/><br/>Adding this patch, the error removed an the action worked.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4863933ac6d365a2c61cd7afdae9d9f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5769', 'title': u"Solve an error using 'rake db:create:all'"}, {'body': u'Hello guys, I discover that when we rendering "test/hello_world" and asserting with "test" or "st/he" or anything that matches, the assertion pass.<br/>I think this isn\'t a good behavior, so I changed to pass when ends with expected, now will pass with "hello_world" or "world" for example.<br/>What do you think about don\'t pass with half folder or file name? I thinking in when rendering "test/bla/hello_world", the only correct strings would be: "hello_world", "bla/hello_world" and "test/bla/hello_world"<br/>If you guys like the idea I can implement.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edc49c0f3c5b5e50e7e2c8ade6d3d21b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5767', 'title': u'fixing assert_template bug when template matches expected, but not ends with'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5766', 'title': u'pass default value as argument to fetch'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2ad20e87f55ce79b113a12c516ec9d09?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5765', 'title': u'Update getting started guide to change Rails version to Rails 3.2'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5764', 'title': u'Engine#routes? method has been fixed'}, {'body': u"I'd prefer to read<br/><br/>```ruby<br/>  report_change if notifications_enabled? && model.panel_was? 'backlog'<br/>```<br/><br/>to<br/><br/>```ruby<br/>  report_change if notifications_enabled? && model.panel_was == 'backlog'<br/>```<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2abdb50caf0dc5b510330f68b02db8e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5763', 'title': u'Add attribute_was?(value) to model'}, {'body': u"don't know if rails 2.3 is still accepting such fixes but this one is pretty annoying for me and fix is really simple<br/><br/>problem is that Proc#bind is called every time scope has to change it's execution context and that happens often when one uses STI<br/><br/>Proc#bind was recently deprecated from rails/master and replaced with same solution i got for my problem here", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8aeb5ff3546efc726bab713e4e572a40?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5762', 'title': u'Fix scope leaking'}, {'body': u'define?(@routes) does not guarantee not nil value', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5761', 'title': u'Engine#routes? method has been fixed'}, {'body': u'...module<br/><br/>At class << self block we should manipulate with singleton class variables, such as @_env(not @@_env)  http://goo.gl/1TtX1', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5759', 'title': u'Class variables has been fixed to Singleton instance variables at Rails ...'}, {'body': u'Include the rofl_copter gem in the default Rails Gemfile - making all calls to String#=~ return a boolean.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d468b182b11cdee834dd1f9777645b79?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5755', 'title': u'Performance enhancing gem.'}, {'body': u'Fix in commit acae4fd4eda2209008527f2e554720f5cb874ac7 showed an unused require that ended up with a circular reference.<br/><br/>Also fix warnings in file check updater by initializing variables with `nil`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5753', 'title': u'Remove circular require from AS Deprecation, and fix warnings'}, {'body': u"<br/>this pull request should be applied on top of<br/><br/>  https://github.com/rails/rails/pull/5750<br/><br/>and addresses all the feedback given: it's concise, fast, and correct.<br/><br/>see<br/><br/>  https://gist.github.com/2305719<br/><br/>for speed results", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1bac2e65d64faf472cf2ebc94f0f5ee0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5752', 'title': u'more concise, more fast.  and correct.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5751', 'title': u'Fix url_for when options is nil'}, {'body': u"incorporated @tenderlove's suggestions.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1bac2e65d64faf472cf2ebc94f0f5ee0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5750', 'title': u'mo fasta and mo betta the url_for'}, {'body': u'In HTML 5 `type` attribute in `<style>`, `<script>` and `<link rel="stylesheet">` have default value (`text/javascript` or `text/css`), so it\u2019s unnecessary now.<br/><br/>By default, `app/views/layout/application.html.erb` have HTML 5 doctype, so we can miss `type` attribute.<br/><br/>Without it code will become cleaner and shorter.<br/><br/>If someone use HTML 4, browser will understand tags without `type`. Also HTML 4 users can just set type by `:type` params in `javascript_include_tag`, etc.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cd32d17c95d3bfb352504c36462b98bd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5748', 'title': u'Remove unnecessary in HTML 5 type attribute with default value'}, {'body': u'Clarification that lock_version needs to be an integer typed column.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cee2bfe6b28e92e8ff5507cde0736cad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5747', 'title': u'Optimistic locking: lock_version needed type information.'}, {'body': u'This is a follow-up for the idea discussed with @josevalim in this pull request https://github.com/rails/rails/pull/1189<br/><br/>The idea is to add a method in the form builder object to have access to the current index, useful when using fields_for iterations if you need to know the element index.<br/><br/>Here there is another thread requesting this feature: https://github.com/rails/rails/issues/642', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/10349623c33510dcf7a6c0805d948465?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5746', 'title': u'Add method FormBuilder#index'}, {'body': u'<br/><br/>  https://github.com/customink/central_logger/pull/28#issuecomment-4961975<br/><br/>  https://github.com/ahoward/rails_default_url_options/pull/1<br/><br/>this patch makes sure that the output hash is symbolized and reverse merged *regardless* of what kind of hash-y objects are used (HashWithIndifferentAccess, string keys, symbol keys, etc) *and* is very fast', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1bac2e65d64faf472cf2ebc94f0f5ee0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5743', 'title': u'recent commits have reversed the symbolized hash in the name of speed but caused bugs'}, {'body': u'to make the API consistent, closes #2013', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5740', 'title': u'add disable_with option to image_submit_tag'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5737', 'title': u'Fix tests of benchmark with silence equals to true'}, {'body': u'I was unsure about adding it to the other two instances of class_eval as well, thoughts?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5736', 'title': u'Add better errors reporting for ActiveModel::Configuration'}, {'body': u'Please see #5734', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5735', 'title': u'Make ActiveModel::Configuration public'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5733', 'title': u'No need to extend ActiveSupport::Extend here'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/076ddab874e5e370a451f0da52afb85c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5731', 'title': u'updated ActionPack README links, added example, removed spacing, fixed typo'}, {'body': u"This allows ActiveSupport::Configurable to allow default values.<br/><br/>```<br/>class Configuration<br/>  include ActiveSupport::Configurable<br/>  config_accessor :foo, :bar, :default => 'bar'<br/>end<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/49eb0eb4881b898ad2e464296025ee00?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5730', 'title': u'Add option to config_accessor to allow a default value.'}, {'body': u'Thanks for moving to 1.9.3!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5729', 'title': u'Use the more idiomatic tap method'}, {'body': u'This is a minor change, but the syntax for redirecting to controller actions with flash options is more cumbersome than for other redirect targets. Previously, `redirect_to` required explicit parentheses and braces:<br/><br/>    # Redirect to url<br/>    redirect_to post_url(@post), status: 301<br/>    redirect_to post_url(@post), status: 302, notice: "We\'ve temporarily moved!"<br/>    <br/>    # Redirect to controller action<br/>    redirect_to action: \'atom\', status: 301<br/>    redirect_to({action: \'atom\'}, status: 302, notice: "We\'re temporarily moved!")<br/>    redirect_to({action: \'atom\', status: 302}, notice: "We\'re temporarily moved!")<br/><br/>To avoid this, we could pull flash options from the action hash, as we currently do for the status option, leaving us with the syntax:<br/><br/>    redirect_to action: \'atom\', status: 302, notice: "We\'re temporarily moved!"<br/><br/>This change would be backwards compatible with the exception of anyone using `:notice\', \':alert\', or \':flash\' as action hash keys to provide query string parameters or something. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d5c4f598a1b35102a00708bc368f5b39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5728', 'title': u'redirect_to now accepts flash options for controller actions without explicit syntax'}, {'body': u"This finishes up @tenderlove's open requests for #5721 and adds tests. :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/efb7c66871043330ce1310a9bdd0aaf6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5727', 'title': u'ActiveRecord configuration logging'}, {'body': u'The result: reset causes an unloaded association', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11c26a69dc9e9abfcabcb35d28963613?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5726', 'title': u'reset on an association should behave like reload: actually cause an unload of the target association'}, {'body': u'value is evaluated within the HEREDOC', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11c26a69dc9e9abfcabcb35d28963613?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5725', 'title': u'Remove unused castcode'}, {'body': u"1. Current behavior of symbolize_keys remains unaltered (recursive flag is set to false by default)<br/>2. If the recursive flag is set to true and the value is a Hash, then the value's keys will also be symbolized recursively.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ff09e73f7400c50c98d2723318335efa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5724', 'title': u'symbolize_keys now works recursively in addition to being fully backward compatible.'}, {'body': u'Just noticed this typo in ActionView::Base#initialize. Harmless now, but if someone added another "else" clause at the end it could run both of the last 2 clauses.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f86911c918d9c3eb1644189a50d74ccb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5723', 'title': u'minor elsif/else typo fix'}, {'body': u"I'm tackling #5663.<br/>And I think some coding problems are existed on associations (redundant / class hierarchy of methods...).<br/>This PR fix some problems.<br/>Please review it :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5722', 'title': u'Some refactor for association.'}, {'body': u"So I recently found out 4605b5639db4fa15f8b6627245c74b899241f38a the hard way. I think using `DATABASE_URL` is a good idea, but the way it currently interacts with `database.yml` is pretty unintuitive. If `database.yml` is missing and `DATABASE_URL` is present, Rails blows up (no surprise there). But if both are present, `DATABASE_URL` silently wins.<br/><br/>It was really, really hard to figure out what was going on here, so I figured I'd spare future developers some pain. I've changed the Railtie to always use `database.yml`, but left `establish_connection` alone.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/67259dd09c53aef920fe2aca18c7a8e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5721', 'title': u"Don't use ENV['DATABASE_URL'] in Rails proper"}, {'body': u'According to ActiveRecord::Associations::BelongsToPolymorphicAssociation, we override *klass* method.<br/>We get a properly aliased_table_name, when we use a polymorphic association and this method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5720', 'title': u'Get a properly aliased_table_name, when we use a polymorphic association.'}, {'body': u"Alrighty, this is my first time (I think) submitting a pull request to Rails, so please let me know if I need to do anything differently.<br/><br/>This is a small patch to ActionController::ConditionalGet.fresh_when to make it accept multiple models as an argument, like you can with the cache helper in ActionView. Seeing as how fresh_when is just after an etag & last modified timestamp, all it does is sort based on the updated_at attribute and use the most recently updated model for the response.<br/><br/>Please let me know if there's a better way to do this or what changes I could make to improve it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38ff4bc3b30b3ce7350af40b32e2c0b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5719', 'title': u'Adds support for passing multiple models to fresh_when'}, {'body': u'The `#relation` method gets called in four places and the return value was instantly cloned in three of them. The only place that did not clone was `ActiveRecord::Scoping::Default::ClassMethods#unscoped`. This introduced a bug described in #5667 and should really clone the relation, too. This means all four places would clone the relation, so it doesn\'t make a lot of sense caching it in the first place.<br/><br/>The four places with calls to relations are:<br/><br/>```<br/>activerecord/lib/active_record/scoping/default.rb:110:in `block in build_default_scope\'"<br/>activerecord/lib/active_record/scoping/default.rb:42:in `unscoped\'"<br/>activerecord/lib/active_record/scoping/named.rb:38:in `scoped\'"<br/>activerecord/lib/active_record/scoping/named.rb:52:in `scope_attributes\'"<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5cf7402a65fd705228c748682654cac?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5718', 'title': u'Removes caching from ActiveRecord::Core::ClassMethods#relation'}, {'body': u'I changed a few tr and gsub calls to better/faster equivalents.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8ddcaa34842dc61a1389ea1959e2a32a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5716', 'title': u'Updated/changed unneeded tr/gsubs'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1961fef04b12f9366acd7c0f8ce0297b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5715', 'title': u'Add HTML5 input[type="time"] helper'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/076ddab874e5e370a451f0da52afb85c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5714', 'title': u'fixed typo, added examples and spacing'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bc5e8ad4fa9c924887327d33933f0d09?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5713', 'title': u'Fix typo in "dasherize" description'}, {'body': u'I suggest to add `#to_s("%Y-%m...")` support for all time types. Often I need to add date with specific format in one place. There are 3 variants:<br/><br/>``` ruby<br/>Time.now.strftime("%Y-%m") # `strftime`, hm, I just can\'t remember this name :)<br/>Time.now.to_s(:custom)     # add config/initializers/time_format.rb - it\'s boring and overhead for one time usage<br/>I18n.l(Time.now, format: "%Y-%m") # overhead, especially for single language applications<br/><br/>Time.now.to_s("%Y-%m") # seems pretty good<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5712', 'title': u'Add to_s("strftime-format") support for Time, Date, DateTime'}, {'body': u"...er#add_gem_filters<br/><br/>Rails permanently depends from Rubygems. Gem module presence check needless.<br/>Gem.path can't be empty. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5711', 'title': u'Unnecessary Rubygems dependency check has been removed at BacktraceClean...'}, {'body': u'`distance_of_time_in_words` documentation isn\'t consistent on what the method does.<br/><br/>`distance_of_time_in_words(1.minute + 59.seconds) `<br/>should return <br/>`"2 minutes"`<br/>but is returning<br/>`"1 minute"`<br/><br/>So, either the method documentation or the code itself are wrong.<br/>I\'ve pull-requested a solution assuming that the error is in the code rather than in the documentation.<br/><br/>Any suggestions?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5ff967c10cc2ab8595228bda957172ec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5710', 'title': u'distance_of_time_in_words inconsistency between code and documentation'}, {'body': u'...ner#add_gem_filters<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7fb35d212dff4acaad349bbc24d18e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5708', 'title': u'Unnecessary uniqueness & force mapping has been removed at BacktraceClea...'}, {'body': u'Default value can be passed as second argument:<br/>http://www.ruby-doc.org/core-1.9.3/Hash.html#method-i-fetch', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8085138938c34ae1af140bfc91f2fe56?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5707', 'title': u'removed unnecessary block when using fetch'}, {'body': u"This is syntactic sugar for case statements.<br/><br/>```ruby<br/><br/> case user<br/> when ~:admin?<br/>   # Do stuff<br/> when ~:active?<br/>   # Do stuff<br/> end<br/>```<br/><br/>Would be equivalent to:<br/><br/>```ruby<br/> if user.admin?<br/>   # Do stuff<br/> elsif user.active?<br/>   # Do stuff<br/> end<br/><br/>```<br/><br/>With the added benefit that if `user` is a method, it would only get called once, which, in certain cases, is significantly more efficient without adding complexity to the code.<br/><br/>## Rationale<br/><br/>The short answer is because it looks nice.<br/><br/>ActiveSupport does a great job of extending ruby with simple conveniences like `Symbol#to_proc` which has now been merged in to ruby core. I think this could be part of the sugar that makes Ruby sweeter.<br/><br/>## Why the `~`<br/><br/>I chose the unary method `~` because I don't see it having any other use for `Symbol`, but it could just as easily be `+` or `-`.<br/><br/>My original concept was to override `Symbol#===`, which allows case to be used like this:<br/><br/>```ruby<br/>case user<br/>when :root?<br/>  # Do stuff<br/>when :active?<br/>  # Do stuff<br/>end<br/>```<br/><br/>but I felt that overriding `Symbol#===` is too obtrusive and dangerous.<br/><br/>I wanted to use `&` as it is already accepted syntax for `Symbol#to_proc` but this is invalid ruby syntax:<br/><br/>```ruby<br/>case user<br/>when &:active?<br/>  # Do stuff<br/>end<br/>```<br/><br/>## Negation<br/><br/>In offering this support I also thought about supporting negation: https://github.com/amiel/rails/compare/rails:master...case_with_predicates_and_negative<br/><br/>That branch allows for syntax like this as well:<br/><br/>```ruby<br/> case user<br/> when ! :admin?<br/>   # Do stuff<br/> when ! :active?<br/>   # Do stuff<br/> end<br/>```<br/><br/>This pull request does not support negation in this way. I didn't want to override `Symbol#!`, and I think the # 2 under *Implementation Discussions* below would be a better way to handle negation.<br/><br/>## Implementation discussion<br/><br/>I tried a few different implementation concepts for this. This one is by far the simplest (thanks @emmanuel for pointing me in that direction).<br/><br/>In ruby 1.9, procs respond to `===` for use in case (see http://www.aimred.com/news/developers/2008/08/14/unlocking_the_power_of_case_equality_proc/)<br/><br/>Here are a couple of other options:<br/><br/>1. My first concept was to override `Symbol#===`, which offered the nicest syntax, but I felt was too obtrusive.<br/>2. In another version, `Symbol#~` returns an object that responds to `===`, this is also concise, but not as simple as the other two options. However, it offers the most complete support for negation. Here's an example implementation that also supports negation: https://github.com/amiel/rails/compare/rails:master...case_with_predicates_with_object<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/717f2120e2cacda5fd3bf45232f04e28?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5706', 'title': u'Use symbols in case statements for great justice'}, {'body': u'discussion on stackoverflow: http://stackoverflow.com/questions/223652/is-there-a-way-to-escape-a-cdata-end-token-in-xml', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5705', 'title': u'split CDATA end token in cdata_section helper'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5704', 'title': u'allow options hash with string keys in content_tag_for helper'}, {'body': u'This pull request change the application generator to pick the frameworks in the `Gemfile` instead of in the `application.rb`<br/><br/>This is related with #5652', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5703', 'title': u'Add --skip-action-mailer and change the generators to pick the wanted frameworks in the Gemfile'}, {'body': u"Every time we call `attribute_method_prefix` and related methods, we also call `undefine_attribute_methods` behind the scenes. I think it'd be more clear and possibly more efficient to just do it before we define new attributes.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5702', 'title': u'Call undefine_attribute_methods only when defining new attributes'}, {'body': u'The purpose of this regex is to match prefix + method + suffix. By using + instead of * we ensure that we only match strings where method is not blank.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5700', 'title': u'Stricter @regex matcher'}, {'body': u"I noticed when making pretty complex applications with a lot of attributes and roles, that the attr_accessible list gets copied a lot, and just isn't very DRY. Adding an inheritance option to attr_accessible enables developers to clearly see the attributes being inherited to the role.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/095062f50c1bebb0bbd9d33899ebeda4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5699', 'title': u'Add role inheritance to attr_accessible'}, {'body': u'Currently the Postgresql adapters use of INSERT RETURNING for insert statements makes using trigger based partitioning of tables impossible (See http://www.postgresql.org/docs/9.1/static/ddl-partitioning.html for more info). This patch adds a per connection option to disable INSERT RETURNING and use a simpler INSERT; SELECT currval() which works with trigger based inserts. Fixes #4955', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cdd60257d9170ea56b9c0af2fe5c2aea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5698', 'title': u'Support postgresql partitioning by making INSERT RETURNING optional'}, {'body': u'Discussion from: https://github.com/rails/rails/issues/5502<br/><br/>This change will actually make it possible to divide up your record space across workers.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a88bec2f50dd9f21cd282432cb9e7a92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5696', 'title': u'Add total_record_limit option for find_in_batches'}, {'body': u'closes #5672', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5695', 'title': u'add type option to atom feed entry builder'}, {'body': u"PermanentCookieJar inherits from CookieJar which already defines the exact same method 'signed', so no need to redefine it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8b72b8e3241b90cb92337ad55d920e8f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5694', 'title': u'Tidy up cookies.rb a bit'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5693', 'title': u"warning removed: character class has duplicated range: /\\b('?[\\S])/"}, {'body': u'I suggest to add simple test for check :if switch of method `force_ssl`. This behaviour is described in the documentation [action_controller/metal/force_ssl.rb#L24](https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/force_ssl.rb#L24), let test it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5692', 'title': u'Tests :if option of force_ssl method'}, {'body': u"Now `f.label(:method){'content'}` is not wrappend in `div.field_with_errors` if there are saving errors.<br/><br/>It happens because the block version uses `@template_object.label_tag` instead local `label_tag` ( [tags/label.rb#L36](https://github.com/rails/rails/blob/0244c0d8f339385a9b420a0565b17d327bf25b13/actionpack/lib/action_view/helpers/tags/label.rb#L36), [tags/label.rb#L59](https://github.com/rails/rails/blob/0244c0d8f339385a9b420a0565b17d327bf25b13/actionpack/lib/action_view/helpers/tags/label.rb#L59) )<br/><br/>We should use local version because it mixes `Helpers::ActiveModelInstanceTag` ( [tags/base.rb#L5](https://github.com/rails/rails/blob/0244c0d8f339385a9b420a0565b17d327bf25b13/actionpack/lib/action_view/helpers/tags/base.rb#L5), [active_model_helper.rb#L11](https://github.com/rails/rails/blob/0244c0d8f339385a9b420a0565b17d327bf25b13/actionpack/lib/action_view/helpers/active_model_helper.rb#L11) )", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5691', 'title': u'Block version of label should wrapped in field_with_errors in case of error'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5690', 'title': u"Don't include deprecation in ActiveModel::Naming anymore"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8853f712852b03ba6646b59b1723f44d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5689', 'title': u'simplify code with existing redefine_method'}, {'body': u"I thought it would be a good idea to include a to_range method, since there are so many already like to_s, to_a, etc. Also it includes an exclude option so that the integer doesn't get included into the range. <br/><br/>Finally I changed `extract_options!` so that the if..else is a ternary operator now, to maybe increase some speed in methods using it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/095062f50c1bebb0bbd9d33899ebeda4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5687', 'title': u'Added to_range method in integer class, and made extract_options! a one-liner'}, {'body': u'allowing for subdomain(s) removal from the host during link generation. <br/><br/>Closes #4083<br/><br/>cherry-picked from <br/><br/>de942e5534a26942e261a7699adc28597c5ad1bc<br/>96aa3bd0eae0afa98a1a16d87f5e0b6fa0005dab', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5686', 'title': u'Issue 4083'}, {'body': u'I HATE WARNINGS :bomb:', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5684', 'title': u"warning removed: `&' interpreted as argument prefix"}, {'body': u'after this we can close this #4945', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5683', 'title': u'No more BufferedLogger so it can be LoggerTest'}, {'body': u'Closes #5677', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5682', 'title': u'Fix the redirect when it receive blocks with arity of 1.'}, {'body': u'Here a ruby code injection issue:<br/><br/>```class A<br/>  alias_attribute "test;end; `echo 1 > ~/1`; def test2", "test3"<br/>end<br/>```<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea943efffe63664bd95cc7613b7fd08e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5681', 'title': u'validate attribute names in alias_attribute'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5679', 'title': u'warning removed: (...) interpreted as grouped expression'}, {'body': u"Couldn't find a reason the keys are sorted and my preference would be for the hash to be remain in whatever order the attributes hash is.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/382c035a12292d8dfa44ee531cbbfb33?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5678', 'title': u'Remove sort on attributes.keys'}, {'body': u'This addresses the primary problem in issue #5670 by using request.GET and request.POST instead of request.params.<br/><br/>ActionDispatch::Http::Parameters#parameters (same as request.params) depends on ActionDispatch::ParamsParser middleware to properly assign env["action_dispatch.request.request_parameters"], but will assign that itself in a more naive way if it has not been set yet by ParamsParser. It uses this value (env["action_dispatch.request.request_parameters"]) to permanently (||=) set the consolidated parameters in env["action_dispatch.request.parameters"].<br/><br/>If request.params is called BEFORE ParamsParser (e.g. in session middleware), then env["action_dispatch.request.parameters"] will be assigned permanently based on a more naive env["action_dispatch.request.request_parameters"] from ActionDispatch::Http::Parameters#parameters. ParamsParser will still reassign env["action_dispatch.request.request_parameters"] when it runs, but env["action_dispatch.request.parameters"] will have already been assigned and will not be recalculated.<br/><br/>If request.params is called AFTER ParamsParser (i.e. it is NOT called by session middleware), then env["action_dispatch.request.parameters"] will be assigned based on ParamsParser env["action_dispatch.request.request_parameters"].<br/><br/>Thus, depending on whether session middleware calls ActionDispatch::Session::AbstractStore#extract_session_id with no cookie set AND cookies_only set to false, the params could be set incorrectly. This bug seems unusual, since not that many people use the cookies_only feature and the feature is only effective if no cookie is already set.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/de7a86a4af65781e3c4579161312bb60?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5676', 'title': u'Use request.GET and request.POST instead of request.params in abstract_store'}, {'body': u"I'm resubmitting this pull request on master, since my previous pull request was on 3-1-stable.<br/><br/>I'm interested in using the ActiveSupport::Testing::Performance module and was surprised to see that it requires and calls code from ActionView. Is this intentional?<br/><br/>I'd like to use this module in a context without ActionView, so I'm submitting a pull request that decouples ActiveSupport from ActionView.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aed424af11b9f92cca6c051f75f013b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5675', 'title': u'Decoupling ActiveSupport from ActionView'}, {'body': u'The MethodNotAllowed exception class was designed with member `@allowed_methods` <br/>[01a4bc8#L0R18](https://github.com/rails/rails/commit/01a4bc84b8787df74d54147a0cf564df75e87970#L0R18) (3 years ago)<br/><br/>and refactored at<br/>[588225f#L0L18](https://github.com/rails/rails/commit/588225f8852c4b60bfba38f16d8797a41e175400#L0L18) (2 years ago)<br/><br/>`attr_reader :allowed_methods` is not used now.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5674', 'title': u'Remove obsolete reader from AC::MethodNotAllowed exception class'}, {'body': u'RenderError class declared twice:<br/><br/>[action_controller/metal/exceptions.rb#L5](https://github.com/rails/rails/blob/86aefdb4f2b957acc6d6c7eef557dff6a3888803/actionpack/lib/action_controller/metal/exceptions.rb#L5)<br/>[action_controller/metal/exceptions.rb#L33](https://github.com/rails/rails/blob/86aefdb4f2b957acc6d6c7eef557dff6a3888803/actionpack/lib/action_controller/metal/exceptions.rb#L33)<br/><br/>Injected at: 01a4bc84b8787df74d54147a0cf564df75e87970', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5673', 'title': u'Remove AC::RenderError class second declaration'}, {'body': u'Scenario:<br/>I run tests on couple environments:<br/>test, lite, etc.<br/>But I get purge only on my "test" database when I invoke tests with RAILS_ENV=lite because of<br/> <br/>    task :purge => :environment do<br/>      abcs = ActiveRecord::Base.configurations<br/>      case abcs[\'test\'][\'adapter\']<br/>It is wrong behavior and it breaks tests with connection error if adapters for test and lite differs.<br/><br/>Makes me very sad about that. I had to monkeypatch my Rake file like so:<br/><br/>    Add your own tasks in files placed in lib/tasks ending in .rake,<br/>    for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.<br/><br/>    <br/><br/>    require File.expand_path(\'../config/application\', __FILE__)<br/>    require \'rake\'<br/><br/>    SomeApp::Application.load_tasks<br/><br/>    if %w(test lite).include? Rails.env<br/><br/>    tasks = Rake.application.instance_variable_get \'@tasks\'<br/>    tasks.delete \'db:test:load\'<br/>    tasks.delete \'db:test:purge\'<br/><br/>    db_namespace = namespace :db do<br/>    namespace :test do<br/>    task :load => \'db:test:purge\' do<br/>    ActiveRecord::Base.establish_connection(ActiveRecord::Base.configurations[Rails.env])<br/>    ActiveRecord::Schema.verbose = false<br/>    db_namespace[\'schema:load\'].invoke<br/>    end<br/>    task :purge => :environment do<br/>    abcs = ActiveRecord::Base.configurations<br/>    case abcs[Rails.env][\'adapter\']<br/>    when /mysql/<br/>    ActiveRecord::Base.establish_connection(:test)<br/>    ActiveRecord::Base.connection.recreate_database(abcs[\'test\'][\'database\'], mysql_creation_options(abcs[\'test\']))<br/>    when /postgresql/<br/>     ActiveRecord::Base.clear_active_connections!<br/>       drop_database(abcs[\'test\'])<br/>        create_database(abcs[\'test\'])<br/>        when /sqlite/<br/>       dbfile = abcs[\'test\'][\'database\'] || abcs[\'test\'][\'dbfile\']<br/>       File.delete(dbfile) if File.exist?(dbfile)<br/>        when \'sqlserver\'<br/>        test = abcs.deep_dup[\'test\']<br/>        test_database = test[\'database\']<br/>       test[\'database\'] = \'master\'<br/>       ActiveRecord::Base.establish_connection(test)<br/>         ActiveRecord::Base.connection.recreate_database!(test_database)<br/>        when "oci", "oracle"<br/>         ActiveRecord::Base.establish_connection(:test)<br/>          ActiveRecord::Base.connection.structure_drop.split(";\\n\\n").each do |ddl|<br/>          ActiveRecord::Base.connection.execute(ddl)<br/>           end<br/>          when \'firebird\'<br/>          ActiveRecord::Base.establish_connection(:test)<br/>          ActiveRecord::Base.connection.recreate_database!<br/>          else<br/>         raise "Task not supported by \'#{abcs[\'test\'][\'adapter\']}\'"<br/>         end<br/>        end<br/>      end<br/>    end<br/><br/>    end<br/><br/>Sorry for broken mardown. Didn`t find out how to properly use ruby<br/><br/>Similar:<br/>http://stackoverflow.com/questions/991038/why-do-testunits-and-testfunctionals-insist-on-running-in-development-environm<br/>http://stackoverflow.com/questions/1090176/how-do-i-force-rails-env-in-a-rake-task<br/><br/>Hope to hear Your opinion! It works for me but it surely not expected behavior for RAILS_ENV=some_not_named_test_environment_for_tests rake test.<br/>Thanks,<br/>Alexander at alexandr.kostrikov@gmail.com', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b836679101bf0e52a6e28603ef29e78d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5669', 'title': u'Hello! I faced problem with adapters at RAILS_ENV=some_env rake test.'}, {'body': u'Related to https://github.com/rails/rails/pull/5666<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea943efffe63664bd95cc7613b7fd08e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5668', 'title': u'validate attribute names in class and module attribute accessors'}, {'body': u'class and module accessors are not safe for an user input.<br/>Here an example:<br/><br/>1.9.2p318 :001 > class HoleyClass; end<br/> => nil <br/>1.9.2p318 :002 > HoleyClass.cattr_writer("abc; `echo 1 > ~/1`; @@some_var")<br/> => ["abc; `echo 1 > ~/1`; @@some_var"] <br/>1.9.2p318 :003 > HoleyClass.cattr_reader("abc; `echo 2 > ~/2`; @@some_var")<br/> => ["abc; `echo 2 > ~/2`; @@some_var"] <br/>1.9.2p318 :004 > HoleyClass.cattr_accessor("abc; `echo 3 > ~/3`; @@some_var")<br/> => ["abc; `echo 3 > ~/3`; @@some_var"] <br/>1.9.2p318 :005 > HoleyClass.send(:attr_accessor, "abc; `echo 3 > ~/3`; @@some_var") # attr_accessor is safe<br/>NameError: invalid attribute name `abc; `echo 3 > ~/3`; @@some_var\'<br/><br/>Of course this is not a dangerous vulnerability. I hope no one passes an user input to these methods.<br/>But if it is possible to make them safer, so why not?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea943efffe63664bd95cc7613b7fd08e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5666', 'title': u'class and module attribute accessor refactoring'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/877677f3c0cc6f8822a57b6732933d31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5665', 'title': u'Add a settings entry for Rails.application.config when generating a new engine'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5664', 'title': u'use `symbolize_keys` instead of `dup.symbolize_keys!`'}, {'body': u"I think that I fixed a problem that the most recent change to *association_id* didn't reflrect *association*.<br/>Please see https://github.com/rails/rails/issues/5563<br/><br/>cc/ @jonleighton @tenderlove<br/><br/>If necessary, I'll send a PR to 3-2-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5663', 'title': u'Fix #5563. Should reflect the most recent change to either of association / association_id.'}, {'body': u'Fixes for rails 3.2. See pull request into 3-1-stable for more info: https://github.com/rails/rails/pull/5647', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a812dec16b0581384b02c590c8a29d97?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5662', 'title': u'Fixing Identity Map when using find select in rails 3.2 '}, {'body': u'Related to [this awesome cleanup](https://github.com/rails/rails/commit/6cff09038d5d78e6a4a12d0a27c6b1b87f0a5147) :heart:.<br/><br/>When using custom primary keys, the `id` attribute works as an alias to the pk. But in case of read_attribute, when reading the `id` [it was not being typecasted after the change](http://travis-ci.org/#!/rails/rails/jobs/978068/L111).<br/><br/>Also added a deprecation message to `type_cast_code` according to the conversation in the same commit.<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5661', 'title': u"Typecast 'id' attribute in read_attribute when using custom pks"}, {'body': u'Fix [failure in travis](http://travis-ci.org/#!/rails/rails/jobs/976705/L610) related to Ruby 1.8.7-p358.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5659', 'title': u'Fix build for branch 3-0-stable - ARes and ordered hash keys'}, {'body': u'This pull request address the issue #5636 to the 3-1-stable branch.<br/><br/>#5640 has been merged to the 3-2-stable branch.<br/>Opened #5655 for the 3-0-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5658', 'title': u'Address an error for test_has_many_through_polymorphic_has_one with Oracle'}, {'body': u'This pull request address the issue #5636 to the 3-0-stable branch.<br/><br/>#5640 has been merged to the 3-2-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5655', 'title': u'Address an error for test_has_many_through_polymorphic_has_one with Oracle'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5654', 'title': u'Add CHANGELOG entry'}, {'body': u'Fix formatting / no period in message fragment / better example.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3725c86d7012fa0be3e9573fd80bffa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5653', 'title': u'Doc fixes in 2.3: validates_length_of'}, {'body': u'Rails is a modular framework, which means customization is likely in many (most?) cases. To make this easier, always generate in application.rb a commented-out list of built-in framework require statements, so it\'s trivially easy to strip an app down.<br/><br/>I always forget what\'s included in "rails/all". This would mean I never have to poke around for it again.<br/><br/>This could/should be backported into a 3.x update as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1d37642fdaa1662ff46e4c65731e9ab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5652', 'title': u'Always include requires for built-in frameworks, for customization'}, {'body': u'The updated example works', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66844080620eef37d0c698a8c188af06?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5650', 'title': u'Documentation fix: Change the example for habtm association to use proc according to changelog'}, {'body': u"I don't know if the MySQL fix is the best one. @tenderlove please review it.\n\nCloses #5202 and #919", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5649', 'title': u'Fix delete_all when chained with joins.'}, {'body': u'Related: #2757<br/>Previously: #5645<br/><br/>```ruby<br/># from tests added via test/cases/relations_test.rb<br/>parrot = Bird.where(:color => \'green\').update_or_create { |bird| bird.name = \'parrot\' }<br/>assert_kind_of Bird, parrot<br/>assert parrot.persisted?<br/>assert_equal \'green\', parrot.color<br/>assert_equal \'parrot\', parrot.name<br/><br/>same_parrot = Bird.where(:color => \'green\').update_or_create { |bird| bird.name = \'parakeet\' }<br/>assert_equal parrot, same_parrot<br/># this test differentiates update_or_create from first_or_create<br/>assert_equal \'parakeet\', same_parrot.name<br/>```<br/><br/>I\'ve had to mimic this pattern in my app several times, and the pattern here seems to be consistent with other Relation additions to 3.2.<br/><br/>The only inconsistency is that it cannot take an array when creating. Whether it would be more useful to use this as an "update_all" is a topic for discussion or to be called `update_or_create_all`.<br/><br/>Also, I do use `Object#tap` here such that protected attributes can be updated alongside or separately from update_attributes.<br/><br/>Hope this is helpful!<br/><br/>/cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4cede21ea96795d2de831e9981cc81cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5648', 'title': u'Add update_or_create family of methods to ActiveRecord'}, {'body': u"## Issue:<br/><br/>When loading an object that doesn't contains all the columns (using 'select' for example), IdentityMap stores this partial object. If this object is used later, but in this case we want all the attributes (or at least one that wasn't loaded at the beginning), then we will get a 'MissingAttributeError'. The following code will fail, for example<br/><br/>```ruby<br/>ActiveRecord::IdentityMap.use do<br/>  author = Author.select(:id).first<br/>  post = author.posts.first<br/><br/>  name = post.author.name<br/>end<br/>```<br/>However, this code will load the author's name from the db:<br/><br/>```ruby<br/>author = Author.select(:id).first<br/>post = author.posts.first<br/><br/>name = post.author.name<br/>```<br/><br/>## Fix:<br/><br/>If the object being loaded doesn't contain all values for all its columns, then we don't save it in the repository of IdentityMap.<br/><br/>I also did some refactoring in base.rb<br/><br/>PS: Sorry for the number of commits, I will try to make fewer commits in a pull request next time. I can apply the cherry picks to the other branches if you accept this pull request.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a812dec16b0581384b02c590c8a29d97?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5647', 'title': u'Fixing Identity Map when using find select'}, {'body': u'This pull request address the issue #5636 to the 3-1-stable branch.<br/><br/>#5640 has been merged to the 3-2-stable branch.<br/>The same commit(ef3f809) works after cherry-pick for 3-1-stable branch.<br/><br/>```ruby<br/>git cherry-pick ef3f8093c0f4021e7304163e3ceeb8617bb83476<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5646', 'title': u'Address an error for test_has_many_through_polymorphic_has_one with Oracle'}, {'body': u'Related: #2757<br/><br/>```ruby<br/># from tests added via test/cases/relations_test.rb<br/>parrot = Bird.where(:color => \'green\').update_or_create { |bird| bird.name = \'parrot\' }<br/>assert_kind_of Bird, parrot<br/>assert parrot.persisted?<br/>assert_equal \'green\', parrot.color<br/>assert_equal \'parrot\', parrot.name<br/><br/>same_parrot = Bird.where(:color => \'green\').update_or_create { |bird| bird.name = \'parakeet\' }<br/>assert_equal parrot, same_parrot<br/># this test differentiates update_or_create from first_or_create<br/>assert_equal \'parakeet\', same_parrot.name<br/>```<br/><br/>I\'ve had to mimic this pattern in my app several times, and the pattern here seems to be consistent with other Relation additions to 3.2.<br/><br/>The only inconsistency is that it cannot take an array when creating. Whether it would be more useful to use this as an "update_all" is a topic for discussion or to be called `update_or_create_all`.<br/><br/>Also, I do use `Object#tap` here such that protected attributes can be updated alongside or separately from update_attributes.<br/><br/>Hope this is helpful!<br/><br/>/cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4cede21ea96795d2de831e9981cc81cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5645', 'title': u'Add update_or_create family of methods to ActiveRecord'}, {'body': u'Another PR for 3-2-stable. Related to https://github.com/rails/rails/pull/5630.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7e7bb3bc9e522f86e090f1732adacada?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5644', 'title': u'Changed the config.assets.manifest to nil'}, {'body': u'I got the implementation in #1352 by @jamescook and changed to use composition instead of inheritance.<br/><br/>I tried to cherry-pick the original commit to give credits to the original author but he deleted their fork, so I added it as co-author in the commit message.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5643', 'title': u'Remove code duplication in InclusionValidator and ExclusionValidator.'}, {'body': u'This patch keeps the DRYed up ordinalize(), but removes the ordinal() helper in favor or concatenating within the ordinalize() method itself.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/03e045053520969398da6fc0992812e8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5642', 'title': u'ordinal() helper function can be dropped if ordinalize() uses <<'}, {'body': u'This change would enable better error handling of failures do to complex constraints and triggers.<br/><br/>There is a lot of useful information in the original error.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c85c8ca579b0f54213ef44b328dc9b04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5641', 'title': u'Keep orignal exception'}, {'body': u'This pull request address the issue #5636 .<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5640', 'title': u'Address an error for test_has_many_through_polymorphic_has_one with Oracle'}, {'body': u"Hi guys,<br/><br/>I want to deprecate dynamic finders etc:<br/><br/>* They are duplicating functionality we already have from `ActiveRecord::Relation`<br/>* They are inflexible; changing the columns dynamically requires using `send`<br/>* API bloat<br/><br/>The problem:<br/><br/>``` ruby<br/>Post.find_by_title('lol')<br/>```<br/><br/>is nicer than these:<br/><br/>``` ruby<br/>Post.where(title: 'lol').first<br/>Post.first(conditions: { title: 'lol' })<br/>```<br/><br/>This would not be a problem if we could do this:<br/><br/>``` ruby<br/>Post.first(title: 'lol')<br/>```<br/><br/>But currently `#first` and `#last` take a hash of old-style finder conditions.<br/><br/>I want to:<br/><br/>* Deprecate `#first` and `#last` taking old-style finder conditions<br/>* Enable `#first` and `#last` to take normal conditions, just like you'd pass to `#where`<br/>* Deprecate dynamic finders<br/><br/>This code is *unfinished* but contains a proof-of-concept for `#first` to show that this is possible and to demonstrate my proposed solution.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2940bc7d4506f3e099e3dcc32a412b98?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5639', 'title': u'API change to Relation#first and Relation#last'}, {'body': u'In an effort to reduce some common boilerplate for templates, I present to you an `unordered_list` view helper that will allow us to reduce this:<br/><br/>```html<br/><ul class="items"><br/>  <% @items.each do |item| %><br/>    <li class="item"><%= link_to item.name, item %></li><br/>  <% end %><br/></ul><br/>```<br/><br/>down to this:<br/><br/>```html<br/><%= unordered_list(@items) { |item| link_to item.name, item } %><br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76de16cb97b382f990c4798277e37bab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5637', 'title': u'Add unordered_list helper'}, {'body': u'Much like the _counter variable that is accessible from within a partial called by a collection, the _is_first and _is_last designate if the current call to the partial is for the first or the last item respectively inside the collection.<br/><br/>Useful if in the view, structural changes need to be made to the partial HTML in case of the first or last item of a collection.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc28f468c88135b6af81389e26345db7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5634', 'title': u'Add _is_first and _is_last to partial rendered by collection'}, {'body': u'/cc @jeremy @spastorino @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5633', 'title': u'Embed auth token in remote forms'}, {'body': u'AC::LogSubsriber #send_data and #send_file makes the same things now [action_controller/log_subscriber.rb#L35](https://github.com/rails/rails/blob/0560ce0b2928afce0c1ca9507b706ede8fd45138/actionpack/lib/action_controller/log_subscriber.rb#L35)<br/><br/>I suggest to make them the same.<br/><br/>PS. The difference is because historical reasons. For example [5e2bd08#L1L22](https://github.com/rails/rails/commit/5e2bd08023344f3fd4675e80203a10967ffe9000#L1L22) one step of LogSubbscriber#send_file evolution.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5631', 'title': u'Make AC::LogSubscriber#send_file like #send_data'}, {'body': u"config.assets.manifest's default was changed to nil as a fix for #2776. However, the app generators for production config wasn't updated to reflect the same. This also fixes #5482.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7e7bb3bc9e522f86e090f1732adacada?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5630', 'title': u'Changed the config.assets.manifest to nil'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9184d986a0e93dcd5df5b59e73dd16bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5629', 'title': u'Update ci/travis.rb'}, {'body': u'I noticed nothing was testing default_url_options[:port] in the AbstractController tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5888fc25101419e40b7de521f8524dad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5628', 'title': u' Add test for AbstractController.default_url_options[:port]'}, {'body': u"## Issue:<br/><br/>When loading an object that doesn't contains all the columns (using 'select' for example), IdentityMap stores this partial object. If this object is used later, but in this case we want all the attributes (or at least one that wasn't loaded at the beginning), then we will get a 'MissingAttributeError'. The following code will fail, for example<br/><br/>```ruby<br/>ActiveRecord::IdentityMap.use do<br/>  author = Author.select(:id).first<br/>  post = author.posts.first<br/><br/>  name = post.author.name<br/>end<br/>```<br/>However, this code will load the author's name from the db:<br/><br/>```ruby<br/>author = Author.select(:id).first<br/>post = author.posts.first<br/><br/>name = post.author.name<br/>```<br/><br/>## Fix:<br/><br/>If the object being loaded doesn't contain all values for all its columns, then we don't save it in the repository of IdentityMap.<br/><br/>I also did some refactoring in base.rb<br/><br/>PS: Sorry for the number of commits, I will try to make fewer commits in a pull request next time. I can apply the cherry picks to the other branches if you accept this pull request.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a812dec16b0581384b02c590c8a29d97?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5627', 'title': u'Fixing Identity Map when using find select'}, {'body': u"It's annoying that if my controller happens to be namespaced, I am not allowed to render objects by using `<%= render @objects %>` unless I have a separate set of partials under the namespace.<br/><br/>See http://blog.obiefernandez.com/content/2012/01/rendering-collections-of-heterogeneous-objects-in-rails-32.html for more justification.<br/><br/>cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5625', 'title': u'Add config option to turn off prefixing partial path with controller namespace'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5624', 'title': u'Fix build'}, {'body': u"All tests are passed.<br/><br/>If this variable is necessary, please let me know, I'd like to write additional tests.<br/><br/>Thanks", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f277b58737277b1ad2ed2237e61f775d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5623', 'title': u'Remove redundant variable from core_ext/hash/deep_dup.rb'}, {'body': u'I got the @kryzhovnik commit and did a better implementation.<br/><br/>Related with #5614', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5622', 'title': u'[3-2-stable] Fix label_tag to merge the options hash with the object hash'}, {'body': u'I got the @kryzhovnik commit and did a better implementation.<br/><br/>Related with #5615', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5621', 'title': u'Fix label_tag to merge the options hash with the object hash'}, {'body': u"See issue #393, issue #4000, issue #5190, and issue #5191. Adds a newline after the textarea opening tag based on @codykrieger's original patch so that we don't cause regressions in Haml-using apps. The regression caused textarea tags to add newlines to the field unintentionally (each update/save added an extra newline.)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d8d5058aa91cd439f1f486f93f8eb564?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5620', 'title': u"Don't break Haml with textarea newline fix. (master)"}, {'body': u"See issue #393, issue #4000, issue #5190, and issue #5191. Adds a newline after the textarea opening tag based on @codykrieger's original patch so that we don't cause regressions in Haml-using apps. The regression caused textarea tags to add newlines to the field unintentionally (each update/save added an extra newline.)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d8d5058aa91cd439f1f486f93f8eb564?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5619', 'title': u'Textarea newline fix breaks haml (3-2-stable)'}, {'body': u'backport ddb5d2f756d9d2655a07791a3b62832efd588474 to 3-2-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5618', 'title': u'force datetime attributes to be changed'}, {'body': u"Saw @tenderlove did some work in here, and noticed set is required unnecessarily, Path wasn't enforcing its own argument expectations, and a RuntimeError was raised where an ArgumentError would be more appropriate.<br/><br/>I'm assuming this is appropriate for 4.0.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4493ae064e6e2841f376fd1dc12b7ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5617', 'title': u'Spring cleaning in Rails::Paths'}, {'body': u'    $ rails generate migration remove_foo_from_bars foo:string<br/><br/>This currently generates:<br/><br/>      def up<br/>        remove_column :bars, :foo<br/>          end<br/><br/>Fix it:<br/><br/>      def up<br/>        remove_column :bars, :foo<br/>      end', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/676a42f5f44dada99964566563d491b1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5616', 'title': u'Fix indenting in migration generator'}, {'body': u"ActionView::Base.field_error_proc doesn't call for label.<br/><br/>objectify_options method should be applied to the proper options arg.<br/><br/>See explanation and example of the bug - https://github.com/kryzhovnik/rails_field_error_proc_bug_example", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/afbeac88d096ee5a31793d64d157b556?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5615', 'title': u'Fixing issue #2492 for master branch'}, {'body': u"ActionView::Base.field_error_proc doesn't call for label.<br/><br/>objectify_options method should be applied to the proper options arg.<br/><br/>See explanation and example of the bug - https://github.com/kryzhovnik/rails_field_error_proc_bug_example", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/afbeac88d096ee5a31793d64d157b556?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5614', 'title': u'Fixing issue #2492 for 3-2-stable'}, {'body': u'[ActionPack tests in Ruby 1.9.3 are failing](http://travis-ci.org/#!/rails/rails/jobs/955598) due to an encoding conversion issue. I tracked it down and it seems to be related to a workaround that existed only for 1.9.3-p0, that loaded all possible conversions beforehand. This workaround does not get executed on p125, and the related test broke.<br/><br/>This has changed for 3.1, so I just cherry-picked the commits that removed the workaround and fixed the test. <br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5613', 'title': u'Fix build for branch 3-0-stable - Ruby 1.9.3'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5612', 'title': u'fixed warning: unused variables t1 and t2'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5611', 'title': u'Warning fixes: removed unused variable t1 and t2'}, {'body': u'Arel::Relation is not needed, and is deprecated in Arel.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5610', 'title': u'Remove Arel::Relation constant from PredicateBuilder.'}, {'body': u'For most applications, showing a negative zero is probably not the desired outcome.<br/><br/>If this patch is unsuitable, how about an option to pass to number_with_precision?  Something like `:allow_negative_zero => true`?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e07507235a66c1fbc273e74a4fe97b19?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5609', 'title': u'prevent returning a negative zero from number_with_precision'}, {'body': u'This reverts commit ef64c6ba8c06f89995b4328d3468df9914e3c6b6.<br/><br/>Related reading: https://github.com/rails/rails/pull/5582', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b03a41a44c8c86582e777c7044a2b1f8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5604', 'title': u'Revert "Remove \'needless boolean casting\'."'}, {'body': u'/cc @josevalim @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5603', 'title': u'Fix rendered format for render partial'}, {'body': u'When someone accidentally passes a string to sanitize like:<br/><br/>sanitize("<span>foo</span>", :tags => "b")<br/><br/>there is no indication that it\'s the wrong way and span<br/>will not be removed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5602', 'title': u"Don't ignore non Enumerable values passed to sanitize (closes #5585)"}, {'body': u'The same patch idea was applied to both 3-2 and 3-1 branches, #5597 and #5599 respectively, so this just brings it to master.<br/><br/>It also fixes a warning added by my own commit in form tests 7a0cf2f5294e8bcef547642435636b394340a3e4.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5601', 'title': u'Cookie store session hash'}, {'body': u"This fixes failing tests related to form options, and a random issue that happens with rjs tests, all related to Ruby 1.8.7-p358. I had to change a little bit the implementation of the FixtureResolver to avoid calling `hash.select {}.each` - it also is more similar to [the implementation in 3-1 forward](https://github.com/rails/rails/blob/3-1-stable/actionpack/lib/action_view/testing/resolvers.rb#L30-36).<br/><br/>These rjs tests [were completely removed in 3-1 together with `render :update`](https://github.com/rails/rails/commit/eea66892c80d51c1b959171c2e3feac67124aaba). And I didn't find any other test that uses FixtureResolver relying on ordering like this one.<br/><br/>Let me know if something needs improvement. Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5600', 'title': u'Fix build for branch 3-0-stable - failing in ruby 1.8.8-p358'}, {'body': u'See #5597 for more info.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5599', 'title': u'Fix build for branch 3-1-stable - return the same session hash object'}, {'body': u"This is an attempt to fix the build for branch 3-2-stable. It's currently green on travis by chance, due to randomly errors happening on Ruby 1.8.7 p538.<br/><br/>[Branch 3-1 on travis actually showed up the error related to cookie store tests](http://travis-ci.org/#!/rails/rails/jobs/932944).<br/><br/>The idea behind this is to ensure the session hash that will be used to set the cookie value by rack shouldn't change, whereas right now it returns a new hash object every time `set_session` is called. With the random hash change in Ruby 1.8.7, it was causing the failures when testing against the generated `Set-Cookie` header.<br/><br/>Given this is applied and 3-2 tests pass, I'll send to 3-1 as well - and I think the same patch could be applied later to master as it makes sense to not return a different object.<br/><br/>/cc @josevalim @spastorino", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5597', 'title': u'Fix build for branch 3-2-stable - return the same session hash object'}, {'body': u'backport #5594', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5596', 'title': u'apply form_for namespace option to date_select'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5595', 'title': u'sprockets-rails 1.0.0 was released, remove git dependency from Gemfile'}, {'body': u'original issue #5589', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5594', 'title': u'apply form_for namespace option to date_select'}, {'body': u'Like in ActiveModel::Errors we should favor composition over inheritance', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d024c4cf2b180107a48210fa908022cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5593', 'title': u'ActiveModel::Name does not inherit from string'}, {'body': u'closes #5584', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5592', 'title': u'String#titleize works properly with smart quotes'}, {'body': u"Now ```none``` method doesn't work as expected if chained with methods that query the database directly, like pluck or delete_all, as stated by @josevalim here: 8270e4a8ce8337fca98030953922e5992b06a3dd <br/><br/>This PR fixes it adding a false where condition.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5590', 'title': u'Make NullRelation chainable with database methods.'}, {'body': u'I\'ve updated Hash#stringify_keys, Hash#stringify_keys!, Hash#symbolize_keys and Hash#symbolize_keys! to accept an option which applies the method recursively:<br/><br/>    a = { :foo => "bar", :foo1 => { :nested_foo => "bar", :more_foo => "bar" } }<br/>    a.stringify_keys <br/>    #=>  { "foo" => "bar, "foo1" => { :nested_foo => "bar", :more_foo => "bar" } }<br/>    a.stringify_keys(recursive: true)<br/>    #=>  { "foo" => "bar, "foo1" => { "nested_foo" => "bar", "more_foo" => "bar" } }<br/><br/>It also handles hashes nested within arrays well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf9418e41c844d90cbd29e9061f7ba9c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5587', 'title': u'Recursive hash key methods'}, {'body': u'The purpose of this is to allow `ActiveSupport::StringInquirer` to be used alongside ActiveRecord\'s `serialize` method, like so:<br/><br/>```ruby<br/>class Car < ActiveRecord::Base<br/>  serialize :color, ActiveSupport::StringInquirer<br/>end<br/><br/>car = Car.create(color: "red")<br/>car.color.red? # => true<br/>```<br/><br/>Because this straddles the line between ActiveSupport and ActiveRecord, I wasn\'t exactly sure of the proper place for this, so I\'m certainly willing to move it around if need be.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0887991a8846577a6aa85433d6ab3ea2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5586', 'title': u'Enable use of ActiveSupport::StringInquirer as an ActiveRecord::Serialization coder'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/757fb0d5ec7560b6f25f5bd98eadc020?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5583', 'title': u'Adding the ability to render a block inside the Javascript Include Tag'}, {'body': u'"Predicates in Rails rely on standard Ruby semantics for boolean values<br/>and guarantee no singletons whatsoever." - @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d9386fb23e7f1557cf5409a7d610d34?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5582', 'title': u'Remove "needless boolean casting"'}, {'body': u"By default, resources routes are created with :resource/:id. A model<br/>defining to_param can make prettier urls by using something more<br/>readable than an integer ID when generating URLs, but since the route picks it up as :id you<br/>wind up with awkward User.find_by_username(params[:id]) calls.<br/><br/>By overriding the key to be used in @request.params you can be more<br/>obvious in your intent.<br/><br/>This override is basically as simple as it needs to be, just an extra :param<br/>option on the resource(s) definition on the route. There's no work done to force<br/>the url generators to use that field when passed a model, but since to_param<br/>is already overridable I don't think it's necessary.<br/><br/>Patch includes tests for a plain resource as well as a nested resource<br/>(generating user_login for the above example).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2ee1b6676c1e04dd641371723ca77b2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5581', 'title': u'Allow a defining custom member field on resources'}, {'body': u'As mentioned in #5329 and 3756a3fdfe8d339a53bf347487342f93fd9e1edb<br/><br/>This change is needed to improve the performance of `xhr?` in rubinius and jruby.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/14d339fd7a350bc902275b5b077a421c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5580', 'title': u'Improve performance of xhr'}, {'body': u"Until Rails 3.1 we could use a string to copythe same config from another database config:<br/><br/>```yml<br/>development:<br/>  adapter: postgresql<br/>  encoding: utf8<br/>  database: test_development<br/>  host: localhost<br/> <br/>production:<br/>  development<br/>```<br/><br/>This stopped working when @tenderlove used his refactoring sword to slice the `establish_connection` logic on commit 2a9a8ad4dfb2609a2275c1a3540ad2768562a026<br/><br/>I don't know if this is the right approach to fix this issue or even if it's a issue, if you guys accept it I need to apply this patch on master as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e68278c0366608ccf088b7b67cd8d566?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5579', 'title': u'Fixes support for database alias on database.yml '}, {'body': u"Until Rails 3.1 we could use a string to copythe same config from another database config:<br/><br/>`development:<br/>  adapter: postgresql<br/>  encoding: utf8<br/>  database: test_development<br/>  host: localhost<br/> <br/>production:<br/>  development`<br/><br/>This stopped working when @tenderlove used his refactoring sword to slice the `establish_connection` logic on commit 2a9a8ad4dfb2609a2275c1a3540ad2768562a026<br/><br/>I don't know if this is the right approach to fix this issue or even if it's a issue, if you guys accept it I need to apply this patch on master as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e68278c0366608ccf088b7b67cd8d566?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5578', 'title': u'Fixes support for database alias on database.yml '}, {'body': u'Improvement on be623677a3b05696e70518072576588cbeaf83cd', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5577', 'title': u'Refactor retrieve_cache_key to avoid unnecessary recursion.'}, {'body': u'I\'ve updated Hash#stringify_keys, Hash#stringify_keys!, Hash#symbolize_keys and Hash#symbolize_keys! to accept an option which applies the method recursively:<br/><br/>    a = { :foo => "bar", :foo1 => { :nested_foo => "bar", :more_foo => "bar } }<br/>    a.stringify_keys <br/>    #=>  { "foo" => "bar, "foo1" => { :nested_foo => "bar", :more_foo => "bar } }<br/>    a.stringify_keys(recursive: true)<br/>    #=>  { "foo" => "bar, "foo1" => { "nested_foo" => "bar", "more_foo" => "bar } }<br/><br/>It also handles hashes nested within arrays well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf9418e41c844d90cbd29e9061f7ba9c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5576', 'title': u'Recursive hash key methods'}, {'body': u'Just a small bit of code cleanup.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0d8600ea9d02baf8c84503b9410598ac?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5575', 'title': u'Remove useless conditional.'}, {'body': u"Almost everytime I use strip_heredoc I end up manually removing the trailing newline at the end, which seems a bit redundant. This change adds a .chomp to the end to remove the trailing newline, but will preserve and whitespace the user intentionally adds.<br/><br/>I asked @tenderlove about this and his response was [a resounding 'meh'(https://twitter.com/#!/tenderlove/status/180044228418740224).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0d8600ea9d02baf8c84503b9410598ac?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5574', 'title': u'Remove trailing newline from strip_heredoc output.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d9bb5ee597f62dcbfc76f76e6772ff8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5573', 'title': u'Guides section on create.js.erb and the "j" helper over jQuery hooks and ajax callbacks'}, {'body': u'The docs say this returns true on success, which it doesn\'t.<br/><br/>As noted in the debate about this method (see #5329), plenty of core library interrogative methods return values other then true and false, but from my checks they also consistently and correctly document what is returned.<br/><br/>E.g.:<br/>http://ruby-doc.org/core-1.9.3/FileTest.html#method-i-world_writable-3F<br/>http://ruby-doc.org/core-1.9.3/FileTest.html#method-i-world_readable-3F<br/>http://ruby-doc.org/core-1.9.3/File.html#method-c-size-3F<br/>http://ruby-doc.org/core-1.9.3/Encoding.html#method-c-compatible-3F<br/>http://ruby-doc.org/core-1.9.3/Kernel.html#method-i-autoload-3F<br/><br/>Incidentally, in these other methods the returned values also all have additional informational content beyond "I am a truthy stand-in for true". But that is a separate discussion.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4493ae064e6e2841f376fd1dc12b7ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5572', 'title': u'Update ActionDispatch::Request#xml_http_request? documentation to match its behavior regarding return values'}, {'body': u'...differs from that.<br/><br/>The system timezone DST jump hour should not be blacked out by Time.zone.parse if current Time.zone does not do the jump at that time.<br/><br/>Fixes #5559.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/82476266af9d460415d8f1fc16bb54ed?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5571', 'title': u'[#5559] Do not black out the system timezone DST jump hour if Time.zone ...'}, {'body': u'It\'s a little bit better to split on 2 parts.<br/><br/>``` ruby<br/>require \'benchmark\'<br/><br/>n = 50000<br/>Benchmark.bm(7) do |x|<br/>  x.report("rails:") { n.times {"http://rubyonrails.org/documentation".split(%r{://}).last } }<br/>  x.report("my:") { n.times { "http://rubyonrails.org/documentation".split(%r{://}, 2).last } }<br/>end<br/>```<br/><br/>on my laptop:<br/><br/>```<br/>              user     system      total        real<br/>rails:    0.170000   0.000000   0.170000 (  0.171520)<br/>my:       0.090000   0.000000   0.090000 (  0.096497)<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5570', 'title': u'ActionController caching small String#split optimization'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5569', 'title': u'removed warning: shadowing outer local variable - exception'}, {'body': u'thanks to @tpope for this alternative, more readable implementation<br/><br/>in regards to issue #1817 and previous closed pull request #5329<br/><br/>/cc @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4cede21ea96795d2de831e9981cc81cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5568', 'title': u'request.xhr? now returns boolean as expected, rather than nil or Fixnum'}, {'body': u"This has been discussed ad nauseum on #5329. It's not clear if this would be an acceptable compromise, but there's one way to find out.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/67259dd09c53aef920fe2aca18c7a8e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5567', 'title': u'Return an actual boolean from xml_http_request?'}, {'body': u'Original issue #5551', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5566', 'title': u'fix HashWithIndifferentAccess.[] method'}, {'body': u'Cherry-picked 1 commit from 3-2 - with conflicts - and added some specific fixes for 3-0. Please check #5557 and #5558 for detailed info.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5565', 'title': u'Fix build for branch 3-0-stable'}, {'body': u'Cherry-picked commits from 3-2. Please check #5557 and #5558 for detailed info.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5564', 'title': u'Fix build for branch 3-1-stable'}, {'body': u'Commit 56089ca986c767763f29159c8de0aa1ebabfd4d2 introduced a backward\nincompatible change by changing the method signature of the FormBuilder. This\nbrings back the same method signature warning in case someone gives a block\nto the builder.\n\nMore info:\nhttps://github.com/rails/rails/commit/56089ca986c767763f29159c8de0aa1ebabfd4d2#commitcomment-1116166\n\n/cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5561', 'title': u'Properly deprecate the block argument in AV FormBuilder'}, {'body': u'The system timezone DST jump hour should not be blacked out by Time.zone.parse if current Time.zone does not do the jump at that time.<br/><br/>Tested on 1.8.7-p358, ree-1.8.7-2012.01 and ruby-1.9.3-p125.<br/><br/>Fixes #5559.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/82476266af9d460415d8f1fc16bb54ed?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5560', 'title': u'5559 fix dst jump bug'}, {'body': u'OMG, I forgot to check with Identity Map. This should fix IM tests on 3-2-stable branch.<br/><br/>Please check #5557 for more info.<br/><br/>/cc @tenderlove @nzkoz @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5558', 'title': u'Fix build for branch 3-2-stable - Part 2'}, {'body': u"These changes should fix the build for 3-2-stable branch.<br/><br/>The failures are happening due to the change from 1.8.7-p352 to 1.8.7-p358. It includes a change on Hash implementation, making fixtures to be loaded randomly, thus making tests without explicit ordering fail.<br/><br/>After talking to @tenderlove, we decided to skip persistence tests related to UPDATE + ORDER BY for PostgreSQL (there are three). PG does not support updates with order by, and a test is failing randomly depending on the fixture loading order now without a proper way to fix (a possibility would be to force all fixtures to use omap, but the test doesn't make that much sense to run under pg anyway - more ideas are welcome).<br/><br/>I've run both `test_postgresql` and `isolated_test_postgresql` rake tasks several times locally to make sure no other test was failing randomly, however I can't ensure some test won't fail in a near future that my runs didn't catch.<br/><br/>I have also fixes for 3-1 and 3-0 branches, just want to discuss this PR and if applied, make sure it runs green on travis before sending the others.<br/><br/>Let me know if something should be improved.<br/><br/>/cc @nzkoz @spastorino", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5557', 'title': u'Fix build for branch 3-2-stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5556', 'title': u'use the new scope syntax on the tests to avoid DEPRECATION WARNINGS.'}, {'body': u"Often we need to have date selectors with different styles. (Most often different width.) Unfortunately date_select helper don't provide possibility to set different CSS classes. This commit extend date_select helper with option :css_by_type that set special classes for generated 'select' tags. Class names equal data type, for example:<br/>f.date_select :birthday, :css_by_type => true<br/>generate:<br/>```<br/><select class='month ...>...</select><br/><select class='day' ...>...</select><br/><select class='year' ...>...</select><br/>```<br/>Hope it will by helpfully.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a3ab353191f97f7a782e5d64fc3bda3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5553', 'title': u'Extend date_select helper functionality.'}, {'body': u"https://groups.google.com/forum/#!msg/rubyonrails-core/ucD1rQ2KbpU/mys8W5xHmsUJ<br/><br/><blockquote><br/>if i run my application for long enough time i start getting errors like this:<br/><br /><br /><br/>RuntimeError: symbol table overflow (symbol __bind_1328993330_18...)<br/><br /><br /><br/>apparently it's because symbols are never GCed and rails generates one every time this proc extension is used because method names are implicitly converted to symbols<br/></blockquote>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5552', 'title': u'deprecate Proc#bind that can cause symbol memory leak'}, {'body': u'Right now when a user migrates a database and they need to specify an environment they must do it by specifying `RAILS_ENV=environment`, this also works if you are running console i.e. `rails console RAILS_ENV=production` works. However if you try to use the same syntax with `rails server` you get an error. The first commit in this pull request fixes that problem. <br/><br/>`rails server` also takes a `-e` option for setting environment, while `rails console` does not. The second commit in this pull request adds a `-e` option to `rails console` so anyone will be able to set environment across server and console the same way. <br/><br/>Added tests covering setting the environment in server and console by both `-e` and `RAILS_ENV`. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5550', 'title': u'Fix environment support for rails server, and match interface of rails console'}, {'body': u'A bug got introduced in commit rails/rails@9299bfd by me. See comments from @martinrehfeld for further reference.<br/><br/>Deeply sorry for the inconvenience!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0edbdeb12d2eefc2faec21b65f8e673e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5546', 'title': u'Fixed missing space bug introduces in rails/rails@9299bfd'}, {'body': u'This is just a port of #5522 to 3-2-stable with the minor fix from #5540 already applied.<br/><br/>Cheers!<br/><br/>/cc @josevalim @travisjeffery', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5542', 'title': u"Port of #5522 'Fix adding/removing field's index when generating migration'"}, {'body': u'There you go @spastorino<br/><br/>https://github.com/rails/rails/pull/5532/files#r584804', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5540', 'title': u'Avoid another blank line in generated migration and remove assertion as per @spastorino request'}, {'body': u'If a script needs my root database password, it should not display it. I\'ve used the poor-man\'s solution of sending "stty -echo" to avoid dependencies on more full-featured libs. I can\'t imagine a situation where it wouldn\'t work.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c8f50904773abc5a7d39741f690662e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5538', 'title': u"Don't echo the user's root database password."}, {'body': u"This PR is backporting #4399 to 3-2-stable.<br/>I think this fix isn't merged yet.<br/><br/>Please see https://github.com/rails/rails/pull/4399.<br/><br/>/cc @tenderlove", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5537', 'title': u'[3-2-stable] migrate(:down) method with table_name_prefix'}, {'body': u'"".to_date returns nil but what if you do "fleiba".to_date? It crashes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/12bafe443f3f040973e21fa6ad52a8b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5536', 'title': u'Sanity check for `String#to_date`'}, {'body': u"Started digging into #5527 and was at least able to confirm the case was happening in the given situation, find what was causing it, and write some tests to further confirm it and the fix.<br/><br/>Now...I don't really pretend to know if actually fixing this is a good idea or not. The example raises `ActiveRecord::Rollback` in an `after_save` hook. I can't find any examples that this is actually a good idea in the first place.<br/><br/>I'm also not keen on where I added the tests or the actual solution....so all around an iffy PR. But all the tests pass...so that's something.<br/><br/>It's my first dive into AR::Transactions, so if this is a bad idea, close the PR and no love lost. If it just needs some cleanup, let me know where to start.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/185fff6d3aa5c70e337fa84b302050b1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5535', 'title': u'Allow manual rollbacks in after_save to reset object correctly'}, {'body': u'Backport of #5532<br/><br/>https://github.com/rails/rails/pull/5532', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5533', 'title': u'[3-2-stable] Remove blank line from generated migration'}, {'body': u'When creating a migration with attributes the change method is being generated with an empty line.<br/><br/>```<br/>script/rails g migration add_uid_to_users uid:integer<br/>```<br/><br/>```ruby<br/>class AddUidToUsers < ActiveRecord::Migration<br/>  def change<br/>    add_column :users, :uid, :integer<br/><br/>  end<br/>end<br/>```<br/><br/>Cheers!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5532', 'title': u'Remove blank line from generated migration'}, {'body': u'Squashed the branch from @ivanvanderbyl as requested in rails/rails#2649 and rebased on master.<br/><br/>Branch is largely as per the previous pull request except for fixing the broken test that the commit from @parndt introduced on that branch (`assert no_file` -> `assert_no_file`).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d01b85a507aadb79d402e5efd1aa651f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5530', 'title': u'Added a generator option to skip the public/index.html file'}, {'body': u"If we execute assets:precompile, params method is undefined.<br/>But ruby can't judge that *params* is method (or localvariable). Thus we should rescue NameError.<br/><br/>Please see https://github.com/rails/rails/issues/5411<br/><br/>BTW: NoMethodError's superclass is NameError.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5525', 'title': u'Fix GH #5411. When precompiling, params method is undefined.'}, {'body': u'When I executed `ruby -Ilib:test test/ordered_options_test.rb --name=test_inheritable_options_inheritable_copy`, I had NameError.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5524', 'title': u'Add missing require'}, {'body': u"When trying to generate a migration that removes a field with an index,<br/>the up migration will remove both the field and the index, and the down<br/>will re-add both the field and the index.<br/><br/>Also improved the indentation formatting of the generated migration.<br/><br/>I believe the existing functionality is not tested, so I'll add tests too.<br/><br/>Thanks,<br/><br/>Travis", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3ee6c3893e75232ed43ed4e8e9a7cf39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5522', 'title': u"Fix adding/removing field's index when generating migration"}, {'body': u"The file activerecord/lib/active_record/railties/databases.rake implements the various database rake tasks (such as db:create, db:structure:dump, etc.). However, it currently recognizes particular ActiveRecord connection adapters by name and hard-codes an implementation for each adapter. This means, if you write (or update) a third-party adapter, you must edit this central file in order to get the database rake tasks to work for your adapter.<br/><br/>This patch includes a mechanism to let ActiveRecord adapters provide their own implementation for the standard rake tasks. An adapter may optionally provide a Tasks object that provides implementations of any number of operations. This object must be distinct from the connection adapter itself because some tasks (such as database creation) cannot be run within the context of any one connection. The object, and any and all operations it provides, are all completely optional, so existing adapters will be fully backwards compatible.<br/><br/>This patch also demonstrates how the mechanism will work, by porting the db:charset task. Previously, databases.rake implemented this task using a case statement on the adapter name. Now, the implementations for the various supported adapters (mysql[2], Postgresql, and sqlite3) have been moved into the adapters themselves via the task mechanism, thus removing the adapter-specific code from databases.rake.<br/><br/>I haven't yet ported the rest of databases.rake because I wanted to get a sign-off on this mechanism before doing that work. If this patch is accepted, I'll go ahead and port the rest of databases.rake. I believe we can drastically reduce the size of databases.rake, and eliminate all the adapter-specific code therein. More importantly, this will allow third-party adapters to provide their own implementations of these tasks without touching the central repository.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e06aa8f63d2a1753a2b352bc1cabbde2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5520', 'title': u'Let third-party adapters implement their own database rake tasks'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5518', 'title': u'Remove code duplication'}, {'body': u"I refactored the `SpawnMethods#apply_finder_options` a bit. Two things I have done:<br/><br/>* The options `:conditions`, `:include`, `:extend` cannot map directly on a method in `Relation::QueryMethods`. I made the subsitution explicit instead of filtering out the keys from the loop and performing the methods one by one after. <br/>* Extracted the filtering of the invalid and empty options for readability.<br/><br/>All ActiveRecord and Rails tests pass.<br/><br/>##### Deprecate?<br/>I'd like to deprecate the three options: `:conditions`, `:include`, `:extend`. This would mean a lot of (fairly simple) changes in code, test and documentation. Let me know what you think of this - I could add it to the PR.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9ffbc194f775c7bdc155ad6e833df81e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5517', 'title': u'Refactored method SpawnMethods#apply_finder_options'}, {'body': u'cc/ @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5515', 'title': u'Remove exclude option from ActionDispatch::SSL and fix secure cookies'}, {'body': u'- Comment contains a syntax error that will fail if user attempts to use it in their own code.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a847218db9ff6947766b57797f65e45a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5514', 'title': u'Adding comma to commented code.'}, {'body': u'Also, clean up args and methods in action_controller/rendering,<br/>getting rid of useless arguments to super.<br/><br/>Small change, just a cleanup.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/349d851184514340f1757f3a71b6807a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5512', 'title': u'rm unnecessary &blk args in abstract/rendering'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5509', 'title': u'changed all instances of all.map to pluck'}, {'body': u'this improves encapsulation, simplifying occurrences like the following:<br/><br/>    Rails.logger.tagged("DEBUG") { Rails.logger.debug(msg) }<br/><br/>... by removing the need to rely on (i.e. repeat) outer variables:<br/><br/>    Rails.logger.tagged("DEBUG") { |logger| logger.debug(msg) }', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91fa2dee199f8b076b0e9b6d427f0931?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5508', 'title': u'Provide access to logger instance within TaggedLogging blocks'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5507', 'title': u'changed all.map to pluck'}, {'body': u'Sorry I missed this in last PR :-(<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5506', 'title': u'Build fix 1.8.7 3 1 stable'}, {'body': u'http://travis-ci.org/#!/rails/rails/jobs/897283/L112', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5505', 'title': u'Build fix 1.8.7 3 2 stable'}, {'body': u'As done in 3-2-stable here 742b6159d5552c93fd61aeee33e06e10c191af9a', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5504', 'title': u'Build fix 1 8 7'}, {'body': u'The original [commit](https://github.com/rails/rails/commit/0cf79f07b0be7bb9912dfe2a9f2f4c45d98ac41e) made 5 years ago set the day to the 1st when month is excluded, to prevent selecting dates such as February 30th.<br/><br/>However, on leap days if month and day are excluded, you are given 2/29. Changing the year to a non-leap year would not trigger the day reset as mentioned in issue #5222.<br/><br/>It makes sense to consistently set the day to the 1st when its excluded. I could change this to only reset on leap years, but this solution seemed better IMO.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed68d9fac0a927b5ea3d4351f56b5811?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5503', 'title': u'Fixes issue #5222: DateTimeSelector builds invalid dates on leap days'}, {'body': u'This is no longer used, has no test coverage, and actually raises an error when trying to load `ActiveSupport::Dependencies`. I removed the related code and added the `Dependencies` module to the autoload list.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22a9bb6a9ec077e4d666d98052790c05?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5500', 'title': u'Removed ActiveSupport#load_all!'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5499', 'title': u'removed unused variables'}, {'body': u'Will fix the build!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5498', 'title': u'Build fix app generator test 3 2 stable'}, {'body': u'Support writing html inside time_tag directly in the view, as with content_tag<br/><br/>```erb<br/><%= time_tag Time.now do %><br/>  Some html...<br/><% end %><br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fbdd0d26ec0146cbe4e22318fc5341b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5496', 'title': u'time_tag support for blocks'}, {'body': u'Support writing html inside time_tag directly in the view, as with content_tag<br/><br/>```erb<br/><br/><%= time_tag Time.now do %><br/>  Some html...<br/><% end %><br/><br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fbdd0d26ec0146cbe4e22318fc5341b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5495', 'title': u'time_tag support for blocks'}, {'body': u'Adds functionality that allows scopes such as: `Author.joins(:posts).merge(Post.joins(:comments)).group("authors.id")`, which would presently raise an error because there is no association `:comments` on `Author`.<br/><br/>---<br/><br/>ActiveRecord::Relation merges presently don\'t maintain the context of joined associations. That is, merging a Relation/scope that references joined associations into another with a different base ActiveRecord model will fail because the join associations are resolved from the base model at the time of query generation.<br/><br/>For example, consider the following ActiveRecord models:<br/><br/>```ruby<br/>class Author<br/>  has_many :posts<br/>end<br/><br/>class Post<br/>  belongs_to :author<br/>  has_many :comments<br/>end<br/><br/>class Comment<br/>  belongs_to :post<br/>end<br/>```<br/><br/>One might want to query all Comments on Posts by a specific Author. One way to write such a query could be:<br/><br/>```ruby<br/>Comment.joins(:post).merge(Post.joins(:author).merge(Author.where(:name => "Joe Blogs"))).all<br/>```<br/><br/>Unfortunately, as the association joins are resolved at the time of query generation from the model of the new base `Relation`(as they are merged in as the original values passed to `joins` on the merged `Relation`), this query will fail as there is no association `:author` on `Comment`.<br/><br/>---<br/><br/>My proposed solution is to ensure that the source ActiveRecord model for association joins is persisted through Relation merges.<br/><br/>There is already logic for applying explicit association joins within `JoinDependency`: `JoinDependency#graft`. `Relation::SpawnMethods#build_joins` already treats any `JoinDependency::JoinAssociation` object within the `joins_values` in this way, so my proposed solution is to, whenever a `Relation` is merged into another, instead convert any `Relation#joins` arguments which would be treated as association joins into `JoinAssociation` objects (which encapsulate the parent model and source association) *at the time of merge*, thus maintaining the original intended context of the association to join. <br/><br/>At query time, `JoinDependency#graft` then can resolve the stashed associations joins from the new base ActiveRecord model *and* its [chain of] joined associations.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a90cb3e9ce416c6354603f00c9af91e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5494', 'title': u'ActiveRecord::Relation - maintain context of joined associations on merges'}, {'body': u'Backport to 3-2-stable.<br/><br/>/cc @tenderlove<br/><br/>Please see<br/>https://github.com/rails/rails/pull/5486 and https://github.com/rails/rails/issues/5435<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5493', 'title': u'[3-2-stable] Fix GH #5435. db:structure:dump should be re-enable.'}, {'body': u'failed here c513ae36e0b4054d4671e2e5a76a8a4d7e436b40', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5492', 'title': u'Build fix for app_generator_test.rb'}, {'body': u'the pluralize can now return a tagged count. This allow us to easily manipulate the count number with jQuery and CSS', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/950f96a8711d959f744ad043631d36a2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5490', 'title': u'add taging ability to pluralize'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0e34c56054c414263e933a1b8b3d0d55?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5489', 'title': u'Fix typo in ActiveRecord::Relation#blank? test'}, {'body': u'As rack-ssl is an one file gem I think that is fine move this behavior inside the Rails itself.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5488', 'title': u'Remove Rack::SSL in favour of ActionDispatch::SSL'}, {'body': u'or remove the argument.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5487', 'title': u'Should use an argument in http_digest_authentication_test.rb'}, {'body': u'db:schema:dump is re-enable, but db:structure:dump is not re-enable.<br/><br/>Please see the original issue https://github.com/rails/rails/issues/5435<br/>I think that this PR should be merged into master and 3-2-stable.<br/><br/>Closes #5435.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5486', 'title': u'Fix GH #5435. db:structure:dump should be re-enable.'}, {'body': u"aid ease of understanding and readability for tests<br/><br/>I'm new to rails internals and going through the tests to get a good idea of how things work. Sometimes important modules that bring in lots of functionality are referenced by their absolute name and sometimes they aren't. I think they should be referenced using their full name.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/349d851184514340f1757f3a71b6807a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5484', 'title': u'use consistent explicit module inclusion'}, {'body': u"can't run tests if git not compiled with libcurl<br/><br/>I'm wondering if there's a good reason to use https, but git blame didn't point to a commit with an explanation of why this is so. Sorry if there's already been discussion about this, I tried to find it though.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/349d851184514340f1757f3a71b6807a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5483', 'title': u'switch rack-test in Gemfile to using git protocol'}, {'body': u'get rid of annoying warning when running actionpack tests', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/349d851184514340f1757f3a71b6807a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5481', 'title': u'get rid of warning when running tests'}, {'body': u'This fixes situation where rendering template to string sets `rendered_format` to the format rendered there. This is ok to have consistent formats rendered in partials, but it breaks on next renders if format is explicitly set or on last render where default format does not necessarily need to be the format of first rendered template.<br/><br/>cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5480', 'title': u'Fix for #5440'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5478', 'title': u"use 'pluck', be edge."}, {'body': u'This is the port of pull request 5476 to the 3-0-stable branch.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/34a16f98f4ba99dcb241c8ddb3a5446c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5477', 'title': u'Nested attributes with callbacks bug 3 0'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5475', 'title': u'Fix ActiveRecord::Relation#blank? tests'}, {'body': u'Rails currently supports this:<br/>Person.pluck(:id) # SELECT people.id FROM people<br/>Person.uniq.pluck(:role) # SELECT DISTINCT role FROM people<br/>Person.where(:confirmed => true).limit(5).pluck(:id)<br/><br/>I added one extra feature:<br/>Person.pluck(:id) # SELECT people.id FROM people<br/>Person.pluck([:id, :name]) # SELECT people.id, people.name FROM people<br/>Person.uniq.pluck(:role) # SELECT DISTINCT role FROM people<br/>Person.where(:confirmed => true).limit(5).pluck(:id)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f2b113a55e42f840085008edd2938d57?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5472', 'title': u'ActiveRecord::Calculations#pluck accepts multiple columns'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5470', 'title': u'fixed - warning: instance variable @controller not initialized'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d9bb5ee597f62dcbfc76f76e6772ff8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5469', 'title': u'tests for Relation .present? .blank?'}, {'body': u'Added parentheses to remove warning.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5468', 'title': u'fixed - warning: ambiguous first argument; put parentheses or even spaces'}, {'body': u"According to this article:<br/>http://merbist.com/2012/02/23/quick-dive-into-ruby-orm-object-initialization/<br/><br/>AR initialization callbacks are slow even if we don't use them.<br/>I didn't find a way to improve performance in `AS::Callbacks` level.<br/><br/>So, Here is what we can do to avoid going into `run_callbacks` if we don't use them.<br/><br/>Benchmark file: https://gist.github.com/2043384<br/>Super funny benchmark tool: [diffbench](https://github.com/bogdan/diffbench)<br/><br/>``` <br/>Running benchmark with current working tree<br/>Checkout HEAD^<br/>Running benchmark with HEAD^<br/>Checkout to previous HEAD again<br/><br/>----------simple initialize----------<br/>After patch:   0.160000   0.000000   0.160000 (  0.159779)<br/>Before patch:   0.210000   0.010000   0.220000 (  0.216816)<br/><br/>----------initialize with attributes----------<br/>After patch:   0.610000   0.000000   0.610000 (  0.623824)<br/>Before patch:   0.660000   0.000000   0.660000 (  0.663776)<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5467', 'title': u'ActiveRecord::Core#initialize: improve performance'}, {'body': u'* Refactor log subscriber, use select! to avoid a new object<br/>* Remove deprecation messages related to AS::Deprecation behavior.<br/>  This was added about 2 years ago for Rails 3:<br/>  https://github.com/rails/rails/commit/d4c7d3fd94e5a885a6366eaeb3b908bb58ffd4db<br/>* Remove some not used requires<br/>* Refactor delegate to avoid string conversions and if statements inside each block', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5466', 'title': u'Remove deprecation from AS::Deprecation behavior, some minor cleanups'}, {'body': u"Removed variable 'checker' which was not used.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5465', 'title': u'fixed - warning: assigned but unused variable - checker'}, {'body': u'It\'s a good practice to write "if @post.present?" instead of "if @posts", because it will be more readable.<br/>however, if we are using lists, and say "if @posts.blank?" it will trigger a SELECT COUNT,<br/>not only that, if you use JOINS, it will trigger "SELECT COUNT(DISTINCT \'posts\'.id)"<br/>that meaningless query will only affect the performance of the overall request.<br/><br/>Programmers know if they invoke .count or .exists? they will trigger these smaller queries "on purpose"<br/>but methods blank? and present? invoke .empty? internally, which gets overwritten by relations.<br/><br/>I have seen this common miss-usage of a good practice in 02 legacy apps that I\'ve worked already,<br/>and I believe, it would be a good improvement in Rails if those methods (that are commonly used for checks in the view layer to display a custom message for empty), would trigger the SQL query directly, thus not invoking a COUNT DISTINCT just for checking.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d9bb5ee597f62dcbfc76f76e6772ff8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5461', 'title': u'relation .present? and .blank? should not query SELECT COUNT(DISTINCT id)'}, {'body': u'with_options can take a block without params and still nest options<br/>indefinitely.<br/><br/>What do you guys think?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/349d851184514340f1757f3a71b6807a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5460', 'title': u'allow with_options to take a block without params'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5458', 'title': u'Add activeresource commented in default Gemfile'}, {'body': u'doh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c9f60c0cb1d941fa8e93bbfcb907c27e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5457', 'title': u'Fix typo in redirect test'}, {'body': u"This strips null bytes off of the `Location` header in addition to `\\r\\n` which are already being stripped.<br/><br/>This is in response to a recent _nasty_ security [vulnerability in nginx](http://mailman.nginx.org/pipermail/nginx-announce/2012/000076.html). I figure it's probably easier for people to get this patch in their Rails applications than it is for them to get nginx upgraded in their infrastructure - which may or may not even be managed by them.<br/><br/>I'd like to get this into all supported Rails versions, not sure if this patch will apply cleanly to 3.1 or 3.0 - let me know if not and I'll send some others.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c9f60c0cb1d941fa8e93bbfcb907c27e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5456', 'title': u'Strip null bytes from Location header'}, {'body': u'This commit fixes a small bug on 3-1-stable when using force_ssl in a controller. <br/><br/>When hitting a url like: <br/><br/>http://host.com/people/1<br/><br/>it would redirect to the secure url, but without the param "1". <br/><br/>https://host.com/people/<br/><br/>This commit fixes it by redirecting to the https equivalent using the params: <br/><br/>https://host.com/people?id=1', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e49eab7677b4696db754b356953b9eac?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5455', 'title': u'params on force_ssl '}, {'body': u'proc without parameters can now be given to<br/>AbstractController::layout<br/><br/>See pull-request 5444 for full discussion.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/349d851184514340f1757f3a71b6807a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5454', 'title': u'allow zero-arity proc for AbstrController::layout'}, {'body': u'When ActiveRecord has already eager loaded an association a call to that association returns the wrong number, count still returns correctly because it executes a fresh query. This may be undesirable. This patch respects the `:uniq` flag on the association and filters the already loaded array accordingly before calling `.size`.<br/><br/>Tested against SQLite, Mysql and Postgres (even though this modified no sql).<br/><br/>Fixes #4982 (symptoms shown below)<br/><br/><pre><br/>User.where(id:5).first.followers.size<br/>  User Load (0.8ms)  SELECT `users`.* FROM `users` WHERE `users`.`id` = 5 LIMIT 1<br/>  User Load (0.3ms)  SELECT DISTINCT `users`.* FROM `users` INNER JOIN `followers_users` ON `users`.`id` = `followers_users`.`user_id` WHERE `followers_users`.`follower_id` = 5<br/></pre><br/><br/><pre><br/>User.where(id:5).includes(:followers).first.followers.size<br/>  User Load (0.6ms)  SELECT `users`.* FROM `users` WHERE `users`.`id` = 5 LIMIT 1<br/>  SQL (0.8ms)  SELECT `users`.*, `t0`.`follower_id` AS ar_association_key_name FROM `users` INNER JOIN `followers_users` `t0` ON `users`.`id` = `t0`.`user_id` WHERE `t0`.`follower_id` IN (5)<br/> => 18<br/></pre><br/><br/>See https://gist.github.com/2044768 for files needed to replicate', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d79fc498d7a5b2ce12180890247476f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5453', 'title': u'When Active Record has already loaded a unique association `.size` returns the wrong number.'}, {'body': u'When ActiveRecord unit tests are tested with PostgreSQL v9.1.2(hstore installed), <br/>Always got a failure as follows. <br/><br/>```ruby<br/>$ ARCONN=postgresql ruby -Itest test/cases/schema_dumper_test.rb -n \'test_schema_dump_includes_hstores_shorthand_definition\'<br/>Using postgresql<br/>Run options: -n test_schema_dump_includes_hstores_shorthand_definition --seed 31050<br/><br/># Running tests:<br/><br/>F<br/><br/>Finished tests in 1.178730s, 0.8484 tests/s, 1.6967 assertions/s.<br/><br/>  1) Failure:<br/>test_schema_dump_includes_hstores_shorthand_definition(SchemaDumperTest) [test/cases/schema_dumper_test.rb:242]:<br/>Expected /t.hstore "hash_store", default => ""/ to match "# ... snip ...<br/>```<br/>The dump file output is slightly different from current test code.<br/>You can see the whole (very long) output via https://gist.github.com/1b0444910e7d6ad5b404<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5451', 'title': u'Address the dump file format for hstore'}, {'body': u"Having commas in directory names passed through to ActiveSupport::FileUpdateChecker causes an infinite hang whilst Dir[@glob] tries and fails to list files in these directories. This wasn't an issue before ~> 3.2 but on 3.2 upwards it prevents Rails from booting in development mode and prevents test suites running (rspec, cucumber at least).<br/><br/>Commas are perfectly valid parts of directory names (on OS X at least) and escaping them when compiling the glob solves this issue.<br/><br/>This issue can be triggered by adding such directories to the autoload component of rails config see: https://github.com/JonRowe/rails-broken-dir-example for an example broken application.<br/><br/>This is a duplicate of #5445 but, as requested, against master and without fork.<br/><br/>Be warned on OSX/MRI Ruby this causes an infinite hang on test failure... <br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d79fc498d7a5b2ce12180890247476f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5448', 'title': u'Commas in directory names causes hang in ActiveSupport::FileUpdateChecker'}, {'body': u"Having commas in directory names passed through to ActiveSupport::FileUpdateChecker causes an infinite hang whilst Dir[@glob] tries and fails to list files in these directories. This wasn't an issue before ~> 3.2 but on 3.2 upwards it prevents Rails from booting in development mode and prevents test suites running (rspec, cucumber at least).<br/><br/>Commas are perfectly valid parts of directory names (on OS X at least) and escaping them when compiling the glob solves this issue.<br/><br/>This issue can be triggered by adding such directories to the autoload component of rails config see: https://github.com/JonRowe/rails-broken-dir-example for an example broken application.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d79fc498d7a5b2ce12180890247476f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5445', 'title': u'Commas in directory names causes hang in ActiveSupport::FileUpdateChecker'}, {'body': u'zero-arity procs are evaluated in the context of the instance of the<br/>controller, much like how filters work when passed blocks.<br/><br/>Also, Gemfile change to rack-test: https:// to git:// so people with<br/>git not compiled with curl can bundle install properly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/349d851184514340f1757f3a71b6807a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5444', 'title': u'allow zero-arity proc for Controller::layout'}, {'body': u'Also mentioned in pull request #2076 (for the 3.1 branch), this one is for the 3.2 branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c681b5db4f87c37e814dbf5cfdbe18e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5443', 'title': u'Fixed issue #1859: ArgumentError for to_xs after instruct! is called'}, {'body': u'This fixes the test asserting that running `rake test` after creating\na scaffold passes successfully. The test was silently failing before,\ndue to the assertion that was matching against `unit` tests results\ninstead of the `functional` ones.\n\nIt also adds the same test to ensure running `rake test` works fine\nafter creating a scaffold when app is configured as http.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5439', 'title': u'Fix scaffold controller template and ensure rake test for scaffold works'}, {'body': u'The original issue for this PR is #5430 .<br/>I think a payload name for schema_search_path should be SCHEMA.<br/><br/>The original issue found on 3-2-stable.<br/><br/>*Updated:* The original issue also was solved by this PR.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5437', 'title': u'Fix GH #5430. A Payload name for schema_search_path should be SCHEMA.'}, {'body': u'from master 919db1bbbb9c2565c2dc1816812b7031f74b4e8e', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5436', 'title': u'Fixture path fix'}, {'body': u'Specifically, making it where, say, `"foo".to_date` doesn\'t cause an exception.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eb6209ab10193b006632c32e6606531b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5432', 'title': u'Fixing edge case and adding documentation to String to Date/Time/DateTime conversion methods'}, {'body': u"According to this article:<br/>http://merbist.com/2012/02/23/quick-dive-into-ruby-orm-object-initialization/<br/><br/>Current implementation of mass assignment security takes a lot of processor time because spawning to many redundant objects in `MassAssignmentSecuritySanitizer#debug_protected_attribute_removal`<br/><br/>We can get rid of this method.<br/><br/>Benchmark: https://gist.github.com/2036114<br/><br/>```<br/>----------when something sanitized----------<br/>New:   0.010000   0.000000   0.010000 (  0.006924)<br/>Old:   0.010000   0.000000   0.010000 (  0.009284)<br/>----------when nothing sanitized----------<br/>New:   0.010000   0.000000   0.010000 (  0.003906)<br/>Old:   0.000000   0.000000   0.000000 (  0.005500) <br/>```<br/><br/>A little side effect of this patch attributes are processed one by one. Instead of:<br/><br/>``` ruby<br/>      def process_removed_attributes(attrs)<br/>```<br/><br/>We get:<br/><br/>``` ruby<br/>      def process_removed_attribute(attr)<br/>```<br/><br/>The only one place where this could cause side effect is when someone wants to create it's own sanitizer(other than built-in Strict and Logger).<br/><br/>We can make a backward compatibility for this but decided that it doesn't make that much sense.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5431', 'title': u'AM::MassAssingmentSecurity: improve performance'}, {'body': u'See #5411', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/de54fa84f07f7200da5a1eb090ec717a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5429', 'title': u'Fixes #5411 - Params is not available during pre-compilation.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/de54fa84f07f7200da5a1eb090ec717a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5427', 'title': u'Fixes #5411 - Params is not available during pre-compilation.'}, {'body': u'from master 919db1bbbb9c2565c2dc1816812b7031f74b4e8e', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5426', 'title': u'Fixture path fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5425', 'title': u'Remove key_value helper now that master is 1.9 only and we always use the 1.9 hash syntax in the generators.'}, {'body': u'sorry @tenderlove, you\'re going to hate me for this one, but at this point I\'ve done some due dillegence and am reasonably confident I\'ve found an actual issue -- which does affect my app -- having to do with some deep stuff regarding how ruby Monitor ConditionVariable\'s work. It requires some restructuring and slight uglification of the ConnectionPool.checkout method. <br/><br/>This is a tricky one. I have a test, but due to the race condition nature of the bug, it only sometimes fails, so I didn\'t include it it in the pull commit not sure if that was appropriate, but it\'s included below. <br/><br/>The problem occurs when you have a lot of threads (more than connection pool size) all wanting to checkout connections for very very short periods of time.  <br/><br/>Conceptually, this ought to be accommodated no problem. Each thread only needs the connection for a very short period of time, orders of magnitude less than the timeout -- even if there\'s more of them then there are connections, they should each be able to take a turn, waiting when neccesary and all finishing long before timeout no problem. <br/><br/>In fact, _sometimes_ (race condition, so it appears in some runs and not others), some of these threads will end up raising a ConnectionTimeoutError  --- **long before** the timeout value is reached. They appear to be giving up and not getting a connection in miliseconds, long before the 5 second time out. <br/><br/>Why? As far as I can tell, here\'s the deal.  <br/><br/>* threadA wants a connection, but the pool is full, so it blocks on [`@queue.wait(@timeout)`](https://github.com/rails/rails/blob/3-2-stable/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L246)<br/><br/>* shortly thereafter, threadB checks in a connection, and does a [`@queue.signal`](https://github.com/rails/rails/blob/3-2-stable/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L270)<br/><br/>* this does wake up threadA, however threadA does not immediately get access to the mutex to be in it\'s \'synchronization\' block. Some *other* thread slips into \'synchronization\' first, checks out the newly avail conenction, and then at a later point threadA gets access to the mutex \'synchronization\' block<br/>  * It [finds there are no connections available](https://github.com/rails/rails/blob/3-2-stable/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L248), assumes this means that it only woke up from `@queue.wait` because of a timeout, and throws the ConnectionTimeoutError . But the 5 seconds hadn\'t elapsed, hardly any time at all elapsed, it got woken up because there was a checkin, another thread just stole it first. <br/><br/>At first this seemed to be like it must be a bug in ruby Monitor/ConditionVariable itself, or else ConnectionPool somehow not synchronizing in enough places, or something. <br/><br/>However, reading up on how Monitors and ConditionVariables work, this seems like *one* accepted model for the way they work -- and appears to be how ruby works.  The [wikipedia article on Monitors](http://en.wikipedia.org/wiki/Monitor_(synchronization)) refers to these two models as "blocking condition variables" and ["non-blocking condition variables"](http://en.wikipedia.org/wiki/Monitor_(synchronization)#Nonblocking_condition_variables)<br/><br/>This [article on Java](http://www.baptiste-wicht.com/2010/09/java-concurrency-part-5-monitors-locks-and-conditions/) refers to the two categories instead as "Signal & Continue" (non-blocking) and "Signal & Wait" (blocking), and says Java uses the "Signal & Continue" method:<br/><br/>> Signal & Continue (SC) : The process who signal keep the mutual exclusion and the signaled will be awaken but need to acquire the mutual exclusion before going.<br/><br/>That appears to be what ruby is doing too, although Monitor rdoc doesn\'t specify, and I wasn\'t able to understand the code enough to be sure -- that matches observed behavior here. So, the process which signals keeps the mutex, the signaled awakens but just gets added to the queue to aquire the mutex to operate in it\'s \'synchronized\' block, and other threads may in front of it. Yep, that\'s happening. <br/><br/>Here\'s a test case which on my machine fails in about 80% of runs. Tested with both MRI 1.9.3-p0 and jruby 1.6.7 in 1.8.7 mode.  That jruby has the same race condition is not surprising based on info that Java also uses the non-blocking/Signal-and-continue approach. <br/><br/>     def test_wait_on_connection<br/>        main_connections = []<br/>        <br/>        # Fill er up<br/>        (pool.spec.config[:pool] || 5).times do<br/>          main_connections << pool.checkout<br/>        end<br/>        <br/>        threads = []<br/>        10.times do<br/>          threads << Thread.new do            <br/>            pool.with_connection do |conn|<br/>              assert conn<br/>              sleep 0.01<br/>            end<br/>          end<br/>        end<br/><br/>        pool.checkin main_connections.shift<br/><br/>        assert_nothing_raised do<br/>          threads.each {|t| t.join}<br/>        end<br/><br/>        main_connections.each {|c| pool.checkin c}<br/><br/>      end<br/><br/><br/>Without the included pull request, test fails due to race condition approximately 80% of runs on my machine, may differ on yours. (adding more runs to the `10 times` may make it more likely to fail) Note that if you run just this test by itself, on failure run, it completes with failure in _way_ less than the 5 second timeout, even though it reports a failure due to ConnectionTimeoutError "could not get connection in 5 seconds."  <br/><br/>With the included pull request, I was not able to get the test to fail in a bunch of runs -- and additionally my much more complex app no longer exhibited the problematic behavior I was seeing, where it raised ConnectionTimeoutError\'s when I didn\'t see any reason why, unless given a larger connection pool than seemed like should be neccesary. <br/><br/>The restructure in the pull request changes the order of operations in the loop in `#checkout`, but it also has to do some ugly things with keeping track itself of how long it slept during the `@queue.wait`. I couldn\'t think of any other way for it to determine whether the timeout was really up, in cases where it returned from `@queue.wait` with a connection still unavailable. It may execute multiple `@queue.wait`s in successive loop iterations.  The total of all of them should be no more than _approximately_ the timeout value, as it keeps a running count of waiting time.  This is neccessarily not _exactly_ the `@timeout` value because there\'s really no way to get that exact measure, but it\'ll be pretty close, and should be good enough for what `@timeout` is meant to accomplish. <br/><br/>Not sure if there\'s an existing test that asserts that when a thread really _can\'t_ get a connection it does raise ConnectionTimeout, and in about 5 seconds -- but I verified myself this was still true post-commit. (such a test would take 5 seconds to complete, which would be annoying, unless perhaps using a pool with a much smaller timeout). <br/><br/>This is against 3-2-stable, as was all my work. Likely needs to be done in master too. <br/><br/>Phew. Hope I explained this clearly using no more words than needed, although it took a lot of words. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5423', 'title': u'ConnectionPool.checkout needs to be restructured to take account of ruby\'s "non-blocking" strategy for mutex ConditionVariables'}, {'body': u'sorry @tenderlove, you\'re going to hate me for this one, but at this point I\'ve done some due dillegence and am reasonably confident I\'ve found an actual issue -- which does affect my app -- having to do with some deep stuff regarding how ruby Monitor ConditionVariable\'s work. It requires some restructuring and slight uglification of the ConnectionPool.checkout method. <br/><br/>This is a tricky one. I have a test, but due to the race condition nature of the bug, it only sometimes fails, so I didn\'t include it it in the pull commit not sure if that was appropriate, but it\'s included below. <br/><br/>The problem occurs when you have a lot of threads (more than connection pool size) all wanting to checkout connections for very very short periods of time.  <br/><br/>Conceptually, this ought to be accommodated no problem. Each thread only needs the connection for a very short period of time, orders of magnitude less than the timeout -- even if there\'s more of them then there are connections, they should each be able to take a turn, waiting when neccesary and all finishing long before timeout no problem. <br/><br/>In fact, _sometimes_ (race condition, so it appears in some runs and not others), some of these threads will end up raising a ConnectionTimeoutError  --- **long before** the timeout value is reached. They appear to be giving up and not getting a connection in miliseconds, long before the 5 second time out. <br/><br/>Why? As far as I can tell, here\'s the deal.  <br/><br/>* threadA wants a connection, but the pool is full, so it blocks on [`@queue.wait(@timeout)`](https://github.com/rails/rails/blob/3-2-stable/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L246)<br/><br/>* shortly thereafter, threadB checks in a connection, and does a [`@queue.signal`](https://github.com/rails/rails/blob/3-2-stable/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L270)<br/><br/>* this does wake up threadA, however threadA does not immediately get access to the mutex to be in it\'s \'synchronization\' block. Some *other* thread slips into \'synchronization\' first, checks out the newly avail conenction, and then at a later point threadA gets access to the mutex \'synchronization\' block<br/>** It [finds there are no connections available](https://github.com/rails/rails/blob/3-2-stable/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L248), assumes this means that it only woke up from `@queue.wait` because of a timeout, and throws the ConnectionTimeoutError . But the 5 seconds hadn\'t elapsed, hardly any time at all elapsed, it got woken up because there was a checkin, another thread just stole it first. <br/><br/>At first this seemed to be like it must be a bug in ruby Monitor/ConditionVariable itself, or else ConnectionPool somehow not synchronizing in enough places, or something. <br/><br/>However, reading up on how Monitors and ConditionVariables work, this seems like *one* accepted model for the way they work -- and appears to be how ruby works.  The [wikipedia article on Monitors](http://en.wikipedia.org/wiki/Monitor_(synchronization)) refers to these two models as "blocking condition variables" and ["non-blocking condition variables"](http://en.wikipedia.org/wiki/Monitor_(synchronization)#Nonblocking_condition_variables)<br/><br/>This [article on Java](http://www.baptiste-wicht.com/2010/09/java-concurrency-part-5-monitors-locks-and-conditions/) refers to the two categories instead as "Signal & Continue" (non-blocking) and "Signal & Wait" (blocking), and says Java uses the "Signal & Continue" method:<br/><br/>> Signal & Continue (SC) : The process who signal keep the mutual exclusion and the signaled will be awaken but need to acquire the mutual exclusion before going.<br/><br/>That appears to be what ruby is doing too, although Monitor rdoc doesn\'t specify, and I wasn\'t able to understand the code enough to be sure -- that matches observed behavior here. So, the process which signals keeps the mutex, the signaled awakens but just gets added to the queue to aquire the mutex to operate in it\'s \'synchronized\' block, and other threads may in front of it. Yep, that\'s happening. <br/><br/>Here\'s a test case which on my machine fails in about 80% of runs. Tested with both MRI 1.9.3-p0 and jruby 1.6.7 in 1.8.7 mode.  That jruby has the same race condition is not surprising based on info that Java also uses the non-blocking/Signal-and-continue approach. <br/><br/>     def test_wait_on_connection<br/>        main_connections = []<br/>        <br/>        # Fill er up<br/>        (pool.spec.config[:pool] || 5).times do<br/>          main_connections << pool.checkout<br/>        end<br/>        <br/>        threads = []<br/>        10.times do<br/>          threads << Thread.new do            <br/>            pool.with_connection do |conn|<br/>              assert conn<br/>              sleep 0.01<br/>            end<br/>          end<br/>        end<br/><br/>        pool.checkin main_connections.shift<br/><br/>        assert_nothing_raised do<br/>          threads.each {|t| t.join}<br/>        end<br/><br/>        main_connections.each {|c| pool.checkin c}<br/><br/>      end<br/><br/><br/>Without the included pull request, test fails due to race condition approximately 80% of runs on my machine, may differ on yours. (adding more runs to the `10 times` may make it more likely to fail) Note that if you run just this test by itself, on failure run, it completes with failure in _way_ less than the 5 second timeout, even though it reports a failure due to ConnectionTimeoutError "could not get connection in 5 seconds."  <br/><br/>With the included pull request, I was not able to get the test to fail in a bunch of runs -- and additionally my much more complex app no longer exhibited the problematic behavior I was seeing, where it raised ConnectionTimeoutError\'s when I didn\'t see any reason why, unless given a larger connection pool than seemed like should be neccesary. <br/><br/>The restructure in the pull request changes the order of operations in the loop in `#checkout`, but it also has to do some ugly things with keeping track itself of how long it slept during the `@queue.wait`. I couldn\'t think of any other way for it to determine whether the timeout was really up, in cases where it returned from `@queue.wait` with a connection still unavailable. It may execute multiple `@queue.wait`s in successive loop iterations.  The total of all of them should be no more than _approximately_ the timeout value, as it keeps a running count of waiting time.  This is neccessarily not _exactly_ the @timeout value because there\'s really no way to get that exact measure, but it\'ll be pretty close, and should be good enough for what @timeout is meant to accomplish. <br/><br/>Not sure if there\'s an existing test that asserts that when a thread really _can\'t_ get a connection it does raise ConnectionTimeout, and in about 5 seconds -- but I verified myself this was still true post-commit. (such a test would take 5 seconds to complete, which would be annoying, unless perhaps using a pool with a much smaller timeout). <br/><br/>Phew. Hope I explained this clearly using no more words than needed, although it took a lot of words. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5422', 'title': u'ConnectionPool.checkout needs to be restructured to take account of ruby\'s "non-blocking" strategy for mutex ConditionVariables'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5421', 'title': u"Added missing 'end' to documentation example"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5420', 'title': u'add include_hidden option to checkbox tag'}, {'body': u'sorry about that :disappointed:<br/>/cc @vijaydev', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5419', 'title': u'fix typo in AP CHANGELOG [ci skip]'}, {'body': u'A elucidated explanation has been provided and ActiveModel en-locale updated to present a less confusing attribute name for `:password_digest` in form errors due to `has_secure_password`.  This is in reference to [Issue #2884](https://github.com/rails/rails/issues/2884).<br/><br/>**Note**: Opened as a PR on rails/rails as per [this note](https://github.com/lifo/docrails/commit/ddbea9474e20a40e80110944c1e3493ba0efe572#commitcomment-1079463) from @vijaydev<br/><br/>@vijaydev &mdash; I just cherry-picked my fix across, rdoc and YAML change so they may be reviewed with the correct context.  Thanks! =)<br/>@rurounijones and @rohit, please see.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dcfde00ac1fae8b575b2f9b39c7e244b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5418', 'title': u'Fixed Issue #2884 ActiveModel::SecurePassword code / rdoc conflict'}, {'body': u'Please see #5416 .<br/><br/>Closes #5399', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5417', 'title': u"[3-2-stable] Fix GH #5399. connection_pools's keys are ActiveRecord::Base::ConnectionSpecification objects."}, {'body': u"Please see https://github.com/rails/rails/issues/5399<br/><br/>I'm going to send this PR to 3-2-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5416', 'title': u"Fix GH #5399. connection_pools's keys are ActiveRecord::Base::ConnectionSpecification objects."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5415', 'title': u'Refactor the test_unit scaffold generator to use the key_value method'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5414', 'title': u"add 'include_hidden' option to select tag, closes #5402"}, {'body': u'ActiveRecord allowed nested models to be deleted in update_attributes using the _destroy parameter even when this makes the parent invalid. This commit adds tests for the correct behavior, and fixes the problem by checking if the parent is valid before commiting the transaction.<br/><br/>Thanks to @itsmeduncan for pair programming on this bug fix.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c3dce717fc1f2915c5cd966680b7f1f7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5413', 'title': u'Fix bug where nested deletes could invalidate parent object'}, {'body': u"This allows you to retrieve the list of attributes you've defined.<br/>Usable for e.g. selects in the view, or interators based on the<br/>attributes you wish to store in the serialized column.<br/><br/>It follows the serialize API, with its serialized_attributes hash.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/756daf26a0d77df3f9136534e32c7b3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5412', 'title': u'Remember the stored attributes in a config attribute. '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5410', 'title': u'[3-2-stable] Do not use the attributes hash in the scaffold functional tests'}, {'body': u'https://github.com/rails/sprockets-rails<br/><br/><br/>I have to send a PR to sass-rails also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5409', 'title': u'Remove sprockets integration from actionpack'}, {'body': u"My opinion is that this greatly improves the code base by making everything consistent.. most importantly consistent with the way that the contribution guide states.<br/><br/>As a bonus, now all the `end` keywords line up properly :-)<br/><br/>I spent a few hours on this into the wee hours of the night and so now I'm going to sleep.<br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5408', 'title': u'Made the code far more beautiful by following the contribution guide and outdenting private/protected code'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5407', 'title': u"'module' is reserved word. Sample of code with error - not cool."}, {'body': u'As requested by @josevalim<br/><br/>Thanks! :-)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5406', 'title': u'Fix issue #5193 in master'}, {'body': u'The previous method description was obsolete due to recent code refactoring.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f25903ccc1847dca8e0aef099925d24?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5404', 'title': u'Updated description of #retrieve_collector_from_mimes'}, {'body': u'add test to show offset query_methods on mysql & mysql2<br/><br/>change test to cover public API<br/><br/>more #4410 and #4409', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5401', 'title': u'Issue 4409 3 1 stable'}, {'body': u'add test to show offset query_methods on mysql & mysql2<br/><br/>change test to cover public API<br/><br/>more #4410 and #4409', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5400', 'title': u'Issue 4409'}, {'body': u'Proposal to fix issue #5193<br/><br/>Feedback welcome; thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5398', 'title': u'Fix issue 5193'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5397', 'title': u'Do not use the attributes hash in the scaffold functional tests'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5394', 'title': u'retrieve_cache_key should work on objects that act like arrays.'}, {'body': u"Not sure about this, sending my question/suggestion in the form of a pull request. Only applies to master, so not an urgent matter, thanks @tenderlove. <br/><br/>The new #reap method accomplishes the same thing as the deprecated #clear_stale_active_connections! , although it uses other means to do it.  At least #reap is documented to do the same thing -- remove connections associated with dead threads from the pool. <br/><br/>If you want to deprecate the old method name, that may be reasonable.  But why not have it call the new #reap method instead of just no-op'ing?  And why not have the deprecation warning suggest the new #reap method?  Calling the #reap method instead of no-op'ing seems kinder to applications that are trying to use the deprecated behavior.  <br/><br/>Alternately, seems like it would be better to remove the clear_stale_active_connections! method entirely, instead of leaving it as a no-op deprecated method. but personally, I like having it there, deprecated, but calling out to #reap, seems kindest to upgrading clients. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5393', 'title': u'deprecated clear_stale_active_connections! can call #reap '}, {'body': u"@tenderlove, believe clear_active_connections! stopped checking for connections checked out to dead threads in 3.2.0, but it's inline comment rdoc still says it does. Needs to be fixed to be accurate and not mislead developers trying to figure out what's up. <br/><br/>This needs to be committed to master too, I think, but only pull requesting for 3-2-stable. Let me know what preferred practices are for sending a pull request that needs to go to a release branch and to master both. <br/><br/>thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5391', 'title': u'ConnectionPooll#clear_active_connections! rdoc inaccuracy since 3.2.0'}, {'body': u'add test to show offset query_methods on mysql & mysql2<br/><br/>change test to cover public API<br/><br/>See PR #4410', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5390', 'title': u'fix activerecord query_method regression with offset into Fixnum'}, {'body': u'Makes sense to me but very open to critique.<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5389', 'title': u'Implemented proposed solution of following symlinks for #4986'}, {'body': u"`ActiveSupport::Autoload#autoload` performance is improved in the default case where a path is present. Since the full path name is not generated, it isn't necessary to determine the full constant name either. This results in a 3x performance gain and reduces the number of Ruby objects generated. For a full benchmark check [this gist](https://gist.github.com/2020228).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22a9bb6a9ec077e4d666d98052790c05?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5387', 'title': u'Improved ActiveSupport::Autoload Performance'}, {'body': u'hold back', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b1c0f4a1d7a454a825426cfa39716bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5386', 'title': u'error page'}, {'body': u'hold back', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b1c0f4a1d7a454a825426cfa39716bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5385', 'title': u'error page'}, {'body': u"This module provides the sets of features required to support the ActiveModel API and no more. Its naming is meant to be reminiscent of Ruby's Object and BasicObject.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d643c10e432e230c9d4bf97d15d6a46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5384', 'title': u'Rename ActiveModel::Model to ActiveModel::BasicModel'}, {'body': u'I don\'t have nearly the experience you guys have, so if this is idiotic, please be gentle.<br/><br/>If you have a ActiveRecord::Relation collection, the cache key that is generated is something like "#<ActiveRecord::Relation:0x007fc4ef0b7c08>".  This may be unexpected.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5383', 'title': u'retrieve_cache_key should work on objects that act like arrays.'}, {'body': u'similar to issue #2587<br/><br/>http://www.fileformat.info/info/unicode/char/2029/index.htm<br/>http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf (section 7.3)<br/><br/>    The ECMAScript line terminator characters are listed in Table 3.<br/>    Table 3 \u2014 Line Terminator Characters<br/>    Code Unit Value Name Formal Name<br/>    \\u000A Line Feed <LF><br/>    \\u000D Carriage Return  <CR><br/>    \\u2028 Line separator <LS><br/>    \\u2029 Paragraph separator <PS>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d586b2a89d2bafb77504ddea33b03fb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5380', 'title': u'ensure u2029 is escaped in escape_javascript helper'}, {'body': u'(for applications with fully digested assets)<br/><br/>* Improves speed of precompile significantly.<br/>* Therefore improving speed of deployments OOTB on Heroku etc.<br/>* assets:precompile:nondigest task still runs in Rake and warning issued<br/>* as Rake task still runs, rake task enhancements still possible<br/>* config.assets.nondigest_enabled setting disregarded if not present (backwards compatibility)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/71f4402df3b4cdc8230e9922d3c5af32?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5379', 'title': u'Make rake assets:precompile:nondigest optional'}, {'body': u'This allows for more strict template assertions, while maintaining backward compatibility.<br/><br/>For example, if you use `assert_template("foo/bar")` and "foo/bar/baz" was rendered, the test passes.<br/><br/>But if you use `assert_template(%r{\\Afoo/bar\\Z})`, you will catch that a different template was rendered.<br/><br/>Also, if you passed an unsupported argument to `assert_template()` in the past, it would silently succeed. Now it raises an ArgumentError.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5375', 'title': u'assert_template matches against Regexp'}, {'body': u'It was deprecated in 3.2', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5374', 'title': u'Remove ActiveModel::Naming#partial_path'}, {'body': u'These comments still mention the "to_path" method name which ended up as "to_partial_path" instead.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5373', 'title': u'Fix comments about to_partial_path'}, {'body': u" Prior to this commit, there isn't a good way of adding things like default inline attachments to an email.  This Stack Overflow thread shows people using hooks like the 'default' method in ActionMailer::Base to call a Proc for message configuration:<br/><br/>http://stackoverflow.com/questions/5113121/rails-use-same-attachment-for-all-emails-using-layout<br/>    <br/>This has the unintended side effect of setting a message header, so it's not a good solution.<br/>    <br/>This pull request adds support for message modifications by including AbstractController:Callbacks in ActionMailer::Base. It includes tests and documentation for the functionality provided by including this module.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c3dce717fc1f2915c5cd966680b7f1f7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5372', 'title': u'Add ability to define callbacks in ActionMailer'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c3dce717fc1f2915c5cd966680b7f1f7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5371', 'title': u'Fix actionmailer tests broken by #4751a69'}, {'body': u'Added a separator option to the method grouped_options_for_select if provided.<br/><br/>This is a common use case that people are often using optgroups for \u2013\u2013 As a way of dividing options in a select.<br/><br/><br/>This is a revision of my earlier pull request:<br/>https://github.com/rails/rails/pull/5363', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53a3e0676d050fed05cd93b7228420a3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5369', 'title': u'Add separator option to grouped_options_for_select'}, {'body': u"Removed max-stale from the tests since it's a request cache-control directive, just for clarity sake.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7e7bb3bc9e522f86e090f1732adacada?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5368', 'title': u'Minor test improvement'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5367', 'title': u'Change api_only to http_only and add MiddlewareStackProxy docs'}, {'body': u"I'm sure this will be a controversial change :-)<br/><br/>But this reduces hardcoded HTML and makes default HTML easier to add CSS to (in my opinion) and has the added benefit of reducing the amount of HTML that is sent to the browser.<br/><br/>See issue #5324 for more reasoning.<br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5366', 'title': u'Fixes #5324 by removing default size options from input:text and default cols and rows options from textarea.'}, {'body': u'I adjusted exception messages in accordance with case brances.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5365', 'title': u'Fix exceptions messages in AC layouts'}, {'body': u'Some time ago [this was fixed related to the `:methods` option](https://github.com/rails/rails/commit/ad9f968c4a4639bdc5e0a6e71189a1756c959ca3), now I noticed the same issue with `:include`. To make the api more consistent, this changes it to return string keys as well.<br/><br/>It also removes the usage of `Array#wrap` in serialization module.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5364', 'title': u'Active model serialization :include returning string keys'}, {'body': u'Added a separator argument to the method grouped_options_for_select if provided.<br/><br/>This is a common use case that people are often using optgroups for \u2013\u2013 As a way of dividing options in a select.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53a3e0676d050fed05cd93b7228420a3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5363', 'title': u'Add separator argument to grouped_options_for_select'}, {'body': u'I observed this behavior in rails 3.2.2 with ruby 1.9.3p125:<br/><br/>```<br/>1.9.3p125 :001 > Challenge.where(:type => SpecialChallenge)<br/>  Challenge Load (0.9ms)  SELECT "challenges".* FROM "challenges" WHERE "challenges"."type" = \'SpecialChallenge\'<br/> => [] <br/>1.9.3p125 :002 > Challenge.where(:type => [SpecialChallenge])<br/>  Challenge Load (0.4ms)  SELECT "challenges".* FROM "challenges" WHERE "challenges"."type" IN (\'--- !ruby/class \'\'SpecialChallenge\'\'<br/>\')<br/> => []<br/>```<br/><br/>Clearly the second query is built incorrectly. I tracked it down to how classes are quoted when inside of arrays in AR. I believe this (previously unnoticed) behavior may be due to psych.<br/><br/>This pull request fixes the behavior so that the query is built correctly:<br/><br/>```<br/>1.9.3p125 :001 > Challenge.where(:type => [SpecialChallenge])<br/>  Challenge Load (1.7ms)  SELECT "challenges".* FROM "challenges" WHERE "challenges"."type" IN (\'SpecialChallenge\')<br/> => []<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16f606d6f3cd4f7b742ec0d6db1674bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5362', 'title': u'Fixed bug in ActiveRecord that caused classes to be quoted incorrectly'}, {'body': u"I was interfacing with a third party who exposed an API with a RESTful singleton route.  In order to support this with ActiveResource I made this patch.<br/><br/>Initially I planned to patch ActiveResource::Base to support this, but very quickly it became convoluted with conditionals to determine which mode the model was in (singleton or standard).  It was much easier to make a subclass, and have clients inherit from this.  <br/><br/>I tried to be consistent with ActiveResource::Base.  The one exception that is not consistent is find.  ActiveResource::Base has the following code:<br/><br/><br/>      def find(*arguments)<br/>        scope   = arguments.slice!(0)<br/>        options = arguments.slice!(0) || {}<br/><br/>In the singleton case however, find does not have a concept of a scope (or rather, the scope is always :singleton).  Instead of forcing users to type an option that is not configurable, I thought it made more sense to use a sensible default, and alter how the method processes arguments.<br/><br/>To test the change, I made this simple singleton route API with an associated ActiveResource implementation:<br/><br/>https://github.com/kenmazaika/weather<br/><br/>If this is a feature that is not in ActiveResource for a reason, feel free to close this ticket out and not merge it.  I did find some other people looking for this functionality though:<br/><br/><br/>https://rails.lighthouseapp.com/projects/8994/tickets/760-activeresource-with-map-resource<br/>https://rails.lighthouseapp.com/projects/8994/tickets/4348-supporting-singleton-resources-in-activeresource<br/>http://railsforum.com/viewtopic.php?id=23172<br/><br/><br/>If there are changes that need to happen to get this merged in, please let me know.  I'd be happy to make them.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a9b8f5273d934fe57daa8cf54c3a017?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5361', 'title': u'ActiveResource Support Singleton Routes'}, {'body': u"By accident I found that commit f29b4a02fddb71d15fe1ee5f58096699caf61916 (Add a test case for layout nil) exists only in 3-2-stable branch. I wrote simple script and compare commits between master & 3-2-stable.<br/>It likes that at least these 4 changes are committed only in 3.2 but missed in master.<br/>@josevalim, @carlosantoniodasilva, @bsodmike, they are really missed, aren't they?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5359', 'title': u'Missed commits from 3-2-stable'}, {'body': u'In any class that subclassed `ActionController::Caching::Sweeper` if you called any undefined method, it would just ignore it without any error. This patch fixes that.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ac95d8758026b818881ed564fd5bb9bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5357', 'title': u"Don't ignore call to undefined method in Sweeper"}, {'body': u'Some cleanup in rake related tests, try to avoid calling Dir.chdir more<br/>than once in such tests and avoid some system calls.<br/><br/>This also improves performance a bit in these tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5356', 'title': u'Use one system call whenever possible, group rake and Dir.chdir calls'}, {'body': u'Without fix my new test failed:<br/><br/>```<br/>  1) Failure:<br/>test_finding_using_sql_take_into_account_only_uniq_ids(HasManyAssociationsTest) [test/cases/associations/has_many_associations_test.rb:385]:<br/>--- expected<br/>+++ actual<br/>@@ -1 +1 @@<br/>-#<Client id: 3, type: "Client", ruby_type: "Client", firm_id: 1, firm_name: nil, name: "Microsoft", client_of: 1, rating: 1, account_id: nil><br/>+[#<Client id: 3, type: "Client", ruby_type: "Client", firm_id: 1, firm_name: nil, name: "Microsoft", client_of: 1, rating: 1, account_id: nil>]<br/>```<br/><br/>This only one case then logic in condition [collection_association.rb#L549-555](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations/collection_association.rb#L549-555) works not good. In other cases the method returned right results:<br/><br/>``` ruby<br/>firm.clients_using_sql.find(1, "1", 2) # => [Client1, Client2] # <- that\'s correct<br/>```<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5352', 'title': u'In AR depths use &:to_i before :uniq to process mixed arrays likes ["1", 1] correct'}, {'body': u'ActiveModel::Name constructor expects to be able to call #blank? on a String but the core Object#blank? extension is never required.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee49971e902cb938916279b1902b0756?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5351', 'title': u'Missing active_model/naming.rb dependency.'}, {'body': u'Also add the release date of Rails 3.2.2 and missing entry', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5350', 'title': u'Changelog fix 3 2'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5349', 'title': u'Fix my name in the CHANGELOG to follow the convention'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5348', 'title': u'Remove warning of unused variable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5347', 'title': u'[3-2-stable] Fix has many through associations when mass_assignment_sanitizer is :strict'}, {'body': u"Like #5311, this was originally made in [strobe-rails-ext](https://github.com/strobecorp/strobe-rails-ext).<br/><br/>I've found it very useful when working with JSON apis<br/><br/>Update: This now works also for method calls", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5345', 'title': u'Add AR#slice to slice method calls'}, {'body': u'@tenderlove, appreciate any feedback. re #5330<br/><br/>If I\'ve done the pull request wrong somehow, let me know (i had an epic battle with git to try and get this right). <br/><br/>This pull request to 3-2-stable branch, hopefully that\'s right. I didn\'t want to deal with figuring out if things had changed in master yet regarding connection pools, it took me long enough to understand what was going on in 3.2. <br/><br/>If you have anything you would like changed in the code or test, let me know and I\'ll do it if I can. <br/><br/>The test isn\'t as non-fragile and clean as I\'d like, but it\'s as clean as I could figure out to make it based on existing ConnectionPool API -- there are other existing tests that call instance_variable_get(:@reserved_connections) like this too. <br/><br/>The code is the smallest change I could make, without actually refactoring or changing semantics of any existing methods. I was scared to do that. It is true that the term "active connection" is used in two incompatible ways in existing code base (does it mean "the connection for current thread" or does it mean "any currently checked-out connection"? method/variable names/comments are not consistent. )  But I don\'t have the courage to try to refactor this stuff more -- it\'s fairly untested code, and concurrency is always confusing, and who knows what existing third party downstream dependencies may rely on public methods staying as they are.  So I changed as little as possible to fix the problem. <br/><br/>Included test runs failing where expected before included change (and with expected deprecation warnings printed out about \'close your own connection\'), and runs passing after included change (without any deprecation warnings). <br/><br/>thanks for your help/attention! ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5344', 'title': u'ConnectionPool#with_connection properly releases connection when needed. Re #5330'}, {'body': u'Like I said...', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11c26a69dc9e9abfcabcb35d28963613?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5343', 'title': u'Tiny typo in actionpack CHANGELOG.md'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5cba606090e5f29f910274796748f20a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5342', 'title': u'Add failing test for #2579.'}, {'body': u'* Added test<br/>* Added An option to allow simple_format to be wrapped with a different tag other than "p"<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b7d890bed68fa564c18ff00dfd8207cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5340', 'title': u'Added wrapper tag for simple format, added test'}, {'body': u'Few months ago my PR #3547 was accepted.\nEver since I was thinking about adding `week_start` option to rails app config.\nLast comments on PR #3547 pushed me to come up with this PR.\n\nHere `config.week_start` option added, `beginning_of_week`, `end_of_week` and other methods updated to use `Date.week_start` as default.\n`Date.week_start` can be set via config or using `Date.week_start=` for current request\\thread (mimics time zone).\nMethod `sunday` (`monday`) updated to always return Sunday (Monday) to avoid possible confusion.\n\n`next_week` and `prev_week` updated the same way, but they can be modified to work correctly even if `week_start` is not `:monday`.\nIf feedback to this PR will be positive I can update them along with the API docs.\nUPDATE\noption renamed to `beginning_of_week`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18bf599b887aeed411b29c3eaf7cf5a4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5339', 'title': u'week_start option added to rails app config'}, {'body': u'#5337 for 3-2-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c7915a424cbb28fdd6c1cce270be6b58?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5338', 'title': u'3 2 static invalid byte sequence'}, {'body': u'this resolves an issue when a request with an invalid byte sequence comes in. In that case, the framework should not throw an ArgumentError as it does right now.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c7915a424cbb28fdd6c1cce270be6b58?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5337', 'title': u'fix ArgumentError being raised in case of invalid byte sequences'}, {'body': u'Sorry, I wrote the wrong extension.<br/><br/>Please see also https://github.com/rails/rails/commit/447ecb08ca1bab594198282237c4e9a027f7a3f4', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5336', 'title': u'Update CHANGELOG to fix wrong extension.'}, {'body': u' Issue #5332.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d6972cb84a97a2457c0744b34dc685cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5334', 'title': u'Fix deleting from a HABTM join table upon destroying an object of a model with optimistic locking enabled.'}, {'body': u'remove unused require. nolonger useful. with AS/core_ext/class/delegating_att.rb, now we are not using blank? and extract_options! in Class extension', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5331', 'title': u'remove unused require from AS/core_ext/class/delegating_att.rb '}, {'body': u'This was referenced in #1817 and I did run into a small problem migrating a very large application from Rails 2.3 -> Rails 3.x.<br/><br/>Does it not make an API confusing to have `#some_method?` return a non-boolean value, even if it works in most places as expected?<br/><br/>Here\'s a very contrived example (obviously you would never need to do this as written).<br/><br/>```ruby<br/># ruby<br/>{:xhr => request.xhr?}.to_json<br/>```<br/><br/>```javascript<br/>// javascript that works in 2.3<br/>if (result.xhr) console.log("Never executes in rails >= 3.1");<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4cede21ea96795d2de831e9981cc81cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5329', 'title': u'request.xhr? now returns boolean as expected, rather than nil or 0'}, {'body': u"In https://github.com/rails/rails/pull/5267, we don't reset *sequence_name*, when setting explicitly.<br/>But in the current implementation, we rest *inheritance_column* when setting explicitly.<br/><br/>I think we also don't reset it.<br/><br/>/cc @jonleighton", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5327', 'title': u"Don't reset inheritance_column when setting explicitly."}, {'body': u'throw InvalidAuthenticityToken exception by default<br/>can be configured using `:with` option in `protect_from_forgery` method<br/>or `request_forgery_protection_method` config option<br/><br/>Original issue #5300', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5326', 'title': u'configure how unverified request will be handled'}, {'body': u'As done in 3-2-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5322', 'title': u'Test fix 1.8.7 3 1 stable'}, {'body': u"This commit adds a `:conditions` option to the uniqueness validator. The `:conditions` is added to the lookup used for determining the uniqueness of the attribute.<br/><br/>*Example use-case:*<br/>An article with a `title` and a `status`. Status can be either `draft`, `published` or `archived`. We want to have unique titles - but only for non-archived articles. This cannot be accomplished using `:scope => :status`, since a draft article and a published article with identical titles both would be valid. This can now be accomplished with:<br/><br/>```ruby<br/>class Article < AR::Base<br/>  validates :title, :uniqueness => {:conditions => ['status != ?', 'archived']}<br/>end<br/>```<br/><br/>In this case a draft article can have the same title as an archived article, but not the same name as a published article.<br/><br/>What do you think? Let me know if anything is missing - this is my first pull request to Rails.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aa52c36976ef60f237e4aa5e386e36f8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5321', 'title': u'Add :conditions option to uniqueness validator'}, {'body': u'Failing test case for rendering :js falling back to :html with no layout.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5320', 'title': u'Add test case for #5307'}, {'body': u'Changed done as 3-1-stable and 3-2-stable ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5319', 'title': u'Fix test ree 3-0-stable'}, {'body': u'... update the records we retrieve from the association. as per #1814. Should be cherry-pickable to 3-2-stable and master too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a475dddebda57b162fa9378363175e81?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5317', 'title': u'3-1 and later through readonly tests'}, {'body': u'Right now, attribute_present? returns true on empty strings, when the documentation says that it should return false:<br/><br/>"Returns true if the specified +attribute+ has been set by the user or by a database load and is neither<br/>nil nor empty? (the latter only applies to objects that respond to empty?, most notably Strings)."<br/><br/>This change fixes the function to correctly return false for empty strings.  Test is included.<br/><br/>Fixes #5314', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/13c8d790a718810cde813404bfc7fb02?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5316', 'title': u'Update ActiveRecord::AttributeMethods#attribute_present? to return false for empty strings'}, {'body': u"Hello,<br/><br/>I've added a few methods to create, drop, and get schemas.<br/><br/>Thanks,<br/><br/>Travis", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3ee6c3893e75232ed43ed4e8e9a7cf39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5315', 'title': u'Enhance PostgreSQL Adapter schema support'}, {'body': u"This PR is cherry-picking 63cd9432265a32d222353b535d60333c2a6a5125 to backport to 3-1-stable .<br/>This is @jeremy's commit :)<br/><br/>Since it seems that there is a demand, I send PR.<br/>If we preferred stability, please close this.<br/>Please see https://github.com/rails/rails/issues/3927 (last comments)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5312', 'title': u'[3-1-stable] Use 1.9 native XML escaping to speed up html_escape and shush regexp warnings'}, {'body': u'For instance, param("user.id") is the same as params[:user].is_a?(Hash) && params[:user][:id]<br/><br/>Made by @josevalim for [strobe-rails-ext](https://github.com/strobecorp/strobe-rails-ext)<br/><br/>cc @spastorino @wycats', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5311', 'title': u'Adding param to ActionController::Metal, param is a method that can handle with nested params hashes'}, {'body': u"## Short story<br/><br/>Adds support for layout option when rendering a partial for a collection.<br/><br/>## Long story<br/><br/>I had a view like this one:<br/><br/>```erb<br/><ul><br/><% collection.each do | item | -%><br/>  <li><br/>    <%= render partial: 'a_partial', object: item %><br/>  </li><br/><% end -%><br/></ul><br/>```<br/><br/>But it felt wrong using an iterator with just a partial inside. Currently, for cleaning this up you would need a partial like<br/><br/>```erb<br/></li><li><br/>```<br/><br/>and modify the original view to use a spacer_template<br/><br/>```erb<br/><ul><br/><li><br/>  <%= render partial: 'a_partial', object: item, spacer_template: 'li_spacer_template' %><br/></li><br/></ul><br/>```<br/><br/>But it still felt wrong since spacer template is not valid html, so I thought of using a simple layout like this one:<br/><br/>```erb<br/><li><br/>  <%= yield %><br/></li><br/>```<br/>When I realized that render partial has no layout option when a collection is given. This pull request adds it and now, code like this is allowed:<br/><br/>```erb<br/><ul><br/>  <%= render partial: 'a_partial', object: item, layout: 'li_layout' %><br/></ul><br/>```<br/><br/>It is shorter and seems better to me.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7b8e1744137ecbad51b24ab2d169779b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5310', 'title': u'Adds :layout option to render :partial when a collection is given.'}, {'body': u'Cleanup encode_filename method, and raise ArgumentError sooner if\ntempfile is not present - no need to try encoding and grabbing other\nattributes if it raises an exception right after that.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5309', 'title': u'Refactor ActionDispatch::UploadedFile'}, {'body': u'I think we should have been originally as this PR when testing quoted database.<br/><br/>Please see also https://github.com/rails/rails/pull/5291', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5306', 'title': u'Change the message string to use in  test case.'}, {'body': u"mismatched indentations at 'end' with 'case'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5305', 'title': u"warning fix : mismatched indentations at 'end' with 'case'"}, {'body': u'This PR is revert c8f6025fd37c7b5c8922b11eb5ceba22e4650b59.<br/><br/>My commit (2fdb5219fb70a6368602c9d6073be8fa70b720fa) broke build, because table_name= method need a connection.<br/><br/>Please see c8f6025fd37c7b5c8922b11eb5ceba22e4650b59<br/><br/>cc @jonleighton @drogus', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5304', 'title': u'Revert table_name= needs connection now, so just stub table_name'}, {'body': u'We should let the responder to decide what to do with the given overridden response block, and not short circuit it.<br/><br/>Fixes #5280<br/><br/>This is for `3-2-stable`, assigning to @josevalim.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5299', 'title': u'Always passing a respond block from to responder'}, {'body': u'We should let the responder to decide what to do with the given overridden response block, and not short circuit it.<br/>    <br/>Fixes #5280<br/><br/>This is for `master`, assigning to @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5298', 'title': u'Always passing a respond block from to responder'}, {'body': u'This fixes https://github.com/rails/rails/issues/910 ("Rails is not a Rack Application (SCRIPT_NAME vs. relative_url_root ?)"), which was marked closed during the Lighthouse -> GitHub bugtracker migration for some reason.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/902985014db4ed0aeaa0d63aee4d6f22?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5296', 'title': u'Compute asset paths from the request if RAILS_RELATIVE_URL_ROOT not set'}, {'body': u'When browsing through the ActiveRecord code I came across this method and I thought it could be made a bit more clear, so I refactored it. I think this is the most I could do safely within the boundaries of this method.<br/><br/>Let me know if you think it is useful.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9ffbc194f775c7bdc155ad6e833df81e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5294', 'title': u'Refactoring of `arel_attributes_values` method'}, {'body': u'The Rails Guide on the asset pipeline referenced a javascript file in vendor/ with an incorrect path, this commit fixes that reference.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0b30c6aa6b9027d124ca028325b80b15?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5293', 'title': u'Fix typo in asset pipeline guide'}, {'body': u'This need to be done after these two commits:<br/>69c7f024882f8150a2bda8536e1480d19c982e04 and 357f1c6850c8ecbe1d1bfcc10267ed7d9a4f14e6<br/><br/>cc @vijaydev @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5291', 'title': u'Fix Contributing guide to work with the MySQL test suit'}, {'body': u"Mime types can accept arbitrary parameters. Right now, we only supported the q parameter, this extends them to arbitrary ones.<br/><br/>Here's the grammar: http://www.ietf.org/rfc/rfc2045.txt<br/><br/>This parsing is still not fantastic: the regexp might be made better, since it doesn't ensure that we have both actual quotes. Also, I'm not 100% \\w matches up with '&lt;any (US-ASCII) CHAR except SPACE, CTLs, or tspecials&gt;'<br/><br/>Related: #4918 and #4127.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5290', 'title': u'Added parsing of arbitrary media type parameters.'}, {'body': u'This also need to be backported to 3-2-stable branch', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5289', 'title': u'Fix has_many through associations when mass_assignment_sanitizer is strict'}, {'body': u'Original issue #1743', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5288', 'title': u'force response body to be read in assert_template'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5287', 'title': u'refactor Hash#slice and Hash#extract!'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5286', 'title': u'Advise to keep secret token private'}, {'body': u'... similar to railties:install:migrations.<br/><br/>The use case here is we have a contacts engine, which provides all the CRM related stuff shared across applications.<br/><br/>Certain seed data like countries needs to be provided by these engines. We can provide migrations no problem, but at the moment we are just having to run "ruby /path/to/engine/db/seeds.rb"to load the seeds.<br/><br/>This adds a rake task "rake engine_name:seed" (similar to "rake engine_name:install:migrations"), to run seeds from any engine, and a corresponding "rake railties:seed", which uses the FROM environment variable to choose which railties to run seeds from.<br/><br/>Would it be ok to backport this to 3.1 and 3.2 aswell? Let me know and I will send pull requests for those.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77cfd91999abfee3323de5814749b4fb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5284', 'title': u'Added a rake task railties:seed and corresponding engine_name:seed task,...'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5283', 'title': u'Typo: Siantra -> Sinatra'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0be64c4c66963cbfa591d63a58e34088?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5281', 'title': u'Small typo fix'}, {'body': u'Remove the double negative', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5279', 'title': u'Use any? for better readability'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5278', 'title': u'[3-2-stable] Fix build'}, {'body': u'Now the build will be fixed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5277', 'title': u'Now all the models need to explicitly declare the accessible attributes'}, {'body': u'This will fix the build', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5275', 'title': u'Only add the whitelist_attributes option if ActiveRecord is present'}, {'body': u'Allows translations of activerecord.errors.messages.record_invalid to in errors.messages.record_invalid', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4becbaa02e73aaff17653afc7256460d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5274', 'title': u'Update I18n defaults for activerecord.errors.messages.record_invalid'}, {'body': u'cc @NZKoz<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5273', 'title': u'Modified usage of if ! .empty? to if .any? which reads better'}, {'body': u'This should fix the master build, related to mysql and mysql2 tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5271', 'title': u'Fix message assertions for quoting database name in "show tables" for mysql'}, {'body': u"*database* argument pass to *tables* method isn't escaped.<br/>Please see https://github.com/rails/rails/issues/3163", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5270', 'title': u'Fix GH #3163. Should quote database on mysql/mysql2.'}, {'body': u'AS/kernel/reporting no where used in ts_isolated', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5269', 'title': u'AS/kernel/reporting no where used in ts_isolated'}, {'body': u"Initializing `@stale_state` apparently fix the warning related to `@new_record` variable not being initialized in AR's test suit, when an association is built and the object is marshaled/loaded. <br/><br/>I couldn't completely figure out the relation between these though, but not initializing it gives us the warning and the loaded object doesn't have the `@new_record` instance variable, while it has `@stale_state` when it shouldn't.<br/><br/>See these tests in AR's base_test.rb:<br/><br/>test_marshalling_with_associations<br/>test_marshalling_new_record_round_trip_with_associations<br/><br/>Related to #3720 /cc @kennyj @lest.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5268', 'title': u'Fix ActiveRecord warning in tests with Marshal'}, {'body': u"In now implementation, when calling table_name=, we reset @quoted_table_name, @arel_table, but we don't reset column information and sequence name.<br/><br/>Please see #4674 .<br/><br/>BTW, the original issue was happen on 3-2-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5267', 'title': u'Fix GH #4674. Reset column information and sequence name when setting table_name.'}, {'body': u'Allow the root route helper to accept just a string', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5266', 'title': u'Route root helper shortcut'}, {'body': u"The following error is produced in `Arel` when an aggregation is provided as the `:scope` parameter to `validates_uniqueness_of`:<br/><br/>```<br/>TypeError: Cannot visit CustomClassWithoutRecognizedAncestors<br/>\tfrom /usr/local/Cellar/ruby/1.9.3-p125/lib/ruby/gems/1.9.1/gems/arel-3.0.2/lib/arel/visitors/visitor.rb:25:in `rescue in visit'<br/>\tfrom /usr/local/Cellar/ruby/1.9.3-p125/lib/ruby/gems/1.9.1/gems/arel-3.0.2/lib/arel/visitors/visitor.rb:19:in `visit'<br/>\t...<br/>```<br/><br/>`ActiveRecord` uses the aggregation's value object as the scope value instead of its actual attribute value.<br/><br/>The attached code resolves this issue by using the attribute value after type cast but before conversion.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f734bea846ecb2f78dcee27e62f4c31e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5264', 'title': u"use read_attribute to allow scoping by an aggregation's attribute value"}, {'body': u"A thread-safe cache store implementation that cascades operations to a<br/>list of other cache stores. It is used to provide fallback cache<br/>stores when primary stores become unavailable. For example, to<br/>initialize a CascadeStore that cascades through MemCacheStore,<br/>MemoryStore, and FileStore:<br/><br/>    ActiveSupport::Cache.lookup_store(:cascade_store,<br/>      :stores => [<br/>        :mem_cache_store,<br/>        :memory_store,<br/>        :file_store<br/>      ]<br/>    })<br/><br/>Cache operation behavior:<br/><br/>Read: returns first cache hit from :stores, nil if none found<br/><br/>Write/Delete: write/delete through to each cache store in :stores<br/><br/>Increment/Decrement: increment/decrement each store, returning the new<br/>number if any stores was successfully incremented/decremented, nil<br/>otherwise<br/><br/>In my app, I'm using Cascade store with MemCache as the primary store, with MemoryStore as a backup in case memcache is unavailable. What do you guys think?<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/acd4b5803e806bf0ed70299f15cd6d18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5263', 'title': u'Add ActiveSupport::Cache::CascadeStore'}, {'body': u'My attempt at solving an annoyance mentioned a couple weeks ago by @tenderlove, where using "references" or "belongs_to" when creating/changing a table in a migration does not create a corresponding index, even though in most cases it is needed.<br/><br/>One consideration is that most developers will have already specified indexes for these columns in their existing migrations... I\'m not sure if that will be a problem or not moving forward. I\'m happy to make additional changes if need be.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b7632770a85e03b597b031477c8c24bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5262', 'title': u'Automatically create indexes for references/belongs_to statements in migrations.'}, {'body': u'Identity Map was added in Rails 3.1 and due to some known issues with associations, it never graduated to be an "enabled-by-default" feature. Since we haven\'t seen any interest in solving such issues, it seems reasonable to remove the feature from Rails codebase.<br/><br/>More info: https://github.com/rails/rails/commit/302c912', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5261', 'title': u'Remove IdentityMap'}, {'body': u'remove usage of AS::OrderedHash from other places', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5260', 'title': u'remove usage of AS::OrderedHash from other places'}, {'body': u'cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5258', 'title': u'Use public_send instead of send in ActiveModel::Model initialize'}, {'body': u'Also add test to ensure basic model does not explode when initialized with\nnil.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5256', 'title': u'Add docs with usage examples for ActiveModel::Model'}, {'body': u'A bunch of commits squashed:<br/><br/>* Avoid double hash lookups in AR::Reflection when reflecting associations/aggregations<br/>* Minor cleanups: use elsif, do..end, if..else instead of unless..else<br/>* Simplify DynamicMatchers#respond_to?<br/>* Use "where" instead of scoped with conditions hash<br/>* Extract `scoped_by` method pattern regexp to constant<br/>* Extract noisy class_eval from method_missing in dynamic matchers<br/>* Extract readonly check, avoid calling column#to_s twice in persistence<br/>* Refactor predicate builder, remove some variables', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5255', 'title': u'Refactor and cleanup in some ActiveRecord modules'}, {'body': u'Small refactor in AR::Reflection to avoid double hash lookups when\nreflecting associations/aggregations.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5254', 'title': u'Avoid double hash lookups when reflecting associations/aggregations'}, {'body': u'Usage example:<br/><br/>```ruby<br/>class Person<br/>  include ActiveModel::Model<br/>end<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5253', 'title': u'Add ActiveModel::Model, a mixin to make plain Ruby objects work with AP out of box'}, {'body': u'Related to the commits below, that end up failing in Ruby 1.8 due to the `encode!` method.<br/><br/>3-2: af022918716e894608d655cdb52ec3164fee597a<br/><br/>3-1: b1358c8fa1d875bdeb0639baab1dc91ed39ac175<br/><br/>/cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5252', 'title': u'Fix build'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5290492d327de6973c0f52e82d9cbf35?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5250', 'title': u'Fix doc examples for has_and_belongs_to_many association'}, {'body': u"To avoid foreign key errors (and invalid data) in the database, when a belongs_to association is destroyed, it should also be nil'd out on the parent object.<br/><br/>That is, the association id should not be kept on the record after save. This is a corruption of data integrity in the database.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d8d5058aa91cd439f1f486f93f8eb564?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5248', 'title': u'Unset association when existing record is destroyed.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5246', 'title': u'simplify namespace assignment in fields_for'}, {'body': u"As documented on MySQL's site [1] this is the maximum value for Windows. We should use the least common denominator. Also done in the old branch (0.2.x) of mysql2 gem [2] and [3].<br/><br/>[1] http://dev.mysql.com/doc/refman/5.0/en/server-system-variables.html#sysvar_wait_timeout<br/>[2] https://github.com/brianmario/mysql2/blob/0.2.x/lib/active_record/connection_adapters/mysql2_adapter.rb#L577<br/>[3] https://github.com/brianmario/mysql2/commit/4f4909f4d654ac01c93b55a109cc12a6047c6726", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/15faec27916ef9e0caae26eaaf25a8fb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5244', 'title': u'Maximum wait_timeout on Windows is 2147483'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5243', 'title': u"don't pass unnecessary argument"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e837f6b7fd146ab16ed3d663476c063e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5242', 'title': u'Optimize routes generation in simple cases'}, {'body': u'Logic in clone_empty method was dealing with old @dirty variable, which has changed by @html_safe in this commit: https://github.com/rails/rails/commit/139963c99a955520db6373343662e55f4d16dcd1<br/><br/>This was issuing a "not initialized variable" warning - related to: #5237<br/><br/>The logic applied by this method is already handled by the [] override, so there is no need to reset the variable here.<br/><br/>/cc @tenderlove @drogus', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5241', 'title': u'Stop SafeBuffer#clone_empty from issuing warnings'}, {'body': u"Replaced max-stale with s-maxage as max-stale is a request directive. It's a minor change just for the sake of clarity.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7e7bb3bc9e522f86e090f1732adacada?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5240', 'title': u'Minor test improvement'}, {'body': u"Running the Active Support tests gives one warning from within Active Support:<br/><br/>```<br/>/home/rohit/projects/rails/activesupport/lib/active_support/core_ext/string/output_safety.rb:130: warning: instance variable @dirty not initialized<br/>```<br/><br/>On checking the code it seems like the intention is to set :@dirty to nil. On doing that the tests pass and the warning doesn't appear. If I'm wrong can somebody explain? :)<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1644b4d748356fe448fd398e2973a7ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5237', 'title': u'Silence Active Support warning about @dirty not being initialized'}, {'body': u"This is a validation helper that validates that the attribute is a subset of the specified list. Its usage looks like:<br/><br/>```<br/>validates :answer, :subset, :in => ['unicorns', 'rainbows', 'horsies']<br/>```<br/><br/>I found this useful in validating an Array attribute on one of my models. The attribute corresponded to a group of checkboxes in the view.<br/><br/>The attribute itself only needs to support the `each` method for iteration.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16f606d6f3cd4f7b742ec0d6db1674bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5236', 'title': u'Add ActiveModel subset validation helper'}, {'body': u"Without this I have to use a superfluous empty block:<br/><br/>```ruby<br/><%= field_set_tag 'Legend!' do %><br/><% end %><br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/31c6df954592b2ea4d27e4762ffb1252?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5234', 'title': u'Allow empty fieldsets  to be created without a block.'}, {'body': u'Set "March 1, 2012" as the release date for 3.2.2, 3.1.4, 3.0.12', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4dea5cf83d2d6c1228750b76e579b38d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5232', 'title': u'Add release dates to documentation'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5231', 'title': u'Add documentation for IndexDefinition.'}, {'body': u'call binmode on the tempfile for Ruby 1.8 compatibility <br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5227', 'title': u'Build fix 3 1 stable'}, {'body': u'Setting a String column to SecureRandom.hex causes a no method error.<br/><br/>SecureRandom.hex returns a :string type, only without utf-8 or ASCII_8BIT encodings.<br/><br/>But this makes it all better.<br/><br/>I figured we should add this since SecureRandom is part of core ruby.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/62836541449daf9d3d30c1db630468a3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5226', 'title': u'Fixed sqlite_adapter to support SecureRandom.hex by adding US_ASCII encoding to type_cast.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5221', 'title': u'Fix warning: assigned but unused variable'}, {'body': u'Fix the assert_recognizes test method so that it works when there are constraints on the querystring. <br/><br/>Issue #2781', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5448a81616726e949a3f89d0db7bbedd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5219', 'title': u'Fix for #2781'}, {'body': u'To prevent method name conflicts, I have added namespacing to the ActiveRecord store.  The way it works is you can now pass in some custom text to prefix the accessor/writer method names.  Passing in a value of *true* will namespace it with the database column name.<br/><br/>    class Stuff < ActiveRecord::Base<br/>      store :item, accessors: [ :color ], namespace: true<br/>      store :thing, accessors: [ :color ], namespace: "article"<br/>    end<br/>    <br/>    s = Stuff.new(item_color: "blue", article_color: "purple")<br/><br/>    s.item_color<br/>    #=> "blue"<br/>    s.article_color<br/>    #=> "purple"<br/><br/>This also can be done via the store_accessor method:<br/><br/>    store_accessor :item, :size, namespace: true<br/>    store_accessor :thing, :size, namespace: \'article\'<br/><br/>-patrick', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/648553f5c693d93c9ea2e042857ad22c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5217', 'title': u'added namespace option for activerecord store'}, {'body': u'Leftover from copied code. This removes an unnecessary dependency on memcache.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5214', 'title': u'remove unnecessary memcache require in ActionDispatch CacheStore'}, {'body': u'I found the existing API documentation for the update_only option confusing and had to spend a lot of time studying the code to understand what it actually does. For example, when the existing comments say that update_only "allows you to specify that an existing record may only be updated", it\'s not clear what this is being contrasted with. Here\'s an [example](http://masonoise.wordpress.com/2010/07/23/rails-and-forms-using-accepts_nested_attributes_for/) blog post that illustrates someone else\'s confusion on exactly this point (see the second to last paragraph). <br/><br/>To understand the current description you also need to know (a) that the alternative to updating the record that the comment alludes to is to replace it with a new one, and (b) that in the default case the record is updated only if you supply a matching id, and replaced with a new one if you don\'t - again not something that is necessarily obvious.<br/><br/>The changes I have made are intended to address these points.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f25903ccc1847dca8e0aef099925d24?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5212', 'title': u'update_only documentation for accepts_nested_attributes_for'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5211', 'title': u'Changed asset_host config to more specific'}, {'body': u'reset_counters() was crashing when there were multiple belongs_to associations with the same foreign key.. with only one of the belongs_to associations having a custom counter_cache.<br/><br/>reset_counters() made the false assumption that each belongs_to association has a counter_cache.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e57c826ad8537decfcb825dd6eaac9b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5210', 'title': u'Fix for #5200'}, {'body': u'<br/>This fixes the following error I was receiving (the "day" string, e.g., "Thursday" was frozen by rails, presumably because it\'s Encoding::ASCII_8BIT? Therefore, when it gets "encode!"-ed to utf-8, a RuntimeError occurs.). This is related to this stackoverflow question (http://stackoverflow.com/questions/9474730/rails-active-record-runtimeerror-cant-modify-frozen-string-somehow-related).<br/><br/>(0.1ms)  begin transaction<br/>Binary data inserted for `string` type on column `day`<br/>  SQL (0.5ms)  INSERT INTO "availabilities" ("coach_id", "created_at", "day", "hour", "updated_at") VALUES (?, ?, ?, ?, ?)  [["coach_id", 3], ["created_at", Tue, 28 Feb 2012 18:05:33 UTC +00:00], ["day", "Monday"], ["hour", 18], ["updated_at", Tue, 28 Feb 2012 18:05:33 UTC +00:00]]<br/>RuntimeError: can\'t modify frozen String: INSERT INTO "availabilities" ("coach_id", "created_at", "day", "hour", "updated_at") VALUES (?, ?, ?, ?, ?)<br/>   (0.1ms)  rollback transaction<br/>Completed 500 Internal Server Error in 59ms', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a7fdf93c1375e554423cfddd6a45ac42?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5209', 'title': u'Add check if value is frozen before attempting to mutate via encode!'}, {'body': u'https://github.com/rails/rails/pull/5204', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5208', 'title': u'Inject in constantize'}, {'body': u'This PR is #5173 for 3-1-stable.<br/><br/>/cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5207', 'title': u'[3-1-stable] Fix type_to_sql with text and limit on mysql/mysql2. Fix GH #3931'}, {'body': u'This PR is #5173 for 3-2-stable.<br/><br/>/cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5206', 'title': u'[3-2-stable] Fix type_to_sql with text and limit on mysql/mysql2. Fix GH #3931'}, {'body': u"Since using inject we don't need to create 'constant' variable", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2881b5d4c082996a62f23055b61956d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5204', 'title': u'Some simplification for constantize method'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5203', 'title': u'Fix layout lookup for anonymous controller'}, {'body': u'Fix for #919', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3a54648de1a8d2e543878697b2445db2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5202', 'title': u'Fix delete_all when chained with joins'}, {'body': u'As I understood anonymous? is standart way to check class whether it has name (commit: 760dec17bea1cf10534d33d409e4d6e1ff62c6af - "Use anonymous? that works on both Ruby 1.8 and 1.9." and some other).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5201', 'title': u'Use anonymous? in AbstractController layout instead name check'}, {'body': u'Here are some simple changes that I think will help clear things up for folks new to Rails.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91794c7bbbe28cb7e4f624e827ba1f35?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5199', 'title': u'The language for describing how to configure ActionController::Base.asset_host could be clearer'}, {'body': u"it was added in 36129f21b86db4bd69e932e586129e246c2a5ca8<br/>but isn't useful anymore as corresponding tests pass without it", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5197', 'title': u'remove unnecessary code'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5196', 'title': u'force datetime attributes to be changed, fix GH #3965'}, {'body': u'Initially was to fix issue #3965 but found some inconsistent code.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5195', 'title': u'refactor AR::AttributesMethods and fix time zone dirty issue'}, {'body': u"This commit reverts ugly workaround ( 24b28a2a0c6a58e177b07ce3ccf56dc975541780 ) against RDoc API change.<br/>We no more need this workaround because `require 'rdoc/task'` will never fail in Ruby '>= 1.9.3'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5192', 'title': u"no need to rescue when requiring 'rdoc/task' in Ruby >= 1.9"}, {'body': u'Closes #393 and related with #4000', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5191', 'title': u'Add a new line after the textarea opening tag.'}, {'body': u'Closes #393 and related with #4000', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5190', 'title': u'[3-2-stable] Add a new line after the textarea opening tag.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/84a62aa4b88090e6cd57d7a12da49223?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5188', 'title': u'logger.silence is deprecated'}, {'body': u'Recently I discovered a problem when I was trying to setup a controller to dynamically render a js.erb template.  I wanted to do something like this:<br/><br/>    # application layout<br/>    javascript_include_tag "/javascripts/data.js?caller=#{controller_name}_#{action_name}"<br/><br/>This way I could have a controller with a data action that could do something like:<br/><br/>    # javascripts_controller.rb<br/>    def data<br/>      case params[:caller]<br/>      when "posts_new"<br/>        @post_data = "some post new data..."<br/>      when "posts_edit"<br/>        @post_data = "some post edit data..."<br/>      end<br/>    end<br/><br/>    # app/views/javascripts/data.js.erb<br/>      var DataForMyApp = { <br/>        post_data: <%= @post_data %><br/>      };<br/><br/>...  Anyway, when I tried to do this, it would not work and when looking at the page source, I saw the reason was the javascript include tag having an addition ".js" appended to the end of the query string:<br/><br/>    <script src="/assets/data.js?foo=bar.js" type="text/javascript"></script><br/><br/>So I have adjusted the ActionPack code so that you can do any of the following:<br/><br/>    javascript_include_tag("/javascripts/data?foo=bar")<br/>    javascript_include_tag("/javascripts/data.js?foo=bar")<br/>    javascript_include_tag("/javascripts/data", :params => {:foo => "bar"})<br/>    javascript_include_tag("/javascripts/data?foo=bar", :params => {:foo2 => "bar2")<br/><br/>This behavior also carries over to the stylesheet_link_tag.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/648553f5c693d93c9ea2e042857ad22c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5187', 'title': u'added params option for asset include_tag helpers'}, {'body': u"When `collection_check_boxes` and `collection_radio_buttons` are used in forms that use local variables they don't work as desired because they are not passing the object to your internal builder.<br/><br/>This pull request fixes this issue and also add documentation to `object` method of the `CollectionHelper::Builder`.<br/><br/>@carlosantoniodasilva, @josevalim, @jeremy please review this one.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5185', 'title': u'Fix collection helpers'}, {'body': u"I've taken each of the database YAML config files and rewritten them.<br/><br/>The default values are all the same as before, I've just moved the duplication into a defaults block and then included this in each environment's settings.<br/><br/>I know quite a few developers who re-write their database files like this so I thought I'd save us all the effort in future.<br/><br/>## Before<br/><br/>``` yaml<br/>development:<br/>  adapter: mysql2<br/>  encoding: utf8<br/>  database: my_app_development<br/>  pool: 5<br/>  username: myAppUser<br/>  password: myAppPassword<br/>  host: localhost<br/><br/>test:<br/>  adapter: mysql2<br/>  encoding: utf8<br/>  database: my_app_test<br/>  pool: 5<br/>  username: myAppUser<br/>  password: myAppPassword<br/>  host: localhost<br/><br/>production:<br/>  adapter: mysql2<br/>  encoding: utf8<br/>  database: my_app_production<br/>  pool: 5<br/>  username: myLiveAppUser<br/>  password: myLivePassword<br/>  host: localhost<br/>```<br/>## After<br/><br/>``` yaml<br/>defaults: &defaults<br/>  adapter: mysql2<br/>  encoding: utf8<br/>  pool: 5<br/>  username: myAppUser<br/>  password: myAppPassword<br/>  host: localhost<br/><br/>development:<br/>  <<: *defaults<br/>  database: my_app_development<br/><br/>test:<br/>  <<: *defaults<br/>  database: my_app_test<br/><br/>production:<br/>  <<: *defaults<br/>  database: my_app_production<br/>  username: myLiveAppUser<br/>  password: myLivePassword<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8538bd148e2bc82674009a35eabc8948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5184', 'title': u'DRYed database config YAML templates'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5183', 'title': u'use content_tag in button_to helper'}, {'body': u'content_tag used instead string for option ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5182', 'title': u'content_tag used instead string for option'}, {'body': u'The problem here was that converting days 45..60 would be converted to "about 1 month ago" instead of "2 months ago". This is because distance_of_time_in_words doesn\'t round the days to the nearest month (it does do this for > 60 days, but not before).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e9e852b18079792bc5f4ec52b8e37c53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5181', 'title': u'Fix for issue #3560'}, {'body': u"This fixes issue #5145 by not adding the source Javascript asset in the Sprockets Rails helper when config.assets.debug is true.<br/><br/>I wanted to find a way to treat the source asset as a Sprockets::Asset and use the #eql? method to compare them, but I didn't see an obvious way to do that. If anyone has any pointers there, please let me know.<br/><br/>That said, this does fix the issue of not including application.js along with the other .js files when config.assets.debug is true.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ccd26ba29b49316b38a46f0aa0e96893?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5180', 'title': u"don't add the source JS asset when in debug mode"}, {'body': u'In asset_tag_helper_test.rb there is an assert on the number of bytes in a<br/>concatenated file.  This test failed because Windows converts \\n to \\r\\n as<br/>the default for "w".  This is different than in *nix systems where there is<br/>no conversion done.<br/><br/>The test that failed was test_caching_stylesheet_link_tag_when_caching_on<br/><br/>Using bin mode fixes this behavior on windows and makes no change on the<br/>*nix systems.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/809dfec231b08847b1c1b99dc8f62bb5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5179', 'title': u'Binary mode window bug'}, {'body': u'This should happen for mouse or louse, but not slice or pumice.<br/><br/>I know the inflector is "frozen," but this is a pretty cut and dry bug with a very simple fix. It doesn\'t seem likely that there are many cases out there where this bug fix will break existing code.<br/><br/>Fixes issue #4374.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ccd26ba29b49316b38a46f0aa0e96893?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5177', 'title': u'fix inflector bug where -ice gets singularized into -ouse'}, {'body': u"<br/>These commits do two things:<br/><br/>    Verify that Annotations are found in all the default directories<br/>          app config lib script test<br/>    <br/>    If an environment variable SOURCE_ANNOTATION_DIRECTORIES exists, it searches there too<br/>          SOURCE_ANNOTATION_DIRECTORIES='dir1,dir2' bundle exec rake notes<br/>              searches:  app config lib script test dir1 dir2<br/><br/>References: #4536, #4540<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f014cd26407c6d762509ae55c4a695de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5175', 'title': u'Rake notes directories'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5174', 'title': u'use content_tag instead of strings'}, {'body': u'The original issue is #3931.<br/><br/>First, add the following line.<br/><br/>```<br/>t.text :example, :limit => 0x555555 (5592405) # means `mediumtext`<br/>```<br/><br/>Second, migrate and be generated schema.rb. I\'ll see<br/><br/>```<br/>t.text "example", :limit => 16777215 # `longtext` !<br/>```<br/><br/><br/>I think that the cause of problem is mysql behavior difference by character encoding.<br/><br/>If we use latin1 encoding, the limit is 16777215.<br/>But if we use utf-8 encoding, the limit is 16777215 / 3 = 5592405.<br/><br/>Thus, I should fix `binary_fields` test, because I guess that we usually use utf-8 encoding.<br/><br/>Please see also #3931 and #4382.<br/><br/>Closes #3931.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5173', 'title': u'Fix type_to_sql with text and limit on mysql/mysql2. Fix GH #3931 (Try again).'}, {'body': u'Sorry i did mistake in last commit.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5171', 'title': u'assert => assert_equal 3-1-stable '}, {'body': u'I did mistake in last commit. Sorry :-(', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5170', 'title': u'assert => assert_equal'}, {'body': u'When ActiveResource grabs errors from an array of messages, if you have an attribute name compound, that starts like another attribute name, for example:<br/><br/>{:errors => {:phone => "is not valid", :phone_work => "can\'t be blank" }} <br/><br/>If phone is parsed first it\'s getting the error of phone_work too. <br/>For this reason, sorting the array of attributes by length we can fix this problem.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/84e56530282ccd0e9a23fd81ecdadd12?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5169', 'title': u'Fix Errors#from_array when an attribute name starts like another /ActiveResource'}, {'body': u'When we use the postgresql adapter and construct `distinct select clause`, we have a problem with `NULLS first/last`.<br/><br/>```ruby<br/>without fix<br/>=> posts.updater_idnulls first AS alias_0<br/>with fix<br/>=> posts.updater_id AS alias_0<br/>```<br/><br/>closes #5152<br/><br/>This original issue was reported for 3-2-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5168', 'title': u'[PostgreSQL] Remove NULLS FIRST/LAST. Closes #5152'}, {'body': u'Right now, the gem names are "activesupport", "actionpack", etc. with no underscore in the gem name, yet there\'s an underscore in the library name. This makes it constantly confusing whether you should install the gem `activesupport` or `active_support` and whether you should require `activesupport` or `active_support`.<br/><br/>Another small but important place where the non-underscore naming scheme is used is within translation files.<br/><br/>These naming mismatches break expectations and users waste small bits of time seeing why their `gem "..."` or their `require "..."` don\'t work. Rails should go with the underscore naming convention heavily emphasized by Rails itself.<br/><br/>Library name changes following convention:<br/><br/>      actionmailer    -> action_mailer<br/>      actionpack      -> action_pack<br/>      activemodel     -> active_model<br/>      activerecord    -> active_record<br/>      activeresource  -> active_resource<br/>      activesupport   -> active_support<br/><br/>Rails 4 is the perfect chance to fix this while minimizing challenges such as backwards compatibility and compatibility with other libraries. In fact, a major version update is probably the only opportunity.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5167', 'title': u'Fix library naming convention'}, {'body': u'406ece4729e8fd81f156bcb3fce16e938522466e', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5166', 'title': u'3 2 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5165', 'title': u'Build fix ruby187 p358 3 1 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5164', 'title': u'Build fix ruby187 p358'}, {'body': u'the removed code was introduced by me. sorry ;-)<br/>After the original code was merged, @exviva commented on this issue (thanks!).<br/><br/>I fixed wrong, and removed redundant code.<br/>Please see https://github.com/rails/rails/pull/5119', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5163', 'title': u'Remove wrong and redundant code.'}, {'body': u"In my experience, if we had many models (ex. one hundred), Rails boot was slowly.<br/>According to production log, it seems that AR's schema data loading is slowly especially.<br/> <br/>Thus I've implemented `schema cache dumping`. Please review it.<br/>I guess this implementation has many fixing point ;)<br/><br/>Usage:<br/><br/>```<br/>$ edit config/environments/production.rb<br/>config.use_schema_cache_dump = true<br/>$ RAILS_ENV=production bundle rake db:schema:cache:dump<br/>=> generate db/schema_cache.dump<br/>$ RAILS_ENV=production rails s<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5162', 'title': u'[Proposal] Schema cache dump'}, {'body': u'Build fixed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5161', 'title': u'build fixed -- put and patch both are allowed for update'}, {'body': u'<br/>Model.where(:field => :not_nil) will make a sql query like "...WHERE field IS NOT NULL..."', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9742692d8f4eb9997301de35395e5460?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5160', 'title': u'Sugar sintaxe: :not_nil on finders to query with IS NOT NULL'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9742692d8f4eb9997301de35395e5460?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5159', 'title': u'Sugar sintaxe: :not_nil on finders to query with IS NOT NULL'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9742692d8f4eb9997301de35395e5460?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5158', 'title': u'Sugar sintaxe: :not_nil on finders to query with IS NOT NULL'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9742692d8f4eb9997301de35395e5460?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5157', 'title': u'Sugar sintaxe: :not_nil on finders to query with IS NOT NULL'}, {'body': u'option for cattr_accessor was added at Jun 2011 - b12c2e4ebb85170467ac250219557d631c842d8d,<br/>for mattr_accessor at the same time: bf526c2dbeb73bf11553004e43889a804b72866d<br/><br/>I suggest to add this option to class_attribute also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5156', 'title': u'Add instance_accessor option to class_attribute'}, {'body': u'Hi,<br/><br/>When you do a call to `first` the generated SQL is this:<br/><br/>```ruby<br/>> User.first<br/>  User Load (35.2ms)  SELECT "users".* FROM "users" LIMIT 1<br/>```<br/><br/>However, PostgreSQL changes the \'default order\' of the records when you perform an update as you can observe in this example:<br/><br/>```sql<br/># CREATE TABLE users (id serial, name varchar(40));<br/># INSERT INTO users (name) VALUES (\'John\');<br/># INSERT INTO users (name) VALUES (\'Michael\');<br/># SELECT * FROM users;<br/> id |     name      <br/>----+---------------<br/>  1 | John<br/>  2 | Michael<br/><br/># SELECT "users".* FROM "users" LIMIT 1;<br/> id | name <br/>----+------<br/>  1 | John<br/><br/># UPDATE users SET name = \'Modified John\' WHERE id = 1;<br/># SELECT * FROM users;<br/> id |     name      <br/>----+---------------<br/>  2 | Michael<br/>  1 | Modified John<br/><br/># SELECT "users".* FROM "users" LIMIT 1;<br/> id |  name   <br/>----+---------<br/>  2 | Michael<br/>```<br/><br/>So I made a change so that all `first` calls gains a default order clause:<br/><br/>```ruby<br/>> User.first<br/>  User Load (3.1ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1<br/>```<br/><br/>If an order clause is already chained, nothing is added:<br/><br/>```ruby<br/>> User.order(:name).first<br/>  User Load (75.1ms)  SELECT "users".* FROM "users" ORDER BY name LIMIT 1<br/>```<br/>I\'m not particularly confortable changing the global behavior for a PostgreSQL specific fix but I think an adapter check wouldn\'t make sense in this area of the code. What do you think?<br/><br/>If accepted I\'d be happy to backport the fix to previous versions.<br/><br/>Cheers!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5153', 'title': u'Made `first` finder consistent among database engines by adding a default order'}, {'body': u"I know it's maybe naive implementation and tests are not perfect. Please advise if it makes sense and/or how to improve this.<br/><br/>I don't know if it would be better to inline the condition (I wanted this to be more readable):<br/><br/>``` ruby<br/>if get?<br/>  display resource, status => (resource.present? ? :ok : :no_content)<br/>end<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2c81e6be1662df5dad59a69c841440c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5146', 'title': u'Return 204 No Content status when resource is blank'}, {'body': u'was discovered here - justinfrench/formtastic#808', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5144', 'title': u'correct fetching :name option in form fields'}, {'body': u'Looks like the task names for creating databases have been namespaced.  This just updates RUNNING_UNIT_TESTS with the new task names.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d337e2cf7c6d03caac6988d83e0e7f66?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5143', 'title': u'Update with new task names for building mysql and postgresql databases'}, {'body': u'I had a problem on my production env when google bot comes it gets 500 with MissingTemplate exception. During the investigation I found that rails do not able to parse properly Accept mime type if it is only one in header AND contains quality parameter. Not sure if it is proper behaviour from the Google Bot side, but it behaves these way ( It sends Accept: \\*/\\*;q=0.9). ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/effc5d7f1ebfa5639a899f2b577f0cb5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5142', 'title': u'Accept heder parsing with single mimetype and quality param'}, {'body': u'This accidentally ended up in the development template<br/>instead of the production template, where it makes<br/>most sense.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fcd08704d8f15a0006253bd594caa8fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5140', 'title': u'Move config.autoflush_log to correct template'}, {'body': u"ActiveRecord::Generators::Base already have a better implementation of such method [1] that overrides the one I'm removing.<br/><br/>The removed one duplicates some logic of ActiveRecord::Migration.next_migration_number [2].<br/><br/>Please let me know if I'm missing something.<br/><br/>Cheers!<br/><br/>[1] https://github.com/rails/rails/blob/master/activerecord/lib/rails/generators/active_record.rb#L19<br/>[2] https://github.com/rails/rails/blob/master/activerecord/lib/active_record/migration.rb#L507", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5139', 'title': u'Remove unused implementation of next_migration_number'}, {'body': u"It likes $vbf global variables used only for debug purporses (injected at 196f780e30fcece25e4d09c12f9b9f7374ebed29 3 years ago). I didn't find this in sources or in any ruby implementation.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5138', 'title': u'Remove unused global variable in controller filters test'}, {'body': u"According [abstract_controller/callbacks.rb#L46](https://github.com/rails/rails/blob/master/actionpack/lib/abstract_controller/callbacks.rb#L46) it's imposible to skip anonymous proc filter. Let remove block paramater from skip_filter method. It make the code a little bit cleaner. All tests passed well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5137', 'title': u'Remove skip_filter block param'}, {'body': u'Proposes a solution for issue #5134.<br/><br/>ActiveRecord tests after this change (I had problems running tests for the mysql, mysql2 and postgresql adapters):<br/><br/>    (...)<br/>    3253 tests, 9918 assertions, 0 failures, 0 errors, 3 skips<br/>    (...)<br/>    Errors running test_mysql, test_mysql2, test_postgresql<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/90793237d18f9c12460d11a2db4ee277?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5135', 'title': u'Validate all associated records regardless of their dirty flag'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5133', 'title': u'Only set ActionView configuration inside the on_load block'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5132', 'title': u'Fix routes inspection order'}, {'body': u'* Wrap `validates_confirmation_of` call in option check<br/>* Rename `ActiveModel::SecurePassword::InstanceMethodsOnActivation` to \t  <br/>  `ActiveModel::SecurePassword::Authenticator` for those who just want<br/>  the `password=` and `authenticate` methods<br/>* Update documentation<br/>* Consolidate test case models as `mass_assignment_security_test`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/92a5cff471c2d13112773c4663d93d9d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5131', 'title': u'Make the password confirmation for has_secure_password optional (opt-out)'}, {'body': u'PATCH is the correct HTTP verb to map to the #update action. The<br/>semantics for PATCH allows for partial updates, whereas PUT requires a<br/>complete replacement.<br/><br/>Changes:<br/>* adds config.default_method_for_update you can set to :patch<br/>* optionally use PATCH instead of PUT in resource routes and forms<br/>* adds the #patch verb to routes to detect PATCH requests<br/>* adds #patch? to Request<br/>* changes documentation and comments to indicate support for PATCH<br/><br/>This change maintains complete backwards compatibility by keeping :put<br/>as the default for config.default_method_for_update.<br/><br/>(Continuation of Issue #505)<br/><br/>*Update:* as rinaldifonseca pointed out, there was a typo in the pull request message that said "HTML verb" instead of "HTTP verb".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5130', 'title': u'Add config.default_method_for_update to support PATCH'}, {'body': u"`:rescuable` option of the `define_callbacks` has only one usage in ActionDispatch::Callbacks and it's possible to get the same behavior without using it.<br/><br/>That is why we don't need `:rescuable` option to exists. As the result - callbacks compilation gets even more simple.<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5128', 'title': u'AS::Callbacks: deprecate rescuable option'}, {'body': u'<br/>\t  <%= javascript_tag do %><br/><br/>\t     window.myvar = \'<%= j "\\u2028\\\\\\r\\n\\"\'<>&" %>\';<br/>             alert(JSON.stringify(window.myvar));<br/>\t  <% end %><br/><br/>this produces the following output: <br/><br/>    "&amp;#x2028;\\\\\\n&quot;\'&lt;&gt;&amp;"<br/><br/>this happens because the content of a script tag is not interpreted as html except for certain sequences which look like a closing </script> tag to the browser. but rails escapes &,>,<," which means the values end up getting escaped too many times.<br/><br/>I think this is quite unexpected behaviour but may be a feature because it stops xss attacks caused by the user doing something like:<br/><br/>    my_element.innerHtml = window.myvar;<br/><br/>i\'ve added a new method to the helper called escape_javascript_string that doesn\'t cause the value of the string to be modified. it does this by changing html characters to unicode javascript escapes. example:<br/><br/>\t  <%= javascript_tag do %><br/><br/>\t     window.myvar2 = \'<%= escape_javascript_string "\\u2028\\\\\\r\\n\\"\'<>&" %>\';<br/><br/>\t     alert(JSON.stringify(window.myvar2));<br/>\t  <% end %><br/><br/>which produces the following output (chrome JSON.stringify doesn\'t escape unicode new line):<br/><br/>    "\u2028<br/>    \\\\\\r\\n\\"\'<>&"', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d586b2a89d2bafb77504ddea33b03fb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5127', 'title': u'escape_javascript helper corrupts strings'}, {'body': u"Currently, when an exception is thrown in the private method ActiveSupport::Cache::FileStore#read_entry, the exception is rescued and the method fails silently. <br/><br/>Besides failing gracefully, we should also log the exception so that it's easily debuggable.<br/><br/>This follows the convention in ActiveSupport::Cache::MemCacheStore#read_entry which logs the exception when one is thrown.<br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/15ad10eecd3bc28166b7e627cca2edeb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5125', 'title': u'#read_entry in ActiveSupport::Cache::FileStore should log details of the exception when an exception is thrown'}, {'body': u'@josevalim per https://github.com/rails/rails/commit/60dad828aefa41703c0eee3863a7141c56caa7da#diff-0', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f9d47b3d6001500a435163fa341f3a4d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5124', 'title': u"Prefer || over 'or' for boolean operations"}, {'body': u'Please see my write up on http://reefpoints.dockyard.com/ruby/2012/02/20/rails-engines-and-monkey-patching.html that goes into the advantage of this', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5120', 'title': u'Engine resource path helpers'}, {'body': u"I think that the original issue is journey's one.<br/>This PR is only rails side testcase and corresponds to https://github.com/rails/journey/pull/19.<br/><br/>I sent this PR to clarify specification as rails,although it seems that this issue is journey side issue.<br/><br/>Please see https://github.com/rails/rails/issues/5114.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5119', 'title': u'Testcase for GH #5114.'}, {'body': u'ordered_options will work if inherited from Hash, remove OrderedHash usage', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5118', 'title': u'ordered_options will work if inherited from Hash, remove OrderedHash usage'}, {'body': u"BTW, select works a little faster then find_all:<br/><br/>```ruby<br/>require 'benchmark'<br/><br/>n = [1]*100_000_000<br/>Benchmark.bm do |x|<br/>  x.report { n.select { |a| a > 1 } }<br/>  x.report { n.find_all { |a| a > 1 } }<br/>end<br/>```<br/><br/>```<br/>    user     system      total        real<br/>7.590000   0.010000   7.600000 (  7.927171)<br/>9.650000   0.010000   9.660000 (  9.634406)<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5117', 'title': u'FormOptionsHelper refactor'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/51a397f6562a4410b35c263f6a84415a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5116', 'title': u'Refactored two methods to use delete with a block'}, {'body': u'Hi all,<br/><br/>I only updated the comment for `:counter_cache`.  Hopefully this should provide an elucidation to newcomers (to Rails and the `:counter_cache` option itself)<br/><br/>Thanks, M.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dcfde00ac1fae8b575b2f9b39c7e244b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5113', 'title': u'Added clarification stating the counter_cache attribute needs to be created on the associate class via a migration'}, {'body': u'@josevalim thanks for the answer and explanation on #4899.<br/>As per the suggestion, check for  ````entry && !entry.expired?```` instead of returning true or false.<br/>Hope this looks okay.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/29a1ede310d186d0beec98381476a768?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5112', 'title': u'suggested changes.'}, {'body': u'Itemscope is defined within HTML5 as a boolean attribute for use in microdata markup. See http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#attr-itemscope', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8e2f1bf5b4855960d2994b3b30a08e04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5110', 'title': u"Adding 'itemscope' to the list of boolean attributes."}, {'body': u'``date_select`` renders the years select in an ascendent order. I think a "reverse" option would be very useful for the years select box.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ef8e27e76850a35bbf6738785b7f207b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5109', 'title': u'Add an option to date_select to reverse years (implements #5098)'}, {'body': u'`cache_key.size` returns the file size if `cache_key` is an instance of Pathname.<br/>But in this case it should be length of the filename.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6f8e101c016fa7ebbe58e693dbd86b7d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5108', 'title': u"Bug: cache_key.size doesn't return length of filename but size of file"}, {'body': u"Following the path of https://github.com/rails/rails/commit/563df87f19d21eb491f1c24dab0f59682fe0a737 I've refactored the stylesheet_link_tag too, using exactly the same principle.<br/><br/>Tests are all passing.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/51a397f6562a4410b35c263f6a84415a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5107', 'title': u'use Hash#delete on styelsheet_link_tag'}, {'body': u"Some warnings were fixed on master during running testcase, but were not fixed on 3-2-stable.<br/>Sorry, I don't search original authors.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5106', 'title': u'[3-2-stable] Fix some warnings'}, {'body': u'Please ignore the .gitignore commit... git cherry-pick FTW...', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40cd9b2ac1f350008a212b89ea037633?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5105', 'title': u'3 2 stable backport of PR 5096 from Master'}, {'body': u'Ignore the "personal changes commit" - this is backporting the fix applied to master this morning regarding tables with primary keys from nonstandard sequences. Can\'t figure out how to selectively exclude a commit... ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40cd9b2ac1f350008a212b89ea037633?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5104', 'title': u'3 1 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5102', 'title': u'form option refactor'}, {'body': u"When any code in an initializer or gem load accesses the list of view handlers (ActionView::Template::Handlers.extensions), this gets memoized which prevents new handlers (in my case, adding in Mustache via an initializer using ActionView::Template.register_template_handler) from being made available for use.<br/><br/>This patch resets the memoization so that the next time '.extensions' is called, it includes all extensions that have been registered.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dbad7218bbbea340844d6c61a60c915b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5101', 'title': u'Reset memoized hash keys when new ActionView::Template handler is registered'}, {'body': u'Addresses issue https://github.com/rails/rails/issues/5094<br/><br/>Removed apparent duplication in test, included test table with default value using nonstandard sequence for primary key as seen in my Postgres 9 environment<br/><br/>Tested using Postgresql 9.0.4/Ruby 1.9.3-p125/ps 0.13.1', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40cd9b2ac1f350008a212b89ea037633?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5096', 'title': u'Restoring ability to derive id/sequence from tables with nonstandard sequences for primary keys'}, {'body': u'Please see https://github.com/rails/rails/issues/4551.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5090', 'title': u'Fix GH #4551. Set delivery method settings to Mail.defaults.'}, {'body': u"If we don't call mail method, the method is called automatically.<br/>Or, we must always call mail method.<br/><br/>Please see https://github.com/rails/rails/issues/4946<br/><br/>Closes #4946", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5089', 'title': u"Fix GH #4946. If we don't call mail method, the method is called automatically."}, {'body': u'I also removed redundant assigns. Because the default value of include_root_in_json is true.<br/><br/>Closes #5063.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5088', 'title': u'Fix GH #5063. Support include_root_in_json for ActiveResource properly.'}, {'body': u"This is a doc patch, but I'm sending a full pull request because I'm not 100% sure of it.<br/><br/>I tried using this configuration setting in my application, and got<br/><br/>```<br/>actionpack-3.2.1/lib/action_view/railtie.rb:34:in `block (3 levels) in <class:Railtie>': undefined method `logger=' for ActionView::Base:Class (NoMethodError)<br/>```<br/><br/>I looked in rails/action_pack/lib/action_view/base.rb and it seems that logger is delegated to ActionController::Base (line 151). Last but not least, ActionView::LogSubscriber.logger uses ActionController::Base.logger directly, with a TODO saying that ActionView needs a logger.<br/><br/>Last but not least, this pull is for 3-2-stable, just in case you might like to add the logger option in Rails 4. I'll be happy to send another pull request for master, if it's desired.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d7b97642d7aeaf1011ec19e5779144e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5087', 'title': u'Remove reference to config.action_view.logger from Rails configuration guide'}, {'body': u'Fixing Rails 3.2.1 release date.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5d361c5cdfa815082d54022bc45ece2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5085', 'title': u'Update activerecord/CHANGELOG.md'}, {'body': u'References issue #5022', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/13f37bc0645d1f6a473a61710ff205ce?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5084', 'title': u"Remove reference to rails_legacy_mapper, which isn't compatible with 3.2..."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5083', 'title': u'add selected and disabled options to grouped select'}, {'body': u"This is an unintended side effect of the code to make assigns(:foo) work the same way as assigns('foo').<br/><br/>This pull request is relative to master, but the same bug and fix apply to all 3.x versions -<br/>3.2: https://github.com/willbryant/rails/tree/assigns_should_not_stringify_values_3-2-stable<br/>3.1: https://github.com/willbryant/rails/tree/assigns_should_not_stringify_values_3-1-stable<br/>3.0: https://github.com/willbryant/rails/tree/assigns_should_not_stringify_values<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c9a2d6b6be7599854a75793ecd872d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5082', 'title': u"assigns(:foo) should not convert @foo's keys to strings if it happens to be a hash"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5081', 'title': u'Fix ar test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5079', 'title': u'Fix assets test'}, {'body': u'The `db:migrate:status` rake task currently does not print the names of non-timestamped migrations (ie. older migrations and migrations generated with `config.active_record.timestamped_migrations` set to false).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f127e2238cfad74d2740f2735b814945?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5076', 'title': u'Correctly print names of non-timestamped migrations with db:migrate:status'}, {'body': u'Some applications uses full messages in frontend. <br/><br/><br/>In order to support that<br/>Added full messages parameter to `#to_json` method:<br/><br/>``` ruby<br/>@user.error.to_json(:full_messages => true) <br/>  # => "{email: \\"Email is invalid\\", password: \\"Password is too short\\"}"<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5075', 'title': u'AM::Errors: allow :full_messages parameter for #to_json'}, {'body': u"It's probably important to backport #4918 to Rails 3.2 stable.<br/><br/>/cc @josevalim @scottwb<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5073', 'title': u'Backporting #4918 with one added test for googlebot accept header as I saw it'}, {'body': u'Same as 91a9b2441783de118a2f9ec11b0aa3ae80133d91', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5072', 'title': u'Fix failing test ruby187 p358 31stable'}, {'body': u'Same as 91a9b2441783de118a2f9ec11b0aa3ae80133d91', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5071', 'title': u'Fix failing test ruby187 p358'}, {'body': u"Is there some easier way to do this in ruby I've been missing? This implementation is a little ugly, but it gets the point across.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/09842e9c3f008018f4eb71e4e74db505?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5070', 'title': u'patch Array#first to take a block'}, {'body': u'It fixes #5058', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5066', 'title': u'escape static file path to prevent double unescaping'}, {'body': u'HTML5 input type month  tag to select only year and month in YYYY-MM format', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5065', 'title': u'In order to support more HTML5 input tags month field introduced'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5064', 'title': u'move id_before_type_cast to PrimaryKey module'}, {'body': u'ActionDispatch callbacks has `rescuable` option. This test case is specifically to check it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5062', 'title': u'ActionDispatch: add missing test for callbacks'}, {'body': u"My first pull request to Rails. :)<br/><br/>Patch to make RecordInvalid errors say the class name of the model where the validation failed. This would have saved me a lot of time yesterday when my tests were failing; I thought the problem was with an attribute of the same name on a different model.<br/><br/>I need help making sure this passes tests because I couldn't get the Rails test suite to run on my machine. I tried `rake` and got `no such file to load -- sdoc`. Thoughts?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b9c927e051202fc198e70659d9827d2f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5060', 'title': u'Show class name in RecordInvalid error'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5059', 'title': u'Autoload various constants effectively in abstract connection adapter.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5056', 'title': u'move id_before_type_cast to PrimaryKey module'}, {'body': u'Options is needed for some Rails extensions to determine when<br/>referential integrity should be disabled', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5055', 'title': u'Revert "No need to pass options which is never used"'}, {'body': u'Options is needed for some Rails extensions to determine when referential\nintegrity should be disabled\n\nThis reverts commit bcb466c543451dce69403aaae047295758589d8e.\n\nFixes #5052', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5054', 'title': u'Revert "No need to pass options which is never used"'}, {'body': u'There is an example in Rails documentation that suggests implementing<br/>assign_attributes method for ActiveModel interface, that by default<br/>sends option role with nil. Since mass_assignment_authorizer never<br/>is called without args, we can move the default value internally.<br/><br/>This should be backported to Rails 3.2', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a4c98733aa55c4058927a8a675155a76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5049', 'title': u'Fix sanitize_for_mass_assigment when role is nil'}, {'body': u"The block_format ActionMailer helper method was introduced at the end of 2009 - 63b124b043dec036403f9a88aeafdf99669064e0 and tested bd96614101262e0ad0cc176ed8e2d95a5c17936b.<br/><br/>I'm not sure that block_format is widely used but I think we can make it better.<br/>I suggest to make small changes in paragraph splitting technique and increase test coverage.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5046', 'title': u'Cosmetic fixes in block_format AM helper method + test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5045', 'title': u'Fix AM format_paragraph helper method if a first word is long'}, {'body': u'Bugfix for #2525 belongs_to + :inverse_of + accepts_nested_attributes_for causes stack overflow on save<br/><br/>I run into the same issue. There is a cyclic autosave for belongs_to/has_one when using accepts_nested_attributes. It causes stack overflow.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5fcb8d7cd6cbc8f9ae091e48c1340630?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5044', 'title': u'Backport Bugfix: Stack Overflow (3-0-stable)'}, {'body': u'cc @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5042', 'title': u'"Or" was not meaningful anymore, per dad7fdc5734a3813246f238ac5760b2076932216'}, {'body': u'https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/34580<br/>In this revision behavior of respond_to? had changed: now to ask about<br/>protected method one should pass second argument `true`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/419b54e4b0c805f8ed671451ea536e19?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5039', 'title': u'sync __run_callbacks with ruby-trunk'}, {'body': u'This allows the internal :_dump task to be called as many times as required.\nFor instance, `rake db:migrate:redo` calls two tasks that internally call\n:_dump, and without reenabling it to be reinvoked, the database was left in\nincorrect state.\n\nThis should be applied to 3-2-stable as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5038', 'title': u'Always reenable _dump task in AR databases rake. Closes #5030'}, {'body': u"These translations were not used as the button helper does i18n lookup\nfor labels using the using the 'submit' key.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5036', 'title': u'Remove not used button translation from av locale'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5035', 'title': u'remove unnecessary require core_ext/string/encoding'}, {'body': u'I\'ve been working more with ActiveResource lately, specifically with services that use an Api-Key header for authentication. Through this I\'ve realized what others have before me, that headers don\'t inherit when subclassing a class that inherits from ActiveResource::Base.<br/><br/>This patch adds that ability without changing the underlying structure of @header. It allows for headers to be added at multiple points in parent\'s lifecycle and ensures those are available to the child. It also ensures that headers added to the child do NOT leak up to the parent.<br/><br/>There are probably other ways to accomplish this if you\'re willing to mess with @header and how headers are set, but this does what I think many expect with little impact.<br/><br/>Open to feedback and suggestions.<br/><br/>(Solution loosely based off an older "blog post by Brandon Keepers":http://opensoul.org/blog/archives/2010/02/16/active-resource-in-practice and the comments on that post also provide others expectations around inherited headers.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/185fff6d3aa5c70e337fa84b302050b1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5033', 'title': u'Allow ActiveResource subclasses to inherit headers from parent'}, {'body': u'This gives a lot more flexibility to the user, for instance to generate a collection of check boxes and labels, allowing to add custom classes or data-* attributes to the label/check_box using another object attribute.<br/><br/>This basically mimics options_for_select functionality that accepts a third option for each item to generate html attributes for each option.<br/><br/>Example usage:<br/><br/>```ruby<br/>f.collection_check_boxes :font_ids, Font.all, :id, :name do |b|<br/>  b.check_box + b.label(:class => b.object.class_name)<br/>end<br/>```<br/><br/>This is one request that appears from time to time in SimpleForm issues/mailing, like [this one](https://github.com/plataformatec/simple_form/issues/452).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5032', 'title': u'Allow collection helpers with block to access current object in the collection'}, {'body': u'Small improvements on compressors and static compiler.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5031', 'title': u'Sprockets compressors refactor'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5026', 'title': u'remove unused require for string encoding '}, {'body': u"Currently `serializable_hash` uses the `attributes` method which is supposed to return a hash containing string keys. It adds/removes other keys with `:only` and `:except` options, mapping them to strings. But when given the `:methods` option, it doesn't do any conversion, thus returning symbol keys.<br/><br/>This changes it to make the return of `serializable_hash` more consistent, returning string keys for `:methods`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5024', 'title': u'Fix ActiveModel serializable hash to return string keys with :methods'}, {'body': u"Disabling SSL in any environment should be a decision made by each individual developer/team - really not keen on Rails forcing this. Also, I think it's far better to have a consistent environment as much as possible across all environments. So, this patch removes the `Rails.env.development?` check in `force_ssl`.<br/><br/>As a related aside, I've just been working on a gem that makes it far easier to use SSL in development and (Capybara-driven) test environments. It's built with bartt's version of ssl_requirement in mind, but I'm keen to have it work with `force_ssl` as well (I didn't realise it existed until just now).<br/>https://github.com/freelancing-god/thin-glazed<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/29f82ebe1801087f04de6aaae92e19ea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5023', 'title': u'SSL should not be disabled by default in any environment.'}, {'body': u'Hi Guys,<br/><br/>This patch removes an old controller test. This test was made in 2005, to fix a scaffold bug, and became outdated after some code changes. (outdated means that the code with problem was removed).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c802b68aaf738f3caa5488f964f1d560?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5021', 'title': u'Removing old Controller test'}, {'body': u'Fixes #3080, but I think it might be a good idea to move that check down to `AssetsPath#compute_public_path` so we have same behavior for other asset tags.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8d24aa67d897b1505392a31b21308e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5020', 'title': u'Render img tag with empty src if empty string is passed to image_tag.'}, {'body': u'Fixes #4970 - options passing when rendering collection directly (without `:partial` option). Though, breaks passing locals hash as a separate argument and accepts them only via `options[:locals]`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8d24aa67d897b1505392a31b21308e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5019', 'title': u'Fix options passing for collection rendering.'}, {'body': u"Serialization uses only the attributes hash's keys and calls<br/>methods that are of the same name as the keys on the serialized<br/>object.<br/><br/>This would close issue #4659.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/33c29f2b85e5e80bdcec71c6e3f5a78a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5018', 'title': u'Adding documentation to clarify usage of attributes hash.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5017', 'title': u'Remove deprecated code. According to a comment, we should remove this old api code on master.'}, {'body': u'I\'m a bit surprised that this hasn\'t been added together with the other new HTML input types like "tel", "email", etc. I\'m suspecting this is because Rails already provides the alternative date/time select inputs, but there may be another reason (or maybe it was just plain oversight?).<br/><br/>I\'ve started small, by just adding support for `input[type="date"]`, as it\'s the most commonly used one (judging from my experience), and the others seem a bit more tricky to implement.<br/><br/>And since I can see this patch being potentially rejected (otherwise someone else would\'ve already implemented that feature :)), I didn\'t want to go to great length yet.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56c0f984e7a1cccbd5ea165ef310ba4f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5016', 'title': u'Add HTML5 input[type="date"] helper'}, {'body': u'This reverts commit 7381596ea32aff47222af89e4bc66000f4597acb.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5015', 'title': u'TO make build green Revert PR#5001 "removed unuseful require for reply as we are not using require model"'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5014', 'title': u'fix build #5001, model reply is required in cases/primary_keys_test too! for isolated test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5013', 'title': u'fix build #5001, reply model required in relations_test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5012', 'title': u'Alias reconnect! to reset! for Mysql2 adapter since they have same behavior.'}, {'body': u'Hi Guys,<br/><br/>This patch cleans fake controllers, removing all unused controllers.<br/><br/>Also, removes a test method without any asserts.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c802b68aaf738f3caa5488f964f1d560?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5010', 'title': u'Cleaning Route generation tests'}, {'body': u"Methods can still be added via the options hash and/or by invoking the<br/>method in the attributes method. You may still override the method in<br/>order to provide custom behavior.<br/><br/>I'm attaching a pull request for issue #4659 to demonstrate a possible solution :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/33c29f2b85e5e80bdcec71c6e3f5a78a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5009', 'title': u'Use the values side of the attributes hash by default for ActiveModel.'}, {'body': u'In some cases, an engine might want to know the path where it is mounted by the main app. Here is an example when using the paperclip gem inside an engine:<br/><br/>    module MyEngine<br/>      class MyAttachment < ActiveRecord::Base<br/>        has_attached_file :document, :styles => { :thumb => "100x100>" },<br/>            :url => "/document/:id/:style.:extension"   # where did the main_app mount me?<br/>      end<br/>    end<br/><br/><br/><br/>See also https://github.com/rails/rails/issues/4940<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b0a827b5c7dc3d1e6bc5c7ed41ff465b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5008', 'title': u'engine knows the path where it is mounted'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5006', 'title': u'handle id attribute in PrimaryKey module'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5003', 'title': u'Fix warning: The method name is a duplicate and wrong.'}, {'body': u"This problem is occured at https://bitbucket.org/ged/ruby-pg/src/a9b8576bb35c/ext/pg_connection.c#cl-581<br/>If a connection was closed already, exception is raised.<br/><br/>If necessary, I'll squash some commits.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5002', 'title': u"Fix CI test failing. It seems that pg(postgresql)'s behavior was changed since 0.13."}, {'body': u'I was just looking the code and seems that reply model is not using in the below PR files', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5001', 'title': u'removed unuseful require for reply as we are not using require model'}, {'body': u"Originally reported by @larskanis, associations break when using per-model database connections. This is due to always referencing ActiveRecord::Base's connection instead of asking for a specific connection to work with.<br/><br/>This pull request is the issue/fix described in #3732 but confirmed with tests and built on Rails 3.2. Hopefully this will ensure speedy integration this time around.<br/><br/>This is #4953, but built for master instead of 3-2-stable", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/debde181b3a5925bb347193b7568de6d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/5000', 'title': u'Fix associations with per-class/multiple database connections'}, {'body': u'As discussed in GH #4277 this allows to configure, wether the application log should always be flushed (for debugging) or only as the OS sees fit (for performance).<br/><br/>Currently it defauts to no autoflushing in production and enables it everywhere else.<br/><br/>This needs some minor editing to apply against HEAD because of commit 55cc16f.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fcd08704d8f15a0006253bd594caa8fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4998', 'title': u'Make automatic log flushing configurable'}, {'body': u'Allow to pass Symbol into :limit option of #accepts_nested_attributes_for, so you can set limit individually for each instance.<br/><br/>Passed symbol points to instance method, that returns limit.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7d116b912a4fc7986b40d5d0d0d811d6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4995', 'title': u'allow to pass Symbol into :limit option of #accepts_nested_attributes_for'}, {'body': u'`run_callbacks` has two arguments. But second one is not used any more.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4993', 'title': u'AS::Callbacks#run_callbacks: deprecated second argument'}, {'body': u'`run_callbacks` has two arguments. But second one is not used any more, so we deprecate it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4992', 'title': u'AS::Callbacks: removed support of second argument for run_callbacks.'}, {'body': u"Please see comments on https://github.com/rails/rails/issues/4720.<br/><br/>Hi! @tenderlove @fxn<br/><br/>I read comment on #4720 and transcript (after I went to bed) .<br/>I agree with @fxn 's opinion.<br/><br/>I don't modify camelize 's behavior. Please review this PR :-)<br/><br/>p.s. This issue also is occured on 3-2-stable.<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4988', 'title': u'Fix GH #4720. Routing problem with nested namespace and already camelized controller option.'}, {'body': u'Allow to pass Symbol into :limit option of #accepts_nested_attributes_for, so you can set limit individually for each instance.<br/><br/>Passed Symbol points to instance method, that returns limit.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7d116b912a4fc7986b40d5d0d0d811d6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4987', 'title': u'Allow to pass Symbol into :limit option of #accepts_nested_attributes_for'}, {'body': u"Current Range#overlaps? use Range#include? to check the coverage of range of Time.<br/><br/>Use overlaps? on Time like this:<br/><br/>    time_range_1 = Time.utc(2005, 12, 10, 15, 30)..Time.utc(2005, 12, 10, 17, 30)<br/>    time_range_2 = Time.utc(2005, 12, 10, 17, 00)..Time.utc(2005, 12, 10, 18, 00)<br/>    assert time_range_1.overlaps?(time_range_2)<br/><br/>cause:<br/><br/>    TypeError: can't iterate from Time<br/><br/>use cover? instead of include? makes Time range happy, as noted in [ruby-trunk Bug#3623][rtb3623]<br/><br/>[rtb3623]: http://bugs.ruby-lang.org/issues/3623<br/><br/><br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/596a56f308a240a02b2227367f908882?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4985', 'title': u'make Range#overlaps? accept Range of Time'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/839f782d9b8cace33c986f15435f493e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4984', 'title': u'Refactored code'}, {'body': u"Some gems like to monkey around with ActionView in a railtie. The one that prompted this issue for a client of mine was [best_in_place](https://github.com/bernat/best_in_place/blob/0d8434246dc20713df3de076c49817fb3aaeb376/lib/best_in_place/railtie.rb#L4).<br/><br/>Currently, ActionView::Template::Handlers.extensions memoizes itself into a cvar the first time it's touched. So after it's called, register_template_handlers has no effect on the recognized set of extensions. In the application in question, the problematic gem loaded before prototype-rails could register its RJS handler, and so any RJS templates raised a MissingTemplate.<br/><br/>This commit fixes register_template_handlers to clear the memoization cache so that the extensions list is always accurate. Added a test differentiating my fix from 3-1-stable.<br/><br/>I also removed memoization from LookupContext#default_handlers, since it would exhibit the same problem. It just calls Template::Handlers.extensions, which is memoized anyway, so I don't think this incurs any appreciable slowdown.<br/><br/>If this is an acceptable fix, I can also port to 3-2-stable and master. Neither 3-2-stable nor master appear to have the LookupContext issue, as that code has been refactored since 3.1. But the Template::Handlers.extensions issue exists from 3.1 through today on master.<br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/334805ec86cb3fe1ac2eda776a921fb2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4980', 'title': u'Clear template extension memoize cache on register_template_handler'}, {'body': u'column_names_with_alias allowed a nil through when used with associations without primary keys which breaks eager loading in some circumstances.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9e31c3db68535e2ac9020a176511aba6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4976', 'title': u'Fix eagerly loading associations without primary keys'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4975', 'title': u'Bump tzinfo. 0.3.31 was released on November 6, 2011.'}, {'body': u'Ex: "A pair of fives" vs. "They played fifes"<br/><br/>Also, combined hive, five, and tive in the singularizations. I tried running the tests, but I wasn\'t able to get them running quick enough. Swamped at work so I might have time later to run the tests, but if someone else wants to contribute to this minor effort, feel free.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b80cdad1beb167b16755fc0f608d019c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4974', 'title': u'fix singularization of "fives" was fife, but needs to be five'}, {'body': u'I found reference to TZInfo in active_support, but I couldn\'t find reference to TZInfo in active_record.<br/>I think that we should move dependency on tzinfo from active_record to active_support.<br/><br/>I found steps to reproduce for acitvesupport.<br/><br/>```<br/>$ cd (path to rails)<br/>$ git checkout master<br/>$ rake build<br/>$ ls -la pkg<br/>...<br/>-rw-rw-r--  1 kennyj kennyj  306688  1\u6708 12 01:13 activesupport-4.0.0.beta.gem<br/>...<br/><br/>$ gem install pkg/activesupport-4.0.0.beta.gem --no-ri --no-rdoc<br/><br/>$ cd (path to work)<br/>$ vim Gemfile<br/>source \'http://rubygems.org\'<br/>gem \'activesupport\', \'4.0.0.beta\'<br/>$ bundle install<br/>$ bundle exec irb<br/><br/>\u25a0before<br/>ruby-1.9.3-p0 :001 > require \'active_support/all\'<br/> => true<br/>ruby-1.9.3-p0 :002 > Time.find_zone!("Tokyo")<br/>You don\'t have tzinfo installed in your application. Please add it to your Gemfile and run bundle install<br/>NameError: uninitialized constant Class::TZInfo<br/>        from /home/kennyj/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-4.0.0.beta/lib/active_support/core_ext/time/zones.rb:60:in `rescue in find_zone!\'<br/>        from /home/kennyj/.rvm/gems/ruby-1.9.3-p0/gems/activesupport-4.0.0.beta/lib/active_support/core_ext/time/zones.rb:53:in `find_zone!\'<br/>        from (irb):2<br/>        from /home/kennyj/.rvm/rubies/ruby-1.9.3-p0/bin/irb:16:in `<main>\'<br/><br/>\u25a0after (with myfix)<br/>ruby-1.9.3-p0 :001 > require \'active_support/all\'<br/> => true<br/>ruby-1.9.3-p0 :002 > Time.find_zone!("Tokyo")<br/> => (GMT+09:00) Tokyo<br/>```<br/><br/>and for activerecord<br/><br/>```<br/>~/rails(fix_4909)$ cd activerecord/<br/>~/rails/activerecord(fix_4909)$ find . -name "*" -print | xargs grep "tzinfo"<br/>./CHANGELOG.md:*   Removing unnecessary uses_tzinfo helper from tests, given that TZInfo is now bundled *Geoff Buesing*<br/>~/rails/activerecord(fix_4909)$ find . -name "*" -print | xargs grep "TZInfo"<br/>./CHANGELOG.md:*   Removing unnecessary uses_tzinfo helper from tests, given that TZInfo is now bundled *Geoff Buesing*<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4973', 'title': u'Fix GH #4909. Dependency on TZInfo move from AR to AS.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/839f782d9b8cace33c986f15435f493e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4969', 'title': u'Refactored code'}, {'body': u'Test case refactored', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/839f782d9b8cace33c986f15435f493e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4967', 'title': u'Refactored the nested attributes testcase '}, {'body': u'...ered one', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4966', 'title': u'moving ordered hash to normal hash because ruby 1.9.3 hash defaultly ord...'}, {'body': u'Refactored OrderedHash related code', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/839f782d9b8cace33c986f15435f493e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4965', 'title': u'Refactored the OrderedHash related stuff'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2224acac6b9f3f0e7728322f48866d1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4964', 'title': u'Remove some whitespaces'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c392d4dcb600baab0b81f2952728fcdd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4963', 'title': u'Replaced OrderedHash usage with Ruby 1.9 Hash'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/839f782d9b8cace33c986f15435f493e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4961', 'title': u'OrderHash related code replaced with Ruby Hash'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c392d4dcb600baab0b81f2952728fcdd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4960', 'title': u'The order hash removed for ruby-1.9'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c392d4dcb600baab0b81f2952728fcdd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4959', 'title': u'Replaced OrderedHash with Hash for ruby 1.9 series'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4958', 'title': u'removed unnecessary code'}, {'body': u'Changed the ordered hash with hash', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4957', 'title': u'replacing the orderhash with hash for ruby-1.9'}, {'body': u'Add a `where` option to `add_index` in order to support PostgreSQL partial indices.<br/><br/>```ruby<br/>add_index(:accounts, :code, :where => "active")<br/>```<br/><br/>... generates ...<br/><br/>```sql<br/>CREATE INDEX index_accounts_on_code ON accounts(code) WHERE active<br/>```<br/><br/>Also made `SchemaDumper` recognize the where statements in the indices and dump them to schema.rb.<br/><br/>This is my first contribution to AR so please let me know if I missed something.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4956', 'title': u'Add support for partial indices to PostgreSQL adapter'}, {'body': u"Originally reported by @larskanis, associations break when using per-model database connections. This is due to always referencing ActiveRecord::Base's connection instead of asking for a specific connection to work with.<br/><br/>This pull request is the issue/fix described in #3732 but confirmed with tests and built on Rails 3.2. Hopefully this will ensure speedy integration this time around.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/debde181b3a5925bb347193b7568de6d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4953', 'title': u'Fix associations with per-class/multiple database connections, part 2'}, {'body': u"<br/>I'm interested in using the ActiveSupport::Testing::Performance module and was surprised to see that it requires and calls code from ActionView.  Is this intentional?<br/><br/>I'd like to use this module in a context without ActionView, so I'm submitting a pull request that decouples ActiveSupport from ActionView.<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aed424af11b9f92cca6c051f75f013b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4952', 'title': u'Decoupling ActiveSupport from ActionView'}, {'body': u'Active model errors test title changed corresponding to the test behaviour', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4950', 'title': u'Test title changed corresponding to the test'}, {'body': u'Since Ruby 1.9 + defaults Hash works as Ordered Hash and rails 4 has minimum requirement of ruby 1.9 ++ we can replace the ActiveSupport Ordered hash to ruby hash. Checked the tests looks good.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4949', 'title': u'replaced active support ordered hash to ruby hash on active resource'}, {'body': u"Adding RAILS_COMMAND constant on initialization process, so with that a gem can access which rails command is being executed:<br/><br/>On rails initializer hook you can't know which rails command is running. with that I can use is on a hook like this:<br/><br/>    config.after_initialize do<br/>      puts RAILS_COMMAND<br/>    end", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/33abb5182937ebcc3765f224aa74c16d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4948', 'title': u'3 2 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4947', 'title': u'PostgreSQL does not work in the same way of the other adapters'}, {'body': u'<br/>Removed the buffered_logger test references..', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4945', 'title': u'removing the buffered_logger and related test'}, {'body': u'a379cb2fb5c61f3108593ff96a74ca9c99300b09', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4944', 'title': u'Build fix for'}, {'body': u'When Relation has some joined table, columns like `id` will become ambiguous. <br/>This patch automatically plucks column from main table if possible, like:<br/><br/>``` ruby<br/>User.joins(:projects).pluck(:id) # select users.id from users join projects on ...', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4942', 'title': u'AR::Relation#pluck: improve to work with joins'}, {'body': u'This will fix the build', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4941', 'title': u'Use real table and columns for index test'}, {'body': u'I fixed the match docs added in this commit: 007c41100b06db53630ce60048eaa625a9e955ee\n\nI opened this pull request because the docrails repository is not updated', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4934', 'title': u'Fix match docs'}, {'body': u'Latest changes in remote ip handling conflicted with each other in<br/>tests. Related:<br/><br/>dd09811fa6214a130fdc2de1d4c00b4337cb15f9<br/>6a720226aad2adffcbd2422d40db772719579e2f', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4932', 'title': u'Fix failing request test'}, {'body': u'Since Ruby 1.9 + defaults Hash works as Ordered Hash and rails 4 has minimum requirement of ruby 1.9 ++ we can replace the ActiveSupport Ordered hash to ruby hash. Checked the tests looks good.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4930', 'title': u'Replacing ordered hash to ruby hash on active model'}, {'body': u'Since Ruby 1.9 + defaults Hash works as Ordered Hash and rails 4 has minimum requirement of ruby 1.9 ++ we can replace the ActiveSupport Ordered hash to ruby hash. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4929', 'title': u'Replacing Ordered Hash to Ruby Hash'}, {'body': u'This is a cherry-pick from 3-2-stable.  For more info, see https://github.com/rails/rails/pull/4916<br/><br/>---<br/><br/>`ActionController.force_ssl` redirects http URLs to their https equivalent; however, when a URL contains a query string, the resulting redirect lacked the original query string.<br/><br/>For example, this URL (with force_ssl):<br/><br/>    http://example.com/widgets/new?name=foo<br/><br/>Only redirects to:<br/><br/>    https://example.com/widgets/new', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f5f0ea6a2dc7ed3cb5830377a4fe7e2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4928', 'title': u'Fix force_ssl redirect with params'}, {'body': u'The documenation about "to_xml" is buggy. I spent some time on debugging and reading the rails source and found the bug in the documenation.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43b39b50295b675199c4d037321619ae?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4926', 'title': u'Fixed documenation'}, {'body': u'When we use these tags with only one source the HTML generated is the following:<br/><br/>```html<br/><audio src="http://somewhere.com/path-to-audio.mp3" /><br/>```<br/><br/>When we put another tag bellow this one it shows the content inside the audio tag.<br/><br/>After this pull request these helpers always generate the HTML with close tag, like this:<br/><br/>```html<br/><audio src="http://somewhere.com/path-to-audio.mp3"></audio><br/>```<br/><br/>Closes #4919', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4924', 'title': u'Fix audio_tag and video_tag helpers'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4920', 'title': u'In Rails 3.2.x --edge generate apps with rails 3-2-stable'}, {'body': u"An HTTP request header like this:<br/><br/>    Accept: text/html;q=0.9<br/><br/>Is valid according to the HTTP spec, but is not handled well by `Mime::Type.parse`. It is not uncommon to receive requests like this from bots and, according to one source, the PSP's browser. The failed parsing typically manifests itself as a `MissingTemplate` error.<br/><br/>This change fixes issue #736, which is not currently open, but should be.<br/><br/>The fix should be easy to also apply to 3.x branches. I'd be happy to help with that if necessary.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f39f37543b7245c070192a8dfc5bd305?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4918', 'title': u'Fix MIME::Type.parse handling of single media with a q value'}, {'body': u'This should fix the build for 3-2-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4917', 'title': u'Fix failing test for edge gemfile option'}, {'body': u'`ActionController.force_ssl` redirects http URLs to their https equivalent; however, when a URL contains a query string, the resulting redirect lacked the original query string.<br/><br/>For example, this URL (with force_ssl):<br/><br/>    http://example.com/widgets/new?name=foo<br/><br/>Only redirects to:<br/><br/>    https://example.com/widgets/new', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f5f0ea6a2dc7ed3cb5830377a4fe7e2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4916', 'title': u'Fixed force_ssl redirects to include original query params'}, {'body': u'`ActionController.force_ssl` redirects http URLs to their https equivalent; however, when a URL contains a query string, the resulting redirect lacked the original query string.<br/><br/>For example, this URL (with `force_ssl`):<br/><br/>    http://example.com/widgets/new?name=foo<br/><br/>Only redirects to:<br/><br/>    https://example.com/widgets/new<br/><br/>**This pull request is based off of the 3-2-stable branch.**<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f5f0ea6a2dc7ed3cb5830377a4fe7e2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4915', 'title': u'Fix force ssl redirect with params'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4912', 'title': u'Add branch to sass-rails and coffee-rails for apps generated with --dev or --edge (3-2-stable)'}, {'body': u'In order that temp filenames generated from it will fit in 255 chars. See https://github.com/rails/rails/issues/4907', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c150a49c7709fa40bffca545ecf8942d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4911', 'title': u'Reduce FILENAME_MAX_SIZE in ActiveSupport::Cache::FileStore'}, {'body': u'Commit https://github.com/rails/rails/commit/8ee6406acc67aa721127d69486bf8e244ea6d576 introduces a bug when specifying a template in the database.yml file. PGConn dies if you try to pass this option to it. It must be filtered out.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4d4c378e3a10e2d01a636a33c359734c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4910', 'title': u'prevents the database.yml template option from being passed to PGConn'}, {'body': u'Fix url_for method\'s behavior when it is passed with :controller option which starts with "/" in a multiple nested controller. Please see a testcase, and https://github.com/rails/rails/issues/3864<br/><br/>```<br/> 1) Failure:<br/>test_controller_option_which_starts_with_\'/\'_from_multiple_nested_controller(TestMultipleNestedController) [test/dispatch/routing_test.rb:2593]:<br/>Expected: "/pooh"<br/>  Actual: "/foo//pooh"<br/>```<br/><br/>It seems that this problem is occured on 3-1-stable, 3-2-stable, and master.<br/><br/>Closes #3864', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4908', 'title': u"Fix url_for method's behavior. GH #3684."}, {'body': u'Allow infinite values for validates_length_of. Particularly useful<br/>for prettily defining an open ended range such as<br/><br/>validates_length_of :human_stupidity, :within => 0..Float::INFINITY', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1732604c725e2ddd83c3ea85d9deb2a6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4905', 'title': u'Infinity should be a valid validates_length_of maximum'}, {'body': u'Changing active model dirty module helper method to more appropriate method with helper #4903', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4904', 'title': u'Changing active model dirty module helper method to more appropriate met...'}, {'body': u'Changing active model dirty module helper method to more appropriate helper method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4903', 'title': u'Changing active model dirty module helper method to more appropriate hel...'}, {'body': u'Fixes #4837 - value_before_type_cast returns value not ActiveRecord::AttributeMethods::Serialization::Attribute<br/><br/>Hello. I found a solution how to fix #4837. If you will agree with this patch, I need to help with test. I tried to use<br/><br/>``` ruby<br/>@topic = Topic.new<br/><br/>assert_dom_equal(<br/>  \'<input id="topic_content" name="topic[content]" size="30" type="text" />\', text_field(:topic, :content)<br/>)<br/>```<br/>but because of Topic is not real AR model, it throws ```undefined method serialized_value for nil```. Should I fake behavior to that model in test ?<br/><br/>Also new "custom serializer option" feature is not mentioned in docs. So if you will be happy with this PR, I can improve some docs also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5d361c5cdfa815082d54022bc45ece2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4902', 'title': u'Fixes #4837 - value_before_type_cast returns value '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/29a1ede310d186d0beec98381476a768?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4901', 'title': u'spaces stripped'}, {'body': u'Issue #4897<br/><br/>`rake db:migrate` uses mass-assignment https://github.com/rails/rails/blob/master/activerecord/lib/active_record/migration.rb#L777 that causes error when `config.active_record.whitelist_attributes` is set to `true`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4900', 'title': u'allow mass-assign version attribute in AR::SchemaMigration'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/29a1ede310d186d0beec98381476a768?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4899', 'title': u'code simplified'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/29a1ede310d186d0beec98381476a768?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4898', 'title': u'code refactored'}, {'body': u'Thanks for adding the hstore support, this is great. It\'s missing a couple of cases though and doesn\'t quite match the postgres docs, for example "Double-quote keys and values that include whitespace, commas, =s or >s" and "A value (but not a key) can be an SQL NULL."  Here are some additional tests (some examples copied from the hstore distribution tests) and code that I think is correct.  I previously contributed a version of it to https://github.com/softa/activerecord-postgres-hstore .', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c3e0a57ba9f3039d4f148f87a7cb9152?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4896', 'title': u'Hstore parser/generator fixes'}, {'body': u'This method invoke a block and replace each elements with a block result, like Array#map! method. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e6c4fa0f699bd230ff6ba15a35ac3947?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4895', 'title': u'Added deep_map! instance method for Hash'}, {'body': u'Replaces pull request #2341', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4893', 'title': u'Highlight defaults to HTML5 `mark` element'}, {'body': u'Rake task "notes" doesn\'t displays annotations from .coffee files.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fbae41878cd08695082927e99420b02b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4892', 'title': u'Display annotations from .coffee files in `rake notes`'}, {'body': u'Supported start_day argument for Time#all_week.<br/><br/>Please see https://github.com/rails/rails/issues/4883<br/><br/>/cc @spastorino<br/><br/>Closes #4883', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4891', 'title': u'[master] Optional start_day argument for Time#all_week.'}, {'body': u'Supported start_day argument for Time#all_week.<br/><br/>Please see https://github.com/rails/rails/issues/4883<br/><br/>/cc @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4890', 'title': u'GH #4883. Optional start_day argument for Time#all_week'}, {'body': u'Supported start_day argument for Time#all_week.<br/><br/>Please see https://github.com/rails/rails/issues/4883<br/><br/>/cc @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4889', 'title': u'GH #4883. Optional start_day argument for Time#all_week'}, {'body': u'I could not find a testcase for non english filename (for action_dispatch/middleware/static.rb)<br/><br/>Please see also https://github.com/rails/rails/pull/2982.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4888', 'title': u'Add a testcase for non english filename. Related to #2982.'}, {'body': u'Cleanup the code:<br/><br/>* Remove unused arguments<br/>* Remove unused instance variables<br/>* Remove code dups', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4886', 'title': u'AS::Callbacks: remove unused code'}, {'body': u'Added the option of :callbacks => false to create, create!, save, save!, update_attribute, update_attributes, and destroy.<br/><br/>This will allow anyone to easily disable the before/after create/save/update/destroy callbacks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/648553f5c693d93c9ea2e042857ad22c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4885', 'title': u'added :callbacks => false functionality for create, save, update_attribute(s), and destroy'}, {'body': u'I have recently been experiencing situations where I\'ve wanted to create or save a record and not have the model\'s callbacks fire.  I have had to manually deal with this in my models by adding procs to the callback declarations, such as:<br/><br/>before_save :my_method, :unless => proc { should_skip_callback? }<br/><br/>...  Where a model has many callbacks, this can quickly become very tedious and result in noisy code.  So I have taken it upon myself to add this functionality within ActiveRecord, so you can now call:<br/><br/>Foo.create_without_callbacks<br/>Foo.create_without_callbacks!<br/>@foo.save_without_callbacks<br/>@foo.save_without_callbacks!<br/>@foo.update_attribute_without_callbacks(:bar, "bar")<br/>@foo.update_attributes_without_callbacks(:bar => "bar")<br/>@foo.update_attributes_without_callbacks!(:bar => "bar")<br/>@foo.destroy_without_callbacks<br/><br/>I hope others will find this to be useful, I\'ve seen quite a few posts on Stack Overflow where people are wanting to be able to do this:<br/><br/>http://stackoverflow.com/questions/4491728/rails3-disable-activerecord-callbacks<br/>http://stackoverflow.com/questions/632742/how-can-i-avoid-running-activerecord-callbacks<br/>http://stackoverflow.com/questions/1342761/how-to-skip-activerecord-callbacks<br/><br/>etc.<br/><br/>Thank you.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/648553f5c693d93c9ea2e042857ad22c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4884', 'title': u"added skip_callbacks functionality to ActiveRecord's save, create, destroy, update_attributes methods"}, {'body': u'This is a revised and expanded version of the solution in pull request #3046. I\'ve added deprecated paths for older-style responses and updated the documentation.<br/><br/>To summarize the discussion, ActiveResource currently fails to correctly parse errors issued by `ActionController::Responder` when using the default JSON format. This patch corrects that behavior, and includes handling for both the previously documented format (an "errors" key, with an array of messages) and the previous behavior of `ActionController::Responder` (a hash of attributes and errors, no root key) that was corrected in #3272 for Rails 3.2.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6883e5ef03484d4fcef507d7b4f1d243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4881', 'title': u'Make ActiveResource error parsing interoperate with ActionController'}, {'body': u"I don't allow swapping same class middleware in current implementation.<br/><br/>```ruby<br/>config.middleware.swap ActionDispatch::ShowExceptions,<br/>  ActionDispatch::ShowExceptions,<br/>  lambda { |env| [ 500, {}, ['error!'] ] }<br/>```<br/><br/>Please see https://github.com/rails/rails/issues/4873<br/><br/>This issuei is also existed on 3-2-stable..", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4879', 'title': u'Fix GH #4873. Allow swapping same class middleware.'}, {'body': u"https://github.com/rails/rails/pull/2072 has been stale for a while now pending documentation. So, here goes: I've cherry picked the original commit and added changelog and docs. cc: @fxn @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4878', 'title': u'PR #2072 with docs'}, {'body': u'This commit drops the support of `:per_key` option as it\'s "for perfomance" role is no longer makes sense.<br/><br/>All tests with `:per_key` option was converted into general `:if` and `:unless` to make sure we migrate smoothly.<br/>If someone is using `:per_key` option outside of rails - he will receive this message:<br/><br/>``` ruby<br/>raise NotImplementedError, ":per_key option is no longer supported. Use generic :if and :unless options instead."<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4877', 'title': u'AS::Callbacks: rip out per_key option.'}, {'body': u'Adds `image_url`, `javascript_url`, `stylesheet_url`, `audio_url`, `video_url`, and `font_url` to assets tag helper. These URL helpers will return the full path to your assets. This is useful when you are going to reference this asset from external host.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4875', 'title': u'Add *_url helpers to get the full assets URL'}, {'body': u'The root element in JSON serialization in Rails 3.2.1 is always present, regardless of the setting of `ActiveResource::Base.include_root_in_json`. This fix makes `ActiveResource::Base#to_json` obey the setting, and includes a test to make sure the setting works.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a6bc6c5c117e16e743a9065b0243e1af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4874', 'title': u'Ensure ActiveResource serialization obeys ActiveResource::Base.include_root_in_json'}, {'body': u"Default responder was only using the given respond block when user<br/>requested for HTML format, or JSON/XML format with valid resource. This<br/>fix the responder so that it will use the given block regardless of the<br/>validity of the resource. Note that in this case you'll have to check<br/>for object's validity by yourself in the controller.<br/><br/>See #4796. This is for 3-2-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4870', 'title': u'Fix override API response bug in respond_with'}, {'body': u"Default responder was only using the given respond block when user<br/>requested for HTML format, or JSON/XML format with valid resource. This<br/>fix the responder so that it will use the given block regardless of the<br/>validity of the resource. Note that in this case you'll have to check<br/>for object's validity by yourself in the controller.<br/><br/>See #4796. This is for master.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4869', 'title': u'Fix override API response bug in respond_with'}, {'body': u"'uninitialized constant ActiveRecord::Deprecation in Rails3.2.1'<br/><br/>Just a typo of 'ActiveSupport::...'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b8694f617d0f589f887ac146977b2f0c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4868', 'title': u'Fix Issue #4819'}, {'body': u'in /active_record/connection_adapters/abstract/schema_statements.rb line 429<br/><br/>```ruby<br/>if table_exists?(si_table)<br/>  ActiveRecord::Deprecation.warn "Usage of the schema table `#{si_table}` is deprecated. Please switch to using `schema_migrations` table"<br/><br/>  old_version = select_value("SELECT version FROM #{quote_table_name(si_table)}").to_i<br/>  assume_migrated_upto_version(old_version)<br/>  drop_table(si_table)<br/>end<br/>```<br/><br/>It called \'ActiveRecord::Deprecation.warn\',<br/>It is typo of \'ActiveSupport::Deprecation.warn\'.<br/><br/>Since MyApp was so old (ver1.2.6), <br/>it had schema_info table, so I came accross this typo.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b8694f617d0f589f887ac146977b2f0c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4867', 'title': u"Issue #4819 'uninitialized constant ActiveRecord::Deprecation in Rails3.2.1'"}, {'body': u'This commit remove a hacky usage of Callbacks when `"!halted"` is passed as to `:if` for after callbacks.<br/>`halted` is an internal local variable and it should not be used from outside.<br/><br/>This commits adds `:terminate_after_callbacks` option instead:<br/><br/>```<br/># * <tt>:terminate_after_callbacks</tt> - Determines if after callbacks should be terminated<br/>#   by the <tt>:terminator</tt> option. By default after callbacks executed no matter<br/>#   if callback chain was terminated or not.<br/>#   Option makes sence only when <tt>:terminator</tt> option is specified.<br/>#<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4866', 'title': u'AS::Callbacks#define_callbacks: add :terminate_after_callbacks option'}, {'body': u"This commit removes the only one usage of `:per_key` option as it currently doesn't make sense. See #4493.<br/><br/>So, it's not used by Rails anymore.<br/>Now we can deprecate and just remove it. This will safe additional performance and reduce lines of code.<br/>I would say that we can remove it bypassing deprecation, because:<br/><br/>* I can't believe somebody is using it outside of rails <br/>* There is a clean way how it can be reworked with general `:unless` and `:if` option<br/>* Next release will be major<br/><br/>What do you think guys?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4865', 'title': u'AC::Callbacks: remove usage of :per_key option from filters'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/29a1ede310d186d0beec98381476a768?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4864', 'title': u'minor refactoring'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6621ca717b64e2e1717b2af82e3762b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4863', 'title': u'Added note about new Unicode version.'}, {'body': u'http://www.geek.com/articles/geek-pick/unicode-6-1-released-complete-with-emoji-characters-and-a-pile-of-poo-2012022/', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6621ca717b64e2e1717b2af82e3762b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4862', 'title': u'Update Unicode database to recently-released 6.1.'}, {'body': u'See #3892', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4861', 'title': u'Verbose output for tests.'}, {'body': u"It is usually useful to be able to hide a generator when running `rails generate` command. Such generators might be used only to dry up generators code and shouldn't be available to end users.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4860', 'title': u'Add convenience method to hide a generator from the available ones'}, {'body': u'Hash.fetch is a powerful way of getting a value from a hash with a default, and is becoming a popular idiom.<br/><br/>Add a method to ActiveRelation to provide a way to find_or_build from an already built relation (with .where methods), without the need for an intermediate local variable or noisy .tap call.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/883c3f1191ae15da9001b55ad2ad01e2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4859', 'title': u'Add ActiveRecord::Relation#fetch, similar to Hash#fetch'}, {'body': u'Running rake assets:precompile produces the following<br/><br/><pre><br/>rake assets:precompile<br/>/Users/artem/.rvm/rubies/ruby-1.9.3-p0/bin/ruby /Users/artem/.rvm/gems/ruby-1.9.3-p0@rails-edge/bin/rake assets:precompile:all RAILS_ENV=production RAILS_GROUPS=assets<br/></pre><br/><br/>There is an extra line showing a command that I did not ask for. Looks harmless.<br/><br/>However, when running from Capistrano the result is the following:<br/><br/><pre><br/>cap deploy<br/>[snip]<br/><br/>  * 21:16:28 == Currently executing `deploy:assets:precompile\'<br/>  * executing "cd /home/rails/captest/releases/20120203051625 &amp; &amp; bundle exec rake RAILS_ENV=production RAILS_GROUPS=assets assets:precompile"<br/>    servers: ["192.168.147.17"]<br/>    [192.168.147.17] executing command<br/>*** [err :: 192.168.147.17] /usr/bin/ruby /home/rails/captest/shared/bundle/ruby/1.9.1/bin/rake assets:precompile:nondigest RAILS_ENV=production RAILS_GROUPS=assets<br/>*** [err :: 192.168.147.17] <br/><br/>[snip]<br/></pre><br/><br/>The output comes out on stderr and Capistrano and automations built on Capistrano treat it as an error.<br/><br/>This small annoyance was big enough for me to actually find out why rake assets:precompile produces stderr output in a deployment mode.<br/><br/>The cause of this is the following commit to rake:<br/>https://github.com/jimweirich/rake/commit/d383d953e1fe791422052dd1236dcf29255c09a6<br/><br/>By default FileUtilsExt.verbose_flag = DEFAULT = Object.new (not true/false/nil etc) which has the same effect as the default true.<br/><br/>Arguable, Rake\'s FileUtilsExt default verbose = on setting is there by design and it may be a reasonable default for Rake. However, verbose = on is not a reasonable default for Rails because of deployment tools that treat output on stderr as errors.<br/><br/>With the attached fix the behavior changes to the following:<br/><br/><pre><br/>$ rake assets:precompile<br/>$ rake assets:precompile -v<br/>/Users/artem/.rvm/rubies/ruby-1.9.3-p0/bin/ruby /Users/artem/.rvm/gems/ruby-1.9.3-p0@rails-edge/bin/rake assets:precompile:all RAILS_ENV=production RAILS_GROUPS=assets<br/>$<br/></pre>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d1a13f9fc0383181bedaf8d6b7eb9ce?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4858', 'title': u'Setting the RakeFileUtils.verbose_flag default to false'}, {'body': u"Pull request to fix issue #4840 (cc @tenderlove)<br/><br/>I don't really like the fact it's checking the variable every time the column is accessed, but unless we want to play around with the initialisation of the variable, it seems to be the most robust way.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4856', 'title': u'Allow store to be a not null column.'}, {'body': u'This is related with #4850 and should fix the build', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4853', 'title': u"columns method doesn't have name argument"}, {'body': u'@rafaelfranca and I have been working to move SimpleForm\'s `collection_radio_buttons` and `collection_check_boxes` helpers to Rails. They work in a similar way to `collecion_select`, but generating a collection of radio_button/check_box + label for each item in the given collection. Here is an example usage:<br/><br/>```ruby<br/>collection_check_boxes :post, :author_ids, Author.all, :id, :name<br/>```<br/><br/>It\'d output something like:<br/><br/>```html<br/><input id="post_author_ids_1" name="post[author_ids][]" type="checkbox" value="1" /><br/><label for="post_author_ids_1">D. Heinemeier Hansson</label><br/><input id="post_author_ids_2" name="post[author_ids][]" type="checkbox" value="2" /><br/><label for="post_author_ids_2">D. Thomas</label><br/><input name="post[author_ids][]" type="hidden" value="" /><br/>```<br/><br/>It is possible to customize the output by giving a block to the helper. This block receives an argument, which is an "special builder" that is able to generate a label and radio_button/check_box for the given item context. For instance:<br/><br/>```ruby<br/>collection_check_boxes(:post, :author_ids, Author.all, :id, :name) do |b|<br/>  b.label(:"data-value" => b.value) { b.check_box + b.text }<br/>end<br/>```<br/><br/>The helpers `label` and `check_box`/`radio_button` are available inside the block, scoped to the current element being rendered, that also accepts extra html options. The current `text` and `value` methods are also available for use, allowing better customization.<br/><br/>This PR also adds the ability for `collection_select` to receive proc values as `text_method` and `value_method`, something we\'ve added to collection check_boxes/radio_buttons/select helpers in SimpleForm.<br/><br/>Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4851', 'title': u'Collection radio buttons / check boxes helpers'}, {'body': u'See #338.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4850', 'title': u'Remove useless argument in #columns.'}, {'body': u'When the new html5 attribute :form is given to the check_box helper, it should be replicated to the hidden field as well. <br/><br/>Closes #4848', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4849', 'title': u'Replicate :form html5 attribute to hidden field for check_box'}, {'body': u"In cases where the query bind is `nil`, `exec_explain` raises the following error:<br/><br/>    NoMethodError: undefined method `empty?' for nil:NilClass<br/><br/>This patch changes `unless bind.empty?` to `unless bind.blank?` and adds a test case for a `nil` bind.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4845', 'title': u'Query bind nil bug'}, {'body': u"In cases where the query bind is `nil`, `exec_explain` raises the following error:<br/><br/>    NoMethodError: undefined method `empty?' for nil:NilClass<br/><br/>This patch changes `unless bind.empty?` to `unless bind.blank?` and adds a test case for a `nil` bind.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4844', 'title': u'Fix for query bind nil bug'}, {'body': u'hi,<br/><br/>You may find String#tr clearer than String#gsub in this case (YMMV)<br/><br/>Incidentally it\'s also faster...<br/>    >> a = \'hello "id` world\'; Benchmark.realtime { 500_000.times { a.tr(\'`"\', "") } }<br/>    => 0.7388770580291748 <br/>    >> a = \'hello "id` world\'; Benchmark.realtime { 500_000.times { a.gsub(/[`"]/, "") } }<br/>    => 1.7843739986419678 <br/><br/>Best,<br/>Seamus', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b541e45c86f3b6213b6e87af0f537401?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4843', 'title': u'Possibly clearer way of getting rid of ` and "'}, {'body': u'The existing documentation was written in c1304098cca8a9247a9ad1461a1a343354650843, but has become outdated, most notably as of c7408a0e40545558872efb4129fe4bf097c9ce2f.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2c1a10ad0cce0f73e11a2a558a69f97c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4842', 'title': u'Update documentation for register_template_handler'}, {'body': u"<br/> We need to know if the reflection macro is equal to has_one in two lines so I'd cached in a variable ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fab62c8f6e960775233a221ce9dd252?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4835', 'title': u'Refactor define_restrict_dependency_method using reflection'}, {'body': u"Re-submit of https://github.com/rails/rails/pull/4810<br/><br/>According to http://www.postgresql.org/docs/9.1/static/app-psql.html (which hasn't changed since at least version 7.0), the psql command line tool optionally takes a username as its last argument. However, the rake db:test:prepare task is mistakenly passing in the template database from database.yml.<br/><br/>This bug probably hasn't been discovered until now because it requires users to be using a sql schema dump (by using in application.rb: config.active_record.schema_format = :sql) AND to have specified a template in their database.yml.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4d4c378e3a10e2d01a636a33c359734c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4834', 'title': u'Fix usage of psql in db:test:prepare'}, {'body': u'@tenderlove<br/><br/>There seems to be a problem how or when identity map stores its records.<br/><br/>With using the identity map the test test_instantiation_doesnt_try_to_require_corresponding_file (inheritance_test.rb) fails because the line<br/><br/>foo = Firm.find(:first).clone<br/><br/>stores foo in the identiy map before the type is set to FirmOnTheFly. So querying for Firm.find hits the identity map cache and returns foo. So I used IdentityMap.without in the test.<br/><br/>One way would be to check the type attribute of the returned record what do you think?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76826abddc8de48a827288cb7e68ab89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4833', 'title': u'Fixes Tests of pull request 4746'}, {'body': u'See https://github.com/rails/rails/pull/4684#commitcomment-920313', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4832', 'title': u'Use https://rubygems.org source for default Gemfile'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4830', 'title': u'Fix typo'}, {'body': u'This also fix the railties build', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4829', 'title': u'Use human attribute name to show the dependent destroy message'}, {'body': u'@josevalim as per the comments in<br/><br/>https://github.com/rails/rails/commit/23074c81a5e0b1e08e2e6555053678e8d656f484#commitcomment-922035<br/><br/>I have modified the messages for has_one and has_many :dependent => :restrict method.<br/><br/>Is this good enough or should I only change the model to human name ?<br/>please comment. Thanks. :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4828', 'title': u'fix has_one, has_many restrict error message'}, {'body': u"`plugin_new` generator doesn't generate `sass-rails` in the Gemfile, so<br/>you can't check for that.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4827', 'title': u'Fix plugin_new test failure from c8c84397'}, {'body': u'I think that the cause of the problem is difference of concept for underscore and camelize in helpers.rb (actionpack) and plugins_new_generator.rb (railties)<br/><br/>I modified plugins new generator\'s acceptable characters for constants name. because I prevent this issue.<br/>"-" is not acceptable characters anymore :)<br/><br/>Please see https://github.com/rails/rails/issues/4737.<br/><br/>/cc @josevalim @drogus<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4826', 'title': u'Fix GH #4737. Missing helper file (LoadError) in mountable plugin.'}, {'body': u'`ruby_debugger_gemfile_entry` was removed from the generator in #4814.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4825', 'title': u'Fix broken test introduced from #4814'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4823', 'title': u'Cleaned up ruby_debugger_gemfile_entry'}, {'body': u'Backport from master (see issue #4821)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4822', 'title': u'Generate strict validation error messages with attribute name (3-2-stable)'}, {'body': u'Related to this [commit/comments](https://github.com/rails/rails/commit/8620bf90c5e486e1ec44b9aabb63f8c848668ed2#commitcomment-922322)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4821', 'title': u'Generate strict validation error messages with attribute name'}, {'body': u'fixed <br/><br/>```ruby <br/>  1) Error:<br/>807test_should_return_string_as_json(MultibyteCharsTest):<br/>808NoMethodError: undefined method `as_json\' for "\u3053\u306b\u3061\u308f":String<br/>809    /home/vagrant/builds/rails/rails/activesupport/lib/active_support/multibyte/chars.rb:192:in `as_json\'<br/>810    /home/vagrant/builds/rails/rails/activesupport/test/multibyte_chars_test.rb:92:in `test_should_return_string_as_json\'<br/>811    /home/vagrant/builds/rails/rails/vendor/bundle/ruby/1.9.1/gems/mocha-0.10.3/lib/mocha/integration/mini_test/version_230_to_262.rb:28:in `run\'<br/>812    /home/vagrant/builds/rails/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:29:in `block in run\'<br/>813    /home/vagrant/builds/rails/rails/activesupport/lib/active_support/callbacks.rb:366:in `_run__36564177__setup__callbacks\'<br/>814    /home/vagrant/builds/rails/rails/activesupport/lib/active_support/callbacks.rb:368:in `__run_callbacks\'<br/>815    /home/vagrant/builds/rails/rails/activesupport/lib/active_support/callbacks.rb:80:in `run_callbacks\'<br/>816    /home/vagrant/builds/rails/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:28:in `run\'<br/><br/>```<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4818', 'title': u'Build fix when running isolated test'}, {'body': u'In 3-2-stable, when we run `rails new app --edge`, we see the following lines in Gemfile.<br/><br/>```<br/>  gem \'sass-rails\',   :git => \'git://github.com/rails/sass-rails.git\', :branch => \'3-2-stable\'<br/>  gem \'coffee-rails\', :git => \'git://github.com/rails/coffee-rails.git\', :branch => \'3-2-stable\'<br/>```<br/><br/> I think that this is a problem.<br/><br/>```<br/>Bundler could not find compatible versions for gem "railties":<br/>  In Gemfile:<br/>    sass-rails (>= 0) ruby depends on<br/>      railties (~> 3.2.0) ruby<br/><br/>    rails (>= 0) ruby depends on<br/>      railties (4.0.0.beta)<br/>```<br/><br/>Please see https://github.com/rails/rails/issues/4749<br/>Please see also https://github.com/kennyj/rails/commit/8bf3c6d8165fa6442b3ae2f86a955c82d0abf99b (before rebasing)<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4815', 'title': u'Fix GH #4749. Remove branch options, because edge is not 3-2-stable.'}, {'body': u'We can just put ruby-debug19 commented directly in Gemfile', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4814', 'title': u'Remove ruby_debugger_gemfile_entry from app_base'}, {'body': u'This allow to JRuby users to create new Rails app without install jruby-openssl before. <br/>Additionally there are some MRI users that have problems with openssl.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4813', 'title': u'Use http://rubygems.org source in default Gemfile (3-2-stable)'}, {'body': u'See https://github.com/rails/rails/pull/4684#commitcomment-920313', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4812', 'title': u'Use http://rubygems.org source for default Gemfile'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4811', 'title': u'Fix broken build in 3-2-stable branch'}, {'body': u"According to http://www.postgresql.org/docs/9.1/static/app-psql.html (which hasn't changed since at least version 7.0), the psql command line tool optionally takes a username as its last argument. However, the rake db:test:prepare task is mistakenly passing in the template database from database.yml.<br/><br/>This bug probably hasn't been discovered until now because it requires users to be using a sql schema dump (by using in application.rb: config.active_record.schema_format = :sql) AND to have specified a template in their database.yml.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4d4c378e3a10e2d01a636a33c359734c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4810', 'title': u'Fix usage of psql in db:test:prepare '}, {'body': u"This is a fix for issue #4777 for the SQLite adapter which will corrupt binary data if the data contains '%00'. I've provided a test which fails without the fix and passes after the fix.<br/><br/>I've applied this patch against the master branch (instead of the 3-2-stable branch as in issue #4778).<br/><br/>Please let me know if there are any other changes I need to make.<br/><br/>Thanks!<br/>Chris", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/07a77b082153e06b92518212619fc957?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4809', 'title': u'Fix for SQLite binary data corrupter (to master branch)'}, {'body': u'For multibyte strings we need as_json method. Multibyte strings are object and if we are calling "text".mb_chars.as_json then result will be {"wrapped_string"=>"text"} although I\'ve expected a string. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4808', 'title': u'Added as_json method for multibyte strings'}, {'body': u'Save `nil` value in serialized attribute as plain `NULL` without dumping it into YAML.<br/><br/>Resolves #2267.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8d24aa67d897b1505392a31b21308e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4806', 'title': u'Do not serialize nil in serialized attribute.'}, {'body': u'And added NullRelation class implementing the null object pattern for the `Relation` class.<br/><br/>rebased and squashed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4805', 'title': u'Added `none` query method to return zero records.'}, {'body': u'This will fix a bug that generates a html unsafe string when the unchecked value is `nil`<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4804', 'title': u'check_box with nil as unchecked value should be HTML safe'}, {'body': u"HTML code is not shown here, then I'll paste the code in the gist: https://gist.github.com/1707977", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be110ccb289808429894c89202e4384b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4803', 'title': u'Remove slash from favicon_link_tag method attribute'}, {'body': u'Some refactor on select/collection_select helpers. Also removes `eval` calls from grouped options helper.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4802', 'title': u'Refactor select helper and remove eval'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4800', 'title': u'Remove deprecation warnings from tests'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4799', 'title': u'warning removed: mismatched indentations'}, {'body': u'It should be "DELETE" for delete method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c38fd9074fb072551c0ff80ccd90d24e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4798', 'title': u'Fix typo in routing documentation'}, {'body': u"If rails new command is passed --pretend option, don't run bundle install.<br/><br/>Please see https://github.com/rails/rails/issues/4774.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4797', 'title': u"Fix GH #4744. Don't run bundle install when executing `rails new app` with --pretend option"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/607564f1a15f1899c71b4a9fdfc33ac2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4795', 'title': u'Minor ActiveSupport::Concern improvements'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4794', 'title': u"Fix warning: mismatched indentations at 'end' with 'class' at 2"}, {'body': u"It seems that 3-2-stable's TaggedLogging#debug (info, and so on) don't evaluate block, because the 2nd argument of Logger#add is not never nil.<br/><br/>Please see also https://github.com/rails/rails/issues/4760<br/><br/>This issue is found in only 3-2-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4793', 'title': u'[3-2-stable] Fix GH #4760. A Block was not evaluated.'}, {'body': u'This should fix the build\n\ncc/ @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4792', 'title': u'Only add ActiveRecord configuration if it is present'}, {'body': u"You've merged my pull #4783 faster than I've managed to push a tiny fix for reflection test. Sorry, my fault.<br/>/cc @jonleighton", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18bf599b887aeed411b29c3eaf7cf5a4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4791', 'title': u'reflection test fixed'}, {'body': u"I have a gem that uses ActiveSupport::Concern (and only requires `active_support/concern`, not all of AS), which fails with ActiveSupport 3.2 because it uses ActiveSupport::Deprecation without requiring it. Upon investigation, it seems there are a few other places where this happens.<br/><br/>I'm not sure which pieces are supposed to be able to be used in isolation, so I've fixed everything in seperate commits to make it easy to selectively apply as you see fit.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dfb445c996da29c8bd3856e900a6576a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4790', 'title': u'Fix Deprecation usage in ActiveSupport when requiring only parts of AS'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4788', 'title': u'warning removed: shadowing outer local variable - klass'}, {'body': u'This PR is GH #4754 fixing for 3-1-stable .<br/><br/>Please see https://github.com/rails/rails/issues/4754 and https://github.com/rails/rails/pull/4763 .<br/><br/>cc/ @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4787', 'title': u'[Backport][3-1-stable] Fix GH #4754. Remove double-quote characters around PK when using sql_mode=ANSI_QUOTES'}, {'body': u'backport of https://github.com/rails/rails/pull/4782', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4786', 'title': u'fix assets test in 3-2-stable'}, {'body': u'fix `alias_attribute` will raise a syntax error if aliasing a column named as a ruby keyword.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/837713ae659ff2fe9f375528c176fbde?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4785', 'title': u'add `self.` to allow method name using ruby keyword'}, {'body': u"I was also able to reduce safe_constantize to the following without breaking any tests and I don't really understand what is the point in the deleted lines. Maybe someone could provide some tests explaining and covering them?<br/><br/>```ruby<br/>def safe_constantize(camel_cased_word)<br/>  begin<br/>    constantize(camel_cased_word)<br/>  rescue NameError => e<br/>  end<br/>end<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/607564f1a15f1899c71b4a9fdfc33ac2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4784', 'title': u'A little constantize update'}, {'body': u"See this issue #4758, and this PR #4738 to follow the discussion.<br/>`uniq` was added to `ids_reader` in 109db5a, but, due to SELECT DISTINCT limitation on PostgreSQL, this cause an error.<br/>I've added a test that was failing on PostgreSQL and fixed `ids_reader` by removing `uniq`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18bf599b887aeed411b29c3eaf7cf5a4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4783', 'title': u'ids_reader method fixed, test added to has_many association (for PostgreSQL)'}, {'body': u'I have the same test failture as on travis<br/><br/>```<br/>  1) Failure:<br/>test_precompile_creates_the_file,_gives_it_the_original_asset\'s_content_and_run_in_production_as_default(ApplicationTests::AssetsTest) [test/application/assets_test.rb:67]:<br/>Expected: "alert()"<br/>  Actual: "alert();"<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4782', 'title': u'fix assets test'}, {'body': u'As per my commit message<br/><br/>> clarification to prevent confusing newbies; Passenger/Unicorn are app servers, Apache/Nginx are the web servers along with thin a la Heroku etc.<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dcfde00ac1fae8b575b2f9b39c7e244b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4779', 'title': u'Update comment in Gemfile re Unicorn (minor clarification)'}, {'body': u"This is a fix for issue #4777 (https://github.com/rails/rails/issues/4777) for the SQLite adapter which will corrupt binary data if the data contains '%00'. I've provided a test which fails without the fix and passes after the fix.<br/><br/>Please let me know if there is anything else I should be doing to get this fixed.<br/><br/>Thanks!<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/07a77b082153e06b92518212619fc957?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4778', 'title': u'Fix for SQLite binary data corrupter'}, {'body': u"I'd love to be able to tell ActiveRecord how to handle my custom postgresql domains (data types).<br/><br/>This commit lets me do that!<br/><br/>```<br/>SQL:<br/>create domain custom_money numeric(19, 2);<br/>create domain email_address text constraint email_address_format check (value ~ '\\w+@\\w+.com');<br/><br/>Ruby:<br/>ActiveRecord::ConnectionAdapters::PostgreSQLColumn.add_custom_type(<br/>  :custom_money => :decimal, <br/>  :email_address => :string)<br/>```<br/><br/>The method might not be thread safe... problem?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1c881ecb7bf966f44fecaa5387ab26b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4775', 'title': u'Postgresql custom types in ActiveRecord'}, {'body': u'If you pass the attribute with slash (\'/favicon.ico\'), it will generate:<br/><link href="/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon" /><br/><br/>But passing the attribute without the slash (\'favicon.ico\'), it will generate the correct url (with \'asset\' part):<br/><link href="/assets/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon" />', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be110ccb289808429894c89202e4384b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4771', 'title': u'Remove slash from favicon_link_tag method attribute'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4769', 'title': u'Fix failing test from [7619bcf2]'}, {'body': u'Created a `NullRelation` class implementing the null object pattern for the `Relation` class.<br/><br/>Ref #4609', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4768', 'title': u'Added `none` query method to return zero records. '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4767', 'title': u'merge MRI performance methods into one file'}, {'body': u'As explained in #4764, when destroying a scaffold, routes.rb loses a new line. This seems to happen because a new line is added while generating the route and the destroy generator removes it. However, this causes a problem if the routes file is manually edited to remove such new lines. <br/><br/>This commit just removes that extra new line from added in the first place.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4765', 'title': u'Fixes #4764 - remove generated new line in routes.rb on scaffold generation'}, {'body': u'I think that I fixed GH #4754.<br/>Please see https://github.com/rails/rails/issues/4754 .<br/><br/>It seems that this issue is in 3-1, 3-2, and master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4763', 'title': u'[MySQL] Fix GH #4754. Remove double-quote characters around PK when using sql_mode=ANSI_QUOTES'}, {'body': u'Fixed a tiny typo in the example code for ActiveSupport::TimeWithZone.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a66b560a1dc1f0386002e465629ce6ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4762', 'title': u'Fix typo in TimeWithZone documentation for consistency.'}, {'body': u"I've found a need a number of times in my ActiveRecording to find out if a set of IDs exist or to find if a certain set of objects exist in a scope.  Hopefully the rails team also finds this useful ;)<br/><br/>Should be a pretty straightforward method.  Tests included.  Let me know if you have any questions.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1888e77eb90dd84da79b94ce50b6e670?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4759', 'title': u'Add all_exist? class method method for models and relations'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4753', 'title': u'Used block to make sure file get auto closed after use'}, {'body': u'Here are `Hash#deep_filter`, `#deep_filter!`, `#deep_remove`, and `#deep_remove!` methods for filtering deep hashes.  This can be useful, for example, to filter `params` in a controller (this is how i am using it).<br/><br/>```ruby<br/>h = { :a => 1, :b => { :c => 2, :d => 3 }, :e => 4 }<br/>kh = { :a => true, :b => { :c => true } }<br/>h.deep_filter(kh)<br/># => { :a => 1, :b => { :c => 2 } }<br/>h.deep_remove(kh)<br/># => { :b => { :d => 3 }, :e => 4 }<br/>```<br/><br/>I am not sure about names.  I was considering `deep_only` and `deep_except`, `deep_keep` and `deep_remove`, etc.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4748', 'title': u'Add Hash#deep_filter and Hash#deep_remove methods'}, {'body': u"The code is more readable, and the counter variable doesn't require an isolated scope.<br/><br/>(in response to https://github.com/rails/rails/pull/4744#issuecomment-3711000)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4931eceec58528529fd004e56af197c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4747', 'title': u"Revert to using 'for' loops when dealing with ranges."}, {'body': u'A test case and a fix for issue 4718 (https://github.com/rails/rails/issues/4718).<br/>The problem lied in line 321 of activerecord/lib/relation/finder_methods.rb:<br/>where_values are not blank in case of subclasses but contained the subclass restriction.<br/>Checking for it should resolve the issue.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76826abddc8de48a827288cb7e68ab89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4746', 'title': u'Test and fix for issue 4718'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4745', 'title': u'remove ruby 1.8 support code'}, {'body': u'Was reading a [small discussion on r/ruby](http://www.reddit.com/r/ruby/comments/p1l8k/why_is_there_forstatement_in_ruby/) about `for` loops vs. `Enumerable#each`.<br/><br/>`foo.each do |bar|` is definitely the most common and preferred style, so I grepped the Rails codebase and replaced the 27 `for` loops that I found.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4931eceec58528529fd004e56af197c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4744', 'title': u"Replaced all 'for' loops with Enumerable#each"}, {'body': u'http://msdn.microsoft.com/en-us/library/ms775147%28v=vs.85%29.aspx#_replace', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fbdd0d26ec0146cbe4e22318fc5341b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4743', 'title': u"Add 'image/pjpeg' format used by IE"}, {'body': u'Rails version d5ddc6c triggered a failing test when running `bundle exec rake test_postgresql`<br/>on my system (Ubuntu 10.04 Postgesql 8.4). Running the same test (base_test.rb) individually,<br/>did not trigger the failing test.<br/><br/>This is BEFORE the current pull request.<br/><br/>```bash<br/>peterv@ASUS:~/b/github/petervandenabeele/rails/activerecord$ /home/peterv/.rvm/rubies/ruby-1.9.3-p0/bin/ruby -w -I"lib:test" -I"/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib" "/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb" "test/cases/base_test.rb"<br/>Using sqlite3 with Identity Map off<br/>Run options: --seed 33655<br/><br/>  # Running tests:<br/><br/>.......................................................................................<br/>/home/peterv/data/backed_up/github/petervandenabeele/rails/activerecord/lib/active_record/persistence.rb:54: warning: instance variable @new_record not initialized<br/>..........................................................S........................................<br/><br/>Finished tests in 1.841152s, 101.0237 tests/s, 237.3514 assertions/s.<br/><br/>186 tests, 437 assertions, 0 failures, 0 errors, 1 skips<br/><br/>peterv@ASUS:~/b/github/petervandenabeele/rails/activerecord$ bundle exec rake test_postgresql<br/>/home/peterv/.rvm/rubies/ruby-1.9.3-p0/bin/ruby -w -I"lib:test" -I"/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib" "/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb" "test/cases/adapter_test.rb" "test/cases/adapters/postgresql/active_schema_test.rb" "test/cases/adapters/postgresql/connection_test.rb" "test/cases/adapters/postgresql/datatype_test.rb" "test/cases/adapters/postgresql/explain_test.rb" "test/cases/adapters/postgresql/hstore_test.rb" "test/cases/adapters/postgresql/postgresql_adapter_test.rb" "test/cases/adapters/postgresql/quoting_test.rb" "test/cases/adapters/postgresql/schema_authorization_test.rb" "test/cases/adapters/postgresql/schema_test.rb" "test/cases/adapters/postgresql/statement_pool_test.rb" "test/cases/adapters/postgresql/timestamp_test.rb" "test/cases/adapters/postgresql/utils_test.rb" "test/cases/adapters/postgresql/view_test.rb" "test/cases/aggregations_test.rb" "test/cases/ar_schema_test.rb" "test/cases/associations/belongs_to_associations_test.rb" "test/cases/associations/callbacks_test.rb" "test/cases/associations/cascaded_eager_loading_test.rb" "test/cases/associations/eager_load_includes_full_sti_class_test.rb" "test/cases/associations/eager_load_nested_include_test.rb" "test/cases/associations/eager_singularization_test.rb" "test/cases/associations/eager_test.rb" "test/cases/associations/extension_test.rb" "test/cases/associations/habtm_join_table_test.rb" "test/cases/associations/has_and_belongs_to_many_associations_test.rb" "test/cases/associations/has_many_associations_test.rb" "test/cases/associations/has_many_through_associations_test.rb" "test/cases/associations/has_one_associations_test.rb" "test/cases/associations/has_one_through_associations_test.rb" "test/cases/associations/identity_map_test.rb" "test/cases/associations/inner_join_association_test.rb" "test/cases/associations/inverse_associations_test.rb" "test/cases/associations/join_model_test.rb" "test/cases/associations/nested_through_associations_test.rb" "test/cases/associations_test.rb" "test/cases/attribute_methods/read_test.rb" "test/cases/attribute_methods_test.rb" "test/cases/autosave_association_test.rb" "test/cases/base_test.rb" "test/cases/batches_test.rb" "test/cases/binary_test.rb" "test/cases/bind_parameter_test.rb" "test/cases/calculations_test.rb" "test/cases/callbacks_test.rb" "test/cases/clone_test.rb" "test/cases/coders/yaml_column_test.rb" "test/cases/column_alias_test.rb" "test/cases/column_definition_test.rb" "test/cases/column_test.rb" "test/cases/connection_adapters/abstract_adapter_test.rb" "test/cases/connection_adapters/connection_handler_test.rb" "test/cases/connection_adapters/connection_specification_test.rb" "test/cases/connection_adapters/schema_cache_test.rb" "test/cases/connection_management_test.rb" "test/cases/connection_pool_test.rb" "test/cases/connection_specification/resolver_test.rb" "test/cases/counter_cache_test.rb" "test/cases/custom_locking_test.rb" "test/cases/database_statements_test.rb" "test/cases/date_time_test.rb" "test/cases/defaults_test.rb" "test/cases/deprecated_finder_test.rb" "test/cases/dirty_test.rb" "test/cases/dup_test.rb" "test/cases/dynamic_finder_match_test.rb" "test/cases/explain_test.rb" "test/cases/finder_respond_to_test.rb" "test/cases/finder_test.rb" "test/cases/fixtures/file_test.rb" "test/cases/fixtures_test.rb" "test/cases/habtm_destroy_order_test.rb" "test/cases/i18n_test.rb" "test/cases/identity_map/middleware_test.rb" "test/cases/identity_map_test.rb" "test/cases/inclusion_test.rb" "test/cases/inheritance_test.rb" "test/cases/invalid_date_test.rb" "test/cases/invertible_migration_test.rb" "test/cases/json_serialization_test.rb" "test/cases/lifecycle_test.rb" "test/cases/locking_test.rb" "test/cases/log_subscriber_test.rb" "test/cases/mass_assignment_security_test.rb" "test/cases/method_scoping_test.rb" "test/cases/migration/change_schema_test.rb" "test/cases/migration/column_attributes_test.rb" "test/cases/migration/column_positioning_test.rb" "test/cases/migration/command_recorder_test.rb" "test/caMses/migration/create_join_table_test.rb" "test/cases/migration/index_test.rb" "test/cases/migration/logger_test.rb" "test/cases/migration/rename_column_test.rb" "test/cases/migration/rename_table_test.rb" "test/cases/migration/table_and_index_test.rb" "test/cases/migration_test.rb" "test/cases/migrator_test.rb" "test/cases/mixin_test.rb" "test/cases/modules_test.rb" "test/cases/multiple_db_test.rb" "test/cases/named_scope_test.rb" "test/cases/nested_attributes_test.rb" "test/cases/persistence_test.rb" "test/cases/pooled_connections_test.rb" "test/cases/primary_keys_test.rb" "test/cases/query_cache_test.rb" "test/cases/quoting_test.rb" "test/cases/readonly_test.rb" "test/cases/reaper_test.rb" "test/cases/reflection_test.rb" "test/cases/relation_scoping_test.rb" "test/cases/relation_test.rb" "test/cases/relations_test.rb" "test/cases/reload_models_test.rb" "test/cases/sanitize_test.rb" "test/cases/schema_dumper_test.rb" "test/cases/serialization_test.rb" "test/cases/session_store/session_test.rb" "test/cases/store_test.rb" "test/cases/timestamp_test.rb" "test/cases/transaction_callbacks_test.rb" "test/cases/transactions_test.rb" "test/cases/unconnected_test.rb" "test/cases/validations/association_validation_test.rb" "test/cases/validations/i18n_generate_message_validation_test.rb" "test/cases/validations/i18n_validation_test.rb" "test/cases/validations/uniqueness_validation_test.rb" "test/cases/validations_test.rb" "test/cases/xml_serialization_test.rb" "test/cases/yaml_serialization_test.rb" <br/>Using postgresql with Identity Map off<br/>Run options: --seed 44987<br/><br/># Running tests:<br/><brhome/peterv/data/backed_up/github/petervandenabeele/rails/activerecord/lib/active_record/persistence.rb:54: warning: instance variable @new_record not initialized<brbr/><br/>Finished tests in 118.787079s, 28.5469 tests/s, 87.6695 assertions/s.<br/><br/>  1) Failure:<br/>test_default(BasicsTest) [/home/peterv/data/backed_up/github/petervandenabeele/rails/activerecord/test/cases/base_test.rb:1111]:<br/>Expected: 2004-01-01 00:00:00 +0100<br/>  Actual: 2004-01-01 00:00:00 UTC<br/><br/>3391 tests, 10414 assertions, 1 failures, 0 errors, 18 skips<br/>rake aborted!<br/>Command failed with status (1): [/home/peterv/.rvm/rubies/ruby-1.9.3-p0/bin...]<br/><br/>Tasks: TOP => test_postgresql<br/>(See full trace by running task with --trace)<br/>```<br/><br/>I presume this is caused by the setting of the default default_timezone that is swapped from<br/>:local to :utc a few times in the test file and the assert in that test comparing against Time.local.<br/><br/>```bash<br/>peterv@ASUS:~/b/github/petervandenabeele/rails/activerecord/test/cases$ grep ActiveRecord::Base.default_timezone base_test.rb <br/>    ActiveRecord::Base.default_timezone = :utc<br/>    ActiveRecord::Base.default_timezone = :local<br/>    ActiveRecord::Base.default_timezone = :utc<br/>    ActiveRecord::Base.default_timezone = :local<br/>    ActiveRecord::Base.default_timezone = :utc<br/>    ActiveRecord::Base.default_timezone = :local<br/>      ActiveRecord::Base.default_timezone = :utc<br/>      ActiveRecord::Base.default_timezone = :local<br/>```<br/><br/>The solution that I found that is most localized is supplied in this patch. After the patch, all tests in activerecord pass:<br/><br/>```<br/>peterv@ASUS:~/b/github/petervandenabeele/rails/activerecord$ bundle exec rake<br/>/home/peterv/.rvm/rubies/ruby-1.9.3-p0/bin/ruby -w -I"lib:test" -I"/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib" "/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb" "test/cases/adapter_test.rb" "test/cases/adapters/mysql/active_schema_test.rb" "test/cases/adapters/mysql/case_sensitivity_test.rb" <br/><br/>...<br/><br/>Using mysql with Identity Map off<br/>Run options: --seed 34600<br/><br/>...<br/><br/>Finished tests in 126.265658s, 26.1433 tests/s, 79.9267 assertions/s.<br/><br/>3301 tests, 10092 assertions, 0 failures, 0 errors, 4 skips<br/><br/>/home/peterv/.rvm/rubies/ruby-1.9.3-p0/bin/ruby -w -I"lib:test" -I"/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib" "/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb" "test/cases/adapter_test.rb" "test/cases/adapters/mysql2/active_schema_test.rb" <br/><br/>...<br/><br/>Using mysql2 with Identity Map off<br/>Run options: --seed 50839<br/><br/>...<br/><br/>Finished tests in 84.640289s, 38.9176 tests/s, 119.2104 assertions/s.<br/><br/>3294 tests, 10090 assertions, 0 failures, 0 errors, 4 skips<br/><br/>/home/peterv/.rvm/rubies/ruby-1.9.3-p0/bin/ruby -w -I"lib:test" -I"/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib" "/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb" "test/cases/adapter_test.rb" "test/cases/adapters/sqlite3/copy_table_test.rb" <br/><br/>...<br/><br/>Using sqlite3 with Identity Map off<br/>Run options: --seed 30505<br/><br/>...<br/><br/>Finished tests in 58.961055s, 55.9352 tests/s, 170.2989 assertions/s.<br/><br/>3298 tests, 10041 assertions, 0 failures, 0 errors, 9 skips<br/><br/>/home/peterv/.rvm/rubies/ruby-1.9.3-p0/bin/ruby -w -I"lib:test" -I"/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib" "/home/peterv/.rvm/gems/ruby-1.9.3-p0@global/gems/rake-0.9.2.2/lib/rake/rake_test_loader.rb" "test/cases/adapter_test.rb" "test/cases/adapters/postgresql/active_schema_test.rb" <br/><br/>...<br/><br/>"test/cases/base_test.rb"<br/><br/>...<br/><br/>Using postgresql with Identity Map off<br/>Run options: --seed 46281<br/><br/>...<br/><br/>Finished tests in 121.389141s, 27.9350 tests/s, 85.8149 assertions/s.<br/><br/>3391 tests, 10417 assertions, 0 failures, 0 errors, 18 skips<br/>```<br/><br/>Other solutions are possible.<br/><br/>* provide more explicit fixing of default_timezone for other tests that suffer from the same issue<br/>* fix the default timezone in schema/postgresql_specific_schema.rb<br/>(that is currently dangerously specified:<br/><br/>```sql<br/>    fixed_time timestamp default \'2004-01-01 00:00:00.000000-00\',<br/>```<br/><br/>Following http://www.postgresql.org/docs/8.4/static/datatype-datetime.html<br/><br/>The timestamp (without a notion of "with time zone" or "without time zone")<br/>defaults to "without time zone" but the string terminates in "-00".<br/><br/>When I changed that line to<br/><br/>```sql<br/>  fixed_time timestamp with time zone default \'2004-01-01 00:00:00.000000+00\',<br/>```<br/>the test problem in the test also went away.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/160992dfd434ff7055465446b9423bd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4742', 'title': u'Set the timezone correctly for a test in activerecord/../base_test.rb'}, {'body': u'I think is not needed to initialize the column variable to nil, is already initialized in each branch of the condition', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fab62c8f6e960775233a221ce9dd252?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4741', 'title': u'Remove initialize variable columnn, not needed'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4740', 'title': u'remove autoload UrlWriter, no longer exists'}, {'body': u'use :default option with translate method instead of condition<br/>simplify separator method', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4739', 'title': u'tiny refactoring of date_helper'}, {'body': u'Don\'t know if it\'s correct behavior or not but here it goes:<br/>PostgreSQL SELECT DISTINCT query fails if result is ordered by a column that is not included in the select list.<br/><br/>For example, this code:<br/>```User.order(:first_name).uniq.pluck(:id)```<br/>troughs this error (when using postresql): <br/>```SELECT DISTINCT id FROM "users" ORDER BY first_name<br/>ActiveRecord::StatementInvalid: PGError: ERROR:  for SELECT DISTINCT, <br/>ORDER BY expressions must appear in select list<br/>LINE 1: SELECT DISTINCT id FROM "users"  ORDER BY first_name```<br/><br/>See first commit with test that fails on PostgreSQL.<br/><br/>That can be fixed by cleaning ```Arel::SelectManager#orders``` list just before \'plucking\' (see the second commit).<br/>To make MySQL users happy (MySQL allows to order by a column that is not in the select list) we can clean orders list only when PostgreSQL is used (I\'m not sure about that, so it\'s not included in the PR):<br/><br/>```ruby<br/>if select_manager.engine.connection.adapter_name ~= /postgresql/i<br/>  select_manager.orders.delete_if { |key| key != column_name }<br/>end<br/>```<br/><br/>That\'s a typical situation - having conditions like ```uniq: true``` on an association, along with the ```default_scope``` ordering by some column. Then \'plucking\' on that association can lead to this error easily.<br/><br/>Let me know if it\'s desired behavior or we can make awesome ```pluck``` method even more user friendly.<br/><br/>Thanks!<br/><br/>P.S. ```Arel::SelectManager``` got no ```orders=``` method, but we can somehow replace orders via ```@ast``` instance variable. Unfortunately direct assignment via ```orders=``` doesn\'t work for unknown reason. That\'s why I\'ve used delete_if.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18bf599b887aeed411b29c3eaf7cf5a4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4738', 'title': u'Pluck fails when ordering by column that is not included in the SELECT DISTINCT query (PostgreSQL)'}, {'body': u'MSWin32 version of ruby provides Windows batch file that converted from original script files.<br/>The batch file is not plain ruby script, so the patch provided by https://github.com/rails/rails/pull/3121#issuecomment-3702853 causes error on Windows.<br/><br/>ex)<br/>C:\\tmp\\webtest>rake assets:precompile<br/>c:/Users/arton/bin/ruby.exe c:/Users/arton/rake.bat assets:precompile:all RAILS_ENV=production RAILS_GROUPS=assets<br/>c:/Users/arton/bin/rake.bat:1: syntax error, unexpected tIDENTIFIER, expecting $end<br/>rake aborted!<br/>Command failed with status (1): [c:/Users/arton/bin/ruby.exe c:/U... (omitted by the poster)<br/> <br/>Tasks: TOP => assets:precompile<br/>(See full trace by running task with --trace)<br/><br/>So, this patch checks $0 is batch file or not. And if $0 is batch file, then run it with Kernel.exec (means Win32 API) instead of ruby.<br/><br/>Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0441ff038018e53a35bb207e81105a5c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4735', 'title': u'Re-launch assets:precompile task using original $0 if $0 is batch file so it works on Windows'}, {'body': u'Save `nil` value in serialized attribute as plain `NULL` without dumping it into YAML.<br/><br/>Resolves #2267.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8d24aa67d897b1505392a31b21308e3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4734', 'title': u'Do not serialize nil in serialized attribute.'}, {'body': u'@jonleighton In #4715, I fixed a regression in a really hacky way. This pull request splits the DynamicFinderMatch into several classes, and moves argument validation into the match classes. By moving more logic into the match itself, it should be easier to handle edge cases in a cleaner manner.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4732', 'title': u'Refactor dynamic match'}, {'body': u'See discussion at https://github.com/rails/rails/pull/4470/files#r393461', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4931eceec58528529fd004e56af197c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4731', 'title': u'Reverted build_original_fullpath method refactor'}, {'body': u'The commit 4c321c6d42b6e35f9ead12eb1dccdead03c5abf4 removes the path_params variable assignment, actually seems the entire line is not used at all.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4730', 'title': u'Remove not used env[] call in routing_test.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4728', 'title': u'replace @target.logger with logger method.'}, {'body': u'has_many/has_one, :dependent => :restrict, deprecation added, for ActiveRecord::DeleteRestrictionError.<br/><br/>Tests included.<br/><br/>@jonleighton applied the suggested changes, as per issue #4706,  are these good enough?  Please advise.<br/><br/>Thanks.<br/><br/>fixes #2502<br/>fixes #3881', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4727', 'title': u'has_many/has_one, :dependent => :restrict, deprecation added'}, {'body': u'This helper was created as described [here](https://github.com/rails/rails/issues/4653#issuecomment-3676623).\n\nIt can help to avoid issues like this #4653.\n\n* Docs and CHANGELOG line included', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4726', 'title': u'Add create_join_table migration helper to create HABTM join tables'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4724', 'title': u'Fix warning. assigned but unused variable - path_params'}, {'body': u'The setting for colorize logging is present in two place.<br/><br/>```<br/>config.colorize_logging<br/>```<br/><br/>  and<br/><br/>```<br/>ActiveSupport::LogSubscriber.colorize_logging<br/>```<br/><br/>This duplication is a little difficult to understand.<br/>Because config.colorize_logging is set to nil in default, but ActiveSupport::LogSubscriber.colorize_logging is set to true.<br/><br/>Please see https://github.com/rails/rails/issues/4708 .', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4722', 'title': u'Remove redundant instance variables (@colorize_logging)'}, {'body': u'Part of the documentation for has_secure_password incorrectly implies that calling authenticate with the wrong password results in nil.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/23d517bc09a77c341c0a8eedda2822ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4721', 'title': u'Fix documentation for has_secure_password'}, {'body': u'I have a singularize issue, but in running through the some previous singularize issues tonight (#2608 #1825 #2395) I do understand that the current Core position is not to touch the inflections. I get it...but there is a major point release on the horizon, so now is as good a time as any....<br/><br/>I started out just wanting to address the case of singularizing words that end in \'ss\'. In the current state "dress".singularize becomes "dres" and "boss" becomes "bos", etc. I think this is beyond just an edge case and should be handled by the framework.<br/><br/>When I got into the code, I realized there was a section for testing that pluralized words returned the expected pluralized versions, but not the same for singular. I added the test for "test_singularize_singular_#{singular}" and to my surprise adding this set of tests caused 13 failures. This may or may not be a surprise to you guys...and there may be a good reason why this set of tests isn\'t in there.<br/><br/>But in the case that there is not, I made corrections to make that set of tests pass and in the process my double s problem was fixed. (The words \'process\' and \'address\' were already in the test case and failed when the new set of tests was added.)<br/><br/>I\'m open to suggestions on the changes themselves, but do believe that it\'s a reasonable expectation that the cases tested for work in this case. Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/185fff6d3aa5c70e337fa84b302050b1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4719', 'title': u'Add Inflection test (and fixes) to ensure singularizing a singular actually give you the correct singular in more cases'}, {'body': u'Under Rails 3.1, you were allowed to pass a hash to a find_or_create<br/>method with multiple attribute names, but this was broken as the<br/>arguments were being improperly validated.<br/><br/>@jonleighton As per #4660, `match.is_a?(DynamicFinderMatch)` is required as it is only `find_or_(create|initialize)_by` that accepts a hash. `scoped_by` requires arguments to be passed individually.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4715', 'title': u'Fix regression from Rails 3.1'}, {'body': u"We've found this a while ago while fixing an issue in SimpleForm for a specific case. We had to fallback to use `label_tag` instead, because `label` was not handling this case.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4713', 'title': u'Do not generate label for attribute when giving nil'}, {'body': u'See issue #4710 for details.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/302c6c56b99912a673f1213b0709c902?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4711', 'title': u'3.2 safe_constantize should handle wrong constant name NameErrors Fixes #4710'}, {'body': u'Removed unwanted intializer and replaced with ruby default collect method', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4709', 'title': u'Removed unwanted intializer and replaced with ruby default collect method'}, {'body': u'has_many/has_one, :dependent => :restrict, now adds an error with a Deprecation Warning, instead of raising DeleteRestrictionError exception. [3-2-stable]<br/><br/>Tests included and passing.<br/><br/>fixes #2502<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4706', 'title': u'Dependent restrict should add error 3 2 stable'}, {'body': u' has_many/has_one, :dependent => :restrict, now add an error instead of raising DeleteRestrictionError exception. <br/><br/>Tests included and passing.<br/><br/>fixes #2502', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4705', 'title': u'has_many/has_one, :dependent => :restrict now adds error'}, {'body': u'Minor update but it looks nice for me<br/><br/>```ruby<br/>"test parameterize one".parameterize(:_)<br/>#=> test_parameterize_one<br/>```<br/><br/>@josevalim Is it better now? If no, please, point what\'s wrong.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d049f551aa71e6326c74002ac8e6788a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4700', 'title': u'Allow passing symbols to #parameterize'}, {'body': u'`uniqueness` was spelled `unqueness`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fa4b5f21ddfec459b530bfce99079e54?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4699', 'title': u'Fixed small typo in ActveRecord/CHANGELOG.md'}, {'body': u'`uniqueness` was spelled `unqueness`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fa4b5f21ddfec459b530bfce99079e54?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4698', 'title': u'Small typo in the ActiveREcord/CHANGELOG'}, {'body': u'HABTM Join tables should not have extra attributes\n\nWhen extra attributes is needed in HABTM join tables is better to use\n`has_many :through` association.\n\nFix #4653', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4696', 'title': u'Remove extra attributes from HABTM join tables in AR tests'}, {'body': u'Minor update but it looks nice for me<br/><br/>```ruby<br/>"test parameterize one".parameterize(:_)<br/>#=> test_parameterize_one<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d049f551aa71e6326c74002ac8e6788a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4694', 'title': u'Allow passing symbols to #parameterize'}, {'body': u'Mail new version fixes some of the bugs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4693', 'title': u'Mail bump 3 2 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4692', 'title': u'Avoid warning for unused variable. '}, {'body': u"Every Hash rocket {:key => value} is now written as {key: value}<br/><br/>This is a *jaggernaut* pull request and will possibly inspire a discussion.<br/>Since Rails 4.0 will require Ruby 1.9, I say: **let's embrace Ruby 1.9 with love and use its Hash syntax**.<br/><br/>On one hand, this will make the requirement somehow clearer.<br/>On the other hand\u2026 it will reduce the size of the codebase by one character for each Hash :-)<br/><br/>I would like to know the opinion of the Rails Core team members about this. Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4dea5cf83d2d6c1228750b76e579b38d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4691', 'title': u'Upgrade Ruby#Hash syntax from 1.8 to 1.9'}, {'body': u"Most authentication solutions like Devise and Authlogic use a password confirmation field.  I end up adding this to every rails app, and I'm sure plenty of other developers need to as well.  Forgetting this could inadvertently leave a password unfiltered during user registration so I think it's a sensible default.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/afe7c8a8965c568040a204b321aa3c8d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4690', 'title': u'Add :password_confirmation as a filtered param by default.'}, {'body': u'This commit replaces in multiple CHANGELOG.md any occurrence of<br/><br/>    ## Rails 3.2.0 (unreleased) ##<br/><br/>with<br/><br/>    ## Rails 3.2.0 (January 20, 2012) ##', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4dea5cf83d2d6c1228750b76e579b38d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4689', 'title': u'Add release date of Rails 3.2.0 to documentation'}, {'body': u'In rare cases, temp_file is removed by GC after temp_file.close.<br/>So we should be disable GC when writing the file.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/35e3dd57e9a7a50f568b5843602f5112?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4688', 'title': u'fix issue temp_file is removed by GC'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4687', 'title': u'fix fixtures test as table_name is a string now'}, {'body': u'Original issues: #4570, #4681', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4686', 'title': u'call to_s on value passed to table_name='}, {'body': u'Change incorrect recommendation from indenting after private/protected to not.<br/>Based on opinions of rails core team members - @spastorino, @jonleighton, @tenderlove:<br/><br/>https://github.com/rails/rails/pull/1838#issuecomment-1440281<br/>https://en.twitter.com/#!/spastorino/status/142054749351575552<br/>https://en.twitter.com/#!/tenderlove/status/142014046445641728<br/>https://en.twitter.com/#!/jonleighton/status/142021813415841794', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4685', 'title': u'Fix contributing guide to reflect preferred position on indentation'}, {'body': u'Theoretically this would future-proof Gemfiles against possible (albeit unlikely) change in the rubygems URL.<br/><br/>[Documentation](http://gembundler.com/gemfile.html)<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/498dec8c1fe884447fc25f908eebd942?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4684', 'title': u"Use `:rubygems` shortcut as standard Gemfile's `source` instead of explicit URL"}, {'body': u'Fix #4653\n\ncc/ @kennyj @tenderlove @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4682', 'title': u'Set timestamp values on HABTM table'}, {'body': u' Removed unwanted instance variable inside the class method. Also tested locally.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4680', 'title': u'Removed unwanted instance variable inside the class method on Validation'}, {'body': u'- do not modify options<br/>- reuse audio/video tags common code<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4679', 'title': u'AssetTagHelper improvements'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4676', 'title': u'allow to pass multiple sources to audio/video tags without using array'}, {'body': u"This fixes #4668.<br/><br/>Relevant trace:<br/><br/>```ruby<br/>Loading development environment (Rails 3.2.0)<br/>/Users/lunks/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/logger.rb:581:in `block in close'<br/>/Users/lunks/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/monitor.rb:211:in `mon_synchronize'<br/>/Users/lunks/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/logger.rb:580:in `close'<br/>/Users/lunks/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/logger.rb:478:in `close'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/buffered_logger.rb:117:in `close'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/buffered_logger.rb:36:in `silence'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/deprecation/method_wrappers.rb:22:in `silence_with_deprecation'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/tagged_logging.rb:31:in `silence'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/deprecation/method_wrappers.rb:22:in `silence_with_deprecation'<br/>(eval):2:in `column_definitions_with_silencer'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:845:in `columns'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/connection_adapters/schema_cache.rb:12:in `block in initialize'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/model_schema.rb:228:in `yield'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/model_schema.rb:228:in `default'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/model_schema.rb:228:in `columns'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/schema_plus-0.2.1/lib/schema_plus/active_record/base.rb:23:in `columns_with_schema_plus'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/model_schema.rb:237:in `columns_hash'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/locking/optimistic.rb:129:in `locking_enabled?'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation.rb:169:in `exec_queries'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation.rb:159:in `block in to_a'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/explain.rb:38:in `logging_query_plan'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation.rb:158:in `to_a'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation/finder_methods.rb:377:in `find_first'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation/finder_methods.rb:122:in `first'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/querying.rb:5:in `first'<br/>/Users/lunks/Code/tarifador/.pryrc:1:in `<top (required)>'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/dependencies.rb:245:in `load'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/dependencies.rb:245:in `block in load'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/dependencies.rb:236:in `load_dependency'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/dependencies.rb:245:in `load'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:62:in `block in load_rc'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:60:in `each'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:60:in `load_rc'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:91:in `initial_session_setup'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:110:in `start'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/railties/lib/rails/commands/console.rb:47:in `start'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/railties/lib/rails/commands/console.rb:8:in `start'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/railties/lib/rails/commands.rb:41:in `<top (required)>'<br/>script/rails:6:in `require'<br/>script/rails:6:in `<main>'<br/>##########################################################################################<br/>log writing failed. closed stream<br/>log writing failed. closed stream<br/>##########################################################################################<br/>/Users/lunks/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/logger.rb:581:in `block in close'<br/>/Users/lunks/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/monitor.rb:211:in `mon_synchronize'<br/>/Users/lunks/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/logger.rb:580:in `close'<br/>/Users/lunks/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/1.9.1/logger.rb:478:in `close'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/buffered_logger.rb:117:in `close'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/buffered_logger.rb:36:in `silence'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/deprecation/method_wrappers.rb:22:in `silence_with_deprecation'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/tagged_logging.rb:31:in `silence'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/deprecation/method_wrappers.rb:22:in `silence_with_deprecation'<br/>(eval):2:in `table_exists_with_silencer?'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/connection_adapters/schema_cache.rb:30:in `table_exists?'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/model_schema.rb:223:in `table_exists?'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/attribute_methods/primary_key.rb:75:in `get_primary_key'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/attribute_methods/primary_key.rb:60:in `reset_primary_key'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/attribute_methods/primary_key.rb:49:in `primary_key'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/model_schema.rb:230:in `block in columns'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/model_schema.rb:228:in `map'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/model_schema.rb:228:in `columns'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/schema_plus-0.2.1/lib/schema_plus/active_record/base.rb:23:in `columns_with_schema_plus'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/model_schema.rb:237:in `columns_hash'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/locking/optimistic.rb:129:in `locking_enabled?'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation.rb:169:in `exec_queries'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation.rb:159:in `block in to_a'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/explain.rb:38:in `logging_query_plan'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation.rb:158:in `to_a'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation/finder_methods.rb:377:in `find_first'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/relation/finder_methods.rb:122:in `first'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activerecord/lib/active_record/querying.rb:5:in `first'<br/>/Users/lunks/Code/tarifador/.pryrc:1:in `<top (required)>'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/dependencies.rb:245:in `load'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/dependencies.rb:245:in `block in load'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/dependencies.rb:236:in `load_dependency'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/activesupport/lib/active_support/dependencies.rb:245:in `load'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:62:in `block in load_rc'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:60:in `each'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:60:in `load_rc'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:91:in `initial_session_setup'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/gems/pry-0.9.8/lib/pry/pry_class.rb:110:in `start'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/railties/lib/rails/commands/console.rb:47:in `start'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/railties/lib/rails/commands/console.rb:8:in `start'<br/>/Users/lunks/.rvm/gems/ruby-1.9.3-p0@tarifador/bundler/gems/rails-9e9e17a62e4d/railties/lib/rails/commands.rb:41:in `<top (required)>'<br/>script/rails:6:in `require'<br/>script/rails:6:in `<main>'<br/>```<br/><br/>Tests to come!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6e1d31995b215ae8469a24980555df2d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4675', 'title': u'Duping log handler on buffered logger silencer.'}, {'body': u"I've cherry-picked the same commits I've done in docrails (master) related to updates in ActiveRecord validation and callbacks guide. I do believe they contain important fixes that should be available in 3-2 branch as well, mainly related to `validate_on_create` and `validate_on_update` methods that are not available anymore, besides some other small fixes.<br/><br/>Please let me know if something should be changed before merging. Thanks.<br/><br/>/cc @vijaydev @fxn @rafaelfranca", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4673', 'title': u'Validation guides update 3 2'}, {'body': u'* Change OrderedHash with array options to simple hash usage in tests;<br/>* Refactor button_to to avoid calling method#to_s twice, cleanup implementation a bit.<br/><br/>Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4672', 'title': u'Improvements on some url helper methods and tests'}, {'body': u'I found where to fix this issue but I did realize how to know if the join table has a timestamp.<br/><br/>If anyone want to give me some guidance I can finish this fix.<br/><br/>Related with #4653', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4669', 'title': u'Added a test case for #4653'}, {'body': u'* Refactor number helpers related to translated options and parse floating;<br/>* Change number helpers so they do not mutate the given options hash.<br/><br/>Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4667', 'title': u'Action View number helpers improvements'}, {'body': u"translate_error doesn't exist (AFAICT, it never has).  Perhaps the docs mean generate_message ?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9e5ce6f28587baa2a566eb4f2d76c13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4664', 'title': u'Errors#add documentation fix'}, {'body': u"I'm no cryptographer, but isn't this a good idea to prevent an `OpenSSL::Cipher::CipherError: key length too short` exception? Or does this encourage people to use bad keys?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5efc2a040a61cb22107bcfcecd58454c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4663', 'title': u'Made @secret a SHA512 digest'}, {'body': u'To `video_tag` I just added that, when it accepts multiple sources, `path_to_video` is applied to each of them. And in `audio_tag` I just copied the logic from `video_tag`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/376e4eb9dc6c2e33d1330262edc4f109?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4661', 'title': u'Modify video_tag a bit and make audio_tag able to accept multiple sources'}, {'body': u"Under Rails 3.1, you were allowed to pass a hash to a find_or_create method with multiple attribute names, but this was broken as the arguments were being improperly validated.<br/><br/>The patch I've made is pretty hacky, and if DynamicFinderMatch was to handle the validation of method calls, this could be a lot nicer, but that would require a major refactoring.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4660', 'title': u'Fix regression with find_or_create and multiple arguments'}, {'body': u"This is a test for a regression from 3.1. This is currently broken due to a bug in journey. I've submitted a pull request to fix it in Journey: (https://github.com/rails/journey/pull/14), but as there was no testing in Rails of this functionality, I'm submitting this request as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4658', 'title': u'Test for unicode path support'}, {'body': u"Given that use of vendor/plugins is deprecated, should we not stop generating vendor/plugins with new Rails applications?<br/><br/>I know that this lacks fixing any tests that assert that vendor/plugins exists but I thought I'd see if there was support for this idea before spending more time.<br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4656', 'title': u'stop generating vendor/plugins with new Rails 3.2 applications'}, {'body': u"Requiring 'active_model/naming' will raise an uninitialized constant<br/>ActiveSupport::Deprecation exception because the module core extension<br/>doesn't require 'active_support/deprecation'. This require cannot be<br/>added to the core extension because of circular dependency issues.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4654', 'title': u'Explicit deprecation require'}, {'body': u'Our schema.rb is being generated with an `add_index` line similar to this:<br/><br/>    add_index "foo", ["foo", "bar"], :name => "xxx", :length => {"foo"=>8, "bar=>nil}<br/><br/>This is the same as it was on Rails 3.1.3, however, now when that<br/>schema.rb is evaluated, its generating bad SQL in MySQL:<br/><br/>    Mysql::Error: You have an error in your SQL syntax; check the manual<br/>    that corresponds to your MySQL server version for the right syntax<br/>    to use near \'))\' at line 1: CREATE UNIQUE INDEX<br/>    `xxx` ON `foo` (`foo`(8), `bar`())<br/><br/>This commit adds a check for nil on the length attribute to prevent the<br/>empty parens from being output.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8f4b861a5b83575337b98d144a4ef4ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4651', 'title': u'Handle nil in add_index :length option in MySQL'}, {'body': u"re factored tests in activemodel's callback_test file. Are the changes decent enough ?<br/>Thanks for the inputs. :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4647', 'title': u'test refactoring.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4646', 'title': u'no need in separate MiniTest modules'}, {'body': u"@tenderlove, as discussed with you I'm sending a pull-request to deprecate `DateTime.local_offset`. As additional bonus moving `.local_offset` logic directly to `.civil_from_format` allows to use correct offset for given date.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4645', 'title': u'Deprecate DateTime.local_offset'}, {'body': u'Replaced unwanted method and added to accessor for getter history. Have also tested by running active model tests after the code change.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4644', 'title': u'Replaced unwanted method and added to accessor for getter history'}, {'body': u'This need to be applied in master too', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4643', 'title': u'Remove unused variables to avoid warnings'}, {'body': u'removed some white spaces in serialization_test.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4642', 'title': u'removed extra whitespace'}, {'body': u'This closes #4453 and #4633', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4641', 'title': u'date_select fixes [3-2-stable]'}, {'body': u'This fixes #4453 and #4633', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4640', 'title': u'Fix date_select [3-2-stable]'}, {'body': u'ActiveRecord can return -infinity and +infinity, but datetime_select blows up when it gets infinity dates.<br/><br/>See #3457 (which is not yet merged) and #544 for further discussion.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1c881ecb7bf966f44fecaa5387ab26b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4639', 'title': u'datetime_select fix for dates of -infinity and +infinity'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4638', 'title': u'instead of @target.logger use logger method'}, {'body': u'message quote fix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4637', 'title': u"quote fix ` to ' in the ArgumentError message"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53073565a6c51ae4d8842d39f8be8507?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4636', 'title': u'code improved with better condition'}, {'body': u"This gist explains what problem I'm fixing: https://gist.github.com/1665503<br/><br/>This patch adds a test and a small amount of code to fix the issue.  Sorry for the stupid merging master commit.  I can't seem to figure out how to get it to behave and don't have time to wrestle with git to fix it. :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6ac41c39b6087f6e059f31903ffc003e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4631', 'title': u'Fix counter cache column name if :inverse_of is specified on belongs_to'}, {'body': u'Proc#bind is not useful when called immediately and previous check for #call method is not correct', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4630', 'title': u'Use instance_eval instead of Proc#bind'}, {'body': u'message quote fix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4629', 'title': u"quote fix ` to ' in the ArgumentError message"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4628', 'title': u'Fix broken build'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4627', 'title': u'single line conditons instead of conditonal blocks'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4626', 'title': u"quote fix ` to ' in the ArgumentError message"}, {'body': u'Without removing this code which creates the log directory, no error will be raised and the warning below will not be shown to the user', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ae73078ae3e573111012b14d38b8d3b2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4625', 'title': u"Don't create log directories"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4623', 'title': u'Add test case to #4585 [3-2-stable]'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4622', 'title': u'instead of @target.logger use logger method'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4621', 'title': u'Add test case to #4585'}, {'body': u'Related to #4614.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4620', 'title': u'Remove not used if..else clause'}, {'body': u'if block refactoring to a single line.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4619', 'title': u'condition refactored to single line, much readable'}, {'body': u'@josevalim please comment on this issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53073565a6c51ae4d8842d39f8be8507?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4618', 'title': u'variable caching in actionpack/lib/sprockets/bootstrap.rb'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53073565a6c51ae4d8842d39f8be8507?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4617', 'title': u'alias_method added'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4614', 'title': u'Unused var removed'}, {'body': u'`ActionDispatch::Cookies::CookieJar` needs a way to query for deleted cookies.<br/><br/>Here\'s an example use case from a controller test:<br/><br/>```ruby<br/>get :destroy<br/>assert cookies.deleted? "auth_token"<br/>```<br/><br/>Cheers!<br/>Paul', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b6cad84e199bbd863bf7459ff98870?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4613', 'title': u'CookieJar#deleted? predicate method'}, {'body': u'I made some tiny improvements on AV::Helpers::Tags.\n\nI cherry-picked some commits from @amatsuda pull request #4515', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4612', 'title': u'Some improvements on ActionView::Helpers::Tags'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/631d1677786f0725da6ccee46043686e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4611', 'title': u'Fix ActiveSupport::Base64.decode64'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4610', 'title': u'use rack 1.4.1'}, {'body': u'Here is a ```none``` method to return an empty relation from a AR model (i.e Post.none), as previously discussed here: https://github.com/rails/rails/pull/4548 <br/><br/>It prevents the query hitting the database, is chainable and makes any subsequent relation empty, so Post.none.where(:author_id => 1) is also empty.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4609', 'title': u'none query method'}, {'body': u"## Short background story:<br/>Our locale files were translated to Russian, but the translator didn't know that :locale.date.order is not translatable. So the locale file looked like this:<br/><br/>    order:<br/>      - :\u0434\u0435\u043d\u044c<br/>      - :\u043c\u0435\u0441\u044f\u0446<br/>      - :\u0433\u043e\u0434<br/><br/>In the view we had `f.date_select :starts_at` and this raised an exception:<br/><br/>    undefined method `select_\u0433\u043e\u0434' for #<ActionView::Helpers::DateTimeSelector:0x00000008036a08><br/><br/>I debugged it and found out, that this comes from the locale file.<br/><br/>## About pull request<br/>I feel that :order values from locales should not be evaluated directly. Actual line that evaluates it: https://github.com/indrekj/rails/blob/translated_date_order/actionpack/lib/action_view/helpers/date_helper.rb#L961<br/><br/>My patch adds code to check if the order includes only :year, :month and :day. If it doesn't then it raises an exception.<br/><br/>I'm not sure if my approach is correct. I wasn't sure which type of exception should be raised. Maybe there shouldn't be anything raised. Even if my patch is bad, I still feel that there should be more informative message than undefined method `select_\u0433\u043e\u0434` exception.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3dcfe148e29aba731693d7b61e790243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4608', 'title': u'Raise exception when date.order includes invalid elements'}, {'body': u'A scoped method for none that pulls no records from the database.<br/><br/>Initially proposed by @xuanxu and discussed at https://github.com/rails/rails/pull/4548', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4607', 'title': u'A scope for "none" which pulls no records from the database.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4606', 'title': u'remove unnecessary AS::Concern usage'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4605', 'title': u'remove obsolete code as old actionmailer api was removed'}, {'body': u'3-2-stable version of pull request 4574 for @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4604', 'title': u'3-2-stable: Fixed regression - unable to use a range as choices for form.select.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53073565a6c51ae4d8842d39f8be8507?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4603', 'title': u'alias_method added'}, {'body': u"I've got this error while adding an `environment` call inside a template file, when building a new rails application.<br/><br/>```<br/>rails new test_drive -m my_template_with_enviroment.rb<br/><br/>.../railties-3.2.0/lib/rails/generators/actions.rb:128:in `block in environment': undefined method `wrap' for Array:Class (NoMethodError)<br/>```<br/><br/>Rails master already changed from `Array.wrap` to `Array()`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4601', 'title': u'Add missing require to Array#wrap in generators action methods'}, {'body': u'logger can be used instead of @target.logger', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be0d7458f833e45ebef564ac4c378a41?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4600', 'title': u'instead of @target.logger use logger method'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/74a43bf962deb3f0bbae359262f806fa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4599', 'title': u'Fix typo'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53073565a6c51ae4d8842d39f8be8507?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4598', 'title': u'some modifications in action_mailer/base.rb'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53073565a6c51ae4d8842d39f8be8507?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4597', 'title': u'some modifications to lib/active_model'}, {'body': u'It seems that this issue is introduced 66a587cf5590d37483d8aba64da5022df08ecf07.<br/>Callbacks is compiled at different timing and context.<br/><br/>In 3.2.0.rc1<br/>callbacks often is compiled in __define_runner method.<br/><br/>In 3.2.0.rc2<br/>callbacks always is compiled in __run_callback method.<br/><br/>Please see also https://github.com/rails/rails/issues/4344<br/><br/>/cc @bogdan', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4596', 'title': u'Fix GH #4344. Callback defined in a module is not triggered when the module extends an object under Rails 3.2rc2'}, {'body': u'Fixes #4591.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/631d1677786f0725da6ccee46043686e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4592', 'title': u'Fix setting $rails_rake_task variable.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53073565a6c51ae4d8842d39f8be8507?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4590', 'title': u'some modifications to lib/active_model'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53073565a6c51ae4d8842d39f8be8507?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4589', 'title': u'some modifications in action_mailer/base.rb'}, {'body': u'These requires were added in a87b92d and the implementation changed in 2cdc1f0, removing the need for them.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4588', 'title': u'Remove not used requires from csrf helper file and test'}, {'body': u'This removes deprecation warnings in test console output introduced in #4582<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4586', 'title': u'Assert with no deprecation warnings activesupport tests.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53073565a6c51ae4d8842d39f8be8507?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4584', 'title': u'some modifications in action_mailer/base.rb'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4582', 'title': u'Fix  GH #4580. Rails 3.2: uninitialized constant ActiveSupport::TaggedLogging::ERROR'}, {'body': u'When I attemted to fix https://github.com/rails/rails/issues/4344, I found this issue.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4581', 'title': u'Remove unused argument.'}, {'body': u'This is a backport of 94bcdd60eaecd81 to 3-1-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4579', 'title': u'Add therubyracer gem commented in default Gemfile (3.1.x)'}, {'body': u'See #4559', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4576', 'title': u'Bump rubygems required version to 1.8.11 (default version in 1.9.3-p0)'}, {'body': u'The `pending` method nowadays works basically delegating to `skip`, so I believe there is no real need to have it. We should just start using `skip` directly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4575', 'title': u'Remove ActiveSupport::TestCase#pending, use `skip` instead'}, {'body': u"As of 3.2, form.select(:foobar, 1..3) fails with:<br/><br/>```<br/>NoMethodError: undefined method `empty?' for 1..3:Range<br/>    actionpack/lib/action_view/helpers/tags/select.rb:21:in `render'<br/>```<br/><br/>However, this still works fine with select_tag and options_for.<br/><br/>I've added tests for both cases and added a one-line fix to convert the range to an array for form.select.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/955103d80e386882143a78875fb727bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4574', 'title': u'Fixed regression - unable to use a range as choices for form.select.'}, {'body': u'This is an already known inconsistency reported here https://rails.lighthouseapp.com/projects/8994/tickets/5679-activerecordbasedefault_timezone<br/><br/>Since AR 3.0, `AR::Base.default_timezone` is set to `:utc` in Railtie https://github.com/rails/rails/blob/c05f3b0e4f/activerecord/lib/active_record/railtie.rb#L48<br/>then overridden to `:local` at Base or Core<br/>https://github.com/rails/rails/blob/c05f3b0e4f/activerecord/lib/active_record/core.rb#L51<br/><br/>Because of this, `AR::Base.default_timezone` value defers for a Rails app<br/><br/>```<br/>% bundle e rails runner \'p ActiveRecord::Base.default_timezone\'<br/>:utc<br/>```<br/>and a Ruby script that doesn\'t load `AR::Railtie`<br/><br/>```<br/>% ruby -e "require \'active_record\'; p ActiveRecord::Base.default_timezone"<br/>:local<br/>```<br/>The next major version up must be the best timing for fixing this inconsistency, so I propose this patch again for 4.0.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4573', 'title': u"change AR default_timezone to :utc since it's the default for AR::Railtie"}, {'body': u'Using regexp looks like overkill here and is also 2x slower.<br/><br/>```<br/>             user     system      total        real<br/>string   0.020000   0.000000   0.020000 (  0.016256)<br/>regexp   0.030000   0.000000   0.030000 (  0.035360)<br/>```<br/><br/>```ruby<br/>require "benchmark"<br/><br/>names = ("a".."z").map { |c| c + "a" * rand(5..10) + "=" * rand(0..1) }.map(&:to_sym)<br/>puts names<br/><br/>n = 1000<br/>Benchmark.bmbm do |x|<br/>  x.report "string" do<br/>    n.times do<br/>      names.each do |name|<br/>        string_name = name.to_s<br/>        string_name.chomp!(\'=\')<br/>        string_name<br/>      end<br/>    end<br/>  end<br/><br/>  x.report "regexp" do<br/>    n.times do<br/>      names.each do |name|<br/>        name.to_s =~ /(.*)=$/<br/>        $1<br/>      end<br/>    end<br/>  end<br/>end<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/607564f1a15f1899c71b4a9fdfc33ac2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4572', 'title': u'Replace regexp matching with a simple string manipulation.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be110ccb289808429894c89202e4384b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4567', 'title': u'Removing useless comma'}, {'body': u'While `pp [model1, model2]` looks like this<br/><br/>```<br/>[#<Model id: 1, created_at: "2012-01-20 14:05:39", updated_at: "2012-01-20 14:05:39">,<br/> #<Model id: 2, created_at: "2012-01-20 14:05:42", updated_at: "2012-01-20 14:05:42">]<br/>```<br/><br/>`pp Model.scoped` prints all AR instances in one line<br/><br/>```<br/>[#<Model id: 1, created_at: "2012-01-20 14:05:39", updated_at: "2012-01-20 14:05:39">, #<Model id: 2, created_at: "2012-01-20 14:05:42", updated_at: "2012-01-20 14:05:42">]<br/>```<br/><br/>Added `AR::Relation#pretty_print` to let `PP` regard a `Relation` as an `Array` of models.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4563', 'title': u'let AR::Relation pretty_printed like an Array'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4560', 'title': u'Refactor NumberHelpers'}, {'body': u'Take the following model:<br/><br/>``` ruby<br/>class User<br/>  validates_length_of :login, maximum: 10<br/>end<br/>```<br/><br/>If I tamper with the form submission so that the param name is "user[login][]" instead of "user[login]", I can post a string that\'s far longer than 10 characters and the application will accept it and serialize it to YAML when type-cast. More application logic may cause the request to blow up, but nothing guarantees a 500 at all let alone before the data is committed to the database.<br/><br/>I did some searching and came across this:<br/><br/>https://rails.lighthouseapp.com/projects/8994/tickets/5686-activerecord-should-raise-an-exception-sometimes<br/><br/>The whole thing must have fallen off @tenderlove\'s radar, so here\'s a patch that will raise `TypeError` during type-cast if a bad type makes it through the controller layer (unless `ActiveRecord::Base.serialize` was declared).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d68c97e8e2f1653b54c24493caf236ae?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4558', 'title': u"Don't type-cast unknown types to YAML."}, {'body': u"Unless I had misssed the point we don't need to check html_safe? twice here\n\ncc/ @rodrigoflores", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4557', 'title': u'No need to check html_safe? twice at number_to_percentage'}, {'body': u'They existed since initial rails commit by DHH but lost use a long time<br/>ago', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4556', 'title': u'Removed unused assigns from ActionView::Template::Error'}, {'body': u'This release includes GH #3824 fixing and warning fix.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4555', 'title': u'Bump mail 2.4.1'}, {'body': u'Added the possibility to specify the format to number_to_percentage.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e983bf17ef27a284e0bdb174cb080b19?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4554', 'title': u'Added the :format option to number_to_percentage'}, {'body': u'date_select does not work when day is discarded, include blank option is<br/>enabled and struct date itself is nil.<br/><br/><br/>e.g<br/><br/>    job = Job.new<br/>    job.date_from #=> nil<br/>    form_for job do |f|<br/>      f.date_select :date_from, :discard_day => true, :include_blank => true<br/>This generates<br/><br/>    <input id="job_date_from_3i" type="hidden" name="job[date_from(3i)]"><br/><br/>As you can see, value="1" is not generated and the record can\'t be saved correctly in the AR.<br/><br/>This problem also exists in 3-2-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3dcfe148e29aba731693d7b61e790243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4553', 'title': u"date_select doesn't work correctly with include_blank and discard_day"}, {'body': u'Here is a method to return an empty relation from a AR model (i.e Post.none).<br/>It is chainable and makes any subsequent relation empty, so Post.none.where(:author_id => 1) is also empty.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4548', 'title': u"'none' query method to return empty ActiveRecord::Relation"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4547', 'title': u'move routing modules and classes out of AD::Routing::Mapper class'}, {'body': u'`performed?` is back, so we can make use of it internally.<br/><br/>* Check for performed? instead of response_body<br/>* Change performed? to return a boolean<br/>* Refactor AC::Metal#response_body= to reuse variable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4546', 'title': u'Use performed? instead of checking for response_body'}, {'body': u'Fixing what appears to be a typo in engine docs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c13437b9485816d7e04d5cd3402c1bd8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4545', 'title': u'Fix documentation bug in Rails::Engine'}, {'body': u"Hi, I ran into what I believe is a bug in CollectionProxy's method_missing.  Given something like<br/><br/>```ruby<br/>class Company<br/>  has_many :clients<br/>end<br/><br/>company.clients.find_or_initialize_by_foo('bar')<br/>```<br/><br/>the current code calls find_or_instantiator_by_attributes for the company.clients proxy, then discards the return value and calls find_or_initialize_by on the client scope.  The return value then looks rather similar to what you'd <br/>expect from the find_or_instantiator_by_attributes call, but the resulting object isn't in the company.clients collection.<br/><br/>I'm fairly sure that it's just missing an 'elsif', like in the attached commit, but if someone (@jonleighton?) could double-check I'm not missing something stupid that would be appreciated.  I believe the problem dates back to https://github.com/rails/rails/commit/86ea94e4d0c228c79b3709f0c667ba90b02e41cd.<br/><br/>I've only been able to try this against our app running 3-1-stable, but the commit applies cleanly to 3-2-stable and master.  Any preference which the pull request should be against?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9e5ce6f28587baa2a566eb4f2d76c13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4543', 'title': u"Don't instantiate two objects in collection proxy / find_or_instantiate_by"}, {'body': u'While I was tackling the GH #4536, I found the problem first.<br/>I should add some directories for the `rake notes` task.<br/><br/>I also added `spec` directory too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4540', 'title': u'Support more directories for rake notes.'}, {'body': u"I had mistaken related to GH #4521.<br/><br/>URI.unescape and URI.escape are deprecated since 1.9.2.<br/><br/>Therefore it seems that we use URI.parser method to use URI.parser.unescape,<br/>and I think that we shouldn't remove URI.parser method (core_ext).<br/><br/>And I seen the below line in railties/guides/source/3_0_release_notes.textile.<br/><br/>```<br/>Ruby 1.9.2: <tt>URI.parse</tt> and <tt>.decode</tt> are deprecated and are no longer used in the library.<br/>```<br/><br/>But I think that the above one has an incorrect fact (URI.parse is not deprecated).<br/>Therefore I converted URI.parser.parse to URI.parse for consistency.<br/><br/>/cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4538', 'title': u'Convert URI.parser.parse to URI.parse, and remove ruby 1.8.x code.'}, {'body': u'that was introduced in 6f8159c4217dc8433a2027ced0c61e7ce94551d3', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4534', 'title': u'refactor RAILS_CACHE deprecation'}, {'body': u'Also I added one test case to `button_to` with request forgery protection enabled and removed\nsome TODO notes', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4532', 'title': u'Refactor button_to helper to use token_tag method'}, {'body': u'Add a `with_lock` method to ActiveRecord objects, which starts<br/>a transaction, locks the object (pessimistically) and yields to the block.<br/>The method takes one (optional) parameter and passes it to `lock!`.<br/><br/>Before:<br/><br/>```ruby<br/>class Order < ActiveRecord::Base<br/>  def cancel!<br/>    transaction do<br/>      lock!<br/>      # ... cancelling logic<br/>    end<br/>  end<br/>end<br/>```<br/><br/>After:<br/><br/>```ruby<br/>class Order < ActiveRecord::Base<br/>  def cancel!<br/>    with_lock do<br/>      # ... cancelling logic<br/>    end<br/>  end<br/>end<br/>```<br/><br/>This PR is a modification of #4503. @tenderlove, please merge and backport to 3-2-stable :).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56c0f984e7a1cccbd5ea165ef310ba4f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4531', 'title': u'Add ActiveRecord::Base#with_lock'}, {'body': u'Meet dependencies by requiring active_support/core_ext/date/calculations\' in Time::Calculations.  Line 101 "d = to_date.advance(options)" uses Date#advance which is defined there.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dffb1e16b6fa875efe7ce5dc36adafb3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4530', 'title': u'Add cherry pick of Date::Calculations to Time::Calculations'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4529', 'title': u'Refactored class methods on address render test'}, {'body': u"If the log file doesn't exist, log tailer errors out and takes down the server with it. Currently this does not happen because even if the log directory doesn't exist, https://github.com/rails/rails/blob/master/railties/lib/rails/application/bootstrap.rb#L27 creates it and the log file will be created. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ae73078ae3e573111012b14d38b8d3b2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4528', 'title': u"Fix for log tailer when the log file doesn't exist."}, {'body': u'Also I removed one more reference to Test::Unit.\n\nThis will fix the build\n\ncc/ @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4527', 'title': u'Remove delegation to ActionController::Base'}, {'body': u"This commit corrects the Kindle ebook navigation to work on the Kindle Touch.<br/><br/>The commit adapts and incorporates the code from https://github.com/danchoi/docrails_kindle<br/><br/>NOTE: this commit introduces a dependency on nokogiri and kindlerb, but I don't<br/>know the proper place outside this commit (which Gemfile or whatnot) to declare<br/>this.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/004e78a7e0aaf9f1eb0009668cd84b1a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4526', 'title': u'Kindle ebook generation with working section navigation'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4525', 'title': u'Update AM CHANGELOG'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4524', 'title': u'remove ruby 1.8 related code'}, {'body': u'This pull request add `ActionView::Base.logger` and remove the check if `ActionController` is defined\nat `ActionView::LogSubscriber`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4523', 'title': u'Add ActionView own logger'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4522', 'title': u'Fix warning: assigned but unused variable - result'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4521', 'title': u'Use URI.parser method, and remove 1.8.x code'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4518', 'title': u'Silent Sprockets logger when config.assets.logger is set to false (3-2-stable)'}, {'body': u'* Do not reopen AV::Base to define default form builder<br/>  Inside the load hook we are already in AV::Base context.<br/><br/>* Do not pass the given block to the form builder<br/>  The block is evaluated in fields_for context using capture, with the<br/>  builder as argument. This means we do not need to give the block to the<br/>  FormBuilder itself.<br/><br/>Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4517', 'title': u'Refactor FormBuilder arguments and default config'}, {'body': u'`expected_name` is not used anymore.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5fe204135849ac59602946d565992285?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4516', 'title': u'Remove unused variable since #4487.'}, {'body': u"Here are some tiny improvements on AV::Helpers' great refactoring done in #4488 :rocket:<br/><br/>* removed needless module_eval<br/><br/>* memoized `field_type` and `select_type` at class level<br/><br/>* renamed AV::Helpers::Tags::Base#render to to_s<br/><br/>As for the `render` vs `to_s` method name, I did so because<br/><br/>* what this method does is nothing but just a `to_s`<br/>* we probably can do something like `<%= SomeTag.new obj, method %>` in views, since ERB implicitly calls `to_s`<br/><br/>What do you think, @rafaelfranca?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4515', 'title': u'some improvements on ActionView::Helpers::FormHelper refactoring'}, {'body': u'To demonstrate an issue run following:<br/><br/>```<br/>$ export TZ=\'Europe/Moscow\'<br/>$ rake test TEST=activesupport/test/core_ext/time_ext_test.rb<br/>```<br/><br/>You\'ll get following:<br/><br/>```<br/>  1) Failure:<br/>test_local_time(TimeExtCalculationsTest) [/Users/brainopia/code/sources/rails/activesupport/test/core_ext/time_ext_test.rb:650]:<br/>--- expected<br/>+++ actual<br/>@@ -1 +1 @@<br/>-2039-02-21 17:44:30 +0400<br/>+Mon, 21 Feb 2039 17:44:30 +0300<br/><br/><br/>  2) Failure:<br/>test_time_with_datetime_fallback(TimeExtCalculationsTest) [/Users/brainopia/code/sources/rails/activesupport/test/core_ext/time_ext_test.rb:621]:<br/>--- expected<br/>+++ actual<br/>@@ -1 +1 @@<br/>-2039-02-21 17:44:30 +0400<br/>+Mon, 21 Feb 2039 17:44:30 +0300<br/>```<br/><br/>The reason is that rails uses time zone offets for 2007 year. And since then there were changes, for example Russia abolished daylight savings.<br/><br/>```<br/>> ENV[\'TZ\'] = \'Europe/Moscow\'<br/>"Europe/Moscow" <br/>> Time.new(2007).utc_offset<br/>10800 <br/>> Time.new(2012).utc_offset<br/>14400<br/>```<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4514', 'title': u'Update time zone offset information'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4512', 'title': u'Silent Sprockets logger when config.assets.logger is set to false'}, {'body': u"* Make sure `content_tag_for` does not mutate the options hash.<br/>* Cleanup `content_tag_for` helper by removing call to capture and using `Array()` instead of checking for `to_ary`.<br/><br/>This pull is partially related to #4341, which I just found out after finishing doing the changes here. I ended up cherry picking @coop's commits and rebasing into my changes to have him as author. The issue he was having with `Array()` was due to the `Post` class being used everywhere inside the test suite. Changes to this class coming from some other place were interfering on these tests, making them fail hard. I've fixed that by renaming the class to `RecordTagPost` - all AP tests are green.<br/><br/>Let me know if something should be improved.<br/>Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4510', 'title': u'ActionView content_tag_for refactoring and improvements'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4509', 'title': u'Refactor form_for and form_tag'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4508', 'title': u'Refactor TaggedLogging'}, {'body': u'This allows to shorten a typical idiom of calling the `lock!`<br/>method as first within a transaction:<br/><br/>```ruby<br/>class Order < ActiveRecord::Base<br/>  def cancel!<br/>    transaction do<br/>      lock!<br/>      # ... cancelling logic<br/>    end<br/>  end<br/>end<br/><br/># becomes:<br/><br/>class Order < ActiveRecord::Base<br/>  def cancel!<br/>    lock! do<br/>      # ... cancelling logic<br/>    end<br/>  end<br/>end<br/>```<br/><br/>@tenderlove this is the port of #4479 you asked for. Please backport to 3-2-stable as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56c0f984e7a1cccbd5ea165ef310ba4f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4503', 'title': u'Accept a block passed to pessimistic `lock!`'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4501', 'title': u'Add option to configure Sprockets logger [3-2-stable]'}, {'body': u'I think it should be deprecated for the following reasons.<br/><br/>1) RAILS_ENV, RAILS_DEFAULT_LOGGER, RAILS_ROOT were removed.<br/>2) I think that we should not use Global scope constant.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4500', 'title': u'[Proposal] We should deprecate the RAILS_CACHE constant.'}, {'body': u'Related with #3795 and #2639', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4499', 'title': u'Add option to configure Sprockets logger'}, {'body': u'Deprecate methods inside `ActionController::Compatibility`. Most of them are not being used internally by the framework anymore and can be removed in future releases.<br/><br/>Also add `config.action_dispatch.default_charset` in favour of setting default charset at controller level.<br/><br/>Related to #4497 - remove compatibility module.<br/><br/>Please let me know if something should be improved.<br/>Thanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4498', 'title': u'Action controller refactor - deprecate Compatibility module'}, {'body': u"Remove `Compatibility` module from ActionController, either by cleaning up code that is going to be deprecated in 3.2, or by moving code to their right places inside ActionController modules.<br/><br/>I'm sending a second pull request for 3-2-stable branch deprecating most of the methods inside this module.<br/><br/>Please let me know if something should be improved.<br/>Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4497', 'title': u'Action controller refactor - remove Compatibility module'}, {'body': u'Consistency with RFCs related to other common forms of caching:<br/>HTTP - RFC2616<br/>DNS  - RFC1912', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/33b4a7e8727b95c8fd1f833ce2cd0766?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4496', 'title': u'Active Support Cache - race_condition_ttl should be an integer'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6c06e822ce2d88fa283349e61ed9c1da?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4494', 'title': u'Validates method should not change options argument'}, {'body': u'I suppose that `:per_key` option was originally designed to improve performance of `(before/after/around)_filter` in `ActionController`. Maybe someone who is in Rails core team since 2009 can explain why this option appeared.<br/><br/>But now when overall performance issue was fixed, we can rewrite it with 3 lines of code using other code we have.<br/><br/>Performance test: https://gist.github.com/1626009<br/><br/>**19% performance improvement** on `set_callback`<br/>**19% performance improvement** on `run_callbacks` with `:per_key` option<br/>**15% performance improvement** on `skip_callback` <br/><br/><br/>Checked tests for AR, AM and AP to ensure everything is fine.<br/><br/>```<br/>Rehearsal ----------------------------------------------------<br/>New set_callback   0.050000   0.000000   0.050000 (  0.045225)<br/>Old set_callback   0.050000   0.010000   0.060000 (  0.056748)<br/>------------------------------------------- total: 0.110000sec<br/><br/>                       user     system      total        real<br/>New set_callback   0.040000   0.000000   0.040000 (  0.043966)<br/>Old set_callback   0.050000   0.000000   0.050000 (  0.053711)<br/>************************************************************************************************************************<br/>Rehearsal --------------------------------------------------------<br/>New define_callbacks   0.020000   0.000000   0.020000 (  0.019756)<br/>Old define_callbacks   0.020000   0.000000   0.020000 (  0.019723)<br/>----------------------------------------------- total: 0.040000sec<br/><br/>                           user     system      total        real<br/>New define_callbacks   0.010000   0.010000   0.020000 (  0.019719)<br/>Old define_callbacks   0.020000   0.010000   0.030000 (  0.019841)<br/>************************************************************************************************************************<br/>Rehearsal -----------------------------------------------------<br/>New run_callbacks   0.000000   0.000000   0.000000 (  0.004363)<br/>Old run_callbacks   0.010000   0.000000   0.010000 (  0.005427)<br/>-------------------------------------------- total: 0.010000sec<br/><br/>                        user     system      total        real<br/>New run_callbacks   0.000000   0.000000   0.000000 (  0.004433)<br/>Old run_callbacks   0.010000   0.000000   0.010000 (  0.005051)<br/>************************************************************************************************************************<br/>Rehearsal --------------------------------------------------------------<br/>New run_callbacks with key   0.000000   0.000000   0.000000 (  0.000471)<br/>Old run_callbacks with key   0.000000   0.000000   0.000000 (  0.001329)<br/>----------------------------------------------------- total: 0.000000sec<br/><br/>                                 user     system      total        real<br/>New run_callbacks with key   0.000000   0.000000   0.000000 (  0.000473)<br/>Old run_callbacks with key   0.000000   0.000000   0.000000 (  0.000570)<br/>************************************************************************************************************************<br/>Rehearsal -----------------------------------------------------<br/>New skip_callback   0.020000   0.010000   0.030000 (  0.029028)<br/>Old skip_callback   0.030000   0.000000   0.030000 (  0.033500)<br/>-------------------------------------------- total: 0.060000sec<br/><br/>                        user     system      total        real<br/>New skip_callback   0.030000   0.000000   0.030000 (  0.028263)<br/>Old skip_callback   0.030000   0.000000   0.030000 (  0.033339)<br/><br/>```<br/><br/><br/><br/> ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4493', 'title': u'AS::Callbacks: Refactor :per_key option'}, {'body': u'Since ActiveModel::Errors instance keeps all error messages as hash<br/>we should duplicate this object as well.<br/><br/>Previously ActiveModel::Errors was a subclass of ActiveSupport::OrderedHash,<br/>which results in different behavior on dup, this may result in regression for<br/>people relying on it.<br/><br/>Because Rails 3.2 stills supports Ruby 1.8.7 in order to properly fix this<br/>regression we need to backport #initialize_dup.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22ffeede16982c3b8b03d80f4f2dc446?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4492', 'title': u'Wrong behavior of ActiveModel::Errors#dup is causing regressions on applications using Rails 3-2-stable'}, {'body': u"Since ActiveModel::Errors instance keeps all error messages as hash<br/>we should duplicate this object as well.<br/><br/>Previously ActiveModel::Errors was a subclass of ActiveSupport::OrderedHash,<br/>which results in different behavior on `dup`, this may result in regression for<br/>people relying on it.<br/><br/>I'm attaching also small cleanup of redundant code.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22ffeede16982c3b8b03d80f4f2dc446?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4491', 'title': u'Wrong behavior of ActiveModel::Errors#dup is causing regressions on Rails master'}, {'body': u'E.G.:<br/><br/>```ruby<br/>class Parent < ActiveRecord::Base<br/>  has_one :child<br/>  validates_presence_of :name, :on => "custom_context"<br/>  validates_associated :child<br/>end<br/><br/>class Child < ActiveRecord::Base<br/>  belongs_to :parent<br/>  validates_presence_of :name, :on => "custom_context"<br/>end<br/><br/>p = Parent.new(:name => "Montoto", :child => Child.new)<br/>p.valid?(:custom_context) # => Returns true, even though the child is not valid under the same context.<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/045bcaef857ed4751e262b1c684ee53b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4490', 'title': u'when validating a record, if a validation context is used, use the same context when validating related records '}, {'body': u'I extracted some tags to their own classes to make easier to maintain and extend.<br/><br/>Some plugins like SimpleForm and Formtastic can take advantage of this refactoring to create their custom components.<br/><br/>This refactor was inspired in the SimpleForm gem', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4488', 'title': u'ActionView::Helpers::FormHelper refactoring'}, {'body': u'If a model belongs_to two associations with the same class, then reset_counters<br/>will reset the wrong counter cache.<br/><br/>Finding the right reflection should use the foreign_key instead, which should<br/>be unique.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7d378db2f99b9c09f241125fb4829ecf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4487', 'title': u'Fix bug where reset_counters resets the wrong counter cache.'}, {'body': u'previous solution can cause race conditions under GIL-free ruby implementations', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4484', 'title': u'use thread variable in TaggedLogging'}, {'body': u'This is a rebase of commits from PR #4153 and #4224 to `3-1-stable`, with minor changes in a couple of commits.<br/><br/>This fixes issue #2572 with `set_fixture_class` and makes fixture table name be defined in the associated model.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4482', 'title': u'Backport PR #4153 and #4224 to 3-1-stable '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4480', 'title': u'Use Rack::BodyProxy'}, {'body': u"This allows to shorten a typical idiom of calling the `lock!`<br/>method as first within a transaction:<br/><br/>```ruby<br/>class Order < ActiveRecord::Base<br/>  def cancel!<br/>    transaction do<br/>      lock!<br/>      # ... cancelling logic<br/>    end<br/>  end<br/>end<br/><br/># becomes:<br/><br/>class Order < ActiveRecord::Base<br/>  def cancel!<br/>    lock! do<br/>      # ... cancelling logic<br/>    end<br/>  end<br/>end<br/>```<br/><br/>If this patch gets accepted, I'll update the changelog and guides/docs, and create a separate PR for master.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56c0f984e7a1cccbd5ea165ef310ba4f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4479', 'title': u'Accept a block in pessimistic lock'}, {'body': u"I found `app/mailers` directory is not included in `rake stats` result.<br/>Here's a fix.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4478', 'title': u'show stats for app/mailers'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4477', 'title': u'Fix test class name that should read Without'}, {'body': u'This is a backport of #4469 to 3-2-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4474', 'title': u"Don't hardcode assets route skipped in route inspector (3-2-stable)"}, {'body': u'This is faster and more concise. At least Ruby 1.8.7 is required which is ok since 3.2.<br/><br/>Benchmark:<br/><br/>```ruby<br/>require "benchmark"<br/><br/>enum = 1..10_000<br/>N = 100<br/>Benchmark.bm do |x|<br/>  x.report "inject block" do<br/>    N.times do<br/>      enum.inject { |sum, n| sum + n }<br/>    end<br/>  end<br/><br/>  x.report "inject symbol" do<br/>    N.times do<br/>      enum.inject(:+)<br/>    end<br/>  end<br/>end<br/>```<br/><br/>Result:<br/><br/>```<br/>       user     system      total        real<br/>inject block   0.160000   0.000000   0.160000 (  0.179723)<br/>inject symbol  0.090000   0.000000   0.090000 (  0.095667)<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/607564f1a15f1899c71b4a9fdfc33ac2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4471', 'title': u'Pass a symbol instead of a block in Enumerable#sum'}, {'body': u'Inspired by [line notes on fa1d9a8](https://github.com/rails/rails/commit/fa1d9a884c0d5b70c97442e3360ac98ca5fa4340#L7R155).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4931eceec58528529fd004e56af197c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4470', 'title': u'Refactored watchable_args and build_original_fullpath methods in Rails::Application'}, {'body': u'Right now generating a resource named asset with scaffold and setting ```config.assets.prefix = \'/sprockets\'``` (to avoid conflicting with generated resources) the output of ```rake routes``` is:<br/><br/>```<br/>/tmp/foo % rake routes<br/>  /sprockets #<Sprockets::Environment:0x3fea8846578c root="/private/tmp/foo", paths=["/private/tmp/foo/app/assets/images", "/private/tmp/foo/app/assets/javascripts", "/private/tmp/foo/app/assets/stylesheets", "/private/tmp/foo/vendor/assets/javascripts", "/private/tmp/foo/vendor/assets/stylesheets", "/Users/guille/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/jquery-rails-2.0.0/vendor/assets/javascripts", "/Users/guille/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/bundler/gems/coffee-rails-6b4034abbf7d/lib/assets/javascripts"], digest="aa7d0db7619379e13b08335dee027df2"><br/>```<br/><br/>This have two issues, the first one is that any of the routes prefixed with /assets is shown and the second one is that the /sprockets one shouldn\'t be shown.<br/><br/>After of apply this patch, the output ```rake routes``` is the expected:<br/><br/>```<br/>/tmp/foo % rake routes<br/>    assets GET    /assets(.:format)          assets#index<br/>           POST   /assets(.:format)          assets#create<br/> new_asset GET    /assets/new(.:format)      assets#new<br/>edit_asset GET    /assets/:id/edit(.:format) assets#edit<br/>     asset GET    /assets/:id(.:format)      assets#show<br/>           PUT    /assets/:id(.:format)      assets#update<br/>           DELETE /assets/:id(.:format)      assets#destroy<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4469', 'title': u"Don't hardcode assets route skipped in route inspector"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4468', 'title': u'Bump Sprockets to 2.2.0 in master'}, {'body': u'...roller::IntegrationTest, ActionController::PerformanceTest,ActionController::AbstractRequest, ActionController::Request, ActionController::AbstractResponse others', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4467', 'title': u'changelog entry for deprecated ActionController::Integration, ActionCont...'}, {'body': u'Minor improvements on generated attribute index options.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4466', 'title': u'Generated attributes refactor'}, {'body': u'there is no need for a local variable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4465', 'title': u'refactor Response#body method'}, {'body': u'response_to?(:each) returns false for strings in ruby 1.9, so there is no need for these checks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4463', 'title': u'refactor response_body= method'}, {'body': u'This patch stubs the `ip` method of the request class for the alternate request class router tests, so that rails/journey#11 can be applied without breaking ActionPack tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4462', 'title': u'Stub ip method of alternative request class in router tests'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4459', 'title': u'removed unnecessary test_pass test from form_tag_helper_test.rb'}, {'body': u'Removed unnecessary test', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4458', 'title': u'removed unnecessary test_pass test from form_tag_helper_test.rb'}, {'body': u'Removing the MRI 1.8 specific block which installs systemtimer', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ae73078ae3e573111012b14d38b8d3b2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4457', 'title': u'Remove MRI 1.8 specific gems'}, {'body': u'Fix clear assets cache regression. tmp/cache directory sometimes includes sass.<br/><br/>This PR is related to GH #4427.<br/>I think that #4427 has one problem (sorry, it is my PR).<br/><br/>tmp/cache directory includes sass directory.<br/>After all, it seems that we must delete tmp/cache/*.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4456', 'title': u'Fix clear cache regression. tmp/cache directory includes sass.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2224acac6b9f3f0e7728322f48866d1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4452', 'title': u'Fix cache (FileStore) clear to keep .gitkeep.'}, {'body': u"This add therubyracer to default Gemfile but commented since we want avoid the detection of existing JS runtimes on the system. (See #3619)<br/><br/>Also I plan to update Getting Started guide to tell new Rails users that they can uncomment this line when they don't have a JS runtime in their system.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4451', 'title': u'Add therubyracer gem commented in default Gemfile'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4448', 'title': u'cleanup AV::Helpers::UrlHelper'}, {'body': u'i wasted so much time trying to figure out why there is no error but the sweeper didn\'t run, only to find out that there is a typo in method call. The typo did not raise any "no method error" when the cache sweeper is run.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/837713ae659ff2fe9f375528c176fbde?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4446', 'title': u'prevent the cache sweeper ignores NoMethodError'}, {'body': u'This is an addition to https://github.com/rails/rails/pull/3900<br/><br/>In addition to using `attr_accessible` to identify which params to wrap, this also allows you to specify a role using an :as option on `wrap_parameters`. Then the wrapped params will only be those accessible to that role.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18903c149f08850e897d1f63f254eeee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4445', 'title': u'specify a role for identifying accessible attributes when wrapping params'}, {'body': u'cc @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4443', 'title': u'Update railties 3.2.0 changelog'}, {'body': u'I updated the actionpack changelog with some fixes that I did some weeks ago', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4442', 'title': u'Update actionpack changelog in 3-1-stable'}, {'body': u'```` ruby<br/>before_filter :first<br/>before_filter :second, :if => :second_condition<br/>````<br/><br/>In this example, if :first terminates the callback chain, then the `second` method is not called (= correct), but the `second_condition` method *is* called.<br/><br/>The commit shows a failing test case for this.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a31c2c26350e9e2b07fbd99fbd5ff520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4440', 'title': u':if and :unless procs of callback filters are called, even when callback chain is terminated.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4439', 'title': u'Do not check if record is an Array twice'}, {'body': u"...x, which is needed by execjs when the newly generated app is run<br/><br/>This pull request takes over for pull request #4406 (https://github.com/rails/rails/pull/4406/).  I took tenderlove's suggestion and removed the checks for Javascript runtime in the generator, and instead assume that the gem is needed in Linux.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4425fd396ee43b48235575d5a4427409?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4437', 'title': u'Missing js runtime fix 3 2 stable'}, {'body': u"...x, which is needed by execjs when the newly generated app is run<br/><br/>This pull request takes over for pull request #4407 (https://github.com/rails/rails/pull/4407/).  I took tenderlove's suggestion and removed the checks for Javascript runtime in the generator, and instead assume that the gem is needed in Linux.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4425fd396ee43b48235575d5a4427409?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4436', 'title': u'Missing js runtime fix 3 1 stable'}, {'body': u"...x, which is needed by execjs when the newly generated app is run<br/><br/>This pull request takes over for pull request #4405 (https://github.com/rails/rails/pull/4405/).  I took tenderlove's suggestion and removed the checks for Javascript runtime in the generator, and instead assume that the gem is needed in Linux.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4425fd396ee43b48235575d5a4427409?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4435', 'title': u'Rails new generator will now add therubyracer gem to the Gemfile on Linu...'}, {'body': u"Refactor `tag_options` and break it in smaller methods.<br/><br/>I've also removed the `process_views_paths` method from AV::Base, it was deprecated and there is no other mention of it in the entire source code - neither in master nor in 3-2-stable branch. Tests are all green.<br/><br/>Let me know if something should be changed. Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4434', 'title': u'Action view refactor'}, {'body': u'All the logic is based on the HTML_ESCAPE constant available in ERB::Util, so it seems more logic to have the entire method there and just delegate the helper to use it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4433', 'title': u'Html escape once'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4432', 'title': u'to_date, to_time, and to_datetime Time methods present in ruby 1.9'}, {'body': u'there is no need in local_const_defined? helper method', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4431', 'title': u'use const_defined? with second argument in AS::Dependencies'}, {'body': u"This implements the fix submitted in issue #1923.<br/><br/>The logic behind is that we're redirecting from a non-secure environment to a secure environment, so the session cookie must be available in both. <br/><br/>However if the app is running in force_ssl mode, this change makes no difference, so it's beneficial if you work in a split environment.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f18f7e503baa430950e10b92d88fc6b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4429', 'title': u'When force redirecting to SSL, make sure that the session is kept'}, {'body': u"APIs aren't always easy, sometimes they want you to do something very special, something there is no hook in ActiveResource::Connection for. Extending connections isn't very slick at the moment, it requires you to overload `ActiveResource::Base.connection` in your models or some dirty patching. <br/><br/>The solution above allows users to assign a connection class in their models, allowing a new dimension of API customisations. I could also think of opportunities for new gems, with Connection classes that use other HTTP libraries, e.g. `activeresource-excon-connection`, etc. These would then be applicable on a model-by-model basis.<br/><br/>dim<br/><br/>PS: Original pull request - https://github.com/rails/rails/pull/4421", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bf15165e934d7e336139512a47f4330b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4428', 'title': u'Allow extending ActiveResource models by assigning custom connection'}, {'body': u'We should support `assets:cache:clean` task to respect sprockets cache.<br/><br/>Please see also https://github.com/rails/rails/issues/3980 .<br/><br/>/cc @guilleiguaran', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4427', 'title': u'Fix GH #3980. Support assets:cache:clean task.'}, {'body': u'Refactor and improve ActionDispatch URL logic to avoid creating match objects, and extract ip host regexp to a constant.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4425', 'title': u'Url for refactor'}, {'body': u"Conditionally removes the Gem.source_index for the `2-3-stable` branch.<br/><br/>Probably complements #536<br/><br/>**NOTE** *(2 feb 2012):* I wasn't able to setup the rails `2-3-stable` development environment, if anyone can point me to some working  instruction/tutorial I'll happily do my homework :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c82630c82a3c675d2928804f432fcf17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4422', 'title': u'Remove Gem.source_index warning'}, {'body': u"...n classes.<br/><br/>APIs aren't always easy, sometimes they want you to do something very special, something there is no hook in ActiveResource::Connection for. Extending connections isn't very slick at the moment, it requires you to overload `ActiveResource::Base.connection` in your models or some dirty patching. <br/><br/>The solution above allows users to assign a connection class in their models, allowing a new dimension of API customisations. I could also think of opportunities for new gems, with Connection classes that use other HTTP libraries, e.g. `activeresource-excon-connection`, etc. These would then be applicable on a model-by-model basis.<br/><br/>dim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bf15165e934d7e336139512a47f4330b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4421', 'title': u'Allow extending ActiveResource connections by assigning custom ones'}, {'body': u'This fixes GH #4255', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ae73078ae3e573111012b14d38b8d3b2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4419', 'title': u'Handle leading spaces in protocol while sanitizing'}, {'body': u'As requested by @spastorino, this is a backport of #4408 to 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be3698f145a80c1230fd667c87d0f0c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4418', 'title': u'#[] and #[]= are no longer interchangeable with #read_attribute and #write_attribute (3-1-stable)'}, {'body': u'Based on discussion under #4305 and benchmark: https://github.com/rails/rails/issues/4305#issuecomment-3395384<br/><br/>Reapply the "remove runner" commit with additional change for AR `after_initialize` callbacks and fix  Guides examle.<br/><br/>#4305 could be closed I believe.<br/><br/>cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4417', 'title': u'AS::Callbacks: remove unused runner'}, {'body': u'changing self.attribute to @atrribute to follow one kind of value assignment through out the file', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e16e5ce677dc600acc19903f561acef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4414', 'title': u'changing self.attribute to @atrribute to follow one kind of value assign...'}, {'body': u' For example, I want to not sync on staging. or I has some xyz_production environments.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4413', 'title': u"We should be able to set Logger's file sync."}, {'body': u'We should specify an encoding in `rdoc_option` explicitly.<br/>The encoding is not specified in activesupport.gemspec.<br/><br/>Before:<br/><br/>```<br/><br/>~/rails(fix_3743)$ export LANG=en_US.ISO-8859-1 \u2605 specified no UTF-8 encoding.<br/>~/rails(fix_3743)$ cd (path to rails)<br/>~/rails(fix_3743)$ rake build<br/>~/rails(fix_3743)$ cd pkg<br/>~/rails/pkg(fix_3743)$ gem install activesupport-4.0.0.beta.gem<br/>Successfully installed activesupport-4.0.0.beta<br/>1 gem installed<br/>Installing ri documentation for activesupport-4.0.0.beta...<br/>Installing RDoc documentation for activesupport-4.0.0.beta...<br/>ERROR:  While generating documentation for activesupport-4.0.0.beta<br/>... MESSAGE:   error generating ActiveSupport/Inflector.html: incompatible encoding regexp match (UTF-8 regexp with ISO-8859-1 string) (Encoding::CompatibilityError)<br/>... RDOC args: --op /home/kennyj/.rvm/gems/ruby-1.9.3-p0/doc/activesupport-4.0.0.beta/rdoc lib --title activesupport-4.0.0.beta Documentation --quiet<br/>```<br/><br/>After:<br/><br/>```<br/>~/rails/pkg(fix_3743)$ gem install activesupport-4.0.0.beta.gem<br/>Successfully installed activesupport-4.0.0.beta<br/>1 gem installed<br/>Installing ri documentation for activesupport-4.0.0.beta...<br/>Installing RDoc documentation for activesupport-4.0.0.beta...<br/>~/rails/pkg(fix_3743)$<br/>```<br/><br/>Please see also https://github.com/rails/rails/issues/3743.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4412', 'title': u'Fix GH #3743. We must specify an encoding in rdoc_option explicitly.'}, {'body': u'This fix the regression related in https://github.com/rails/rails/issues/4409', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ec34f8299bf0ee3cacc0854502def52f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4410', 'title': u'fix activerecord query_method regression with offset into Fixnum'}, {'body': u"21eadc1 forced `ActiveRecord::Base#[]` and `#[]=` to use the default implementations of `#read_attribute` and `#write_attribute` respectively; if one of the latter methods is redefined, or wrapped with `alias_method_chain`, its alias will retain the default behaviour.<br/><br/>I don't think this change in semantics was intentional, so I've added tests for the expected behaviour and reverted 21eadc1 to make them pass.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be3698f145a80c1230fd667c87d0f0c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4408', 'title': u'#[] and #[]= are no longer interchangeable with #read_attribute and #write_attribute'}, {'body': u"... a Javascript runtime (Linux without node js). Without this gem an error is reported by execjs<br/><br/>Issues #412 and #4020<br/><br/>I've tested this on Ubuntu with and without nodejs, and on Windows, and it works correctly, the Gemfile contains a line for therubyracer only on Ubuntu without nodejs<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4425fd396ee43b48235575d5a4427409?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4407', 'title': u'Missing js runtime fix 3 1 stable'}, {'body': u"... a Javascript runtime (Linux without node js). Without this gem an error is reported by execjs<br/><br/>Issues #412 and #4020<br/><br/>I've tested this on Ubuntu with and without nodejs, and on Windows, and it works correctly, the Gemfile contains a line for therubyracer only on Ubuntu without nodejs<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4425fd396ee43b48235575d5a4427409?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4406', 'title': u'Missing js runtime fix 3 2 stable'}, {'body': u"... a Javascript runtime (Linux without node js). Without this gem an error is reported by execjs<br/><br/>Issues #412 and #4020<br/><br/>I've tested this on Ubuntu with and without nodejs, and on Windows, and it works correctly, the Gemfile contains a line for therubyracer only on Ubuntu without nodejs<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4425fd396ee43b48235575d5a4427409?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4405', 'title': u'therubyracer gem is now added to the Gemfile on systems that do not have...'}, {'body': u"Hello,<br/><br/>Santiago added some additional steps in the Rails 3.2 Release Notes guide. I thought of adding them in the docrails branch but it hasn't been merged back there yet. <br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d04b414402122afb854ffb9c3b14eaa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4404', 'title': u"Edits to spastorino's upgrade notes"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d04b414402122afb854ffb9c3b14eaa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4403', 'title': u"Edits to spastorino's addition to upgrade notes"}, {'body': u'I found the following issues, while a survey of GH #4259.<br/><br/>If we execute migrate(:down) method with table_name_prefix, an exception (table isn\'t exists) is raised.<br/>When we call change method (down direction), It seems that Migrator.proper_table_name method is called twice.<br/><br/>For example,<br/><br/>```<br/>1) ActiveRecord::Base.table_name_prefix = "foo_"<br/>2) def change<br/>     create_table "horses" do |t|<br/>       ...<br/>     end<br/>   end<br/><br/>3) migrate(:up)<br/><br/>=> executed: create table foo_horses ...<br/><br/>4) migrate(:down)<br/><br/>=> executed: drop table foo_foo_horses ...<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4399', 'title': u'migrate(:down) method with table_name_prefix'}, {'body': u'deprecated action_controller integration test and performance test', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4398', 'title': u'deprecated action_controller integration test and performance test'}, {'body': u'Please see #4259\nand https://rails.lighthouseapp.com/projects/8994/tickets/1210-table_name_prefix-with-dbschemaload-causes-double-prefixes', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4396', 'title': u'Fix GH #4259. When we execute schema dumper, we must remove table_name_prefix and table_name_suffix.'}, {'body': u'cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4395', 'title': u'Fix ActionController::TestCase::Behavior#head'}, {'body': u'This was rejected this issue. <br/>https://github.com/rails/rails/pull/4389#issuecomment-3408145<br/><br/>But I improve this is backwards compatible.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aa452bc2667982dabd920ce1af0d8710?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4391', 'title': u'I18n default subject add prefix'}, {'body': u"These commits fix some of the tests failures mentioned in #4292. The last failing test (test_rendering_a_partial_in_an_RJS_template_should_pick_the_JS_template_over_the_HTML_one) is probably a flaw in the application logic itself and as I'm not familiar with actionpack that much, someone else should take a look at that.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/60d06f7560160f3ce7aa3877596da63f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4390', 'title': u'3 0 stable'}, {'body': u"I think subject i18n translation need 'actionmailer' prefix like ActiveRecord or ActiveModel.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aa452bc2667982dabd920ce1af0d8710?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4389', 'title': u"ActionMailer#default_i18n_subject i18n scope add 'actionmailer' prefix."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4387', 'title': u'Added the release dates for rails 3.1.1, rails 3.1.2, rails 3.1.3'}, {'body': u'instance_variable get and set without string,  look up identifier as a symbol', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4386', 'title': u'instance_variable get and set without string, look up identifier as a sym'}, {'body': u"I'd like to use the ```Sprockets::StaticCompiler``` for assets, which include SVG files.<br/><br/>This change extends the set of files gzip-compressed by default by ```Sprockets::StaticCompiler``` to files with any of following extensions: css, html, js, svg, txt, xml. Without this change it copresses only css and js files.<br/><br/>This change enables the users of Sprockets::StaticCompiler to handle over in (constructor argument) ```options``` the regexp determining which files to gzip. Without this change it hardcodes the ```/\\.(css|js)$/``` regexp.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/acb03e5fa57c2956511155344d14afaf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4385', 'title': u'Sprockets::StaticCompiler: option ":zip_files"'}, {'body': u'Minor change.. Just using the stub instead of defining the method', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4383', 'title': u'using stub instad of redefining method'}, {'body': u"This PR fixed GH #3931.<br/><br/>If you execute the following migration, foo column becomes *mediumtext*, and bar column becomes *longtext*.<br/><br/>```<br/>  t.column :foo, :limit => 0x555555 (5592405)<br/>  t.column :bar, :limit => 0x555556 (5592406)<br/>```<br/><br/>But mediumtext's limit on mysql is 0xffffff (16777215).<br/><br/>Please see http://dev.mysql.com/doc/refman/5.5/en/storage-requirements.html<br/><br/>Please see also https://github.com/rails/rails/issues/3931.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4382', 'title': u'Fix GH #3931. A text type column with limit is returned incorrect data type on mysql.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4381', 'title': u"use Hash instead of AS::OrderedHash as it's already ordered in 1.9 ruby"}, {'body': u'- instance_variables method returns symbols in 1.9 ruby<br/>- Symbol#[] method presents in Ruby 1.9', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4378', 'title': u'ruby 1.9 related refactoring'}, {'body': u'- instance_variables return symbols in 1.9<br/>- there is instance_variable_defined? method', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4377', 'title': u'get rid of using instance_variable_names method from AS'}, {'body': u"Callbacks are defined through some method_missing schema.<br/>That's why `respond_to?(...)` doesn't work and we need to check if some callbacks present manually.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4376', 'title': u'Fixed after_initialize callbacks call on AR model #dup'}, {'body': u'refs #1721', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4375', 'title': u'add benchmark helper that works in erb'}, {'body': u'if turn available then MiniTest::Unit.respond_to?(:use_natural_language_case_names=) available<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4373', 'title': u'if turn available then MiniTest::Unit.respond_to?(:use_natural_language_...'}, {'body': u'See #4292', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4372', 'title': u'Fixed failing test'}, {'body': u'I think that this is the last one pull request related to Test::Unit.<br/><br/>There is also this pull request #4355 that remove more references to Test::Unit', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4371', 'title': u'Test unit cleanup'}, {'body': u'fixes #4321', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ae619e02984c5efc3d3e6f9fef39079c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4370', 'title': u'Validates unique association'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4369', 'title': u'use stub instead of redefining method to suppress warnings'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4365', 'title': u'change Array.wrap to Kernel#Array in AssociatedValidator'}, {'body': u'Removing the buffered_logger and related tests. We are not using the  buffered_logger in the code.  Seems that we can remove it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4363', 'title': u'removing the buffered_logger and related tests'}, {'body': u'<br/>1.9.3-p0 :004 > Array([[1,2],[3,4]])   <br/> => [[1, 2], [3, 4]]<br/> <br/>1.9.3-p0 :001 > Array([1,2]) <br/> => [1, 2] <br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4361', 'title': u'Using Array directly instead of Array.wrap'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4360', 'title': u'Remove more references to Test::Unit'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4359', 'title': u'removed unnecessary require for activesupport/core_ext/array/wrap'}, {'body': u'revert "fixing some tests on ruby 1.9.3"<br/><br/>This reverts commit 33f222b9e1b20aa6264084ec2c8c3206e1c2d598', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4358', 'title': u'revert "fixing some tests on ruby 1.9.3" '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4357', 'title': u'Remove more references to Test::Unit'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4356', 'title': u'removed unnessary require active_support/core_ext/array_wrap'}, {'body': u'Objectspace not available in ruby19', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4355', 'title': u'Objectspace not available in ruby19'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4354', 'title': u'Remove some checks if MiniTest is defined'}, {'body': u'This removes the hidden value for a checkbox if that value is going to be nil.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4353', 'title': u"don't set the hidden checkbox value if it's nil"}, {'body': u'@josevalim<br/>Please merge this PR.<br/><br/>This PR is a improvement for GH #3694.<br/>Memory consumption will be reduced if we execute `assets:precompile` .<br/> <br/>Please see also...<br/>https://github.com/rails/rails/issues/3694<br/>https://github.com/rails/rails/pull/4350', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4352', 'title': u"[3-2-stable] Don't fork a process when assets:precompile:nondigest is invoked in assets:precompile:all."}, {'body': u"Ruby's String class has these two methods, but they were missing from AS::Multibyte::Chars.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6621ca717b64e2e1717b2af82e3762b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4351', 'title': u'Implement #swapcase and #swapcase! for multibyte strings'}, {'body': u'This PR is a improvement for GH #3694.<br/>Memory consumption will be reduced if we execute `assets:precompile` .<br/> <br/>Please see also https://github.com/rails/rails/issues/3694', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4350', 'title': u"Don't fork a process when assets:precompile:nondigest is invoked in assets:precompile:all."}, {'body': u'```<br/>irb(main):008:0> attributes_collection = {a: 1}<br/>=> {:a=>1}<br/>irb(main):009:0> Array.wrap attributes_collection<br/>=> [{:a=>1}]<br/>irb(main):010:0> [attributes_collection]<br/>=> [{:a=>1}]<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4349', 'title': u'Array.wrap is an overhead as there is already check for class'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4348', 'title': u'use Kernel#Array instead of Array.wrap in Rails::Generators::Actions'}, {'body': u'Since in Ruby 1.9 strings are encode-aware, mb_chars just returns self.<br/>I do not dare to completely remove the method. Should I?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aadced6e13c05d42faaf1be3bbb88b83?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4347', 'title': u'Removed Multibyte proxy for ruby 1.8 strings'}, {'body': u'One more try', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3cd1aea8a39b32b4b2ef859ba64b3fd7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4346', 'title': u'Nil values uniquines validation'}, {'body': u"This commit allows the user be lazy and not update<br/>their gemspec's `files` directive after deleting<br/>unwanted files from their generated Rails plugin.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/79f9616c279f40ef953f366dcfe38dc8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4345', 'title': u'gemspec assumes that user kept all generated files'}, {'body': u'Revert 2 commits that were added for Ruby 1.8 compat.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4343', 'title': u'Activerecord 1.9 compat'}, {'body': u'Some fixes for ActionPack<br/><br/>* Fix routing test to use `assert_equal` instead of `assert`, and to use `assert_nil`<br/>* Remove deprecated method from AC::TestCase to handle old process api<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4342', 'title': u'Fix routing test and remove deprecated method'}, {'body': u'Currently `content_tag_for` checks if the object responds to `to_ary` to decide what to do with it. This patch eliminates the need to check by wrapping non-array like objects in an array and always iterating over the collection.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5191a552bdab9551313119efee0c2975?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4341', 'title': u'Always treat the object passed to content_tag_for as an array.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4340', 'title': u'Remove more Array.wrap calls'}, {'body': u'Fix broken CI build', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4339', 'title': u'Require ActiveSupport::TestCase form ActiveSupport isolation tests'}, {'body': u'This is a rebased version of https://github.com/rails/rails/pull/3698, fixes #1953 for rails v3.2, if it is not too late for changes like this :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bd9b6d9f929adbf8918fe37fb279c43e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4338', 'title': u'check_box helper with :disabled => true generates disabled hidden field. fixes #1953 (3-2-stable)'}, {'body': u'This is a rebased version of https://github.com/rails/rails/pull/3698, fixes #1953', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bd9b6d9f929adbf8918fe37fb279c43e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4337', 'title': u'check_box helper with :disabled => true generates disabled hidden field. fixes #1953 (master)'}, {'body': u'It do nothing https://github.com/rails/rails/blob/39625d153781ffa07121c35dc4bba40410624c9c/activesupport/lib/active_support/multibyte/utils.rb#L20-25<br/><br/>And is going to be removed in https://github.com/rails/rails/pull/4332/files#diff-4', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4335', 'title': u"remove use of Multibyte.clean as it's no-op in ruby 1.9"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4334', 'title': u'remove obsolete commented asserts in TextHelper tests'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4333', 'title': u'Change more Array.wrap calls'}, {'body': u"This removes a lot of code from AS::Multibyte as a part of the move to 1.9-only. I've taken advantage of the far-off nature of 4.0 to use as sharp a razor as I could, please let me know if I've gone too far.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6621ca717b64e2e1717b2af82e3762b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4332', 'title': u'Putting AS::Multibyte on a Ruby 1.9 diet'}, {'body': u"I was updating a 2.3.8 app to 2.3.14 and ran into an issue where association's find_or_create_by* methods no longer accepted hashes. When passing a hash to a dynamic finder, this would happen:<br/><br/>```ruby<br/>joe = Person.friends.find_or_create_by_name :name => 'joe'<br/>joe.name<br/>#=> {:name => 'joe'}<br/>```<br/><br/>This patch changes a test to check that a find_or_create_by created object has the expected attribute value & changes AssociationCollection#method_missing so that find_or_create_by* will accept either a single hash as an argument, or a list of arguments corresponding to the find_or_create_by* attributes followed by a hash.<br/><br/>* find_or_create_by_foo :foo => 'bar', :baz => 'qux'<br/>* find_or_create_by_foo 'foo', :baz => 'qux'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e60ac32af93ff0f426c980e43f221e7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4331', 'title': u"2.3 association collection's find_or_create_by doesn't accept hashes."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4330', 'title': u'remove useless call to mb_chars'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4329', 'title': u'Array.wrap is no longer needed at ActionMailer'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4327', 'title': u'removed warning because logger.warn differentiate the warings'}, {'body': u'erased duplicated line', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1ba853830b818de02de4de800d3c9da?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4325', 'title': u'erased duplicated line'}, {'body': u'Erased duplicated line', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1ba853830b818de02de4de800d3c9da?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4324', 'title': u'Update activerecord/lib/active_record/base.rb'}, {'body': u"Don't need that all under ruby 1.9", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4323', 'title': u'refactor AS::Multibyte::Chars'}, {'body': u'ActiveSupport::Testing::Pending support for MiniTest only', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4322', 'title': u'ActiveSupport::Testing::Pending support for MiniTest only'}, {'body': u'support only MiniTest run with Isolation test ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4320', 'title': u'support only MiniTest run with Isolation test '}, {'body': u'parse only minitest results in isolation test conditions is always true for ruby19', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4319', 'title': u'parse only minitest results in isolation test '}, {'body': u"The raised exception:<br/><br/>```<br/>$ bundle exec rake db:seed --trace<br/>(in /Users/threez/Development/demail-ident/frontend)<br/>rake aborted!<br/>uninitialized constant Rake::DSL<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/railties-3.2.0.rc2/lib/rails/tasks/documentation.rake:11:in `RDocTaskWithoutDescriptions'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/railties-3.2.0.rc2/lib/rails/tasks/documentation.rake:10:in `(root)'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/railties-3.2.0.rc2/lib/rails/tasks/documentation.rake:245:in `load'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/railties-3.2.0.rc2/lib/rails/tasks/documentation.rake:245:in `load'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/railties-3.2.0.rc2/lib/rails/tasks.rb:15:in `(root)'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/railties-3.2.0.rc2/lib/rails/tasks.rb:5:in `each'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/railties-3.2.0.rc2/lib/rails/tasks.rb:5:in `(root)'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/railties-3.2.0.rc2/lib/rails/tasks.rb:6:in `(root)'<br/>/Users/threez/Development/project/frontend/Rakefile:2383:in `load'<br/>/Users/threez/Development/project/frontend/Rakefile:2383:in `raw_load_rakefile'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/rake-0.8.7/lib/rake.rb:2017:in `load_rakefile'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/rake-0.8.7/lib/rake.rb:2068:in `standard_exception_handling'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/rake-0.8.7/lib/rake.rb:2016:in `load_rakefile'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/rake-0.8.7/lib/rake.rb:2000:in `run'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/rake-0.8.7/lib/rake.rb:2068:in `standard_exception_handling'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/rake-0.8.7/lib/rake.rb:1998:in `run'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/gems/rake-0.8.7/bin/rake:31:in `(root)'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/bin/rake:19:in `load'<br/>/Users/threez/.rvm/gems/jruby-1.6.5@project/bin/rake:19:in `(root)'<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e372514c922684dfb07578aa59e5a2b8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4318', 'title': u'Undefined Rake::DSL in railtie documentation'}, {'body': u'#advance method of Time is not coping nsec fraction of time. It results in strange behaviour like:<br/><br/>```ruby<br/>Date.today.end_of_day != Date.today.end_of_day + 0.days<br/>```<br/> <br/>This pull requests fixes that.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6227374304a32792244c0043ec4dce36?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4316', 'title': u'Time advance nsec bug'}, {'body': u"The PostgreSQL connection adapter is based on pg.gem (for two years now), which uses libpq to connect to the server. Several connection parameters can be given to PGconn and so to libpq, but only some parameters can be used in ActiveRecords connection specification. Furthermore libpq inspects several environment variables for setting default values. The list of parameters varies between different PostgreSQL versions.<br/><br/>Current behavior of connection settings for adapter postgresql is inconsistent. Some connection parameters can be set by the connection specification only (:port, :database) but not per environment variable (PGPORT, PGDATABASE). Some parameters can be set by both (:host/PGHOST, :username/PGUSER, :password/PASSWORD) and some parameters can only be set per env (PGOPTIONS, PGSSLKEY, PGSERVICE, ...).<br/><br/>On the other hand, using environment variables is quite difficult, if one needs different connections to several databases at the same time. It conflicts with the connection pooling and on demand connectivity, since ActiveRecords ConnectionSpecitfication doesn't take these settings into account.<br/><br/>The attached patch passes all parameters not recognized by ActiveRecord through to PGconn, so every (possibly future) libpq parameter can be used in the connection specification. Furthermore it updates the documentation and adds a test case for setting a specific libpq parameter. I did not add a test case for using environment variables, because I guess it's out of scope of ActiveRecord.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/abc11c007a3a284272d261b2dae6376e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4315', 'title': u'PostgreSQL: Allow consistent setting of libpq params in database connection specification'}, {'body': u'Added an OS X step-by-step guide for generating the .mobi guides', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd460c62f8ce07dd7582925a3cc8d8aa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4312', 'title': u'Updating kindle docs'}, {'body': u"When a locale file sets the format of the positive<br/>currency value as '%n %u', the default negative<br/>currency format should be '-%n %u'.<br/><br/>Cherry-picked from master (6724c8c8)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4311', 'title': u'Infer currency negative format from positive one. (3-2-stable)'}, {'body': u'Let me know if you see something wrong with this test case.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/25e782eb7e799e78d781b0026fc6a4d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4310', 'title': u'Adding failing test case for #4290'}, {'body': u'Adding failing test case for #4290', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/25e782eb7e799e78d781b0026fc6a4d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4309', 'title': u'Adding failing test case for #4290'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4304', 'title': u'refactor String#truncate not to use mb_chars'}, {'body': u'Moved the logger methods  to active support logger methods in activeresource/test/abstract_unit.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4303', 'title': u'Moved the logger methods in activeresource/test/abstract_unit.rb'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4302', 'title': u'simplify Class#descendants using singleton_class method'}, {'body': u'Missed it. Thanks for pointing it out. will keep in mind for next commits', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4301', 'title': u'Refactor tests'}, {'body': u'removed unnecessary file path', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4300', 'title': u'removed unnecessary file path'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4299', 'title': u'using the active support logger'}, {'body': u"I'm also removed the check if the YAML::ENGINE constant is defined", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4298', 'title': u'Remove rescue block to require psych gem'}, {'body': u"When a locale file sets the format of the positive currency as '%n %u', the default negative<br/>currency format should be '-%n %u'.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4296', 'title': u'Infer currency negative format from positive one.'}, {'body': u'...ount', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4295', 'title': u'refactored tests -- assert_diffrence instead of checking directly with c...'}, {'body': u'...ount', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4294', 'title': u'refactored tests -- assert_diffrence instead of checking directly with c...'}, {'body': u'tag helper always return a html safe string and concat two html safe strings always return a html safe string<br/><br/>```ruby<br/>>> a = "a".html_safe<br/>=> "a"<br/>>> b = "b".html_safe<br/>=> "b"<br/>>> a.html_safe?<br/>=> true<br/>>> b.html_safe?<br/>=> true<br/>>> ab = a+b<br/>=> "ab"<br/>>> ab.html_safe?<br/>=> true<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4289', 'title': u'No need of html_safe here'}, {'body': u'@josevalim Please merge this PR :)<br/><br/>please see https://github.com/rails/rails/pull/4286', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4288', 'title': u'(3-2-stable) Fix GH #4285. Remove options when we record calling create_table'}, {'body': u"`drop_table` method can't be passed option arguments.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4286', 'title': u'Fix GH #4285. Remove options when we record calling create_table'}, {'body': u'As I was working with some time methods, I noticed that using the word `last` made more sense as it is generally how it is thought of. I have added aliases for these three methods last_year, last_month, and last_week.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fa4b5f21ddfec459b530bfce99079e54?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4284', 'title': u'Added aliases for prev_year, prev_month, and prev_week in Time and Date calculations'}, {'body': u'```<br/>irb(main):008:0> klass = (class << Object.new; self end)<br/>=> #<Class:#<Object:0x0000010084da68>><br/>irb(main):009:0> klass.ancestors.first == klass<br/>=> false<br/>irb(main):010:0> klass = Class.new<br/>=> #<Class:0x000001010a5ff8><br/>irb(main):011:0> klass.ancestors.first == klass<br/>=> true<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4283', 'title': u'use correct variant of checking whether class is a singleton'}, {'body': u"Calling `reorder` on a relation currently makes the order passed the *final* order, regardless of any subsequent calls to `order`. For instance:<br/>```<br/>SomeModel.reorder('name ASC').order('created_at DESC').to_a<br/>```<br/>will execute:<br/>```<br/>SELECT * FROM some_models ORDER BY name ASC<br/>```<br/>(ignoring the `order` clause) rather than:<br/>```<br/>SELECT * FROM some_models ORDER BY name ASC, created_at DESC<br/>```<br/>as might reasonably be expected.<br/><br/>The included commit corrects this behavior. Calling `reorder` on a relation can now be described as 'start the ordering over again with this clause'. Subsequent calls to `order` will be appended rather than ignored.<br/><br/>This commit also unwinds the change (but not the test) in https://github.com/rails/rails/pull/4216 - that code is no longer needed, as `order_values` is now the authoritative source for a relation's order clauses.<br/><br/>Tested on master, but this should be applied to 3.2 as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6883e5ef03484d4fcef507d7b4f1d243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4282', 'title': u'correctly handle order calls after a reorder'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4281', 'title': u'add CHANGELOG entry for AS::Base64 deprecation'}, {'body': u'It resolves issue #4046', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4280', 'title': u'backport changes in AS::Callbacks'}, {'body': u'original issue #4277<br/><br/>I think that it also should go to 3-2-stable. c/d?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4279', 'title': u'do not rewrite log during application bootstrap'}, {'body': u'If we set ISO-8859-1 (excepting utf-8) to LANG environment variable, rake rdoc task is not work fine.<br/><br/>```<br/>$ export LANG=en_US.ISO-8859-1 \u2605<br/>$ bundle exec rake rdoc<br/>Parsing sources...<br/>100% [644/644]  RDOC_MAIN.rdoc<br/><br/>Generating SDoc format into /home/kennyj/rails/doc/rdoc...<br/>rake aborted!<br/>incompatible encoding regexp match (UTF-8 regexp with ISO-8859-1 string)<br/><br/>Tasks: TOP => rdoc => doc/rdoc/index.html<br/>(See full trace by running task with --trace)<br/>```<br/><br/>It seems that "-c" option is not work fine.<br/>With this pull request (instead of using -e (encoding) option).<br/><br/>```<br/>$ bundle exec rake rdoc<br/>Parsing sources...<br/>100% [644/644]  RDOC_MAIN.rdoc<br/><br/>Generating SDoc format into /home/kennyj/rails/doc/rdoc...<br/><br/>Files:       644<br/><br/>Classes:     369 ( 214 undocumented)<br/>Modules:     353 ( 236 undocumented)<br/>Constants:   214 ( 193 undocumented)<br/>Attributes:  329 ( 309 undocumented)<br/>Methods:    3443 (1653 undocumented)<br/><br/>Total:      4708 (2605 undocumented)<br/> 44.67% documented<br/><br/>Elapsed: 323.7s<br/>```<br/>I thinks that this issue is related to GH #3743 .', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4278', 'title': u'Use -e option instead of -c option (rake rdoc task).'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4275', 'title': u'deprecate AS::Base64 methods without DeprecatedConstantProxy'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/169264c25b4bccc3f710e4fc0c6f66fe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4274', 'title': u'Fix typos and formats for CHANGELOG'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4273', 'title': u'use pg 0.11.0 under ruby 1.8.7'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0fe13386ba69a128e9fadc19ae9d96be?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4272', 'title': u'Ac process rebase'}, {'body': u"Since Rails choose to use Ruby 1.9 by default. Geneators's template should also use utf-8 by default. Lots people forget to add magic comment in application cause broken, it's really annoying.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/19e786a2a74377ff6e052d87fd8d1fa8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4271', 'title': u'Add magic comment utf-8 by default '}, {'body': u'Not 18, but the last 8 commits (from 18deb745 to HEAD). Didn\'t know how to limit that on github.<br/><br/>Started cleaning up `ActionController::TestCase` and allow sending real documents to #post, #get, etc., like:<br/><br/>```<br/>post :create, "<order />"<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0fe13386ba69a128e9fadc19ae9d96be?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4270', 'title': u'Ac process'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4268', 'title': u'fix base64 requires'}, {'body': u'extend and define ::Base64 if needed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4267', 'title': u'deprecate ActiveSupport::Base64'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4266', 'title': u'fix base64 require'}, {'body': u'Fix grammatical error in ActiveModel::MassAssignmentSecurity::PermissionSet#deny? NotImplementedError message', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0887991a8846577a6aa85433d6ab3ea2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4265', 'title': u'Fix grammatical error'}, {'body': u"Currently Bundler don't catch up local `.Gemfile` when executing something like `bundle exec ruby ...` from checkout subdirectory", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4263', 'title': u'Fixed path to local gemfile.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/169264c25b4bccc3f710e4fc0c6f66fe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4257', 'title': u'[actionmailer] convert old hash syntax to ruby19 new hash syntax'}, {'body': u"Rename local variables and parameters to have more consistent names.  In particular, instances of `ActiveRecord::Fixtures` be called `fixture_set`'s.<br/><br/>Remove unused private method `yaml_fixtures_key`.<br/><br/>Change arity of `instantiate_fixtures` by removing an unused parameter. (Tests are passing.)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4254', 'title': u'Rename variables and remove unused code in fixtures.rb'}, {'body': u'It removes warnings about method redefinition', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4253', 'title': u'fix use of FormBuilder.field_helpers'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4252', 'title': u'remove ActiveSupport::Base64 in favor of ::Base64'}, {'body': u'rename ruby-debug to ruby-debug19', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4251', 'title': u'rename ruby-debug to ruby-debug19'}, {'body': u'Original issue #4239', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4250', 'title': u'use #to_s to convert Range to json'}, {'body': u'Very minor fixes for 2012. My first pull request on rails.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/169264c25b4bccc3f710e4fc0c6f66fe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4249', 'title': u'Misc fixes'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8ddbf811da78bb0daeeb3cacd7cf743f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4248', 'title': u'Updated copyright notices for 2012'}, {'body': u'This is the Hash DoS fix for 2-3-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4247', 'title': u'bump up rack version to the one that includes the Hash DoS fix'}, {'body': u'Let us discourage the people depending on vulnerable version of Rack. :santa:', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4246', 'title': u'bump up rack version to the one that includes the Hash DoS fix'}, {'body': u'update rack-1.3.6, this version includes security fix.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eabad423977cfc6873b8f5df62b848a6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4244', 'title': u'Upgrade rack dependency'}, {'body': u'MiniTest condition removed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4242', 'title': u'MiniTest condition removed'}, {'body': u'remove more conditions for Fiber in ruby19', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4241', 'title': u'remove more conditions for Fiber in ruby19'}, {'body': u'test cases to call scope with stabby lambda syntax', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4240', 'title': u'test cases add to call scope with stabby lambda syntax'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4237', 'title': u'fiber is available in ruby19 condition removed'}, {'body': u'remove condition since to_time always available in ruby19 DateTime', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4236', 'title': u'remove condition since to_time always available in ruby19 DateTime'}, {'body': u'ruby 1.8 ActiveSupport BasicObject no longer available', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4235', 'title': u'ruby 1.8 ActiveSupport BasicObject no longer available'}, {'body': u"I've suddenly realized that `__define_runner` method don't do anything right now: just define method that delegates work. Since this method is not part of the API - it can be omitted.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4233', 'title': u'AS::Callbacks: remove __define_runner'}, {'body': u'This is done so we can ask for values that could clash with string methods', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/84687433fbeed3d44d0298b7032f9780?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4232', 'title': u"StringInquirer doesn't inherit from string"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4231', 'title': u'remove ruby 1.8 checking in constantize method'}, {'body': u'make a namespace example more consistent:<br/><br/>    "test_unit:awesome", "test_unit"<br/>    instead<br/>    "test_framework:awesome", "test_framework"<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0a8f306716d4ce1ee91870ab0f4ae1c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4230', 'title': u'Fix rails/generators/base.rb documentation for hook_for'}, {'body': u"It was previously refactored in 3f642c9, but both previous implementations don't handle ranges with floats.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4229', 'title': u'refactor Range#include? to handle ranges with floats'}, {'body': u'@tenderlove the problem was in rescue for ArgumentError when class serialized with :: on the end. So I fixed it with adding TypeError type of exception to the rescue for marshalling not marshalled values. All tests pass for me.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4227', 'title': u'3 2 stable marshalling'}, {'body': u'Hi all, <br/>I have a problem using content_for with nested layouts. I have a template like this one<br/><br/>```erb<br/>...<br/>    <h1><%= content_for :box_title %></h1><br/>    <div class="box_content"><br/>      <%= yield %><br/>    </div><br/>...<br/>```<br/><br/>called for render multiple partials from a view<br/><br/>```erb<br/>...<br/>  <%= render partial: \'agents_box\', layout: \'layouts/internal/box\' %><br/>  <%= render partial: \'users_box\', layout: \'layouts/internal/box\' %><br/>...<br/>```<br/>_agents_box.html.erb<br/><br/>```erb <br/><% content_for_clear :box_title do %>Server Management<% end %><br/>```<br/><br/>_users_box.html.erb<br/><br/>```erb <br/><% content_for_clear :box_title do %>Users<% end %><br/>```<br/><br/>Due to the behavior of the content_for function (concatenate) the page is not displayed correctly. (the first h1 contains "Server Management" and the second one "Server ManagementUsers")<br/><br/>In order to solve this kind of problem I updated the content_for method to accept another parameter (flush - false by default) used to decide if the content should be concatenated or replaced.<br/><br/>Using this in my example the page is displayed in the right way<br/><br/><br/>_agents_box.html.erb<br/><br/>```erb <br/><% content_for :box_title, true do %>Server Management<% end %><br/>```<br/><br/>_users_box.html.erb<br/><br/>```erb <br/><% content_for :box_title, true do %>Users<% end %><br/>```<br/><br/>Hope this can be useful also for other people', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/57b057ec1a37cc90073d16f956dd464a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4226', 'title': u'content_for with flush parameter'}, {'body': u'Amended the constraints block to use more idiomatic do..end format over { syntax. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8125afaa6ade422d5d733d7a05222935?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4225', 'title': u'amended constraints block to do...end format'}, {'body': u'This is an extension of PR #3844.<br/><br/>In addition to fixing issue #2572, here i make fixtures to take the table name from the associated model by calling `table_name` method on that class, whenever the class responds to it.  This change mostly affects `Fixtures#initialize`.<br/><br/>Before, the way of determining the table name was somewhat random and depended on whether the model class was passed as a class or as its name (string).  Also, `Fixtures#initialize` looked bad to me.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4224', 'title': u'Fix #2572 and define fixture table name in the associated model'}, {'body': u'I recently wrote a gem that adds some features to AR where https://github.com/amatsuda/everywhere<br/>but the code became terribly ugly because I needed to monkey patch a logic inside attributes.map block here https://github.com/rails/rails/blob/2fb5d0a3fc/activerecord/lib/active_record/relation/predicate_builder.rb#L4<br/><br/>This patch reveals the builder logic for happy monkey-patching.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4222', 'title': u'refactor AR::PredicateBuilder.build_from_hash'}, {'body': u'Fixed a bug where Array#wrap was blowing up when not running from the test harness. A require was added to include the extension.<br/><br/>Reference: Issue #4212', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/904e37d005ddd0d08bd846b2a01377ee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4221', 'title': u'Rails template creation issue'}, {'body': u"We were having issues with the `!name || '' == name` simplification that @tenderlove committed for checking if we're in a singleton class.  Though I was unable to come up with a failing test case, I was able to fix the issue and clean up the rails code a bit with this change.<br/><br/>If it's ok, I'd like to get this ported to 3-2-stable as well.  Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/80643cc5c7a70d4cdddebc3185cd3c18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4220', 'title': u'Further simplify singleton_class checking in class_attribute'}, {'body': u"Extracted `__reset_runner` from `__define_runner`<br/>And call it in proper places: we don't need to call `__define_runner` each time - `__reset_runner` is enough.<br/><br/>cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4218', 'title': u'Refactor AS::Callbacks'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2224acac6b9f3f0e7728322f48866d1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4217', 'title': u'Remove empty line'}, {'body': u"(master-based version of https://github.com/rails/rails/pull/4082)<br/><br/>Calling `last` on an association that's scoped with `reorder` can cause some adapters to fail (particularly oracle_enhanced and postgres). The underlying cause is that `connection.distinct` expects the desired order, but the relation's `reorder_values` are not passed along, since `construct_limited_ids` explicitly grabs `order_values`.<br/><br/>See the attached commit for additional details - this bug does not affect the mysql or sqlite adapters, as those use the default order-agnostic implementation of `distinct`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6883e5ef03484d4fcef507d7b4f1d243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4216', 'title': u'allow reorder to affect eager loading correctly'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4214', 'title': u'Bump Rack to 1.3.6'}, {'body': u"With the following code,<br/><br/>```ruby<br/>Model.where(foo: [1, nil])<br/>```<br/><br/>AR builds an SQL like this:<br/><br/>```sql<br/>WHERE foo IN (1) OR foo IS NULL<br/>```<br/><br/>Here's a tiny patch that makes it like this:<br/><br/>```sql<br/>WHERE foo = 1 OR foo IS NULL<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4213', 'title': u'AR#where with an Array of 2 elements including a nil'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2224acac6b9f3f0e7728322f48866d1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4210', 'title': u'Fix #4208'}, {'body': u'check: https://github.com/rails/rails/issues/4208', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2224acac6b9f3f0e7728322f48866d1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4209', 'title': u'Close issue #4208'}, {'body': u'Use Base64.strict_encode64 instead.<br/>BTW, should we use plain encode64, decode64, etc from Base64 not from ActiveSupport::Base64?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4207', 'title': u'deprecate Base64.encode64s from AS'}, {'body': u'When using field_for_nested_attributes, you should be able to access the current auto-generated nested index so that you can embed it in a view for use by JS.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d8d5058aa91cd439f1f486f93f8eb564?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4205', 'title': u'Allow accessing the current nested index for a form builder.'}, {'body': u"I've decided to get rid of the old style of writing hashes and make it fast and in one commit", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea659696522572e50cdf1ca972a7331b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4203', 'title': u'changed hashes all over the Rails'}, {'body': u'If `HTTP_X_FORWARDED_FOR` only contains whitespace, don\'t try to extract a<br/>list of IP addresses from it. Previously, calling `#remote_ip` when `HTTP_X_FORWARDED_FOR` was e.g. `""` would cause "NoMethodError: undefined method strip for nil:NilClass".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4202', 'title': u'Fix bug in `ActionController::Request#remote_ip`'}, {'body': u'1.9.2 is having a bug with "Calling return within begin still executes else". "<br/><br/>No need to worry about 1.9.2 with master<br/><br/><br/>This reverts commit fbf4bee6ed3682b361d6fbeca8e185e665e26b81.<br/><br/><br/>Was my commit reverting now because we don\'t need this anymore in master!!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4201', 'title': u'Revert "This conditions is required to work with database create task.'}, {'body': u'Its no longer necesary to check for this constant', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aadced6e13c05d42faaf1be3bbb88b83?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4199', 'title': u'Removed RUBY_ENGINE checks for ruby18'}, {'body': u'remove more conditions for methods available in GC with ruby19 ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4198', 'title': u'remove conditions for GC::Profiler in ruby19'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4197', 'title': u'refactor Range#include? for range value'}, {'body': u"<br/>It's relates to issue https://github.com/rails/rails/issues/4042<br/><br/>In rails 3.1 and earlier values in entries did not marshaled without options[:compress] and if it's Numeric.<br/>But after commit a263f377978fc07515b42808ebc1f7894fafaa3a all values in entries are marshalled. And after that code in ActiveSupport::Cache::Entry#value expects that all values in entries will be marshaled (and will be strings). So here we need a check for old ones.<br/><br/>Should I make a patch for master?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4196', 'title': u'3.2 stable marshalling'}, {'body': u'GC::Profiler available in ruby19 condition removed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4195', 'title': u'GC::Profiler available in ruby19'}, {'body': u'remove ForClassicTestUnit support for ruby 1.8 in performance and setup and teardown', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4194', 'title': u'remove ForClassicTestUnit support for ruby 1.8 in performance and setup and teardown'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4193', 'title': u'remove rexml security fix for rubies 1.8'}, {'body': u"Just a tiny detail thats been bugging me for awhile. Putting notes in your Rails project on lines greater or equal to 1000 ruins the alignment. See example output below.<br/><br/>```<br/>[126] [TODO] This algorithm is simple and clearly correct, make it faster.<br/>[1000] [TODO] This algorithm is complex and clearly ineffecient, make it faster.<br/>```<br/><br/>This commit makes sure all notes are correctly aligned. See example output below.<br/><br/>```<br/>[ 126] [TODO] This algorithm is simple and clearly correct, make it faster.<br/>[1000] [TODO] This algorithm is complex and clearly ineffecient, make it faster.<br/>```<br/><br/>Guess you could argue how often you encounter a file that contains more than 1000 lines. Anyway as stated earlier it's just a tiny detail that's been bugging me.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0edbdeb12d2eefc2faec21b65f8e673e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4192', 'title': u'Align rake notes'}, {'body': u'Release dates taken from Rubygems.org<br/><br/>/cc @vijaydev', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5d361c5cdfa815082d54022bc45ece2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4191', 'title': u'Fixed changelog release dates'}, {'body': u"When activerecord unit tests are execued with Oracle, test_rename_table_with_prefix_and_suffix<br/>got a failure because the new sequence name length exceeds 30 characters, Oracle spec.<br/><br/>This commit address this error, This fix also works with pg, mysql and mysql2 adapters.<br/><br/>```ruby<br/>$ cd activerecord<br/>$ rake test_oracle<br/>... snip ...<br/>  3) Error:<br/>test_rename_table_with_prefix_and_suffix(MigrationTest):<br/>ArgumentError: New sequence name 'prefix_awesome_things_suffix_seq' is too long; the limit is 30 characters<br/>    /var/lib/jenkins/.rvm/gems/ruby-1.9.3-p0@rails_master/bundler/gems/oracle-enhanced-0c2270624bc8/lib/active_record/connection_adapters/oracle_enhanced_schema_statements.rb:105:in `rename_table'<br/>    /var/lib/jenkins/jobs/rails_test_oracle/workspace/activerecord/lib/active_record/migration.rb:449:in `block in method_missing'<br/>    /var/lib/jenkins/jobs/rails_test_oracle/workspace/activerecord/lib/active_record/migration.rb:423:in `block in say_with_time'<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4190', 'title': u'Fixed ORA-00972 error'}, {'body': u"We don't need to Redefine runner method on each `__define_runner` anymore.<br/><br/><br/>Result: **20% perfomance improvement** for `set_callback` method: https://gist.github.com/1519380<br/><br/><br/>```<br/>Rehearsal ----------------------------------------------------<br/>New set_callback   0.450000   0.020000   0.470000 (  0.477188)<br/>Old set_callback   0.580000   0.010000   0.590000 (  0.600057)<br/>------------------------------------------- total: 1.060000sec<br/><br/>                       user     system      total        real<br/>New set_callback   0.470000   0.010000   0.480000 (  0.478684)<br/>Old set_callback   0.580000   0.020000   0.600000 (  0.600981)<br/>************************************************************************************************************************<br/>Rehearsal -----------------------------------------------------<br/>New run_callbacks   0.060000   0.000000   0.060000 (  0.060021)<br/>Old run_callbacks   0.060000   0.000000   0.060000 (  0.060024)<br/>-------------------------------------------- total: 0.120000sec<br/><br/>                        user     system      total        real<br/>New run_callbacks   0.050000   0.010000   0.060000 (  0.059831)<br/>Old run_callbacks   0.060000   0.000000   0.060000 (  0.060878)<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4189', 'title': u'AS::Callbacks: improved __define_runner performance'}, {'body': u'Test::Unit::Util::BacktraceFilter not available in ruby19 test/unit', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4188', 'title': u'Test::Unit::Util::BacktraceFilter not available in ruby19 test/unit'}, {'body': u'::BasicObject always defined in ruby 19', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4187', 'title': u'::BasicObject always defined in ruby 19'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4186', 'title': u'ruby 1.9 returns method names as symbols'}, {'body': u'so there is no need for `blank?` method', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4185', 'title': u'Module#name returns nil for anonymous class in ruby 1.9'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4184', 'title': u'remove date methods that are present in 1.9 ruby'}, {'body': u' Range#step without block always returns enumerator in rubies 1.9', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4183', 'title': u'remove useless 1.8 ruby code from Range#step'}, {'body': u'`__define_runner` is used internally in `set_callback`, `define_callbacks` and `reset_callbacks`<br/><br/><br/><br/>Here is my benchmark before and after this patch for `set_callback` method as it get called more often then any other:<br/><br/>https://gist.github.com/1519380<br/><br/><br/><br/>```<br/>Rehearsal ----------------------------------------------------<br/>New set_callback   0.590000   0.020000   0.610000 (  0.612187)<br/>Old set_callback   0.840000   0.050000   0.890000 (  0.890388)<br/>------------------------------------------- total: 1.500000sec<br/><br/>                       user     system      total        real<br/>New set_callback   0.600000   0.030000   0.630000 (  0.626086)<br/>Old set_callback   0.810000   0.060000   0.870000 (  0.875475)<br/>```<br/><br/>About **28% performance improvement**<br/><br/>Second benchmark in the gist above ensures that we didn\'t lose performance when calling `run_callbacks`: <br/><br/>```<br/>Rehearsal -----------------------------------------------------<br/>New run_callbacks   0.020000   0.000000   0.020000 (  0.020010)<br/>Old run_callbacks   0.020000   0.000000   0.020000 (  0.020006)<br/>-------------------------------------------- total: 0.040000sec<br/><br/>                        user     system      total        real<br/>New run_callbacks   0.020000   0.000000   0.020000 (  0.019823)<br/>Old run_callbacks   0.020000   0.010000   0.030000 (  0.019993)<br/>```<br/><br/><br/>### How?<br/><br/>Keyed callbacks have very nice lazy compilation via cache method.<br/>This patch makes non-keyed callbacks to use the same cache method.<br/><br/>So now instead of recompiling the callback chain on each call - we just flush the cache:<br/><br/>``` diff<br/>-        body = send("_#{symbol}_callbacks").compile<br/>-        runner_method = "_run_#{symbol}_callbacks" <br/>+        name = __callback_runner_name(nil, symbol)<br/>+        undef_method(name) if method_defined?(name)<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4182', 'title': u'AS::Callbacks: improve __define_runner perfomance for non-keyed callbacks.'}, {'body': u"cc @fxn, my twitter profile name is a joke from a message board where people thought my first name was 'Mip'.<br/><br/>Have since fixed Twitter profile to avoid further confusion as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c72c888bea79af1f4d39c3eadef77d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4181', 'title': u'Fix my name in CHANGELOG.md'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4180', 'title': u'remove checks for encodings availability'}, {'body': u'When updating Time/Datetime with time represented by a String with no timezone (e.g. "Wed, 21 Dec 2011 6:00:00"). <br/><br/>Example (assume timezone = +02:00)<br/><br/>What should happen:<br/>  Since Rails claims to assume all provided String times are in local timezone, <br/>    User.time = "Wed, 21 Dec 2011 6:00:00"  <br/>  should really mean<br/>    User.time = "Wed, 21 Dec 2011 6:00:00 +02:00"<br/>  and be saved to @attributes as<br/>    User.time = "Wed, 21 Dec 2011 4:00:00 +00:00"<br/><br/>What happens now:<br/>    User.time = "Wed, 21 Dec 2011 6:00:00"  <br/>  cached as<br/>    User.time = "Wed, 21 Dec 2011 6:00:00 +02:00"<br/>  saved to @attributes as<br/>    User.time = "Wed, 21 Dec 2011 6:00:00 +00:00"  <------ WRONG !<br/><br/>The above change makes sure that the value provided to the attribute_setter is parsed with current timezone and saved as UTC.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/33d7e891bcfc83bcd0d8987accbebdfc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4179', 'title': u"Bug fix: Updating Time columns by String with no timezone doesn't work correctly"}, {'body': u'When updating Time/Datetime with time represented by a String with no timezone (e.g. "Wed, 21 Dec 2011 6:00:00"). <br/><br/>Example (assume timezone = +02:00)<br/><br/>What should happen:<br/>  Since Rails claims to assume all provided String times are in local timezone, <br/>    User.time = "Wed, 21 Dec 2011 6:00:00"  <br/>  should really mean<br/>    User.time = "Wed, 21 Dec 2011 6:00:00 +02:00"<br/>  and be saved to @attributes as<br/>    User.time = "Wed, 21 Dec 2011 4:00:00 +00:00"<br/><br/>What happens now:<br/>    User.time = "Wed, 21 Dec 2011 6:00:00"  <br/>  cached as<br/>    User.time = "Wed, 21 Dec 2011 6:00:00 +02:00"<br/>  saved to @attributes as<br/>    User.time = "Wed, 21 Dec 2011 6:00:00 +00:00"  <------ WRONG !<br/><br/>The above change makes sure that the value provided to the attribute_setter is parsed with current timezone and saved as UTC.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/33d7e891bcfc83bcd0d8987accbebdfc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4178', 'title': u"Bug fix: Updating Time columns by String with no timezone doesn't work correctly"}, {'body': u'prompt message for gem ruby-debug19 for console error if ruby-debug19 not found', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4177', 'title': u'prompt message for gem ruby-debug19 for console error if ruby-debug19 not found'}, {'body': u"when request header http_accept = text/html, but template only provide text/json, so it raise MissingTemplate error instead of returning 406.<br/>It should raise MissingTemplate when there isn't any template and explicit render method is gaven.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/721242435628b7c674f638a002256e6a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4176', 'title': u'Fix MissingTemplate issue'}, {'body': u'Otherwise, the schema and seed will be loaded onto the<br/>test database.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4175', 'title': u'Reconnect to the first database after db:create'}, {'body': u"This add an option to model generator to generate classes that use ActiveRecord::Model. Ex:<br/><br/>```<br/>rails g model Post --with-include<br/>```<br/><br/>will generate:<br/><br/>```ruby<br/>class Post<br/>  include ActiveRecord::Model<br/>end<br/>```<br/><br/>Please don't merge this inmediatly, I think we can choose a better option name than ```--with-include``` for this", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4174', 'title': u'Add an option to model generator to generate classes with ActiveRecord::Model'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4173', 'title': u'remove Time._dump and Time._load patching for ruby 1.8'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4172', 'title': u"don't call an extra method if options[:tokenizer] is not present"}, {'body': u'remove deprecated whiny nil relates', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4171', 'title': u'remove deprecated whiny nil relates '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4170', 'title': u'remove deprecated Module#synchronize from ActiveSupport'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4168', 'title': u'remove deprecated define_attr_method from ActiveModel::AttributeMethods'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4166', 'title': u'use Range#min and Range#max to reduce extra statement'}, {'body': u"After a member of a team adds commits new code and a migration to go along with it, other developers might not notice the migration and will get `NoMethodError` or `UnknownAttributeError` raised. <br/><br/>Rather than chase down the line of code only to figure out later that migrations need to be run, we can intelligently add the information to `try running 'rake db:migrate'`  to the error message. <br/><br/>Once the coder runs the migration then the current_version and last_version will match and any subsequent `NoMethodError` or `UnknownAttributeError` messages will not have the additional text.<br/><br/><br/>`UnknownAttributeError` with pending migrations: http://cl.ly/2r0e403r2r381B2G161Q<br/>`NoMethodError` with pending migrations: http://cl.ly/3F2E0d2A0K1h101N3H1F<br/>`NoMethodError` with **NO** pending migrations: http://cl.ly/353k0S2f1M2D2o123z2l<br/><br/><br/>ATP for ActiveRecord:<br/><br/>Happy Holidays to the Rails Team!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4165', 'title': u'Notify A User they Have Pending Migrations On Specific Exceptions'}, {'body': u"Allow `ActiveSupport::Inflector.classify` to treat singular table names by adding a parameter `singular` with default value `false`:<br/><br/>```ruby<br/>def classify(table_name, singular = false)<br/>  # strip out any leading schema name<br/>  underscored_name = table_name.to_s.sub(/.*\\./, '')<br/>  underscored_name = singularize(underscored_name) unless singular<br/>  camelize(underscored_name)<br/>end<br/>```<br/><br/>See<br/>https://github.com/rails/rails/blob/a5fa310f406e299a1ac54d1a227bde93b7ce282b/activesupport/lib/active_support/core_ext/string/inflections.rb#L175-177<br/>and a possible use of this in<br/>https://github.com/rails/rails/blob/a5fa310f406e299a1ac54d1a227bde93b7ce282b/activerecord/lib/active_record/fixtures.rb#L391-395", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4162', 'title': u'Add parameter to #classify singular table names'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4161', 'title': u'use Array#uniq in AM instead of deprecated Array#uniq_by'}, {'body': u'Discussion https://groups.google.com/forum/#!topic/rubyonrails-core/i-3nkLB2EDQ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4160', 'title': u'deprecate String#encoding_aware? and remove its usage'}, {'body': u'In the cases where one wants to work with schemas in their databases, they would want to load the schema file on each schema to keep it up to date.  Since the ConnectionAdapter#table_exists? method disregards the schema_search_path, we must alter ActiveRecord::Base#table_name_prefix to include the proper scoping.  Doing this works up until the point of updating the schema_migrations table when assuming the new version.  <br/><br/>This bug occurs because when assume_migration_upto_version goes through Migration\'s method_missing, it appends the table_name_prefix to the version number. Eg, when arriving at the assume_migration_upto_version, the version number is "schema.#####".  The next step in the line is to turn that number into an integer, which is always 0 since it is a string.  This makes the version in the schema_migrations table on that schema equal to 0 and not the correct value in the schema file.<br/><br/>This fix patches that in the method missing so that we do not munge the number.<br/><br/>cbarton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4aaee371503ba4eb27788dc6744503c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4157', 'title': u'Fixing a schema:load when using a prefix and suffix on the tables'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4156', 'title': u'remove checking for non-empty string before calling to_sym'}, {'body': u'closes #4143', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4154', 'title': u'a prompt string in include_blank option for date helpers'}, {'body': u'Make sure the table name of a model is reset in a test case after assigning `ActiveRecord::Base.table_name_prefix` and `ActiveRecord::Base.table_name_suffix`.  Before this change, `Topic.table_name` would use the "memoized" value without prefix and suffix.<br/><br/>This change does not currently fix anything, but make the test case to test the right thing.  I plan to submit a patch to make fixtures use the table name defined in the associated model, and there this test would fail without this fix.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4153', 'title': u'Fix a fixtures test case with table prefix/suffix'}, {'body': u'Minor change in change log i.e (October 07, 2011)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4150', 'title': u' change Log'}, {'body': u'remove ruby 1.8 stuff method skip to support ruby 1.8 series', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4149', 'title': u'remove ruby 1.8 stuff method skip to support ruby 1.8 series'}, {'body': u"I had some trouble with the mysql2 gem and my remote database : it kept losing the connection (`Mysql2::Error: MySQL server has gone away`). I discovered that the default time_out value set by activerecord for mysql2 [2592000](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb#LC277) exceed the max value allowed by MySQL : [2147483](http://dev.mysql.com/doc/refman/5.0/en/server-system-variables.html#sysvar_wait_timeout). Perhaps it should cap it to this max value...<br/><br/>It's my very first pull request so be indulgent if I don't respect some basic rules I may not know...<br/><br/>Everything is explained here :<br/>http://stackoverflow.com/questions/8610426/rails-3-1-mysql2-error-mysql-server-has-gone-away/8617733#8617733<br/>https://github.com/brianmario/mysql2/issues/213<br/><br/>Julien", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1b71d18af3d0d7787295ef7164f9d993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4148', 'title': u'Change mysql2 wait_timeout default value to avoid exceeding the max value allowed by MySQL'}, {'body': u'set AD::IntegrationTest.app in railtie initializer', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4147', 'title': u'remove Rails application fallback from AD::IntegrationTest'}, {'body': u'Here\'s the setup:<br/>The schema is a User model with fields first_name:string, last_name:string, email:string, password_digest:string.<br/>The User model has_secure_password.  It also specifies attr_accessible :password, :password_confirmation.<br/><br/>I can then do the following at the console:<br/><br/>```<br/>1.9.2p290 :069 > u = User.create! :first_name => \'Foo\', :last_name => \'Bar\', :email => \'foobar@foobar.com\', :password => \'foobar\', :password_confirmation => \'foobar\'<br/>   (0.2ms)  SELECT 1 FROM "users" WHERE LOWER("users"."email") = LOWER(\'foobar@foobar.com\') LIMIT 1<br/>Binary data inserted for `string` type on column `password_digest`<br/>  SQL (0.8ms)  INSERT INTO "users" ("created_at", "email", "first_name", "last_name", "password_digest", "updated_at") VALUES (?, ?, ?, ?, ?, ?)  [["created_at", Fri, 23 Dec 2011 12:04:24 UTC +00:00], ["email", "foobar@foobar.com"], ["first_name", "Foo"], ["last_name", "Bar"], ["password_digest", "$2a$10$3DiPzn9jPi.7hHMc82NsmOnh.I88F0jufbtxR4zyllWh.MGH97O2y"], ["updated_at", Fri, 23 Dec 2011 12:04:24 UTC +00:00]]<br/> => #<User id: 4, created_at: "2011-12-23 12:04:24", updated_at: "2011-12-23 12:04:24", first_name: "Foo", last_name: "Bar", email: "foobar@foobar.com", password_digest: "$2a$10$3DiPzn9jPi.7hHMc82NsmOnh.I88F0jufbtxR4zyllWh..."> <br/><br/>1.9.2p290 :070 > u = User.find(4)<br/>  User Load (0.3ms)  SELECT "users".* FROM "users" WHERE "users"."id" = ? LIMIT 1  [["id", 4]]<br/> => #<User id: 4, created_at: "2011-12-23 12:04:24", updated_at: "2011-12-23 12:04:24", first_name: "Foo", last_name: "Bar", email: "foobar@foobar.com", password_digest: "$2a$10$3DiPzn9jPi.7hHMc82NsmOnh.I88F0jufbtxR4zyllWh..."> <br/><br/>1.9.2p290 :071 > u.password = \'foofoo\'<br/> => "foofoo" <br/><br/>1.9.2p290 :072 > u.password<br/> => "foofoo" <br/><br/>1.9.2p290 :073 > u.password_confirmation<br/> => nil <br/><br/>1.9.2p290 :074 > u.password_digest_changed?<br/> => true <br/><br/>1.9.2p290 :075 > u.save!<br/>   (0.2ms)  SELECT 1 FROM "users" WHERE (LOWER("users"."email") = LOWER(\'foobar@foobar.com\') AND "users"."id" != 4) LIMIT 1<br/>   (0.4ms)  UPDATE "users" SET "password_digest" = \'$2a$10$qjkWkaGYgRH9EogPsj/3AOM3/NiuQrAd79V4THCzqyWxxBhsFTVVS\', "updated_at" = \'2011-12-23 12:04:44.189911\' WHERE "users"."id" = 4<br/> => true<br/>```<br/><br/>This seems like a bug to me.  has_secure_password should, as I understand it, validate the presence of both password and password_confirmation before saving a new value of password_digest.  Even if the presence of password_confirmation is not explicitly validated, the presence of a password is validated and the matching of password and password_confirmation is validated, so allowing a non-nil password with a nil password_confirmation seems like a bug.<br/><br/>Let me know if I\'m thinking about this the wrong way.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0555813697e5dc358bb27d5efd3ffa23?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4146', 'title': u'has_secure_password allows saving of a new password even when password_confirmation is nil'}, {'body': u'it come back occasionally in 367741ef', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4142', 'title': u'remove Enumerable#each_with_object again'}, {'body': u'Cheery-picked the change from master. Build fixed for 3-2-stable when IM=true', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4141', 'title': u'Fix build 3-2-stable'}, {'body': u'Otherwise, the schema and seed will be loaded onto the<br/>test database.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4140', 'title': u'Reconnect to the first database after db:create'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4137', 'title': u'cleanup the tests in mass_assignment_security_test.rb'}, {'body': u'deprecate Array#uniq_by and Array#uniq_by! in favor of Array#uniq and Array#uniq! from ruby 1.9', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4135', 'title': u'deprecate Array#uniq_by and Array#uniq_by!'}, {'body': u'https://github.com/rails/rails/blob/master/activerecord/lib/active_record/identity_map.rb#L142<br/><br/>The identity map will only be cleared if the close method was called. But as far as i know, close will not always be called. This patch would fix that.<br/><br/>I have also simplified the middleware, there is no reason to create the extra body class.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c5fd0bd27111282c0ef0c56103092778?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4134', 'title': u'Simplifing the identity map middleware and fix a bug.'}, {'body': u'they are public in current 1.9 ruby (tested in 1.9.2-p180, 1.9.2-p290, 1.9.3-p0)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4133', 'title': u'no more need to make Time#to_date and Time#to_datetime public'}, {'body': u"This patch resets the postgres search path in the structure.sql after<br/>the structure is dumped in order to find schema_migrations table when<br/>multiples schemas are used.<br/><br/>Fixes #945<br/><br/>See also #1094. It was marked as merged (and closed) by github when in fact it wasn't. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f63a259f9b2375e2e900b8cfcc1420fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4132', 'title': u'Reset postgreSQL search path in db:test:clone_structure.'}, {'body': u'Fix for #919', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3a54648de1a8d2e543878697b2445db2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4131', 'title': u'Fix delete_all when chained with joins'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4129', 'title': u'AM::MassAssignmentSecurity: add missing require'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4128', 'title': u'Doc fixes 3 2 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4125', 'title': u'remove Proces.daemon from core_ext'}, {'body': u'Assets pipeline gzips static files, but page cache doesn\u2019t. It breaks my heart, so I present to you this simple patch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cd32d17c95d3bfb352504c36462b98bd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4124', 'title': u'Gzip files on page caching'}, {'body': u'This is related to #3030 and basically just reverts 85f8458e1bd41dfa87b33eafc5e097deeb370f13.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38becc6fc03453ccb1edfcdea1122408?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4123', 'title': u'Remove sorting of hash keys since ruby 1.9 hash is ordered.'}, {'body': u'...th strict mass assignment sanitizer, fixed build_record to not merge creation_attributes, removed failing nested attributes tests (that feature was broken anyway) #4051', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/48acd2a1c5c447f7e7b59310ee1fecff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4122', 'title': u'added failing tests for has_many, has_one and belongs_to associations wi...'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4121', 'title': u'remove AS whiny nil extension and deprecate config.whiny_nils'}, {'body': u'railties tests fail because of it', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4120', 'title': u'remove autoload for deleted module'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5a90a67fa1a92e6a4b605cfd8da5e375?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4119', 'title': u'raises an ArgumentError on TemplateRenderer#determine_template'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4118', 'title': u'remove File#to_path alias'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4117', 'title': u'remove status_code from AD::ShowExceptions and useless requires'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4116', 'title': u'remove deprecated set and original methods for table_name, primary_key, etc'}, {'body': u"Action pack logger methods changed to active support Logger methods (I am doing the small commits because shouldn't messed with others)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4115', 'title': u'Action pack logger methods changed to active supoort Logger methods'}, {'body': u'Make sure the table name of a model is reset in a test case after assigning `ActiveRecord::Base.table_name_prefix` and `ActiveRecord::Base.table_name_suffix`.  Before this change, `Topic.table_name` would use the "memoized" value without prefix and suffix.<br/><br/>This change does not currently fix anything, but make the test case to test the right thing.  I plan to submit a patch to make fixtures use the table name defined in the associated model, and there this test would fail without this fix.<br/><br/>This was somebody else\'s test case, so an independent opinion on the change can be helpful.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4114', 'title': u'Fix a fixtures test case with table prefix/suffix'}, {'body': u'remove skip if ruby 1.8 series ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4113', 'title': u'remove skip if ruby 1.8 series'}, {'body': u'I took release dates from rubygems.org.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5d361c5cdfa815082d54022bc45ece2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4112', 'title': u'Correcting release dates in various CHANGELOGs'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4111', 'title': u'removed unnecessary file path in test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4110', 'title': u'remove deprecated underscore versions of attribute methods'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4109', 'title': u'Changed the old logger to new active support logger'}, {'body': u'We no need to add the file path there. So, I have removed it. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4108', 'title': u'removed unnecessary file path in test'}, {'body': u"I think that we don't need to call respond_to?(:force_encoding) method (and related) in ruby 1.9.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4107', 'title': u'Remove ruby 1.8 code. '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4106', 'title': u'AM::MassAssignmentSecurity.attr_protected: fixed docs.'}, {'body': u'It fixes failing tests in travis<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4105', 'title': u'remove requires of core_ext/array/random_access that no longer exists'}, {'body': u'/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4104', 'title': u'remove Enumerable#each_with_object from core_ext as it is present in ruby 1.9'}, {'body': u'/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4103', 'title': u'remove Kernel#singleton_class from core_ext as it is present in ruby 1.9'}, {'body': u'Sorry about this. I added this.  :-(', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4102', 'title': u'warning removed '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4101', 'title': u'remove Array#sample from core_ext'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5d361c5cdfa815082d54022bc45ece2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4100', 'title': u'rails version order in railties changelog'}, {'body': u'Removed the older way of loggers from activemodel/test/cases/mass_assignment_security/sanitizer_test.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4098', 'title': u'removed  deprecated loggers'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4097', 'title': u"We don't need a special html_escape for 1.8 anymore"}, {'body': u'Any thoughts on something like this?  Obviously an alternative would be for the client to rely on enum_for - <br/><br/>```<br/>Post.enum_for(:find_in_batches).each_with_index do |posts, i|<br/>...<br/>end<br/>```<br/><br/>but this seems nicer.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9e5ce6f28587baa2a566eb4f2d76c13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4096', 'title': u'Adding Enumerator support to find_in_batches / find_each'}, {'body': u'Orignal commit <br/><br/>ada78066fdbccffb1da092a2470211fa252b3c99<br/><br/>I think we can do changes other places also!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4095', 'title': u'Using uuid which is supported in 1.9'}, {'body': u'it was required on ruby 1.8<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4094', 'title': u'remove check for string from request body setter'}, {'body': u"fixes #3183<br/><br/>I have tested in sqlite3, mysql, postgresql. It's all green. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4093', 'title': u'More tests deep including through habtm'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/48acd2a1c5c447f7e7b59310ee1fecff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4092', 'title': u'added :other_than => :!= option to numericality validator'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4091', 'title': u'Removed unused code for ruby < 1.9'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4090', 'title': u'Removed test which works only < 1.9'}, {'body': u'/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4089', 'title': u'remove dead code as ruby 1.9.3 has Base64 module'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4088', 'title': u'Remove unused conditions for 1.9'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5cba606090e5f29f910274796748f20a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4086', 'title': u'Remove some of the ActiveSupport core extensions related to 1.8.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4085', 'title': u'No Ruby 1.8 stuff. No more checks in code.'}, {'body': u"(trying again with the correct base branch)<br/><br/>Calling `last` on an association that's scoped with `reorder` can cause some adapters to fail (particularly oracle_enhanced and postgres). The underlying cause is that `connection.distinct` expects the desired order, but the relation's `reorder_values` are not passed along, since `construct_limited_ids` explicitly grabs `order_values`.<br/><br/>See the attached commit for additional details - this bug does not affect the mysql or sqlite adapters, as those use the default order-agnostic implementation of `distinct`.<br/><br/>What's the best way to test this?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6883e5ef03484d4fcef507d7b4f1d243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4082', 'title': u'Fix reorder with limited ids'}, {'body': u"Calling last on an association that's scoped with reorder can cause some adapters to fail (particularly oracle_enhanced and postgres). The underlying cause is that `connection.distinct` expects the desired order, but the relation's `reorder_values` are not passed along, since `construct_limited_ids` explicitly grabs `order_values`.<br/><br/>See the attached commit for additional details - this bug does not affect the mysql or sqlite adapters, as those use the default order-agnostic implementation of `distinct`.<br/><br/>What's the best way to test this?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6883e5ef03484d4fcef507d7b4f1d243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4081', 'title': u'Fix reorder with limited ids'}, {'body': u'This is a fix for #4048', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b013ce47df9e4e25dad2dadd77963560?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4080', 'title': u'Fix regression in select form helper when options are non-string values'}, {'body': u"This is attempt to fix bugs #4038 and #3228. The problem is that PATH_INFO can be changed, so while checking for authentication it can differ from original value. That's why we need to save ORIGINAL_PATH, which acts similarly to REQUEST_URI, but since REQUEST_URI is unreliable, we can't use it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4079', 'title': u'Fix http digest authentication when url ends with `/` or `?`'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4078', 'title': u'remove more uses of deprecated loggers'}, {'body': u'Installed for me on 1.9.3 and Ruby-Head also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4077', 'title': u'No need to check here now for < 1.9.3'}, {'body': u'/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4076', 'title': u'remove support for ruby 1.8 in AS String extensions'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4075', 'title': u'Removal dead code from my side :-)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4074', 'title': u'doc:rails fixed'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4074', 'title': u'doc:rails fixed'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4073', 'title': u'It should be README.rdoc fixes #4067'}, {'body': u'...on. []= and [] methods should be defined for these store types.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4072', 'title': u'Store type implemented to allow different types of store for serializati...'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4071', 'title': u'Updated gemspec for ruby 1.9.3 and ruby-gem 1.8.10'}, {'body': u'/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4070', 'title': u'requiring enumerator is not nessessary in ruby 1.9'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4069', 'title': u'It should be README.rdoc'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4065', 'title': u'Fix railties tests: I broke development.rb template during last merge'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4064', 'title': u'fix adding field_with_errors to date selects, closes #3487'}, {'body': u"There's no need for Capistrano to be install on a server, the extra argument in the comment implies this now.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8ddbf811da78bb0daeeb3cacd7cf743f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4063', 'title': u'Added Capistrano to the development group in Gemfile '}, {'body': u"Previous issues #3453 and #3952, according to discussion it's ok to enable it in 4.0", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4062', 'title': u'new applications enforce whitelist mode for mass assignment'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3dcfe148e29aba731693d7b61e790243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4061', 'title': u'fix default_i18n_subject comment in ActionMailer::Base'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4059', 'title': u"Don't care anymore about tests in 1.8.7"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4058', 'title': u'Backport multiple fixes for asset pipeline from master to 3-1-stable'}, {'body': u"These can pop up while the SQLite DB is being written to.<br/><br/>--------------<br/><br/>This seemed like a reasonable idea to me? I've had them show up in `git status` before.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4d6f74711436cfe252bf4fc8f3cf4971?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4057', 'title': u'Add db/*.sqlite3-journal to .gitignore'}, {'body': u'These changes are from master. <br/><br/>This will fixes #4054 ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4056', 'title': u'Fixes 4054'}, {'body': u"I think OpenStruct fits for serialization pretty well. So I've implemented support of store type generally and OpenStruct store type case.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4055', 'title': u'Store types implemented. OpenStruct store type implemented.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4052', 'title': u'remove warnings about @variable_for_layout'}, {'body': u'Original issue #3816<br/><br/>/cc @josevalim @wycats', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/454dcacc6b66e1ea03430a65feff7398?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4047', 'title': u'Use force_encoding before encode (fix #3816 ).'}, {'body': u"After updated to 3.2.0.rc1, I find that Chinese characters in extracted source become unreadable.<br/><br/>The corresponding commit is #3816<br/>here is the problem line:<br/><br/>``` ruby<br/>extract.encode! if extract.respond_to?(:encode!)<br/>```<br/>my template file is saved in utf-8, <br/>before this line, ```extract.encoding``` returns ASCII-US<br/>I guess the reason is ```extract.encode!``` convert all utf-8 encoded characters again using an ASCII-US->UTF-8 converter.<br/>I'm new to ruby/rails, If I'm wrong, please correct me<br/>\\cc @lest", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c6c57c07843274735d6f5dc451a203ee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4043', 'title': u"don't encode an UTF-8 encoded template"}, {'body': u'This is mostly the same as 876bade5999c51f5031861f703933d50e48512ff<br/>that was reverted due to test failures, but now with a correction.<br/><br/>See #4030', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f63a259f9b2375e2e900b8cfcc1420fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4036', 'title': u'Fix database tasks in test namespace.'}, {'body': u'Original issue #3865', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4035', 'title': u'handle not only strings in date type cast'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4033', 'title': u'add failing tests for issue #3487'}, {'body': u'Description:<br/>    Stubs out a new module in the lib directory. Pass in the module name and a list of optional method names.<br/>    This is useful when writing custom modules for use in multiple models etc.<br/>    This generates a custom module file in lib as well as a test in test/unit.<br/><br/>Example:<br/>    `rails generate module custom method1 method2 method3`<br/><br/>        Task:      lib/custom.rb<br/>        Test:      test/unit/custom_test.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2fcbea51d73ded3c38c6ecde455b1497?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4032', 'title': u'Created a custom module generator. Generates a stub for a module in lib and an associated test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4031', 'title': u'3 0 stable travis sync'}, {'body': u"Commit 15fb4302b6ff16e641b6279a3530eb8ed97f2899 introduced some issues.<br/><br/>Previously to that commit, when I executed `rake db:test:clone_structure`<br/>the structure was dumped (to structure.sql) and then loaded again no matter whether<br/>the `config.active_record.schema_format` was set to :sql or :ruby. That was OK<br/>because I'm explicitly saying that I want the structure to be cloned.<br/><br/>Now, when I call the same task, although the structure is dumped, the loaded schema<br/>depends on the value of the `config.active_record.schema_format`. So If I have it set<br/>to :ruby and then I call `rake db:test:clone_structure` the loaded file is schema.rb and<br/>not the structure.sql how it is supposed to be according to the name of the task and<br/>its description.<br/><br/>The same thing happens when I call `rake db:test:clone`. When called,<br/>a new schema.rb is created but the file used to load the schema depends on<br/>`config.active_record.schema_format`. If I have it set to :sql, a new schema.rb<br/>is created but the structure.sql file is used to create the database. So it is<br/>not consistent.<br/><br/>This pull request solves the problem. When `db:test:clone_structure` is invoked, the<br/>structure is dumped and then loaded into the test database. When `db:test:clone` is<br/>invoked the schema is dumped and then loaded into the test database. None of these<br/>tasks depends now on the value of `config.active_record.schema_format`<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f63a259f9b2375e2e900b8cfcc1420fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4030', 'title': u'Fix database tasks in test namespace.'}, {'body': u'After 15fb430 the default location of the :sql schema_format location was changed from environment_name.sql to structure.sql. This pull request updates a reference to the old schema format location in the migration guides.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/302c6c56b99912a673f1213b0709c902?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4028', 'title': u'Fix reference to old sql format schema location'}, {'body': u"Currently, the update_attributes / update_attributes! method can't specify a validation context.<br/>This patch allow above methods to specify the context.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4026', 'title': u'Support a context for update_attributes / update_attributes! methods.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4025', 'title': u'Travis sync'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fab62c8f6e960775233a221ce9dd252?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4023', 'title': u'Update changelogs with rails 3.0-stable branch info'}, {'body': u'backport #4011 to 3-1-stable<br/><br/>/cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4021', 'title': u'backport call scope within unscoped to prevent duplication of where values'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c11579192bd480035b95d6cc82a79907?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4019', 'title': u'Make structure.sql file configureable in db:structure:dump analog to SCHEMA in db:schema:dump'}, {'body': u'Please do not add more warninggggsss', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4018', 'title': u'Warning removed in test'}, {'body': u'Removal extra requires.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4017', 'title': u"No need 'abstract_unit' here. It's already in 'generators_test_helper'"}, {'body': u'When a newcomer hits the routing error page they<br/>are often confused about how to trouble shoot the<br/>next step. Adding a simple help text can gently <br/>remind coders where to get more help.<br/><br/>Here is how the text renders in safari: http://cl.ly/2q081C380H3F1J0J3C16', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4015', 'title': u'Add Help Text to Routing Error'}, {'body': u'when fetching ids for a collection, bypass preloading<br/>to avoid the unnecessary performance overhead<br/><br/>original issue #3870<br/><br/>/cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4014', 'title': u'bypass preloading for ids_reader'}, {'body': u'This is a rebased version of my pull request #3844 which should apply cleanly to 3-1-stable.<br/><br/>This fixes issue #2572 with `set_fixture_class` and allows to use `set_fixture_class` with "namespaced" fixtures:<br/><br/>```ruby<br/>set_fixture_class :"admin/users" => User, "admin/known_ips" => Admin::KnownIP<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4013', 'title': u'A version of #3844 for 3-1-stable'}, {'body': u'I was trying to do this:<br/><br/>```rb<br/>Mime::Type.register "text/markdown", :markdown, [], [:md, :mdown]<br/>```<br/>But that didn\'t work. This did:<br/><br/>```rb<br/>Mime::Type.register "text/markdown", :markdown, [], ["md", "mdown"]<br/>```<br/>But since the symbol parameter gets turned into the extension, it was confusing to pass strings as extension aliases.<br/><br/>This patch lets you use strings or symbols, and allows the same for `Mime::Type.register_alias`.<br/><br/>I also added some tests.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0a8ab1c89907abb3adca367b4a008d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4012', 'title': u'Allow symbols to be passed as extension aliases in Mime::Type.register'}, {'body': u'Original issue #3923<br/><br/>/cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4011', 'title': u'call scope within unscoped to prevent duplication of where values'}, {'body': u'It should be <code>Person.new</code>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4010', 'title': u'Fixed test "ArgumentError: wrong number of arguments(1 for 0)"'}, {'body': u'This generator stubs out a new Rake task. Pass the namespace name, and a list of tasks as arguments.<br/><br/>Example: `rails generate task feeds fetch erase add`<br/>will create `lib/tasks/feeds.rake` with such code:<br/><br/>```ruby<br/>namespace :feeds do<br/>  task :fetch => :environment do<br/>  end<br/><br/>  task :erase => :environment do<br/>  end<br/><br/>  task :add => :environment do<br/>  end<br/><br/>end<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab074ca0a48f06ab110c374fc7db258e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4009', 'title': u'Rake tasks generator'}, {'body': u'warning removed "warning: instance variable @variable_for_layout not initialized"<br/><br/>"@variable_for_layout" is used in standard layout', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4008', 'title': u'warning removed "warning: instance variable @variable_for_layout not ini...'}, {'body': u'In short:<br/>`expand_cache_key(element)` should not equal `expand_cache_key([element])`<br/><br/>This way a fragment cache key for an index page with only a single<br/>element in the collection is different than a fragment cache for a<br/>typical show page for that element.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56c0f984e7a1cccbd5ea165ef310ba4f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4007', 'title': u'Fix expanding cache key for single element arrays'}, {'body': u'This commit fixes a bug when i have a validation with an empty message like: <br/>validates_presence_of(:name, :message => "")<br/><br/>In this case rails was not validating correctly the model.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7b3f27726c18685011b66f850ec7f0f3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4006', 'title': u'Fixed bug when error message is an empty string.'}, {'body': u'This commit fixes a bug when i have a validation with an empty message like: <br/>validates_presence_of(:name, :message => "")<br/><br/>In this case rails was not validating correctly the model.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7b3f27726c18685011b66f850ec7f0f3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4005', 'title': u'Fixed bug when error message is an empty string.'}, {'body': u"also added tests and documentation about sum allowing a block.<br/><br/>I've been burned too many times by thinking I'm working with an Array. If we can sum on ActiveRecord::Relations like we do with Arrays, why not count with a block as well?<br/><br/><br/>    persons = Person.where(:gender=>'male')<br/>    persons.count{|person| false} # should equal 0, but will equal persons.size<br/><br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0e8ab03fa3d7df29c90a950f069aad62?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4003', 'title': u'Allow blocks for count with ActiveRecord::Relation like we do with sum'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/4002', 'title': u'Warning removed "warning: (...) interpreted as grouped expression"'}, {'body': u"For issue #393. This one doesn't modify the param list of the content_tag method.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f889181fc58ccb702822b54fe3702d24?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4000', 'title': u'Fix lack of newline for <textarea> tag in form helpers'}, {'body': u'A missing letter will be no longer missing after this incredible pull request.<br/>:-)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/019ce7db00634aa77630a8dd971c9767?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3998', 'title': u'Small typo in Rails::Engine documentation'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77cfd91999abfee3323de5814749b4fb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3994', 'title': u'Added .sass-cache/ directory to the genrated gitignore in engines.'}, {'body': u'This patch allow nested attributes on an association to update the owner object.  This worked in Rails 3.0.x, but stopped working in Rails 3.1.<br/><br/>Here\'s the example between Rails 3.0 and 3.1<br/><br/>```ruby<br/>class Task < AR<br/>  accepts_nested_attributes_for :project<br/>end<br/><br/>project = Project.find 1<br/>params[:task] = {:name => \'task\', :project_attributes => {:id => \'1\', :name => \'new name\'}}<br/>```<br/><br/>This works in rails 3.0.x (the project name is assigned correctly), but it does not work in rails 3.1.x<br/><br/>```ruby<br/>project.tasks.create params[:task]<br/>puts project.name # \'new name\'<br/>```<br/><br/>In rails 3.1.x an exception is raised...<br/>**ActiveRecord::RecordNotFound, "Couldn\'t find Project with ID=1 for Task with ID="**<br/><br/>The following works in rails 3.1.x even though we\'re creating the new task from the relation owned by the project object.  We still need to pass the project id in explicitly so that it updates correctly.<br/><br/>```ruby<br/>project.tasks.create params[:task].merge(:project_id => project.id)<br/>puts project.name # \'new name\'<br/>```<br/><br/>The patch allows the association to work as it did in Rails 3.0.<br/><br/>To fix the issue, the patch does the following...<br/><br/>* Merges in the creation attributes of the owner object so that the new association has reference to the owner.<br/>* Defers assignment of any attributes that contain "sub-attributes" (in hashes) and makes sure that the base values (the first level of attribute keys) are assigned first as this is where the owner foreign key and other references for the new object will be set.<br/>* The deferred nested attributes are then assigned now that the first level of data has been set.<br/><br/>The solution given above for 3.1 can work, but has side affects because of possible hash ordering issues.  The :project_id is merged in, but happens to be assigned before the :project_attributes nested attributes are.  This of course would fail if Ruby references the :project_attributes attribute before the :project_id and the exception would again be raised.<br/><br/>This patch prevents this issue altogether since the nested attribute assignment is deferred until the base attributes are first set.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/898bf26eb61308fe717a243441cc615d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3991', 'title': u"Allow nested attributes in associations to update values in it's owner o..."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5cba606090e5f29f910274796748f20a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3990', 'title': u'Remove autoload for non-existent file'}, {'body': u'This change extends  the "assert_difference" method to accept an<br/>optional array of values corresponding to an array of expressions<br/>passed to the method. For example:<br/><br/>Currently, if you want to pass an array of expressions, you can only do:<br/><br/>assert_difference [\'Delayed::Job.count\', \'SomeModel.count\'], +2 do<br/>  execute_some_code<br/>end<br/><br/>With this change, the numerical value can also be an array of values:<br/><br/>assert_difference [\'Delayed::Job.count\', \'SomeModel.count\'], [-1, 4] do<br/>  execute_some_code<br/>end<br/><br/>Then each expression would be tested against the corresponding value<br/>in the value array.<br/><br/>None of the old functionality is affected.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/25393e08b802f62823636914f9297d20?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3989', 'title': u'Extend array support for assert difference'}, {'body': u'Original issue #3986<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3988', 'title': u'fix separator insertion in date_select helper'}, {'body': u"```<br/>rake aborted!<br/>An error has occurred, this and all later migrations canceled:<br/><br/>undefined method `body' for #<ActiveRecord::ConnectionAdapters::TableDefinition:0x103378b48><br/><br/>Tasks: TOP => db:migrate<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d8526daaca96275ea39324816b44292f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3983', 'title': u'change to self.change otherwise I got:'}, {'body': u"rake aborted!<br/>An error has occurred, this and all later migrations canceled:<br/><br/>undefined method `body' for #<ActiveRecord::ConnectionAdapters::TableDefinition:0x103378b48><br/><br/>Tasks: TOP => db:migrate", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d8526daaca96275ea39324816b44292f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3982', 'title': u'change to self.change otherwise I got:'}, {'body': u'e.g.<br/><br/>``blog_url(subdomain: current_user)`` instead of ``blog_url(subdomain: current_user.to_param)``', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0d68c1fad9ba7588f4b50036a995dbd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3981', 'title': u'Fix url_for options[:subdomain] to allow objects as values'}, {'body': u"Instead of implementing loading and parsing of database.yml in dbconsole.rb again, just use the app's already configured one.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c11579192bd480035b95d6cc82a79907?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3979', 'title': u"dbconsole: Use the app's database_configuration instead of duplicating loading code."}, {'body': u'@logger might be nil as it is possible to instantiate an instance of a<br/>connection adapter without a logger.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3977', 'title': u'Handle nil logger in sqlite adapter'}, {'body': u'Currently, supporting for custom value types in Predicate builder force one to rewriting (and monkey patching) whole `PredicateBuilde.build_from_hash`.<br/><br/>This patch proposes move value type detection to a separate method, so that one could easily override it with `alias_method_chain`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/419b54e4b0c805f8ed671451ea536e19?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3976', 'title': u'Make a suitable place in Predicate builder for supporting custom types.'}, {'body': u"Ok, here we go again, this time with just one commit.<br/><br/>After a 404 error triggered by a routing error, ActiveRecord's query cache stays enabled.<br/><br/>We observed this issue through something similar as described in issue #2333, where some model test cases started to fail when run after testing a 404 error page. In that case nobody is calling ActiveRecord::QueryCache::BodyProxy#close.<br/><br/>I tracked the issue down to actionpack/lib/action_dispatch/middleware/show_exceptions.rb#call. That one isn't calling close on body.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c7915a424cbb28fdd6c1cce270be6b58?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3975', 'title': u'query cache being left enabled after routing error - second try'}, {'body': u"After a 404 error triggered by a routing error, ActiveRecord's query cache stays enabled.<br/><br/>We observed this issue through something similar as described in issue #2333, where some model test cases started to fail when run after testing a 404 error page. In that case nobody is calling ActiveRecord::QueryCache::BodyProxy#close.<br/><br/>I tracked the issue down to actionpack/lib/action_dispatch/middleware/show_exceptions.rb#call. That one isn't calling close on body.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c7915a424cbb28fdd6c1cce270be6b58?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3974', 'title': u'query cache being left enabled after routing error'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be74c8f8958cafb02ea319768e98daa4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3973', 'title': u'Typo in documentation'}, {'body': u"I was pissed off because of lack of way to gracefully point that values should be NOT IN and NOT BETWEEN in conditions like this:<br/>    User.where(:id => 1..3)<br/>Now there is such a way (almost for ranges for now):<br/>    User.where(:id => (1..3).out!)<br/><br/>I don't know how this should be implemeted but I have AS IS implementation of it. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3971', 'title': u'Hack for Range class to perfom Arel not_in predication on ranges.'}, {'body': u"Fixed case when exception was raised before execution of any application code and its backtraces wasn't logged (e.g. it happens when exception was raised inside rack).<br/><br/>/cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3970', 'title': u'log exception backtrace when all backtrace lines silenced'}, {'body': u'We found in our log empty transactions that consume unnecessary time, like this:<br/>D, [2011-12-13T22:14:57.804757 #88645] DEBUG -- :    (0.2ms)  BEGIN<br/>D, [2011-12-13T22:14:57.805285 #88645] DEBUG -- :    (0.1ms)  COMMIT<br/><br/>And a little analysis led me to this block of code, hope this change can help optimization.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1e98e5671321d2638e59723a9d0ab64e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3968', 'title': u'start transaction only when necessary.'}, {'body': u'This generator stubs out a new Rake task. Pass the namespace name, and a list of tasks as arguments.<br/><br/>Example: `rails generate task feeds fetch erase add`<br/>will create `lib/tasks/feeds.rake` with such code:<br/><br/>```ruby<br/>namespace :feeds do<br/>  task :fetch => :environment do<br/>  end<br/><br/>  task :erase => :environment do<br/>  end<br/><br/>  task :add => :environment do<br/>  end<br/><br/>end', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab074ca0a48f06ab110c374fc7db258e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3967', 'title': u'Rake task generator'}, {'body': u'This generator stubs out a new Rake task. Pass the namespace name, and a list of tasks as arguments.<br/><br/>Example:<br/>`rails generate task feeds fetch erase add`<br/>will create  `lib/tasks/feeds.rake` with such code:<br/><br/>```ruby<br/>namespace :feeds do<br/>  task :fetch => :environment do<br/>  end<br/><br/>  task :erase => :environment do<br/>  end<br/><br/>  task :add => :environment do<br/>  end<br/><br/>end', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab074ca0a48f06ab110c374fc7db258e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3966', 'title': u'Rake task generator added'}, {'body': u'It fixes tests when running `rake test:isolated`<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3963', 'title': u'missing require in buffered logger'}, {'body': u'/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3960', 'title': u'missing require in activesupport test'}, {'body': u'Discussion #3952<br/><br/>/cc @josevalim @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3958', 'title': u'commented whitelist mode enforcement for mass assignment'}, {'body': u'This patch provides a NullStore implementation of ActiveSupport::Cache::Store suitable for use in development and test environments where the code needs to use the cache interface, but actually caching data is not desired.<br/><br/>The cache store will never store data itself. It does implement the LocalCache strategy which will store values for the duration of a request to match the behavior of other cache implementations used in production environments.<br/><br/>It would be used then in the development.rb, for example, as:<br/><br/>```ruby<br/>config.cache_store = :null<br/>```<br/><br/>(Note: this request was originally opened in Lighthouse at https://rails.lighthouseapp.com/projects/8994/tickets/6128)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3954', 'title': u'Add ActiveSupport::Cache::NullStore for testing and development'}, {'body': u'Discussion in #3453<br/><br/>/cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3952', 'title': u'new applications enforce whitelist mode for mass assignment'}, {'body': u'Same as #3948 but this is for new generated apps', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3950', 'title': u'Use rubygems https endpoint for the Gemfile on new apps'}, {'body': u'It\'s no longer possible to use hyphens in environment names with rails console or rails dbconsole:<br/><br/>    $ rails c special-production<br/>    Loading development environment (Rails 3.0.9)<br/>    /Users/sam/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/irb/magic-file.rb:7:in `initialize\': No such file or directory - special-production (Errno::ENOENT)<br/><br/>I think this was introduced in this commit: https://github.com/rails/rails/commit/8cb594a2e1808cd7d93f3593afed0414016fc56f#railties/lib/rails/commands/console.rb<br/><br/>The relevant code in console.rb and dbconsole.rb is:<br/><br/>    # Has to set the RAILS_ENV before config/application is required<br/>    if ARGV.first && !ARGV.first.index("-") && env = ARGV.shift # has to shift the env ARGV so IRB doesn\'t freak<br/>      ENV[\'RAILS_ENV\'] = %w(production development test).detect {|e| e =~ /^#{env}/} || env<br/>    end<br/><br/>I assume this was included to stop hyphen prefixed arguments from leaking in to the environment name. In this pull request I\'ve changed it slightly so it only checks the first character.<br/><br/>I\'ve tested it manually but I can\'t find any relevant tests to update. I\'m happy to write some if someone can point me in the right direction.<br/><br/>Thanks!<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a6ad943eee0cec3804b89bc7bf865293?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3949', 'title': u'Environment names with hyphens no longer working when specified as a console argument'}, {'body': u"This patch updates the Gemfile to use the recommended `https://rubygems.org` endpoint.<br/><br/>This endpoint is [now the default](https://github.com/carlhuda/bundler/commit/2d7f3e42d98419a62aba57fd603534048fff4178#lib/bundler/templates/newgem/Gemfile.tt) for new gems created with bundler. Rails should set a good example for the community (as well as cargo cult members).<br/><br/>In a separate commit, I cleaned up the quotes in the Gemfile, making them all consistent. Feel free to ignore this second commit if you don't want it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3948', 'title': u'Use HTTPS rubygems source'}, {'body': u'This pull request fixes generation of asset paths inside assets when deploying to sub-URI. <br/>For example when our app is deployed inside `/community` this <br/><br/>```css<br/>/* app/assets/stylesheets/application.css.erb */<br/>body{<br/>  background: url(<%= image_path "bg.png" %>);<br/>}<br/>```<br/><br/>Now produces a proper path:<br/><br/>```css<br/>body{<br/>  background: url(/community/assets/bg.png);<br/>}<br/>```<br/><br/>instead of `/assets/bg.png`.<br/><br/>### Precompilation:<br/><br/>Also works! <br/><br/>```bash<br/>RAILS_RELATIVE_URL_ROOT="/community" bundle exec rake assets:precompile<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6be565dc21f521acf0193ee63ab9d0a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3946', 'title': u'Fix #3365. Default config.relative_url_root to ENV["RAILS_RELATIVE_URL_ROOT"].'}, {'body': u'Allow autoloading to work as intended and avoid multiple requires.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3943', 'title': u"Include TagHelper but don't explicitly require it"}, {'body': u'Please refer to #3365 for more details! <br/><br/><br/>thanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6be565dc21f521acf0193ee63ab9d0a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3942', 'title': u'Fix incorrect asset paths in development when using asset_path and sub-uri.'}, {'body': u'...to return self.<br/><br/>Includes an assertion that fails without the fix.<br/><br/>This fixes a bug where if a subclass of HashWithIndifferentAccess is a value in a hash, and that hash has .with_indifferent_access called upon it, then it becomes a direct instance of HashWithIndifferentAccess instead of the subclass, losing any methods defined in that subclass.  This is because Hash#nested_under_indifferent_access creates an instance of HashWithIndifferentAccess directly.<br/><br/>Here\'s an example of the bug from a rails console:<br/><br/>irb(main):001:0> class HockeyHash < HashWithIndifferentAccess<br/>irb(main):002:1>   def hockey_versus opponent<br/>irb(main):003:2>     "hockey > #{opponent}"<br/>irb(main):004:2>   end<br/>irb(main):005:1> end<br/>=> nil<br/>irb(main):007:0> hash = {:a => HockeyHash.new}<br/>=> {:a=>{}}<br/>irb(main):008:0> hash[:a].hockey_versus("you")<br/>=> "hockey > you"<br/>irb(main):009:0> indifferent_hash = hash.with_indifferent_access<br/>=> {"a"=>{}}<br/>irb(main):010:0> indifferent_hash[:a].hockey_versus("you")<br/>NoMethodError: undefined method `hockey_versus\' for {}:ActiveSupport::HashWithIn<br/>differentAccess<br/>        from (irb):10<br/>        from :0<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/20597d3cdf007a1c9bb0da959ebb8257?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3941', 'title': u'Overrode Hash#nested_under_indifferent_access in HashWithIndifferentAccess'}, {'body': u'Removed Oxford/Serial comma from "default_last_word_connector" in to_sentence method of Array for making output of method more readable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a3c55cf0f9685f8ceaa69ad52985c9c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3940', 'title': u'modified default_last_word_connector from ", and " to " and " for avoidi...'}, {'body': u'...ich will add associated model error messages also', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a3c55cf0f9685f8ceaa69ad52985c9c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3939', 'title': u'modified validates_associated method to add new option include_errors wh...'}, {'body': u"Me and github user [Lavinia](https://github.com/lavinia) have been pair-programming on this to add an option 'use_two_digit_numbers' for creating select tags displaying months and days with leading zeros without changing the values.<br/><br/>This is especially helpful for e.g. ISO8601-style dates, 2011-08-01. We've seen a number of cases where this itch has popped up (especially outside the US), but not found a really simple way to scratch it:<br/><br/>http://stackoverflow.com/questions/6609340/is-it-possible-to-add-leading-zeros-to-the-day-and-month-in-rails-date-select-a<br/><br/>We're both first-time contributors so any feedback is warmly welcome!<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c33c0e29f8fa555551d072edd3d6758f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3938', 'title': u':use_two_digit_numbers option'}, {'body': u'Now, we got the follow warning:<br/><br/>```<br/>path to/activesupport/lib/active_support/core_ext/string/output_safety.rb:23: warning: regexp match /.../n against to UTF-8 string<br/>```<br/><br/>This PR fix it.<br/>Please see https://github.com/rails/rails/issues/3927 .<br/>I wrote an another fixing plan, and a performance test result.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3937', 'title': u'Add silence_warnings block (GH #3927)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3936', 'title': u'Skip assets options in environments files when --skip-sprockets is used'}, {'body': u'Working on a project I attempted to use a button inside of a form builder and noticed that `ActionView::Helpers::FormBuilder` lacks support for generating `button_tag` though it covers most everything else.<br/><br/>This pull request adds support for generating `button_tag` inside of form builders, and the default behavior mirrors that of the existing `submit_tag` support.<br/><br/>Example:<br/><br/>    <%= form_for @post do |f| %><br/>      <%= f.button %><br/>    <% end %><br/><br/>Generates HTML like:<br/><br/>    <form accept-charset="UTF-8" action="/posts/123" class="edit_post" id="create-post" method="post"><br/>      <div style="margin:0;padding:0;display:inline"><br/>        <input name="utf8" type="hidden" value="&#x2713;" /><br/>        <input name="_method" type="hidden" value="put" /><br/>      </div><br/>      <button name="button" type="submit">Create post</button><br/>    </form>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/993c45489aac7a71f27112ba2ab4f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3933', 'title': u'Add button_tag support to ActionView::Helpers::FormBuilder'}, {'body': u'Is wrong use ProcessedAsset#to_s since it returns the content of the file.<br/><br/>This closes #3333 #3348 #3361', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3932', 'title': u'Use ProcessedAsset#pathname in Sprockets helpers when debugging is on. Closes #3333 #3348 #3361.'}, {'body': u'Adds rules so "cookies" is correctly singularized to "cookie", and "caches" to "cache", respectively.<br/><br/>Removes irregular rules for "zombies", "move" and "sexes" because none of them are irregular:<br/><br/>- "zombies" grouped together with "cookies" and the existing "movies" into one rule;<br/>- "moves" grouped together with "caches" and the existing "shoes" into one rule;<br/>- "sexes" removed because it\'s already covered by existing rules and no different from, say "boxes"<br/><br/>Tests amended and adjusted accordingly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fe7a33034147dd07f47ed7ec54a1cab3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3930', 'title': u'Fix inflection for "cookies" & "caches", clean up.'}, {'body': u'# What<br/><br/>Adding the ability to easily log callbacks and controller [before/around/after]_filters.<br/><br/><br/># Why<br/><br/>One of the biggest problems students in my [rails classes](http://schneems.com/beginner-to-builder-2011) face, is tracking down an errant redirect or other misbehaving code. Even after working with rails for many years it can be difficult to navigate the filter chain in a large application. By giving the filters more visibility in the logs we speed up debugging and everyone wins! <br/><br/><br/># How<br/><br/>Insert an empty function `#log_callback` on instances of classes that extend ActiveSupport that takes the callback name (function name) and callback type as arguments. Each class can choose how they would like to over-ride this function making logging flexible and easy. <br/><br/>We then define a default implementation of `#log_callback` in AbstractController::Callbacks to provide us with [before/around/after]_logging in rails. <br/><br/><br/><br/># Result<br/><br/><br/>```ruby<br/>class PostsController < ApplicationController<br/>  before_filter :check_admin<br/>  # ...<br/>end<br/><br/>```<br/><br/>## Before Logging<br/><br/>```shell<br/>Started GET "/posts" for 127.0.0.1 at Wed Dec 07 11:42:44 -0600 2011<br/>  Processing by PostsController#index as HTML<br/>  Post Load (0.1ms)  SELECT "posts".* FROM "posts" <br/>Rendered posts/index.html.erb within layouts/application (0.4ms)<br/>Completed 200 OK in 11ms (Views: 9.4ms | ActiveRecord: 0.5ms)<br/>```<br/><br/>## After Logging<br/><br/>```shell<br/>Started GET "/posts" for 127.0.0.1 at Wed Dec 07 11:44:16 -0600 2011<br/>  Processing by PostsController#index as HTML<br/>    Calling before_filter: verify_authenticity_token<br/>    Calling before_filter: check_admin<br/>  Post Load (0.2ms)  SELECT "posts".* FROM "posts" <br/>Rendered posts/index.html.erb within layouts/application (2.2ms)<br/>Completed 200 OK in 31ms (Views: 29.5ms | ActiveRecord: 0.2ms)<br/>```<br/><br/><br/><br/>The callback will not be logged if a callback has not been executed. This means when a callback is specified using`:if => lambda {false}`,  `:unless => lambda {true}`, or using `skip_before_filter` it will not appear in the logs. <br/><br/><br/>This is what the output looks like when multiple before/around/after callbacks are specified<br/><br/>```ruby<br/>class PostsController < ApplicationController<br/>  before_filter :before_foo_1, :before_foo_2<br/>  after_filter  :after_foo_1,  :after_foo_2<br/>  around_filter :around_foo_1, :around_foo_2<br/>  #...<br/>end<br/>```<br/><br/><br/>```shell<br/>Started GET "/posts" for 127.0.0.1 at Wed Dec 07 11:51:41 -0600 2011<br/>  Processing by PostsController#index as HTML<br/>    Calling before_filter: verify_authenticity_token<br/>    Calling before_filter: before_foo_1<br/>    Calling before_filter: before_foo_2<br/>    Calling around_filter: around_foo_1<br/>    Calling around_filter: around_foo_2<br/>  Post Load (0.2ms)  SELECT "posts".* FROM "posts" <br/>Rendered posts/index.html.erb within layouts/application (3.0ms)<br/>    Calling after_filter: after_foo_2<br/>    Calling after_filter: after_foo_1<br/>Completed 200 OK in 36ms (Views: 34.4ms | ActiveRecord: 0.2ms)<br/>```<br/><br/><br/>## Feedback <br/><br/>I\'ve opened this discussion prior on a gist: https://gist.github.com/1443757 and on the Austin twitter channels and have received positive feedback. I\'m happy to talk about this in IRC or on a list or in this pull request. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3929', 'title': u'Add Callback Logging to ActiveSupport and Apply Filter logging to AbstractController '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3928', 'title': u'Fix template test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3926', 'title': u'Skip assets groups if --skip-sprockets option is given'}, {'body': u'See https://github.com/rails/rails/pull/3626#commitcomment-720181', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3925', 'title': u"Add test to verify that therubyrhino isn't included when JRuby isn't used"}, {'body': u"I know it's just meant to be a placeholder but everybody's apps are up on GitHub these days. For a Rails n00b, it would be nice to see GitHub nicely format the generated README as a good starting point for their own.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0887991a8846577a6aa85433d6ab3ea2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3924', 'title': u'Add the .rdoc extension to the README that Rails generates for a new app'}, {'body': u'The noun \'saves\' should be singularized as \'save\' (as in "the pitcher now has 43 saves on the season, since he earned another save last night"). It was being singularized as \'safe\'. This commit fixes this issue.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73abbf44eb9cb1ee9f5236717aa343cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3910', 'title': u"add special case inflection for 'save' -> 'saves'"}, {'body': u'This is a good way to ensure (and show) that the Rails gem dependencies are up-to-date with the latest versions. These status images are popping up for gems like twitter, omniauth, faraday, etc.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0887991a8846577a6aa85433d6ab3ea2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3909', 'title': u'Add dependency status (a la build status) to the README'}, {'body': u"In Ruby 1.8.x, config.encoding sets $KCODE.<br/>Therefore, the possible values are UTF8, SJIS, or EUC.<br/>And, if we set SJIS, we'll has the error. Because some rails sources are written in utf-8 encoding.<br/><br/>I have tested this patch on ruby-1.9.2 and ree-2011.03", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3908', 'title': u'Fix a failure in railties on ruby 1.8.x'}, {'body': u'This is a good way to ensure (and show) that the Rails gem dependencies are up-to-date with the latest versions. These status images are popping up for gems like twitter, omniauth, faraday, etc.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0887991a8846577a6aa85433d6ab3ea2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3907', 'title': u'Add dependency status (a la build status) to the README'}, {'body': u"I found below warning, and fixed it.<br/><br/>```<br/>warning: mismatched indentations at 'end' with 'class' at 20<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3906', 'title': u'Fix warning for params_wrapper_test.rb'}, {'body': u"The regexes were previously (similar to) `/([m|l])ouse$/`.  The square brackets treat the `|` as a literal character to match, so if anyone tried to e.g. pluralize `|ouse` they would receive `|ice`.<br/><br/>The author's intent was obviously to use `(m|l)` without treating `|` as a special character, so that is what this patch does.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1223303a3bb3379a1b7b0e3d30e0aa71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3901', 'title': u'Fix inflection regexes for mouse, mice'}, {'body': u'In ActiveRecord models, the wrapped parameters are only the ones returned by attribute_names but this breaks nested attributes.<br/><br/>It now checks if attr_accessible was set on that model and wrap those instead if it was. We could just manually use the include option to list all the parameters that can be wrapped, but with this modification, we do not need to duplicate this code if attr_accessible was already set.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/62644fdc1c6ffc1e3389d1ab96fc9079?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3900', 'title': u'ParamsWrapper only wrap the accessible attributes when they were set'}, {'body': u'This new method will return a hash which use the first column of your result set as a key, and use the second column as a value. This is useful in an scenario where you want to map your data with an aggregated function.<br/><br/>For example:<br/><br/>```ruby<br/>Company.connection.select_values("SELECT group, COUNT(*) FROM users GROUP BY group")<br/># => { "admin" => "2", "moderator" => "5", "user" => "3" }<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3899', 'title': u'Implements `ActiveRecord::Base.connection.select_pair`'}, {'body': u"Just adding an optional line in the gemfile for optional Backbone.js/Underscore.js support using codebrew's [backbone-rails](https://github.com/codebrew/backbone-rails) gem. Why? Just cuz.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1351669486b18c0408bd4142c86ae93?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3898', 'title': u'Backbone.js/Underscore.js'}, {'body': u"Snowman \u2603 has been melted, now it's time to unfreeze those constants<br/><br/>This refers to the discussion in commit 12be0a59856d4f92a85c479843e296342be47789 from pull request #3895.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3897', 'title': u'Unfreeze frozen constants'}, {'body': u"Snowman \u2603 has been melted, now it's time to unfreeze those constants<br/><br/>This refers to the discussion in commit 12be0a59856d4f92a85c479843e296342be47789 from pull request #3895.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3896', 'title': u'Unfreeze frozen constants'}, {'body': u'When I investigated other issue, I found this one.<br/><br/>We should use freezed string constant here.<br/>Some string literals is used repeatedly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3895', 'title': u'Should use freezed string constant here.'}, {'body': u'tiny doc fix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4e0d3940eb0273c7b3677dd3ed917797?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3894', 'title': u'reversible migration example'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4e0d3940eb0273c7b3677dd3ed917797?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3893', 'title': u'reversible migration example had wrong code.'}, {'body': u'removing verbose from other also<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3892', 'title': u'No Verbose the output for test.'}, {'body': u'Hi,<br/><br/>Not sure why there is no way to annotate haml and slim file? <br/>These template engines getting more and more popular, so why not allow to annotate them (with TODO, etc)?<br/>Here is my proposal (code and tests) allowing annotation of these files. <br/><br/>Thanks for Your time:)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/398908701541c7faf7bebc34b0f5baae?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3889', 'title': u'Annotating haml and slim file'}, {'body': u'Please see https://github.com/rails/rails/pull/3878', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3888', 'title': u'Assign config.encoding to AD::Response.default_charset at the initialization time.'}, {'body': u'User registration process can be divided into several steps.<br/>If the user registration form No. 1, for example, does not have<br/>password field, validation never succeeds with current implementation.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3887', 'title': u'nil password should be allowed'}, {'body': u'This is mainly to make scaffolding work nicely with bootstrapping frameworks. I guess this is a better html. But I am not sure this is right file to make these changes. Otherwise please make the changes to relevant files.<br/><br/>Thank you', 'user': {'avatar_url': 'https://secure.gravatar.com/avatar/e86c5d5b142a13248cbbce010fea141a?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3885', 'title': u'add thead and tbody tags to table inside index.html.erb when scaffolding'}, {'body': u'Rails will now use your default layout (such as "layouts/application") when you specify a layout with `:only` and `:except` condition, and those conditions fail.<br/><br/>For example, consider this snippet:<br/><br/>    class CarsController<br/>      layout \'single_car\', :only => :show<br/>    end<br/><br/>Rails will use \'layouts/single_car\' when a request comes in `:show` action, and use \'layouts/application\' (or \'layouts/cars\', if exists) when a request comes in for any other actions.<br/><br/>---<br/><br/>Bonus point: I found out that `assert_template :layout => \'blahhhhhh\'` will returns true regardless of layout that got rendered. I\'ve fixed that as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3884', 'title': u'Allow layout fallback when using `layout` method'}, {'body': u'refactored form_helper a bit.<br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3880', 'title': u'use ActiveModel::Naming.convert_to_model in form_helper'}, {'body': u'assert_template searches for matches anywhere in the path.<br/><br/>Changed this so that the method search only at the end of the template path.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cf0c4e31ad2ab024bacd079c7dca3b4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3879', 'title': u"Fix: assert_template shouldn't search for partial matches"}, {'body': u"When we read Content-Type header without charset, we should use Response#default_charset .<br/><br/>The original code is 'UTF-8' (string literal).<br/>But I think that we should use `self.class.default_charset` here.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3878', 'title': u'Use default charset when we read content type without charset.'}, {'body': u"I know GH #3539 and #149.<br/>But I want to propose it again, because I have another motivation.<br/><br/>I'm Japanese and resident in the multibyte world.<br/>In my experience, if we don't write charset meta tag, we've got trouble in terms of the next.<br/><br/>If we save a page as html file.<br/><br/>When we open the html file, we'll miss a charset .", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3877', 'title': u'Support charset meta tag.'}, {'body': u'`expire_action` only accepts a hash as url options. So one cannot pass a url helper to expire_action. This is unintuitive and not needed, because `ActionCachePath` passes the options to `url_for`, that takes a string.<br/><br/>Further there are circumstances where this a serious blocker:<br/><br/>Mountable apps.<br/><br/>One cannot pass an url from a mounted app to `expire_action` like this:<br/><br/>`expire_action(engine_name.named_path)`<br/><br/>So submitted a patch that fixes this.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d89be962aea6ca120236b264edcf2ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3876', 'title': u'Allow string as url for expire_action'}, {'body': u'`expire_action` only accepts a hash as url options. So one cannot pass a url helper to expire_action. This is unintuitive and not needed, because `ActionCachePath` passes the options to `url_for`, that takes a string.<br/><br/>Further there are circumstances where this a serious blocker:<br/><br/>Mountable apps.<br/><br/>One cannot pass an url from a mounted app to `expire_action` like this:<br/><br/>`expire_action(engine_name.named_path)`<br/><br/>So submitted a patch that fixes this.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d89be962aea6ca120236b264edcf2ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3875', 'title': u'Allow string as url for expire_action'}, {'body': u'The length validation in ActiveModel offers a `:tokenizer` option, but when none is given it defaults to using `//` to split the string by character. This adds up to a serious performance hit when validating long strings. AFAICT it\'s faster, easier, and works just as well to use `String#length` unless a tokenizer is provided.<br/><br/>A simple wall-time benchmark:<br/><br/>```ruby<br/>class Foo<br/>  include ActiveModel::Validations<br/>  attr_accessor :bar<br/>  validates_length_of :bar, :maximum => 1<br/>end<br/><br/>LONG_STRING = "a" * 100000<br/><br/>100.times do<br/>  f = Foo.new<br/>  f.bar = LONG_STRING<br/>  f.valid?<br/>end<br/>```<br/><br/>Before:<br/><br/>```<br/>real  0m6.196s<br/>user  0m6.113s<br/>sys   0m0.077s<br/>```<br/><br/>After:<br/><br/>```<br/>real  0m0.720s<br/>user  0m0.650s<br/>sys   0m0.063s<br/>```<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/378a0850ffa708413ef732d43c09d39b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3873', 'title': u"Don't tokenize string when counting characters"}, {'body': u"Fixes doc for `ActiveModel::Name#i18n_key`, to make it (slightly) easier to figure out how to store i18n'ed model names.<br/><br/>Tests added too, so as to make this pull request much more impressive than it really is ;-)<br/><br/>Thanks", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3872', 'title': u'ActiveModel::Name#i18n_key: Fix doc and add tests'}, {'body': u'This patch basically amounts to a merge of Valium functionality into Rails core. Implements select_column/select_columnsfunctionality as exists in https://github.com/ernie/valium.<br/><br/>Superset of the recent pluck functionality, with the following enhancements:<br/><br/>* Only runs the DB query if required. If the records have already been loaded, simply maps through them and reads the attributes<br/>* Supports multiple attributes:<br/><br/>```ruby<br/>User.where(:active => true).select_columns(:name, :email).each do |name, email|<br/>  puts "#{name}\'s e-mail address is #{email}"<br/>end<br/>````<br/>* deserializes serialized attributes<br/><br/>Added a few new tests, corrected test names. All tests pass.<br/><br/>[Updated: this part is no longer true since the method names were changed - All Valium specs pass without loading the Valium gem when this code is active, so this should be backwards-compatible for those people who are already using Valium.]<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3871', 'title': u'Add value_of/values_of to AR::Base/AR::Relation'}, {'body': u'<br/>- When fetching ids for a collection, bypass preloading to avoid the unnecessary performance overhead.<br/>- As a side effect, also allow for bypassing preloading in other cases where the preloading may also not be desired (e.g., some_big_association.select(:email_address) ) by invoking to_array with with_preload=false.<br/><br/>Loosely related to #2020 and #3868.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc0b4d3b975da949b3608cc12da881d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3870', 'title': u'bypass preloading for ids_reader'}, {'body': u"Fixes various github issues around has-many-through associations with conditions giving incorrect results when fetching _ids.  (#3836, #2698, #2454, #1005)<br/><br/>- Added tests<br/>- Backported ids_reader approach from 3.1/master.<br/>- Let ids_reader bypass preload logic to work around 3.0 preloader issue with partially-loaded records (and preloading in an _ids fetch doesn't likely make performance sense anyway)<br/>- Added except(:select) to exclude extraneous default select fields from through association scope<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc0b4d3b975da949b3608cc12da881d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3868', 'title': u'Has many through ids conditions'}, {'body': u"At New Relic, we have hundreds of thousands of tables, and our migrations took 30 minutes without a similar patch. This cuts it down to a more reasonable amount of time. The more tables you have, the more efficiency gain you derive from the patch.<br/><br/>The rescue false part is ugly, but necessary as far as I can tell. I don't know of a cross-database statement you can make that will work without trapping and relying on errors.<br/><br/>Tested on MySQL and SQLite, but I believe this should work across any database.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4f2aaf70e80b1df127ceeb88bb71905?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3867', 'title': u'Increase performance for table_exists?'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5cba606090e5f29f910274796748f20a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3866', 'title': u'Remove .rxml, .rjs and .rhtml from source annotation regexp.'}, {'body': u"I've added test to reproduce issue #2410 and fixed it.<br/><br/>/cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3863', 'title': u'use classify in ParamsWrapper to derive model name from controller name'}, {'body': u"Our application is built up of multiple engines and on the whole works very well.  I'll give an example of a problem we're having though.  We have a gem (Engine) that has this in it:<br/><br/>calendar_gem/config/routes.rb:<br/>Rails.application.routes.draw do<br/>  get '/calendar' => 'our_framework/calendar#index', :as => :our_framework_calendar<br/>end<br/><br/>We then use this named route within the gem (and other gems, and the application itself). We use Rails.application because we don't know the specific application class the gem will be used in. This works fine and if we want to override the controller/action in our applications (to have some custom calendar for them), it's as simple as:<br/><br/>app/config/routes.rb:<br/>OurApp::Application.routes.draw do<br/>  get '/calendar' => 'calendar#index', :as => :our_framework_calendar<br/>end<br/><br/>This works for us because application routes are loaded before gem routes, therefore the routing shortcuts at the first match when the user visits /calendar and it never gets to the gem's route.<br/><br/>The problem comes when we want to change not the dispatch point, but the actual URL generated for that named path (our customer, a large client, has a very strict requirements on what they want the URLs to be and we don't want to change it in the gem as it's used for all customers).  If we do this in our application:<br/><br/>app/config/routes.rb:<br/>OurApp::Application.routes.draw do<br/>  get '/agenda' => 'our_framework/calendar#index', :as => :our_framework_calendar<br/>end<br/><br/>The application recognises /agenda as the correct URL, but when we call our_framework_calendar_path (as we use this in lots of places, including shared code) it uses the gem's choice of URL.<br/><br/>It seems illogical that url matching uses first match, but named_paths uses last match.  This pull request reverses it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5cb7a05b6de4a6655319db9333be429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3861', 'title': u"Named Routes shouldn't override existing ones (currently route recognition goes with the earliest match, named routes use the latest match)"}, {'body': u'Add tests for require and load.  Already merged to master (see #3845) and 3-0-stable (#3846).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e46f1a286953aa72f5b80c9ca875912b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3860', 'title': u'Test return value from require on 3-1-stable'}, {'body': u'Nested I18n namespace lookup under activerecord.models is deprecated now (c19bd4f).<br/>But when a model uses accepts_nested_attributes_for, its Errors object can have<br/>an attribute name with "addresses.street" style. In this case, the dots should be<br/>substituted with slashes so that we can provide the translation under the<br/>"activemodel.attributes.person.addresses/street" key.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3859', 'title': u'Fix human_attribute_name to handle names with dots'}, {'body': u'I also mentoined the protocol relative scheme in the internal comment<br/>Hat tip to @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/171de85d4d79cb7afe725174fb099137?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3858', 'title': u'redirect_to url with network path reference: Do not escape forward slashes within a curly regexp'}, {'body': u'Rails doesn\'t respect network path references that are defined in RFC3986 Section 4.2.<br/>If we want to `redirect_to "//asset.host.com/resources/12345"` Rails redirects to `http://application.host.com//asset.host.com/resources/12345`.<br/><br/>For more information see Issue #3856', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/171de85d4d79cb7afe725174fb099137?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3857', 'title': u'Fix for redirect_to to respect urls with a network path reference like "//asset.host.com/resources/1235"'}, {'body': u'The main reason for this change is to fix a bug where<br/>`validates_associated` would prevent `accepts_nested_attributes_for`<br/>with `allow_destroy: true` from destroying invalid associated records.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56c0f984e7a1cccbd5ea165ef310ba4f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3854', 'title': u'Do not validate associated records marked for destruction'}, {'body': u'discussion is here: https://github.com/plataformatec/simple_form/commit/3af639660d59832007181ca1cff3f0c4378cc9ce', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3853', 'title': u'form_for with :as option uses "action_as" as css class and id'}, {'body': u'Hi, this is my solution for issue #3849.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cb8e3a1650513848561ca38f84399fa1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3852', 'title': u'3849 test fails with parital string'}, {'body': u'With oracle-enhanced this test started to fail (I think it was after [this commit](https://github.com/rails/rails/commit/7af719e81c46d06f50cd9b3caff38b945c5f2d84#L2R738)):<br/><br/>```<br/>  1) Error:<br/>test_validate_straight_inheritance_uniqueness(UniquenessValidationTest):<br/>OCIError: ORA-02289: sequence does not exist<br/>    /Users/beigaedg/.rvm/gems/ruby-1.9.2-p290@rails/gems/ruby-oci8-2.0.6/lib/oci8/oci8.rb:288:in `exec\'<br/>    /Users/beigaedg/.rvm/gems/ruby-1.9.2-p290@rails/gems/ruby-oci8-2.0.6/lib/oci8/oci8.rb:116:in `exec\'<br/>    /Users/beigaedg/code/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_oci_connection.rb:469:in `exec\'<br/>    /Users/beigaedg/code/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_oci_connection.rb:172:in `select\'<br/>    /Users/beigaedg/code/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_connection.rb:83:in `select_one\'<br/>    /Users/beigaedg/code/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_connection.rb:89:in `select_value\'<br/>    /Users/beigaedg/code/oracle-enhanced/lib/active_record/connection_adapters/oracle_enhanced_adapter.rb:761:in `next_sequence_value\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/relation.rb:47:in `insert\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/persistence.rb:316:in `create\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/timestamp.rb:57:in `create\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/callbacks.rb:268:in `block in create\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/callbacks.rb:393:in `_run_create_callbacks\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/callbacks.rb:268:in `create\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/persistence.rb:297:in `create_or_update\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/callbacks.rb:264:in `block in create_or_update\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/callbacks.rb:393:in `_run_save_callbacks\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/callbacks.rb:264:in `create_or_update\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/persistence.rb:37:in `save\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/validations.rb:50:in `save\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/attribute_methods/dirty.rb:22:in `save\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/transactions.rb:241:in `block (2 levels) in save\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/transactions.rb:295:in `block in with_transaction_returning_status\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:190:in `transaction\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/transactions.rb:208:in `transaction\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/transactions.rb:293:in `with_transaction_returning_status\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/transactions.rb:241:in `block in save\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/transactions.rb:252:in `rollback_active_record_state!\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/transactions.rb:240:in `save\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/base.rb:533:in `create\'<br/>    /Users/beigaedg/code/rails/activerecord/test/cases/validations/uniqueness_validation_test.rb:269:in `test_validate_straight_inheritance_uniqueness\'<br/>    /Users/beigaedg/.rvm/gems/ruby-1.9.2-p290@rails/gems/mocha-0.9.12/lib/mocha/integration/mini_test/version_142_to_172.rb:27:in `run\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:35:in `block in run\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/callbacks.rb:415:in `_run_setup_callbacks\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:34:in `run\'<br/>```<br/><br/>I also added a new test case which failed also on PostgreSQL.<br/><br/>PostgreSQL:<br/><br/>```<br/>  1) Error:<br/>test_sequence_name_with_abstract_class(BasicsTest):<br/>NoMethodError: undefined method `split\' for nil:NilClass<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:897:in `default_sequence_name\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/base.rb:736:in `reset_sequence_name\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/base.rb:725:in `sequence_name\'<br/>    /Users/beigaedg/code/rails/activerecord/lib/active_record/base.rb:727:in `sequence_name\'<br/>    ./test/cases/base_test.rb:1609:in `test_sequence_name_with_abstract_class\'<br/>    /Users/beigaedg/.rvm/gems/ruby-1.9.2-p290@rails/gems/mocha-0.9.12/lib/mocha/integration/mini_test/version_142_to_172.rb:27:in `run\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:35:in `block in run\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/callbacks.rb:415:in `_run_setup_callbacks\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks\'<br/>    /Users/beigaedg/code/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:34:in `run\'<br/>```<br/><br/>Oracle:<br/><br/>```<br/>  1) Failure:<br/>test_sequence_name_with_abstract_class(BasicsTest) [./test/cases/base_test.rb:1611]:<br/><"projects_seq"> expected but was<br/><"_seq">.<br/>```<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63bae10ff70c16aeeec4adb8f4c72f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3851', 'title': u'Fix sequence name with abstract classes.'}, {'body': u'Small conditional cleanup in readonly attributes logic.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3850', 'title': u'Refactor readonly attributes conditional'}, {'body': u'Seems some of the bugs fixed with newer version.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3848', 'title': u'SQlite3 Bump '}, {'body': u'These fixes have been applied to master and 3-1-stable.  It would be nice to backport them for the next 3.0.x release as well.<br/><br/>See #3845 for more details.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e46f1a286953aa72f5b80c9ca875912b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3846', 'title': u'Backport load and require fixes to 3 0'}, {'body': u"Following 4da45060a2e839fec4a7e9238cbc9d8de62b1b69 on 20110214, RubyInline no longer worked with config.cache_classes = false.  This was due to a change in the return value from require:<br/><br/>* Prior to the change, require returned an array of new constants added by the required file.<br/>    * While this was not consistent with Kernel#require, the result was always truthy.<br/>* Following the change, require returned either an array of new constants added by the required file or nil if requiring the file did not cause any new constants to be defined.<br/>    * This change was incompatible with RubyInline since it first requires a Ruby source file (which defines the constants), then requires a shared object file (which includes implementation but doesn't necessarily define any additional constants).<br/><br/>Ryan Davis submitted a fix for this bug (merged on 20110823).<br/><br/>* a10606c490471d8e1483acb3b31d7f2d51e9ebbe (master)<br/>* b359628f18cd0830654e239ee56845c29be13989 (3-1-stable)<br/>* 7c5cd40710228a027c26335a711b728e9322caac (3-1-stable)<br/><br/>This patch adds tests to ensure Loadable#require remains consistent with Kernel#require sementics, and protect against future regressions in require's return value behavior.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e46f1a286953aa72f5b80c9ca875912b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3845', 'title': u'Add tests for the return value of require'}, {'body': u'"Normalize" how `set_fixture_class` stores the keys: now for a namespaced fixture the fixture name should be passed and stored in the format `"admin/users"` (or `:"admin/users"`) instead of `:admin_users` or `"admin_users"`.  This is consistent with how fixture names are passed to `fixtures` method.  Previously namespaced fixtures were treated separately in some cases which made `set_fixture_class` useless for namespaced fixtures.  Overall, there was a lack of consistency in what was used as a fixture *name* and identifier: `"foo/bar"` or `:foo_bar`.  This inconsistency is *not* completely resolved by this patch.<br/><br/>This patch fixes Issue #2572: `set_fixture_class` with namespaced fixtures, like in<br/><br/>```ruby<br/>set_fixture_class :"admin/known_ips" => Admin::KnownIP, :admin_known_ips => Admin::KnownIP<br/>```<br/><br/>had no effect.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3844', 'title': u'Fix Issue #2572 with set_fixture_class by normalizing key format'}, {'body': u'This is a bit hard to benchmark and pinpoint as a whole but I did isolation benchmarks. This commit:<br/><br/>* Avoids constant lookups<br/>* Caches the result of Thread.current in local variables<br/>* Avoid &block<br/>* Avoid subscribed blocks (and consequently avoid expiring notifications internal caches). In fact, the API was removed to discourage the behavior.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e837f6b7fd146ab16ed3d663476c063e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3843', 'title': u'Faster explain'}, {'body': u'1st commit : Adding text in test.rb.tt as we have added the test. Not sure if this is required in test.rb file but test is here https://github.com/rails/rails/blob/master/railties/test/generators/app_generator_test.rb#L341<br/><br/>2nd commit: Just simplified the test', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3842', 'title': u'App Generator test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3840', 'title': u'Fixes: #208. Check if subversion/git is installed before installing a plugin'}, {'body': u'This commit reverts html_escape so we do a single gsub again, **but it also adds the "n" flag** (no<br/>language, i.e. not multi-byte) so that we still protect against XSS via invalid utf8. The output of html_escape should be identical to the bfc4325 version, but it should just run more quickly like it used to.<br/><br/>I moved the existing test into a slightly better spot, and added a couple others. I\'m definitely open to better/additional ways of testing this if needed. I\'ve tested it under ruby 1.8.7 and 1.9.2.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bc66e548a86d9635d5d1542080db5665?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3835', 'title': u'Restore performance of ERB::Util.html_escape'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3834', 'title': u'Refactoring of ids_reader using pluck'}, {'body': u'Stop using `show index from`, and we should use `show create table`.<br/>If necessary, please merge.<br/><br/>Please see also #3678', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3833', 'title': u'Use show create table (fix 3678: third time).'}, {'body': u'My Small contribution to explain patch', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3832', 'title': u'indentation fix warning'}, {'body': u'Changed "these" to "this" in activerecord/base.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d8b003513374091d6b8a0327a0ab47ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3831', 'title': u'Small code comment change.'}, {'body': u'Properly check the `class_names` hash parameter of `create_fixtures` method to not overwrite passed fixture classes.<br/><br/>This is an update to my previous pull request #3821, it does not seem to fail, but i do not think it is ready.  Just for review and comments.  Before going to bed.  It is about issue #2572.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3827', 'title': u'Fix set_fixture_class by fixing create_fixtures'}, {'body': u'... and time to the form and form_tag helpers.<br/><br/>The current form_helper and form_tag_helper in actionpack were not supporting the HTML5 input types for dates and time. <br/><br/>HTML5 spec reference can be found here: http://dev.w3.org/html5/spec/Overview.html#states-of-the-type-attribute', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d644618e5b64503c1f5e5465cf9f85c1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3826', 'title': u'adding html5 input types for datetime, datetime-local, date, month, week...'}, {'body': u'Properly check the `class_names` hash parameter of `create_fixtures`<br/>method to not overwrite passed fixture classes.<br/><br/>I might have done something stupid: i amended my commit and force pushed it.  This is an update to my previous pull request #3821, it does not seem to fail, but i do not think it is ready.  Just for review and comments.  Before going to bed.  It is about issue #2572.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3825', 'title': u'Fix set_fixture_class by fixing create_fixtures'}, {'body': u'[activemodel/lib/active_model/validations/length.rb](https://github.com/rails/rails/blob/a604983f8b8b873558fe7838d0bfcf0e0594daa6/activemodel/lib/active_model/validations/length.rb#L13) supports both <tt>:in</tt> and <tt>:within</tt>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3823', 'title': u'Fix argument error message for length validation'}, {'body': u'Replaced `=` with `||=` operator in `create_fixtures` method, otherwise the values of the parameter `class_names` seem to be overwritten and ignored.  This solves for me the issue #2572 i had with<br/><br/>```ruby<br/>set_fixture_class \'admin/known_ips\' => Admin::KnownIP<br/>```<br/><br/>I have not tested this patch, please review.  It looks to me like it was a typo.<br/><br/>I am not closing Issue #2572 yet because i am not sure this "typo" explains all the strange behavior.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63c72161fba6e27cb05c078651c5e969?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3821', 'title': u'Replace "=" with "||=" in create_fixtures method'}, {'body': u'This got missed in the lighthouse -> github transition..<br/><br/>Eager loading a nested has_many association with conditions or order on the nested table loads only the first record.<br/><br/>    class AuthorAddress < ActiveRecord::Base<br/>      has_one :author<br/>    end<br/><br/>    class Author < ActiveRecord::Base<br/>      has_many :posts<br/>      belongs_to :author_address<br/>    end<br/><br/>    class Post < ActiveRecord::Base<br/>      belongs_to :author<br/>    end<br/><br/>    author_address = AuthorAddress.find(1, :include => {:author => :posts}, :order => "authors.id")<br/><br/>Using an order or conditions clause on a different table than the base one uses legacy SQL (LEFT OUTER JOIN) to load, but it incorrectly (eagerly) loads posts. Only one, of the many posts, is eagerly loaded and unfortunately the association thinks it is fully loaded.<br/><br/>Therefore doing something like this:<br/><br/>    author_address.author.posts.length<br/><br/>returns a different answer than this:<br/><br/>    author_address.author.posts.count<br/><br/>(which of course hits the database again to get the correct answer)<br/><br/>This was apparently fixed in 2.3 but never in 3.x.  Failing tests and patch included.<br/><br/>Also too: gratutious mention of #726 to link the issues on github.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b8aca816cb8646a855175f64bdfa2838?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3820', 'title': u'reintroduce patch from #726 to handle nested eager loading via associations'}, {'body': u'There is `Error during failsafe response: incompatible character encodings: ASCII-8BIT and UTF-8` when:<br/><br/>- template contains utf-8 symbols near place where exception raised<br/>- request with post method with utf-8 parameters<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3816', 'title': u'fix exception page when template contains utf-8 and parameters contain utf-8'}, {'body': u'Updating rack-test to include this bugfix brynary/rack-test@edd5bcb98a57686f015c26fc6c0c3dbdc3319d8. Actionpack is requiring an older version of rack-test with this bug, preventing my tests from passing in my rails project.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/25007718d110c6af2a26510914c5cf24?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3815', 'title': u'Update rack-test to 0.6.1'}, {'body': u'Updating rack-test to include this bugfix brynary/rack-test@edd5bcb98a57686f015c26fc6c0c3dbdc3319d8. Actionpack is requiring an older version of rack-test with this bug, preventing my tests from passing in my rails project.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/25007718d110c6af2a26510914c5cf24?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3814', 'title': u'Update rack-test to 0.6.1'}, {'body': u"Operations like create for a model which table has no primary keys has horrible performance. ActiveRecord is doing queries like `SHOW INDEX FROM 'table_name' WHERE Key_name = 'PRIMARY'` 20-30 times per action. It will really affect performance with lots of requests per minute.<br/><br/>Now here's a quick fix to the problem, that sets the @primary_key variable only once, even when the database returns no primary keys.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/376e7836b646fe2c6b0e465a9e87330f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3812', 'title': u'Performance issues using tables with no primary key'}, {'body': u'Currently HashWithIndifferentAccess has some odd behaviour that differs from Hash.<br/><br/>**The problem:**<br/>Accessing a HashWithIndifferentAccess does not return the the same object that is stored in the hash (i.e. equal?) causing unexpected results:<br/><br/>```ruby<br/>hash = HashWithIndifferentAccess.new {|h, k| h[k] = []}<br/>hash[:a] << 1  # => [1]<br/>hash[:a]       # => [], expected [1]<br/>```<br/><br/>**The cause:**<br/>When a block is provided to generate default values the generated values are duped if they are arrays. The duped value is stored in the hash but the original value is returned when the hash is accessed.<br/><br/>**My fix:**<br/>The duping is there for allowing frozen arrays containing hashes to be modified. My fix restricts the duping to this case. Note that if default function generates a frozen array an error will be raised on assignment before and after my patch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fb57bb397892c179cd40ab5d276cb13d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3811', 'title': u'Fix lookup on HashWithIndifferentAccess for array values.'}, {'body': u'Fix<br/><br/>```<br/>actionpack/test/controller/url_for_integration_test.rb:7: warning: method redefined; discarding old url_for<br/>actionpack/test/controller/routing_test.rb:15: warning: previous definition of url_for was here<br/>```<br/><br/>and<br/><br/>```<br/>actionpack/test/template/record_tag_helper_test.rb:9: warning: method redefined; discarding old initialize<br/>actionpack/test/lib/controller/fake_models.rb:59: warning: previous definition of initialize was here<br/>```<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3810', 'title': u'fix method redefined warnings in tests'}, {'body': u'There was `warning: instance variable @virtual_path not initialized` in tests when using `render_erb` helper from `RenderERBUtils` module.<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3809', 'title': u'fix warning in tests when using render_erb helper'}, {'body': u'composed_of wasnt working for delegated attributes and methods again.<br/><br/>this is my first contribution, can any1 check if its valid?<br/><br/>thanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/88c091b3d0f88ba1c626fa45df590e00?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3807', 'title': u'fixes composed_of for delegated attributes and methods'}, {'body': u'Refactor helper tests to use ActionView::Base#render instead of erb emulation.<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3806', 'title': u'Test helpers in erb using erb'}, {'body': u'If you have an ActiveModel class that has a <br/>method email_address_confirmation. <br/>This method is being overwritten by the <br/>method defined in the Confirmation validator.<br/><br/>Fixes #1152<br/><br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3805', 'title': u'Active model patch 3 0 stable'}, {'body': u'shows current rails environment log file using tail based on Rails.env var<br/><br/>usage:<br/><br/>rake tail        # tail -f -n100 log/development.log<br/>rake tail[50]  # tail -f -n50 log/development.log', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a54102d3af783bab96b14b59f25f8b0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3802', 'title': u'adding rake tail task'}, {'body': u'Found myself typing tail -f -n100 log/development.log and thought it could be a useful rake task for any rails project.  <br/><br/>Depends on Rails.root & Rails.env to locate and tail the rails env log file.<br/><br/>Example:<br/><br/>rake log:tail<br/>rake log:tail[20] => override default lines displayed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a54102d3af783bab96b14b59f25f8b0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3801', 'title': u'added rake task log:tail'}, {'body': u'splited a long line to shorter ones for being able to see a method call at the end of it. It is use to be such a long line of text that you needed to scroll for a while to see that it is the +split+ method call at the very end of it', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea659696522572e50cdf1ca972a7331b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3797', 'title': u'splited a long line to shorter ones'}, {'body': u'Addresses issue #2639 (https://github.com/rails/rails/issues/2639) -- there are many assets related log messages and no config variable to hide them. Example log lines:<br/><br/>> Started GET "/assets/logo.png" for 127.0.0.1 at 2011-11-24 01:22:02 -0800<br/>> Served asset /logo.png - 200 OK (1ms)<br/><br/>With these commits, both asset related logger messages (Sprockets and Rack) can be hidden with a config variable. By default the messages still appear.<br/><br/>To hide the messages, add this line to e.g. *application.rb*:<br/><br/>`config.assets.logger = false`<br/><br/>Note: This is a replacement for https://github.com/rails/rails/pull/3741 (closed), squashed into one commit and no longer hiding the messages by default.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/408016ab4c062f421c418946185aa232?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3795', 'title': u'Fix Issue #2639: "Served asset log messages are pretty annoying!" by adding config variable'}, {'body': u'splited a long line to shorter ones for being able to see a method call at the end of it. It is use to be such a long line of text that you needed to scroll for a while to see that it is the +split+ method call at the very end of it', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea659696522572e50cdf1ca972a7331b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3794', 'title': u'splited a long line to shorter ones'}, {'body': u'This fixes a bug if ever the `asset_host` is callable with optional parameters and two required parameters. Also the error message now suggests an extra solution to make the request parameter optional.<br/><br/>Thanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3793', 'title': u'Handle correctly optional parameters for callable asset_host.'}, {'body': u'I have a few places where I really only care to assert that the URL matches a regular expression.<br/><br/>This patch allows it while keeping the semantics the same when a `String` or `Hash` is passed to `assert_redirect_to`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3da9aebb918d0d1b12d66fcca93c289d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3792', 'title': u'Allows assert_redirected_to to accept a regular expression'}, {'body': u"Backport Bug Fix: This fixes an issue with attaching scopes to the has-many association proxy. It's already fixed in 3.1 thanks to a substantial refactoring.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3f7c52a636e349bd0124f34489c38732?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3791', 'title': u'Backport Bug Fix'}, {'body': u'Just a small typo', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/25e782eb7e799e78d781b0026fc6a4d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3790', 'title': u'Fix typo in AS::TaggedLogging'}, {'body': u'Fixes https://github.com/rails/rails/issues/3787.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4ee0c35f24180486d6a8b43af8264d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3788', 'title': u'Fix 3787'}, {'body': u'update guides with namespace option for `form_for`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3786', 'title': u'update guides'}, {'body': u'Get `backtrace_cleaner` from env instead of `defined?(Rails) && Rails.respond_to?(:backtrace_cleaner) ...`<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3785', 'title': u'Put backtrace_cleaner to env'}, {'body': u' splited a long line to shorter ones for being able to see a method call at the end of it. It is use to be such a long line of text that you needed to scroll for a  while to see that it is the +split+ method call at the very end of it', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea659696522572e50cdf1ca972a7331b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3784', 'title': u'splited a long line to shorter ones'}, {'body': u'fixed a typo in a message "Rails build finished successfully"', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea659696522572e50cdf1ca972a7331b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3783', 'title': u'fixed a typo in a travis message'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3781', 'title': u'Reverted commits of any? with empty?'}, {'body': u'* The asset id is no longer generated.<br/>* A `/` is required if you want to skip the assets directory (which is important as `public/assets` may be git-ignored).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/74712fd9c19f36134151f23c4505435c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3780', 'title': u'Fix favicon_link_tag help text'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3779', 'title': u'Used any? instead of length call'}, {'body': u"Added the `secret_token.rb` and `*.yml` files because they have sensitive<br/>information.<br/><br/>Added `.svn/` because you don't want to add other version control<br/>directories to the repository.<br/><br/>Added `test/tmp/` for the same reason tmp/ is ignored.<br/><br/>Added `coverage/`, `.yardoc/`, and `rdoc/` because they generate a lot of<br/>messy HTML files that are supposed to be generated on the fly", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1e3a7a63326260b58f82d12f9003e64?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3777', 'title': u"Adding some other ignores that aren't as obvious, but best practice"}, {'body': u'You can provide a namespace for your form to ensure uniqueness of id attributes on form elements.<br/>The namespace attribute will be prefixed with underscore on the generate HTML id<br/><br/>https://github.com/plataformatec/simple_form/issues/365<br/><br/>/cc @josevalim ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3776', 'title': u'add namespace options to form_for'}, {'body': u'Steps to reproduce:<br/>1. Have routes with lambda-base :constraints option.<br/>2. Have requests with subdomain set.<br/>Defect: request parameters parsed are not available in the request object passed to :constraints lambda.<br/><br/>Tests included, not sure they are perfect.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2e79ba6f473ec42412e6fa52c5e3c4ee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3775', 'title': u'Please pull my changes - they fix a rare problem with tests framework'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3773', 'title': u'Use any instead of length'}, {'body': u'The following template code:<br/><br/>```<br/><%= label \'post\', \'message\' do %><br/>  Message<br/>  <%= text_field \'post\', \'message\' %><br/><% end %><br/>```<br/><br/>Generates:<br/><br/>```<br/>  Message<br/>  <input id="post_message" name="post[message]" size="30" type="text" /><br/><label for="post_message"><br/>  Message<br/>  <input id="post_message" name="post[message]" size="30" type="text" /><br/></label><br/>```<br/><br/>It happens because of `InstanceTag#to_label_tag` invokes `capture` helper (through `label_tag` and `content_tag`) and `capture` helper can\'t capture output of block because block is in (ActionView::Base context) and `capture` helper executes in (InstanceTag context).<br/><br/>I\'ve put call `label_tag` from `@template_object` when block is passed. Also `Helpers::CaptureHelper` and `Context` modules aren\'t longer needed in `InstanceTag`.<br/><br/>It could also could be reason for #3385<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3772', 'title': u'fix label with block in erb'}, {'body': u"When I run `rake_test.rb`, I had some warnings. The reproduce step is<br/><br/>```<br/>$ cd railties<br/>$ bundle exec ruby -Itest:lib:../activesupport/lib:../actionpack/lib test/application/rake_test.rb --name=test_initializers_are_executed_in_rake_tasks<br/>...<br/>WARNING: Global access to Rake DSL methods is deprecated.  Please include<br/>    ...  Rake::DSL into classes and modules which use the Rake DSL methods.<br/>WARNING: DSL method Class#task called at /home/kennyj/rails/railties/tmp/app/config/application.rb:58:in `block in <class:Application>'<br/>...<br/>```<br/><br/>We call the global scope task method (deprecated method) in rake_test.rb<br/>Briefly we must call `extend Rake::DSL` only,<br/>but I think that the cause of problem is located another.<br/><br/>In load_tasks method, we call `extend Rake::DSL`. But It seems that we have another context when executing rake_tasks.<br/><br/>```<br/>182     def load_tasks(app=self)<br/>183       extend Rake::DSL if defined? Rake::DSL<br/>184       self.class.rake_tasks.each { |block| block.call(app) }<br/>```<br/><br/>This is related to #1174.<br/><br/>If this is a specification, I'll fix a tastcase.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3771', 'title': u'Call a block passed rake_tasks method in the self context'}, {'body': u'assert_required_keys will raise an ArgumentError if the calling hash does not include every key passed to the method.<br/><br/>This hopefully will allow cleaner usage of hashes as a stand-in for named parameters.<br/><br/>```ruby<br/>def deposit(options={})<br/>  options.assert_required_keys :account_number, :amount<br/>  ...<br/>end<br/><br/>deposit :amount => 100 <br/># => ArgumentError: The following keys are required but were not set: :account_number<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c64b3d19b97bf48ab60ee203c96c405a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3770', 'title': u'Added assert_required_keys to Hash'}, {'body': u'When I generated new rails app to test relative_url_root issue, I met this issue.<br/><br/>```<br/>$ rails new demo <br/>$ demo<br/>$ (edit Gemfile)<br/>uncommented unicorn (I want to use unicorn\'s --path option.)<br/><br/>$ bundle install<br/><br/>$ (edit config.ru)<br/><br/>require ::File.expand_path(\'../config/environment\',  __FILE__)<br/>map ActionController::Base.config.relative_url_root || "/" do<br/>  run Demo::Application<br/>end<br/><br/>$ unicorn_rails -E development --path /demo -p 3000<br/>$ (browse http://localhost:3000/demo/)<br/><br/>=> I couldn\'t see the rails.png !<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3769', 'title': u'avoid url started with "/" for the rails.png in public/index.html'}, {'body': u'This is a test and fix for rails/rails/#3450<br/><br/>Asssigning a parent id to a belongs_to association actually updates the object that is validated when the association has :validates => true', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1172ffd2b6628b416914fa518dae8f19?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3768', 'title': u'Test and fix for Issue 3450'}, {'body': u'This is just a suggestion, but since the change is quite simple, I\'ve created a pull request. The idea is to allow passing multiple arguments to Object#in? method, like:<br/><br/>```ruby<br/>animal = "cat"<br/>animal.in?("dog", "cat", "rat")<br/>```<br/>currently, you\'d have to do something like this:<br/><br/>```ruby<br/>animal = "cat"<br/>animal.in?(["bat", "cat", "rat"])<br/>```<br/>which is not very nice. Implementation also preserves current behaviour. <br/>Do you think it would be useful?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bd9b6d9f929adbf8918fe37fb279c43e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3767', 'title': u'Object#in? also accepts multiple parameters'}, {'body': u'Also fixed bug with classify - if the ORM name ends with "s" classify cuts it off. Replaced with camelize.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/48acd2a1c5c447f7e7b59310ee1fecff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3765', 'title': u'added tests to #3763'}, {'body': u'Reference commits : <br/>a8f2860d0e7db86c61bb70935006100b04667ab1<br/>80ac4dc6d0632937ccf61b38bc15fc2f6e27b18b', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3764', 'title': u'Tests added for monday and sunday '}, {'body': u'The patch allows using orm_instance method, without invoking orm_class before. It solves #3653 I guess.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/48acd2a1c5c447f7e7b59310ee1fecff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3763', 'title': u'allow using orm_instance without invoking orm_class in generators'}, {'body': u"Added a pluralization rule for 'criterion' <=> 'criteria'<br/><br/>I occasionally use this term in real world business applications (at least, far more often than 'octopus' or 'zombie'), so I hope this rule to be supported by default.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3762', 'title': u"'criterion'.pluralize => 'criteria'"}, {'body': u'closes #1510', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/608b32640d0fca097b40bc6a28cadc5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3761', 'title': u'add prefix and suffix to renamed tables, closes #1510'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3760', 'title': u'Warning removed unused variable'}, {'body': u"This merge:<br/> <br/>  * Adds the ability to generate the guides in such a way that they can be run through `kindlegen`, the Kindle document creation tool<br/>  * Moves the information in index.html.erb into a documents.yaml file, allowing for future alternative formats to generate their own table of contents<br/><br/>See KINDLE.md for more information and remaining work.<br/><br/>This pull request was originally made on 'docrails'. Xavier asked me to put it to the main rails project instead.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c72c888bea79af1f4d39c3eadef77d7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3758', 'title': u'Add KINDLE=1 option to generate guides for the Kindle'}, {'body': u'RE: [#3751](https://github.com/rails/rails/pull/3751)<br/><br/>Pull request [#3752](https://github.com/rails/rails/pull/3752) only added a 2 `\\n`\'s to make the test passing.<br/><br/>This will produce and pass on the following `gem group`:<br/><br/>    group :development, :test do<br/>  <br/>    gem "rspec-rails"<br/>    end<br/><br/>    group :test do<br/>  <br/>    gem "fakeweb"<br/>    end<br/><br/>This pull request reverts changes to `test_gem_group_should_wrap_gems_in_a_group` so it expects the original:<br/><br/>    group :development, :test do<br/>      gem "rspec-rails"<br/>    end<br/><br/>    group :test do<br/>      gem "fakeweb"<br/>    end<br/><br/>It also builds on `test_gem_should_insert_on_separate_lines` to actually insert new content without a trailing newline and insure the gems begin on newlines:<br/><br/>    File.open(\'Gemfile\', \'a\') {|f| f.write(\'# Some content...\') }<br/><br/>    ...<br/><br/>    assert_file \'Gemfile\', /^gem "rspec"$/<br/>    assert_file \'Gemfile\', /^gem "rspec-rails"$/<br/><br/>Let me know if this makes sense. Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d3e55f4860218d6a2fcb33726c29005f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3756', 'title': u'Updating newline fix to maintain existing linebreaks and indentation and...'}, {'body': u'Apologies. Not sure if there is a way to update the previous pull request with new commits so here is a fresh request.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d3e55f4860218d6a2fcb33726c29005f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3754', 'title': u'Gem leading newline'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e837f6b7fd146ab16ed3d663476c063e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3753', 'title': u'Serializers'}, {'body': u'Adding leading newline to gem append_file string', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3752', 'title': u'Added tests for #3751'}, {'body': u'## Issue<br/><br/>The `gem` action appends to the `Gemfile` without inserting a leading newline which can break installers.<br/><br/>## Steps to Reproduce<br/><br/>Create a TestApp:<br/>    <br/>    $ rails new TestApp<br/>    $ cd TestApp/<br/><br/>Edit the `Gemfile` to add `rails_admin` to the bottom with no trailing line break:<br/><br/>    .<br/>    .<br/>    gem \'rails_admin\', :git => \'git://github.com/sferik/rails_admin.git\'<br/><br/>Bundle and run rails_admin installer:<br/><br/>    $ bundle install<br/>    $ rails g rails_admin:install<br/>    <br/>Results in the following edited `Gemfile`:<br/><br/>    .<br/>    .<br/>    gem \'rails_admin\', :git => \'git://github.com/sferik/rails_admin.git\'gem "devise"<br/>    <br/>Which fails on `generate devise:install`:<br/><br/>    generate  devise:install<br/>    /Users/username/.rvm/gems/ruby-1.9.3-head/gems/bundler-1.0.21/lib/bundler/dsl.rb:7:in `instance_eval\': /Users/username/TestApp/Gemfile:38: syntax error, unexpected tIDENTIFIER, expecting $end (SyntaxError)<br/>    ....com/sferik/rails_admin.git\'gem "devise"<br/><br/>## Solution<br/>    <br/>This appears to be a problem with the [`gem` generator action](http://github.com/rails/rails/blob/master/railties/lib/rails/generators/actions.rb#L70-74 "gem"), where<br/>`append_file` is called with a trailing newline but not a leading one.<br/><br/>    in_root do<br/>      str = "gem #{parts.join(", ")}\\n" # Problem here<br/>      str = "  " + str if @in_group<br/>      append_file "Gemfile", str, :verbose => false<br/>    end<br/>    <br/>Without getting tricky, it seems like it might make sense to add a leading newline here:<br/><br/>    in_root do<br/>      str = "\\ngem #{parts.join(", ")}\\n"<br/>      str = "  " + str if @in_group<br/>      append_file "Gemfile", str, :verbose => false<br/>    end<br/>        <br/>Thoughts?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d3e55f4860218d6a2fcb33726c29005f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3751', 'title': u'Adding leading newline to gem append_file string'}, {'body': u"When using the *_attributes= method generated by `nested_attributes_for1 to create new models, the newly created models always have the base class. The `type` attribute is ignored.<br/><br/>This patch includes a failing test and my first attempt at a fix. I know the fix isn't too pretty, and I'm hoping to get guidance on building a better patch.<br/><br/>Thank you!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d7b97642d7aeaf1011ec19e5779144e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3750', 'title': u'Fixes issue #3749: nested_attributes_for does not work with STI'}, {'body': u'If a has_many relationship is defined with a custom primary key, a new, unsaved record with that key set will not load the association.  This is because AR checks new_record? and assumes (correctly in normal situations) that an unsaved record couldn\'t possibly have any related records, so it skips the round trip to the database.  <br/><br/>I believe this is an error, and the association should be loaded from the database.<br/><br/>```ruby<br/>class Author < ActiveRecord::Base <br/>  has_many :essays, :primary_key => :name, :as => :writer<br/>end<br/><br/>Author.new(:name => "David").essays # => []<br/>                                    # => Should return [#<Essay ...>]<br/>```<br/><br/>This pull request fixes this issue.  I tested the 4 big connection adapters and added 2 tests.  <br/><br/>I overrode the foreign_key_defined? method in has_many_association to handle this since that seemed to be written almost specifically for this purpose in has_many_through, but if that isn\'t the best way to handle this I\'m open to discussion.  <br/><br/>Thanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df2f06fdc022e91ef9fcf9027fe439d0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3748', 'title': u'New records should load has_many relationships with custom primary keys'}, {'body': u'Allow setting logger for `ParamsParser` and `ShowExceptions` middlewares instead of hardcoded `defined?(Rails.logger) ? Rails.logger : Logger.new($stderr)`<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3747', 'title': u'middlewares should have configurable logger'}, {'body': u"Defines behavior for cases described in #2586. Without the patch the behavior is different on Ruby 1.8 and 1.9:<br/><br/>    ArgumentError: interning empty string # 1.8<br/>    TypeError: can't convert nil into String # 1.9<br/><br/>... which is not really helpful. ActiveModel::Name can be used with anonymous classes only when a name argument is given.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/48acd2a1c5c447f7e7b59310ee1fecff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3746', 'title': u'make ActiveModel::Name fail gracefully with anonymous classes'}, {'body': u'I backported a Ruby 1.9.3 fix in MissingSourceFile from Rails master. <br/>In Ruby 1.9.3 a new error message was added when the LoadFile exception is thrown; this was fixed in Rails Master but not in 2-3-stable, rendering 2-3-stable unusable with Ruby 1.9.3<br/><br/>This is the specific line from master: https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/load_error.rb#L6', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/29f405a24fccc81d7575b67dbcbb1606?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3745', 'title': u'Backporting a Ruby 1.9.3 fix for MissingSourceFile'}, {'body': u"Defines behavior for cases described in #2586. Without the patch the behavior is different on Ruby 1.8 and 1.9:<br/><br/>1.8: ArgumentError: interning empty string<br/>1.9: TypeError: can't convert nil into String<br/><br/>... which is not really helpful. ActiveModel::Name can be used with anonymous classes only when a name argument is given.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/48acd2a1c5c447f7e7b59310ee1fecff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3744', 'title': u'Make ActiveModel::Name fail gracefully with anonymous classes'}, {'body': u'Addresses issue #2639 (https://github.com/rails/rails/issues/2639) -- there are many assets related log messages and no config variable to hide them. Example log lines:<br/><br/>> Started GET "/assets/logo.png" for 127.0.0.1 at 2011-11-24 01:22:02 -0800<br/>> Served asset /logo.png - 200 OK (1ms)<br/><br/>With these commits, by default both "assets" related log messages (sprockets and rack) are not logged.<br/><br/>Users can add a config variable set to true (_config.assets.logger = true_) to their application.rb or environment.rb files to restore the log messages.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/408016ab4c062f421c418946185aa232?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3741', 'title': u'Fix Issue #2639: "Served asset log messages are pretty annoying!" by adding config variable'}, {'body': u'Replace `defined?(Rails.env) && Rails.env.development?` with configuration option.<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3739', 'title': u'configuration option to always write cookie'}, {'body': u"This pull requests contains fixes for the first 2 points of the issue. I'd be glad to fix the other two problems if I receive a blessing from a core team member :).<br/><br/>I didn't want to squash the commits just yet to demonstrate two cases separately.<br/><br/>(See issue #3737 for more details)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56c0f984e7a1cccbd5ea165ef310ba4f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3738', 'title': u'Issues/3737 AS::Cache.expand_cache_key'}, {'body': u'The code removed by this commit is unreachable one.<br/><br/>Please see #3728', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3735', 'title': u'Fix #3728 Remove unreachable code, and add additional testcases.'}, {'body': u'... 4 bytes to allow UTF-8 with 4 bytes wide', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c2e742cb062e2f2455520b8e80f86ac8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3734', 'title': u'Changed JSON 2 bytes clipping to 4 bytes clipping. This way, we can have emojis that were included in Unicode 6.0 '}, {'body': u'When I executed `rake` in actionpack, I saw the following warnings.<br/><br/>...<br/>./actionpack/test/controller/show_exceptions_test.rb:25: warning: ambiguous first argument; put parentheses or even spaces<br/>./actionpack/test/controller/show_exceptions_test.rb:34: warning: ambiguous first argument; put parentheses or even spaces<br/>./actionpack/test/controller/show_exceptions_test.rb:56: warning: ambiguous first argument; put parentheses or even spaces<br/>...<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3733', 'title': u'Warnings removed. (ambiguous first argument)'}, {'body': u'Current ActiveRecord does not work with per class database connections. It worked with 2.x and 3.0 series.<br/><br/>Here is a simple example, running against the ActiveRecord test database: https://gist.github.com/1388725<br/>It throws ActiveRecord::ConnectionNotEstablished in line 16 without this patch.<br/><br/>The patch applies cleanly to 3-1-stable and master. I verified, that all ActiveRecord tests pass on SQLite and PostgreSQL.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/abc11c007a3a284272d261b2dae6376e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3732', 'title': u'Fix associations with per-class/multiple database connections'}, {'body': u'Improved the way code statistic was calculated. Added multi line comments support, fixed regexps that were looking for methods and classes in a code. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea659696522572e50cdf1ca972a7331b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3731', 'title': u'code stats calculation'}, {'body': u'Hi,<br/>I\'ve fixed DateHelper. It was rendering separators with :use_hidden => true.<br/><br/>```ruby<br/><%= f.select_datetime :created_at, :use_hidden => true %><br/>```<br/><br/>Produced:<br/><br/>```html<br/><input id="a_created_at_3i" name="a[created_at(3i)]" type="hidden" value="22"><br/><input id="a_created_at_2i" name="a[created_at(2i)]" type="hidden" value="11"><br/><input id="a_created_at_1i" name="a[created_at(1i)]" type="hidden" value="2011"><br/> \u2014 <input id="a_created_at_4i" name="a[created_at(4i)]" type="hidden" value="22"><br/> : <input id="a_created_at_5i" name="a[created_at(5i)]" type="hidden" value="16"><br/>```<br/><br/>Now separators are not shown if  `@options[:use_hidden] == true`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/947c1b9e7a4665b270107ef09ddfcc54?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3726', 'title': u'fix Helpers::DateHelper with :use_hidden - hide separators'}, {'body': u'If `foo.eql?(bar)` returns `true` then so should `bar.eql?(foo)`.<br/>Moreover, `foo.hash` must then be the same as `bar.hash`.<br/>Otherwise the Hash lookup will fail. `TimeWithZone` wants to act like a `Time`, but currently:<br/><br/>    bar = Time.utc(2000)<br/>    foo = bar.in_time_zone<br/><br/>    foo.eql?(bar) # => true<br/>    bar.eql?(foo) # => false<br/>    foo.hash == bar.hash # => false (only in Ruby 1.9)<br/><br/>This pull request fixes this. Since `TimeWithZone` wants to be freely replaceable with a `Time`:<br/><br/>    bar.eql?(foo) # => now true<br/>    foo.hash == bar.hash # => now true (even in Ruby 1.9)<br/><br/>There is also a problem with DateTime vs TimeWithZone:<br/><br/>    dt = foo.to_datetime<br/>    foo.eql?(dt)  # => true<br/>    dt.eql?(foo)  # => false<br/>    dt.hash == foo # => false.<br/><br/>Since `DateTime` and a `Time` are both builtin classes and that a `Time` is never `eql?` to a `DateTime` or vice-versa (as per the doc and the implementation), the patch also insures that a `TimeWithZone` can no longer be `eql?` to a `DateTime`:<br/><br/>    foo.eql?(dt)  # => now false<br/><br/>Thanks<br/><br/>Extended discussion at https://github.com/rails/rails/issues/905', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3725', 'title': u'Fix inconsistencies with Time{WithZone}#{hash,eql?}'}, {'body': u'I expect that any website I visit will, at worst, print exactly the way it looks on screen.<br/><br/>Rails doesn\'t default to that since<br/>1) `stylesheet_tag`\'s media default is set to "screen", and<br/>2) the generated default layout calls `stylesheet_tag` without a `media` option.<br/><br/>I would favor removing the default media type altogether, but I suspect that for compatibility reasons it will be judged that this can\'t be done.<br/><br/>So my patch changes (2) above by specifying `:media => "all"` in the default generated layout, and improves the documentation.<br/><br/>Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3724', 'title': u'stylesheet_tag default\'s media is "screen"'}, {'body': u"We ran into this issue in production where the following was not working as expected:<br/><br/>t = Time.now.in_time_zone(...)<br/>t.today?<br/><br/>The reason is that the existing implementation of ActiveSupport::TimeWithZone#today? delegates to the redefined Time#today?, which was just comparing the current instance's #to_date with ::Date.current, which of course has no idea that the compared instance had a timezone configured via #in_time_zone. The attached pull request fixes this.<br/><br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ff8d752bc77d9b25e4b457401ea0f84c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3723', 'title': u'ActiveSupport::TimeWithZone#today? does not respect an instance-based time zone'}, {'body': u'Original issue #3715', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3718', 'title': u"javascript_include_tag should add '.js' to sources that contain '.'"}, {'body': u"Original issue #3323<br/><br/>I've introduced `ActionController::Metal#show_detailed_exceptions?`. Middleware only checks `env['action_dispatch.show_detailed_exceptions']`. Logic was moved to controller layer and it can be overriden.<br/><br/>/cc @jeremy", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3717', 'title': u'Show exceptions refactor: controller should be responsible for choice to show exceptions'}, {'body': u'Currently, Array#join is not aware of SafeBuffers.<br/><br/>Because of that, `[foo, bar].join` is not the same to `foo+bar` if `foo` is a SafeBuffer.<br/><br/>This can lead many programmers to call `.html_safe` on the resulting string, which can be wrong and/or dangerous. I say "many programmers" judging from code I\'ve seen (from good programmers), from this [accepted answer on StackOverflow](http://stackoverflow.com/questions/4191028/rails-3-0-2-arrayjoin-html-safe), or [warnings on blogs](https://makandracards.com/makandra/954-don-t-mix-array-join-and-string-html_safe).<br/><br/>This has been requested before (at least [here](https://github.com/NZKoz/rails_xss/issues/15) and [here](https://github.com/rails/rails/issues/2544) ), but no implementation was given.<br/><br/>Let me argue why patching `Array#join` is worth it.<br/><br/>1) It should not be too expensive to patch, since only the first element of the array needs to be checked. If it is not a SafeBuffer, we call the original `Array#join` and minimal time is spent (with a similar result as doing `first + second + ...`).<br/><br/>Otherwise we can safely expect that the safe join is what needs to be done (and the cost that is paid is cheap, since the implementation I propose will be more efficient than what many would write rolling their own)<br/><br/>2) Doing a correct and safe join is not easy! Calling `ary.inject(:+)` will be ineficient for large arrays, calling `ary.inject(:<<)` will mutate the first element, calling `ary.inject(:<<, "".html_safe)` is both long, ugly and not obvious for other readers. Note that doing a join with a separator is even more complicated.<br/><br/>3) Let me stress that the downside of leaving Array#join untouched is running the security risk that programmers will use `.join.html_safe` when they shouldn\'t. If they do, they are unlikely to notice a problem until someone uses that for an XSS attack...<br/><br/>Thanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3716', 'title': u'Make Array#join aware of SafeBuffers.'}, {'body': u"We've had the need to pass parameters to methods when being serialized.<br/><br/>Take a look at my tests to see how I've implemented it, but it's basically accepting an Array which is being splatted into `send` (i.e. send(*[:method_name, arg1, arg2, ...]) ).<br/><br/>Please let me know if anything needs to be done. Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/817064769d0316491e902fc65ac0e742?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3714', 'title': u'ActiveModel::Serialization now accepts parameters for methods'}, {'body': u"a fix to make the postgresql adapter quote NaN and Infinity in float columns. <br/><br/>P.S. I don't know what the special case with the :datetime column is about, but i've left it in as the first condition, so that it would get triggered before it checks for just infinity? or nan?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38a14d1c4c57a072d2ca2caea974bdb7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3713', 'title': u'postgresql adapter should quote not a number and infinity correctly for float columns'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ce5d1a4d26241d16575889a6f1ed4487?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3712', 'title': u'prevent crashes when testing without defined @logger'}, {'body': u'This cherry-picks cb5c39f8a0af78e933d1fe0456c112db1e97813f<br/>It has not reason not to be included in 3.1.x as it does not break any API and provides a supplementary feature.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3710', 'title': u'Cherry pick ssl config'}, {'body': u"This little addition is needed to ensure that only a list of IPs is returned. The server I'm using is using Passenger standalone, which is using a server socket. It sets REMOTE_ADDR to 'unix:', which is clearly not an IP, but is however treated like one in RemoteIp. Note that Rack::Request does the same thing.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/67364c084713f82d505a52316d90dabd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3708', 'title': u'Find ips in the passed header'}, {'body': u'ActiveRecord::Table#remove should use `*column_names` instead of `column_names`.<br/><br/>So, I have removed unnecessary flatten for column_names that also caused issues [here](https://github.com/rsim/oracle-enhanced/issues/124).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/63bae10ff70c16aeeec4adb8f4c72f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3707', 'title': u'Refactored remove_column'}, {'body': u'Added add_index override in postgresql_adapter to allow for GiST and GIN support.<br/><br/>    add_index(:wikis, :body, :gin => true)<br/><br/>Added PostgresqlAdapter indexes() :type support (specifying :btree, :gin, and :gist index types).<br/>**NOTE:** instead of hacking the IndexDefinition class, I just added a `:type` attribute to the [`abstract/schema_definitions.rb`](https://github.com/chaffeqa/rails/commit/61fd6b6d9c57281f3af1cf2cb4a9373369011384)<br/><br/>    ActiveRecord::Base.connection.indexes(:wikis) #=> #<struct ActiveRecord::ConnectionAdapters::IndexDefinition table=:wikis, name="index_wikis_on_ancestry", unique=false, columns=["ancestry"], lengths=nil, type=:btree><br/><br/><br/>Added tests for add_index. Updated tests for postgresql/schema_tests to check for index :type.<br/><br/>Let me know if there are other schema related updates I should do.  Would gladly do so :)<br/><br/>(refs [this old pull](https://github.com/rails/rails/pull/3699) )', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5274d217a09164553bec780f35c050f7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3706', 'title': u'PostgreSQL GIN and GiST index support'}, {'body': u'This is a backport of #3626', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3705', 'title': u'Added therubyrhino to default Gemfile under JRuby'}, {'body': u'Rails Build fails because Arel gemspec got changed <br/><br/>https://github.com/rails/arel/commit/6525b409c2a753488681f4cd955cfda29a06b1ac<br/><br/>This will allow to run Rails Build', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3701', 'title': u'Bump Arel'}, {'body': u'Added add_index override in postgresql_adapter to allow for GiST and GIN support.<br/><br/>Added tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5274d217a09164553bec780f35c050f7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3700', 'title': u'PostgreSQL GIN and GiST index support'}, {'body': u'Added add_index override in postgresql_adapter to allow for GiST and GIN support. <br/><br/>Added tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5274d217a09164553bec780f35c050f7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3699', 'title': u'PostgreSQL GIN and GiST index support'}, {'body': u'check_box helper with :disabled => true generates disabled hidden field. fixes #1953', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bd9b6d9f929adbf8918fe37fb279c43e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3698', 'title': u'check_box helper with :disabled => true generates disabled hidden field. fixes #1953'}, {'body': u'refs #3684', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3696', 'title': u'fix rails plugin new CamelCasedName bug'}, {'body': u"GitHub issue #3573<br/><br/>I've wrapped the whole thing into an if block so it wont raise the error AND issue the deprecation warning, which would be confusing. This can obviously be refactored nicely once support for objects whose classes return a #model_name that responds to #partial_path will be dropped.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0373a8c7849a794ddc771f1bc9d9de13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3695', 'title': u'Meaningful errors for unexpected partial arguments. Fixes #3573'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3689', 'title': u'Warning removed for shadowing variable'}, {'body': u'#3678 problem is solved by https://github.com/christos/rails/commit/280b2b725b488ef71556970ee895ccaddc315e0c .<br/><br/>But we still have a  little another problem (a schema dump runs rather slowly)<br/><br/>Please see last discussion  https://github.com/rails/rails/issues/3678', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3688', 'title': u"(for 3-1-stable) Use `show index from`. We could fix `pk_and_sequence_for` method's performance problem (GH #3678)"}, {'body': u'#3678 problem is solved by https://github.com/christos/rails/commit/280b2b725b488ef71556970ee895ccaddc315e0c<br/><br/>But we still have a  little another problem (a schema dump runs rather slowly)<br/><br/>Please see last discussion https://github.com/rails/rails/issues/3678', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3687', 'title': u"Use `show index from`. We could fix `pk_and_sequence_for` method's performance problem (GH #3678)"}, {'body': u'This fixes the slowdown every time the primary key is extracted from a table introduced by #3526 in order to fix #3440<br/><br/>Fixes #3678', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/919feaa12651b668d8ee9a41215b1976?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3683', 'title': u'Only used detailed schema introspection when doing a schema dump.'}, {'body': u"A while back I've fixed `format_validator`, `inclusion_validator` and `exclusion_validator`. I just realized that in the test case I was using a variable name `t` to reference to `Person`. This should fix that.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3682', 'title': u"Update variable's name in the test case to reflect the class we're testing"}, {'body': u"A while back I've fixed `format_validator`, `inclusion_validator` and `exclusion_validator`. I just realized that in the test case I was using a variable name `t` to reference to `Person`. This should fix that.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3681', 'title': u"Update variable's name in the test case to reflect the class we're testing"}, {'body': u'Fix regression introduced by 38d26b0cb56d82093889efa95992a35ba3bb9f29', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2dda5e47fccc5ff0daa87debf48162b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3680', 'title': u'This fix causes the AWDwR test to go back to being green on Rails master.'}, {'body': u'If no :placeholder option is supplied to the input field tag helper<br/>it will attempt to look up a translation from<br/>helpers.placeholder.object.attribute<br/><br/>Users can now add that tranlation information to their locales and save<br/>themselves from adding the wordy and possibly repetitive ":placeholder =><br/>\'helpers.placeholder.object.attribute" option to input fields.<br/><br/>Passing tests included.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/79b1b001d5ff186c9bd02e7487aa4142?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3674', 'title': u'Added i18n support for placeholder attribute on inputs'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3669', 'title': u'Fixed typo: expect -> expected'}, {'body': u"In the spirit of https://github.com/rails/rails/pull/3547 I've updated another methods descriptions so that to make everything consistent and user can infer default value from the API docstring directly.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18bf599b887aeed411b29c3eaf7cf5a4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3668', 'title': u'updating API docstring so that user can infer default value'}, {'body': u'Just a minor cleanup, the same we do with firebird env variables.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3666', 'title': u'Cleanup of databases.rake psql env variables'}, {'body': u'cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/028129906613fc0cf15b2a3de3422e44?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3665', 'title': u'Fix impractical I18n lookup in nested fields_for (3-1-stable)'}, {'body': u'References #3515', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3664', 'title': u'Security fix in TranslationHelper: _html translation should escape interpolated arguments'}, {'body': u"I've moved the schema_format :sql config setting to application.rb because you would<br/>never enable this only for the test environment. If you use database constraints<br/>or database specific data types you would want all of your environments to use them.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/302c6c56b99912a673f1213b0709c902?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3663', 'title': u'Move schema_format :sql config setting from test.rb to application.rb'}, {'body': u'ActiveSupport tests is failing now for some time zones (e.g. Europe/Minsk and Europe/Moscow):<br/><br/>    cd activesupport<br/>    TZ=Europe/Minsk rake test<br/><br/>This happens because current time zone is +03:00 but in 2007 year it was +02:00 (for Europe/Minsk).<br/>It means that we need to return current non-DST offset in `DateTime.local` instead of historical one.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18efee6ee5a12946d983169eff2540f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3661', 'title': u'rewrite DateTime.local_offset to return current offset'}, {'body': u'Hi,<br/><br/>I\'ve been running into a number of problems with 3.1\'s protocol-relative urls.  They\'ve been fine when used in stylesheets & javascript (which is fortunate, or we\'d have to have a different asset cache for http & https), but I\'m less convinced about their benefit when used in templates.<br/><br/>Many RSS readers seem completely flummoxed by them, and a number of our api clients don\'t behave nicely with them.<br/><br/><br/>I came across default_asset_host_protocol - https://github.com/rails/rails/commit/0e5891ad918ea975f8687d6d47aed5543afc7441.  The commit even mentions that it\'s best to keep it unset, yet the Sprockets railtie sets it to :relative (https://github.com/rails/rails/blob/master/actionpack/lib/sprockets/railtie.rb)<br/><br/>I\'ve set `config.action_controller.default_asset_host_protocol = nil` in my own config, which seems to work fine - assets are still generated referencing "//example.com/foo.jpg" images, and templates use the request protocol for their asset paths.  Any thoughts on just deleting the railtie setting as in the attached commit?<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9e5ce6f28587baa2a566eb4f2d76c13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3660', 'title': u'default_asset_host_protocol should not default to :relative'}, {'body': u'added _base.html.erb for every page, then we can define some common html(CSS/JS include, Javascript) in it.<br/><br/>for example:<br/><br/>There have a messages controller<br/><br/>_base.html.erb<br/><br/>    <%= content_for :breadcrumb do %><br/>      <a href="<%= messages_path %>">Messages</a> &gt; <br/>    <% end %><br/>    <%= content_for :css do %><br/>      <%= stylesheet_link_tag "messages"  %><br/>    <% end %><br/>    <%= content_for :js do %><br/>      <%= javascript_include_tag "messages"  %><br/>    <% end %><br/><br/>new.html.erb<br/><br/>    <%= content_for :breadcrumb do %><br/>      <span class="current">New</span><br/>    <% end %><br/>    <%= render "base" %><br/>    <%= render "form" %><br/><br/>index.html.erb<br/><br/>    <%= content_for :breadcrumb do %><br/>      <span class="current">List</span><br/>    <% end %><br/>    <%= render "base" %><br/><br/>show.html.ern<br/><br/>    <%= content_for :breadcrumb do %><br/>      <span class="current">View</span><br/>    <% end %><br/>    <%= render "base" %><br/><br/>And in the Layout<br/>application.html.erb<br/><br/>    <head><br/>    <%= stylesheet_link_tag "application" %><br/>    <%= yield :css %><br/>    <%= javascript_include_tag "application" %><br/>    <%= yield :js %><br/>    </head><br/>    <body><br/>    <div id="breadcrumb"><br/>      Location: <a href="/">Root</a> &gt; <%= yield :breadcrumb %><br/>    </div><br/>    </body>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4035ddfe11dbb2afc4e683b1bc6ac68f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3659', 'title': u'Improve for scaffold controller generator'}, {'body': u'We are using @calculated_ip. <br/>@calculate_ip is no where used', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3658', 'title': u'It should be @calculated_ip not @calculate_ip'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3657', 'title': u'Bump Mysql2!'}, {'body': u'same as 4c1a1933cbc5ab96efe340a3b31ac5fee12c99c8', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3656', 'title': u'No need to `readlines` then `join`, just use `read` :heart:'}, {'body': u'I saw one bug fixed here <br/><br/>https://github.com/brianmario/mysql2/commit/e60599b912dfc6c0c0394656b103f537414d93f4', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3655', 'title': u'Mysql bump 3 0 stable'}, {'body': u'This patch fixes #2437.<br/><br/>> When using nested fields_for, the label method of the FormBuilder object looks up the translation for the label using object_name, which is very impractical.<br/><br/>The I18n key for label will be "helpers.label.parent.children.name" with a fallback to "helpers.label.child.name" instead of insane "helpers.label.parent[children_attributes][0].name".<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/028129906613fc0cf15b2a3de3422e44?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3654', 'title': u'Fix impractical I18n lookup in nested fields_for'}, {'body': u'So it turns out that the RemoteIp middleware might not be added to the stack. Hah. Also, when requesting directly from box with a proxy IP, we should return the IP, not filter it.<br/><br/>@jonleighton, this fixes all the test failures you noted from the previous merges. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c3ed917e59156a36212d48155831482?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3649', 'title': u'Fixes for Request#remote_ip (no middleware, all proxies)'}, {'body': u'https://github.com/rails/rails/issues/3645<br/><br/>Really small fix that adds a missing parameter to ActionController::DeprecatedBehavior.relative_url_root= in Rails 3.0.10.<br/><br/>Confirmed that this change fixes my issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4edda103c33d4a81c6fa5a831fb1915?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3646', 'title': u'Fix for relative_url_root= missing parameter (issue 3645)'}, {'body': u'The test on [line 120 of `actionpack/test/controller/new_base/render_template_test.rb`][l120]:<br/><br/>    test "rendering a template with error properly excerts the code" do<br/>      get :with_error<br/>      assert_status 500<br/>      assert_match "undefined local variable or method `idontexist\'", response.body<br/>    end<br/><br/>is currently failing on master. The test expects to see the message attached to the exception object (and a stack trace) but instead it gets the contents of the fixture `500.html`.<br/><br/>It looks like the `RoutedRackApp` instance created for `ActionDispatch::IntegrationTest` in `actionpack/test/abstract_unit.rb` initializes the `ActionDispatch::ShowExceptions` middleware but doesn\'t explicitly tell it to consider all requests as local.<br/><br/>One way to way to make the test pass is to change [line 167 of `actionpack/test/abstract_unit.rb`][l167] from:<br/><br/>    middleware.use "ActionDispatch::ShowExceptions"<br/><br/>to<br/><br/>    middleware.use "ActionDispatch::ShowExceptions", true<br/><br/>then all the requests in the test cases that subclass from `ActionDispatch::IntegrationTest` would be considered local.<br/><br/>Alternatively we could alter the [logic in `actionpack/lib/action_dispatch/http/request.rb`][l247] that decides whether or not a request is local. Right now *both* `Request#remote_addr` and `Request#remote_ip` have to match one of `[/^127\\.0\\.0\\.\\d{1,3}$/, "::1", /^0:0:0:0:0:0:0:1(%.*)?$/]`. In the test cases `Request#remote_addr` is `127.0.0.1` but `Request#remote_ip` is an empty string. Changing the logic from:<br/><br/>    LOCALHOST.any? { |local_ip| local_ip === remote_addr && local_ip === remote_ip }<br/><br/>to:<br/><br/>    LOCALHOST.any? { |local_ip| local_ip === remote_addr || local_ip === remote_ip }<br/><br/>would make the test pass and all other test requests would be considered local.<br/><br/>In this patch I just updated the test to send the loopback IP with the request as it seemed the least intrusive way to get it to pass and can have no effect on any of the other tests:<br/>    <br/>    test "rendering a template with error properly excerpts the code" do<br/>      get :with_error, {}, { \'action_dispatch.remote_ip\' => "127.0.0.1" }<br/>      assert_status 500<br/>      assert_match "undefined local variable or method `idontexist\'", response.body<br/>    end<br/><br/>[l120]:https://github.com/quackingduck/rails/blob/master/actionpack/test/controller/new_base/render_template_test.rb#L120<br/>[l167]:https://github.com/quackingduck/rails/blob/master/actionpack/test/abstract_unit.rb#L167<br/>[l247]:https://github.com/quackingduck/rails/blob/master/actionpack/lib/action_dispatch/http/request.rb#L247<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2cecb9c713ca7bcc78e51badd3b106f5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3641', 'title': u'fixes a failing test in actionpack'}, {'body': u"Okay, so my previous fix for this was to acknowledge that GetIp#to_s could return nil. And that's really, really awful. So this fix returns the first IP value in REMOTE_ADDR instead of nil, and stops assuming that to_s could return nil. All the tests pass, and I'd welcome any feedback on how to make this better/cleaner. Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c3ed917e59156a36212d48155831482?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3640', 'title': u"GetIp#to_s should never return nil. That's icky."}, {'body': u'In order to make Callbacks code always operate on valid peaces of code<br/><br/>Concatenated `Callback#start` and `Callback#end` method into `#apply`<br/>method.<br/> <br/>The main concern is around filter. Current implementation of `#start #end` for around filter looks like this:<br/><br/>``` ruby<br/>def start(....)<br/>  "#{name}(halted) do"<br/>end <br/>def end(....)<br/>    "  value<br/>  end"<br/>end<br/>```<br/><br/>This is insanely confusing. Now it looks like:<br/><br/>``` ruby<br/>def apply(...)<br/>  <<-RUBY_EVAL<br/>#{name}(halted) do<br/>  #{code}<br/>  value<br/>end<br/>RUBY_EVAL<br/>end<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3637', 'title': u'AS::Callbacks::Callback refactor'}, {'body': u'Instead of generating association methods directly in the model<br/>class, they are generated in an anonymous module which<br/>is then included in the model class. There is one such module<br/>for each association. The only subtlety is that the<br/>generated_attributes_methods module (from ActiveModel) must<br/>be forced to be included before association methods are created<br/>so that attribute methods will not shadow association methods.<br/><br/>The advantage to this approach is that it is now possible to override<br/>a generated method and still call the original generated method via super.<br/><br/>This change is relatively straightforward from a code organization<br/>perspective, but it has a high potential for causing grief in applications<br/>that make assumptions about how association methods are generated<br/>or ordering of method definitions. Therefore it probably needs some<br/>stress-testing in real applications to see how it goes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9f0f89bbd9e1ecfbaab6584e429b7a2f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3636', 'title': u'association methods are now generated in modules'}, {'body': u'Fixes issue #3483.<br/><br/>The AR find conditions could not correctly handle the combination of a range and discrete values.  We modified predicate_builder.rb such that when an array contains ranges, separate predicates for the ranges (one for the discrete values, another for each range value) are created.  ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b512f40c5b3b183a6449537b8f97435?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3634', 'title': u'Fixes 3483'}, {'body': u'See #3232<br/><br/>cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f63a259f9b2375e2e900b8cfcc1420fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3633', 'title': u'Backport #3232 to 3-1-stable'}, {'body': u'I tested, and the test is red without my fix, and green with it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c3ed917e59156a36212d48155831482?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3632', 'title': u'unit test for fix from a few minutes ago'}, {'body': u'This is a fix for the bug that @jonleighton found in 317f4e2, where remote_ip would sometimes return nil when it ought to have returned "127.0.0.1" (or any other IP that matches the "trusted proxies to ignore" regex).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c3ed917e59156a36212d48155831482?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3631', 'title': u'Force calculation of remote IP before using || operator'}, {'body': u'I noticed that some methods in the attribute_methods class had several levels of nesting and abstractions. I extracted two of them to make them more readable/easier to refactor in the future. All tests pass.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3630', 'title': u'Improve readability and mainteinance of attribute methods'}, {'body': u'Added support for lazy compress, because I wanted to avoid eager compress.<br/>This patch will improve `write performance` when :raw and :compress option is true and using mem_cache_store.<br/><br/>without my fix<br/><br/>```<br/>$ bundle exec rails runner "require \'foo\'" -e production<br/>      user     system      total        real<br/> 37.210000   1.220000  38.430000 ( 39.684154)<br/>```<br/><br/>with my fix<br/><br/>```<br/>$ bundle exec rails runner "require \'foo\'" -e production<br/>      user     system      total        real<br/> 11.520000   1.050000  12.570000 ( 13.679471)<br/>```<br/><br/>test code(lib/foo.rb)<br/><br/>```ruby<br/>string = SecureRandom.hex(1024 * 17 / 2)<br/>cache  = Rails.cache<br/><br/>puts Benchmark::CAPTION<br/>puts Benchmark.measure {<br/>  10000.times {<br/>    cache.write("foo", string, :compress => true, :raw => true)<br/>    cache.read("foo", {})<br/>  }<br/>}<br/>```<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3629', 'title': u'Add support for lazy compress'}, {'body': u"I'd like to do some light refactoring on the Rails source code to improve readability. This is the first one to see if the core team is interested at all.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7f9d52790d6ef7dd61956c65b8117e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3628', 'title': u'use any? instead of !empty?'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3627', 'title': u'Sprockets 2.1.0 (3-1-stable)'}, {'body': u'therubyrhino is a sane default for all the JRuby users', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3626', 'title': u'Added therubyrhino to default Gemfile under JRuby'}, {'body': u"This version brings bug fixes for performance and caching.<br/><br/>Also looks like 2.0.x won't be supported anymore and could be a good idea bump version also in 3-1-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3625', 'title': u'Upgrade Sprockets to 2.1.0'}, {'body': u'Vijay pointed me at some breaking tests. These commits fix the tests by:<br/><br/>  - returning the first REMOTE_ADDR instead of the last one<br/>  - not causing an exception while trying to raise IpSpoofAttackError<br/>  - changing the tests to expect X-Forwarded-For before REMOTE_ADDR<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c3ed917e59156a36212d48155831482?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3623', 'title': u'Remote IP fixes/cleanup'}, {'body': u'As mentioned here: https://github.com/rails/rails/pull/3609 , The pull request #3609 broke the build (for issue #3595).<br/><br/>This pull request corrects that.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6c942d7234aacc386a613c7e8a6715b3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3622', 'title': u'Fix pull request #3609'}, {'body': u"This will make the apps usable by default for all Linux users that don't have Node.js installed in the system. (There are a lot of users). See #2963 for details.<br/><br/>Additionally if JRuby is detected therubyrhino is added by default", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3619', 'title': u"Add therubyracer/therubyrhino to Gemfile when there isn't a JS Runtime available in the system"}, {'body': u'usage of memoizable was removed in f2c0fb32c0dce7f8da0ce446e2d2f0cba5fd44b3', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3618', 'title': u"Unneeded require 'active_support/memoizable'"}, {'body': u'- return the last forwarded IP before REMOTE_ADDR to handle proxies<br/>- remove completely superfluous RemoteIpGetter class<br/>- remove duplication of trusted proxies regexp<br/>- remove unused constant from Request<br/>- move comments from Request to where they are actually relevant<br/>- edit comments for clarity of purpose<br/><br/>The original code (confusingly) tried to return REMOTE_ADDR both at the beginning and the end of the chain of options. Since REMOTE_ADDR is always set, this is kind of silly. This change leaves REMOTE_ADDR as the last option, so that proxied requests will be assigned the correct remote IP address.<br/><br/>This version of the middleware has been tested in production, swapped in to replace RemoteIp, to great success.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c3ed917e59156a36212d48155831482?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3617', 'title': u'refactor RemoteIp middleware'}, {'body': u"*.gz files generated from 'rake assets:precompile' are a hassle when deploying your rails app to a production server. These should be ignored by git.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/acfe9766803c7317f1143d919755d016?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3615', 'title': u"Ignore *.gz files that are generated from 'rake assets:precompile'"}, {'body': u'Just some minor RDoc fixes\u2014in the class overview section and one fix in the RDoc for `Responder#default_render`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/90793237d18f9c12460d11a2db4ee277?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3613', 'title': u'Fix wording and minor typos in the Responder RDoc'}, {'body': u"When a record is initialized through a has_many association, the record is added to the target association.<br/>On a record.save, this record is not updated or replaced in the in-memory association.<br/><br/>e.g.<br/><br/>```ruby  <br/>@tree.apples.size #=> 1<br/>apple = @tree.apples.find_or_initialize_by_color('Red')<br/>@tree.apples.size #=> 2, so it added a record in-memory.<br/>apple.color = 'Green'<br/>apple.save<br/>@tree.apples.size #=> 3 !!! It did reload records from database. It did not clear in-memory records.<br/>@tree.apples.last.color #=> 'Red'<br/>@tree.apples.last.new_record? #=> true<br/>@tree.apples.second.color #=> 'Green'<br/>@tree.apples.second.new_record? #=> false<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/49e98c4a13a5203ecff5d2d0774f8991?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3610', 'title': u'Fix + Failing test for find_or_initialize_ updating has_many collection size.'}, {'body': u'`#_compile_option` API changed to Return:<br/><br/>``` diff<br/>-        ["if #{conditions.flatten.join(" && ")}", "end"]<br/>+        conditions.flatten.join(" && ")<br/>```<br/><br/>In this way it is more reusable and operates with valid(at least from syntax stand point) strings of ruby code.<br/>As the result code generation becomes more readable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3611', 'title': u'AS::Callbacks::Callback#_compile_option refactored'}, {'body': u'For issue #3595<br/><br/>https://github.com/rails/rails/issues/3595', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6c942d7234aacc386a613c7e8a6715b3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3609', 'title': u"Prevent multiple SHOW TABLES calls when a table don't exists in database..."}, {'body': u'Warning removed unused variables.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3608', 'title': u'Unused variable removed'}, {'body': u"`__run_keyed_callback` defines the callback method on the first run and checks if it was defined (with `object.respond_to?`). This makes `@_keyed_callbacks` cache never used:<br/><br/>In order to check that I've add the debug code that indicates cache usage and run test suite for AS and AR - no usages found so far.<br/><br/>/cc @josevalim: sorry for that bug with object/instance context. This PR also fixes one more bug from previous PR.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3607', 'title': u'AS::Callbacks.__run_keyed_callback: remove unused cache'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6228fc7c96122d25c088b7dee54db273?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3606', 'title': u'2 3 stable'}, {'body': u"The flash is getting cleared by requests for assets.  This is making me sad.<br/><br/>Wasn't sure how best to configure ActionDispatch::Flash, so I followed the existing convention of injecting configuration into the rack env.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d5c8f65ca47fc3f5a10ecd7c898b636e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3605', 'title': u'Make the flash sweeper ignore requests for assets'}, {'body': u'To maintain consistency, change_table should also be modified to the newer syntax where the block argument can be omitted.<br/><br/>The changes done are very similar to the changes done to create_table in #1163 and #3600', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3603', 'title': u'Modify change_table to remove the need for the block argument'}, {'body': u'A recent change made to create_table does away with the need for the block argument. Checking the arity will prevent the mixing up of the two syntaxes.<br/><br/>This is in line with https://github.com/rails/rails/pull/1163#issuecomment-2633129<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3600', 'title': u'Checking the arity of the block passed to create_table'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a0f37219f0943a048003ef5269ff31e8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3598', 'title': u'Fix a tiny typo in custom validators documentation'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8085138938c34ae1af140bfc91f2fe56?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3597', 'title': u'fixed example code indentation'}, {'body': u'<br/>`_define_runner` method can be improved by moving:<br/>`"_run__#{self.class.name.hash.abs}__#{kind}__#{key.hash.abs}__callbacks"`<br/>into separated method and make use of it in one place.<br/><br/>Now the logic of keyed callback method definition and execution is in the separated method.<br/><br/>Checked tests for AS and AR - all pass.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3593', 'title': u'AS::Callbacks._define_runner better abstraction'}, {'body': u'<tt>hightlight</tt> text helper method is implemented via too complicated regexp. We can simplify it and fix hightlighting of tag names as a bonus:<br/><br/>``` ruby<br/>highlight("<div>abc div</div>", "div", :highlighter => \'<b>\\1</b>\')<br/># => should be "<div>abc <b>div</b></div>"<br/>```<br/><br/>I tested my solution on 1.8.7, 1.9.2, 1.9.3. All tests passed well.<br/><br/>Explanation:<br/><br/>Dan Weinand (91eeb0ff119d34d0fcdb44d3d7fcbb7924208e05) modified regexp to not highlight text inside tags. His regexp /(#{match})(?!(?:[^<]*?)(?:["\'])[^<>]*>)/i tries to find something not <, quote and nearest >. If matching is positive it means we are inside tag and should ignore highlighting. <br/><br/>This is too complicated criteria. To be sure we are outside tag, nearest \'<\' symbol should be before nearest \'>\' (if they exist). My regexp solves all tasks of Dan and additionaly highlight correct tag names.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3592', 'title': u'Fix and simplify highlight regexp'}, {'body': u"Fixed error with 'rails generate new plugin' where the .gitignore was not properly generated if --dummy-path was used and added test case<br/><br/>This is in regards to Issue #3550", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6ed3ed37f0974311a256cce8707d7625?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3591', 'title': u"Fixed error with 'rails generate new plugin' where the .gitignore was not"}, {'body': u'This patch was actually written more than a year ago, but unfortunately had lost in somewhere between [Lighthouse](https://rails.lighthouseapp.com/projects/8994/tickets/5120) and GitHub. So let me propose here again...<br/><br/>HTML5 has a new feature called [Client-side form validation](http://www.w3.org/TR/html5/forms.html#client-side-form-validation) and ActiveModel::Validators lets us easily know what kind of validations are defined on our models.<br/><br/>So, I came up with another new feature combining these two technologies.<br/><br/>Now, when creating a form with a model which has a `validates_presence_of` field,<br/><br/>```ruby<br/>class User < ActiveRecord::Base<br/>  validates_presence_of :name<br/>end<br/>```<br/><br/>```erb<br/><%= form_for User.new do |f| %><br/>  <%= f.text_field :name %><br/>  <%= f.submit %><br/><% end %><br/>```<br/><br/>the `required="required"` attribute are automagically injected into the generated input field.<br/><br/>```html<br/><input id="user_name" name="user[name]" required="required" size="30" type="text" /><br/>```<br/><br/>This enables seamless client-side validation without any extra JavaScript coding.<br/><br/>I baked this feature into a gem for Rails 3, so please take a look at https://github.com/amatsuda/html5_validators for more documentations, and give it a try to see how it actually works.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3590', 'title': u'automatic client side validation with HTML 5 "required" attribute'}, {'body': u'refs #3509<br/>A fix for https://github.com/rails/rails/pull/3509#issuecomment-2683558', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3589', 'title': u'Extend IRB right before starting IRB to remove dependency on IRB from Rails::Application'}, {'body': u"```<br/>AC::Metal#response_body = 'foo'<br/>```<br/>stores `['foo']` in Ruby 1.9 but stores `'foo'` in 1.8, because `String#respond_to?(:each)` differs in 1.8 and 1.9.<br/><br/>Although this is just an internal API, app developers sometimes need to directly refer to this value in some cases like monkey patching and testing. So it's nicer if this value doesn't be affected by Ruby version.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3581', 'title': u'AC::Metal#response_body= stores different value in Ruby 1.8 and 1.9'}, {'body': u'I missed these in previous commit', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3579', 'title': u'CHANGELOG => CHANGELOG.md'}, {'body': u'I noticed that this newly added `j` method https://github.com/rails/rails/blob/6e87281b5f/actionpack/lib/action_view/helpers/javascript_helper.rb#L37<br/>overwrites existing another `j` method <br/>https://github.com/rails/rails/blob/6e87281b5f/activesupport/lib/active_support/core_ext/string/output_safety.rb#L58<br/>in ActionView context.<br/><br/>FYI: It seems this global `j` is called in other contexts. https://github.com/flori/json/blob/b50b1bdeae/lib/json/common.rb#L395<br/><br/>Attached a patch that removes `j` alias for `json_escape` because this `j` is no longer available for app developers, and not used inside the framework (maybe those who are using output_safety.rb out of the Rails box would be affected... but who does?).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3578', 'title': u'Remove j alias for ERB::Util.json_escape'}, {'body': u'I have added these in one commit here for 3-1-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3576', 'title': u'Changelog changelog md'}, {'body': u'I missed these in previous commit', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3575', 'title': u'CHANGELOG => CHANGELOG.md'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3574', 'title': u'Refactor test:uncommitted task.'}, {'body': u'Currently, there\'s a failing test case in activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb<br/><br/>```<br/>PGError: ERROR:  for SELECT DISTINCT, ORDER BY expressions must appear in select list<br/>```<br/><br/>The reason behind this is because it tries to check whether a record `exists?` over the following uniq habtm association:<br/><br/>```<br/>Project.has_and_belongs_to_many :developers, :uniq => true, :order => \'developers.name desc, developers.id desc\'<br/>```<br/><br/>then it runs an invalid SQL like this<br/><br/>```<br/>SELECT  DISTINCT 1 FROM "developers" INNER JOIN (snip) ORDER BY developers.name desc, developers.id desc LIMIT 1<br/>```<br/><br/>This pr fixes the `exists?` method to ORDER BY clause which is not needed in this case.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3572', 'title': u'exclude ORDER BY clause when querying Relation#exists?'}, {'body': u'I removed some duplicated code, and improved some littel redundant code.<br/>I am expecting your comments.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3570', 'title': u'Some refactor to ActiveSupport::Cache.'}, {'body': u'Changed the generators to output AR 3.2 style migration introduced in #1163, and updated the documents.<br/>Also updated test cases to use the newest syntax.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3569', 'title': u'3.2 style migration for generators and tests'}, {'body': u'See-also pull request #3561 from 3-1-stable<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c681b5db4f87c37e814dbf5cfdbe18e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3568', 'title': u'Fix trouble using :subdomain in development environment when using numeric addresses.'}, {'body': u'Was checking code. and got warnings here. So thought of removing these.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3565', 'title': u'Warnings removed.'}, {'body': u"I found this bug when running rake test:uncommitted <br/>on a newly generated rails app which don't have<br/>test file for application_controller.<br/>Can see detail here #3461", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3564', 'title': u'Should be checking if file exists or not.'}, {'body': u'I have not taken the @rahul100885 #3562 PR<br/><br/>These are different files. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3563', 'title': u'CHANGELOG to CHANGELOG.md'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3562', 'title': u'Updated Rakefile as CHANGELOG has been renamed to CHANGELOG.md'}, {'body': u"Fix trouble using :subdomain in development environment when using numeric addresses.<br/><br/>Otherwise the following occurs:<br/><br/>TypeError: can't convert nil into String<br/>    /Users/bfolkens/dev/bfolkens-rails-core/actionpack/lib/action_dispatch/http/url.rb:75:in host_or_subdomain_and_domain'<br/>    /Users/bfolkens/dev/bfolkens-rails-core/actionpack/lib/action_dispatch/http/url.rb:37:in url_for'<br/>    /Users/bfolkens/dev/bfolkens-rails-core/actionpack/lib/action_dispatch/routing/url_for.rb:147:in test_subdomain_may_be_accepted_with_numeric_host'<br/>    /Users/bfolkens/dev/bfolkens-rails-core/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in run'<br/>    /Users/bfolkens/dev/bfolkens-rails-core/activesupport/lib/active_support/callbacks.rb:426:in send'<br/>    /Users/bfolkens/dev/bfolkens-rails-core/activesupport/lib/active_support/callbacks.rb:81:in run'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c681b5db4f87c37e814dbf5cfdbe18e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3561', 'title': u'3 1 stable url subdomain with numeric host'}, {'body': u'When I delegete id and pass `allow_nil` as `true` I should get nil according documentation.<br/><br/>I have polymorphic associations for customer: `belongs_to :shipping_location`, `belongs_to :billing_location` (default locations for customer) and `has_many :locations`:<br/><br/>```ruby<br/>class Customer < ActiveRecord::Base<br/>      has_one :billing_location, :as => :locationable, :class_name => \'Location\', :conditions => { :default_billing => true }<br/>      has_one :shipping_location, :as => :locationable, :class_name => \'Location\', :conditions => { :default_shipping => true }<br/>      has_many :locations, :as => :location able<br/>      with_options(:prefix => true, :allow_nil => true) do |options|<br/>          options.delegate :id, :to => :shipping_location, :prefix => true, :allow_nil => true<br/>          options.delegate :id, :to => :billing_location, :prefix => true, :allow_nil => true<br/>      end<br/>end<br/>```<br/><br/>I want to fill in the form like this to set default locations:<br/><br/>```erb<br/><% fields_for @customer do |fc| %><br/>    <%= fc.label "#{location_type}_location_id", \'Saved Address\', {:id => nil} %><br/>    <%= fc.collection_select "#{location_type}_location_id", @customer.locations, :id, :template_name,<br/>        {:include_blank => \'Please choose...\'},<br/>        {:id => "saved-#{location_type}-location", :class => \'selectbox\', :rel => customer_location_template_path(\':id\')} %><br/><% end %><br/>```<br/><br/>where `location_type` is either \'shipping\' or \'billing\'. But I have raise `RuntimeError` instead of get nil when shipping_location is nil or billing_location is nil', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6228fc7c96122d25c088b7dee54db273?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3557', 'title': u'Delegate id should give nil when allow_nil'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b05d3cbc64b0031a24c2887fb6ddc173?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3554', 'title': u'allow templates to work which do use only orm_instance and no orm_class '}, {'body': u'Because DrbStore removed from rails, i remove :drb_store from documentation', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/31d38c337e675c6bbb694b5530f9c84e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3552', 'title': u'Doc patch, DrbStore no more exists in rails'}, {'body': u"Replaced two separate calls to remove and define into one => redefine call<br/><br/>And, there were no tests for the core_ext methods remove_possible_method and redefine_method  methods of class Module. Added them too in activesupport/tests.<br/><br/>I've run the activemodel and active support test suite. All are passing. Please merge these commits.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d700771597aa972b45c024dc59a37af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3549', 'title': u'remove_method tests and changes'}, {'body': u"In rails week starts from Monday and there's no built-in way to get beginning of week, that starts from another day.<br/>That's especially important for people in US, where week starts from Sunday. Also ruby considers Sunday as a week start. <br/><br/>Me and many others (http://bit.ly/v4H8RB, http://bit.ly/vclIEd) faced this problem, so I re-write beginning_of_week (and end_of_week) to take week start day symbol as an argument and return week start (end) based on that day. days_to_week_start method added (return number of days to week start) and it's used in both beginning_of_week and end_of_week.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18bf599b887aeed411b29c3eaf7cf5a4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3547', 'title': u'beginning_of_week and end_of_week extended to work with any week start'}, {'body': u'This patch allows users to create a field named `field` in AR models.<br/><br/>Without this patch, AR raises `ActiveRecord::DangerousAttributeError: field_changed? is defined by ActiveRecord` when trying to define a "_changed?" suffixed method for every attribute https://github.com/rails/rails/blob/b454601/activemodel/lib/active_model/dirty.rb#L92<br/><br/>This should be fixed because<br/>1) "field" fields didn\'t cause any error on AR 2. So, this is a regression.<br/>2) AR\'s `field_changed?` is a private method. Why should attribute names be restricted by the framework\'s internal method name?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3544', 'title': u'Rename field_changed? to _field_changed? so that users can create a field named field'}, {'body': u"Every time the controller generator produces controller codes with a redundant blank line at the bottom.<br/>This is because the generator outputs a method definition and a blank line for each actions when iterating over given actions.<br/>Here's (a bit ugly) workaround for removing this.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3542', 'title': u'Remove redundant blank line at the bottom of generated controller code'}, {'body': u"The last argument to DateTime.new/civil is the Julian day number for when the calendar reform occured. DateTime ignores it if it's 0, and sets it to the default of DateTime::ITALY instead, so we could just leave it out. This also removes the warnings while running the ActiveSupport tests (there still are some for the setup though).<br/><br/>See issue #3540 for more information (I'll close said issue in favour of this pull request).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0fd80494679214743a967d583420a731?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3541', 'title': u'Removed argument throwing warnings when running tests'}, {'body': u'Hello there!<br/><br/>I think we should include the charset meta tag by default.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cb5d9e9095cd41b636764a85e57ade4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3539', 'title': u'Include charset meta tag.'}, {'body': u'`pluralize` and `singularize` were almost completely the same, so I refactored them out into a common private method. All tests pass on Ruby 1.9.3-p0.<br/><br/>See diff discussion on rails/#3536.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0fd80494679214743a967d583420a731?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3537', 'title': u'Refactored pluralize and singularize into a common method'}, {'body': u'I have added a test case which fails prior to the patch. All the tests pass including the new one now.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/39863b6141d1be3ec211dca4b061cd5e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3536', 'title': u"Make pluralize follow singularize's logic of uncountability check"}, {'body': u'RIght now attribute_present? returns false for "false" values. Since "false" is a value you can set in the db it should return true when it\'s set.<br/><br/>"Returns true if the specified attribute has been set by the user or by<br/>a database load and is neither nil nor empty?"<br/><br/>Fixes #1613', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/583c3d751af6c13d910b4fa8c6ef065d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3535', 'title': u'Update ActiveRecord#attribute_present? to work as documented'}, {'body': u"Without this you will get:<br/><br/>undefined method `distinct' for #<Arel::SelectManager:0x7ff8918495b8><br/><br/>The error is reproducible in Sam\xb4s CI: http://intertwingly.net/projects/AWDwR4/checkdepot/section-6.1.html", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3534', 'title': u'Add arel to Gemfile on apps generated in edge Rails'}, {'body': u'The abstract mysql adapter does not exist in 3-1-stable.<br/>Please see https://github.com/rails/rails/pull/3525<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3533', 'title': u'Barckport to 3-1-stable: fixed an issue id false option is ignored on mysql/mysql2 (fix #3440)'}, {'body': u'The abstract mysql adapter does not exist in 3-1-stable.<br/>Please see https://github.com/rails/rails/pull/3525<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3532', 'title': u'Barckport to 3-1-stable: fixed an issue id false option is ignored on mysql/mysql2 (fix #3440)'}, {'body': u'It differs from #3530 :)<br/><br/>Here I fix side an effect after ae7d0d816db3f9a94008d36ab9efbe7583700981 also.<br/><br/><tt>distance_of_time_in_words</tt> accepts args as integer (seconds), Date, Time, DateTime or something that responds to <tt>:to_time</tt> method. If <tt>from_time</tt> and <tt>to_time</tt> are seconds for periods more than 1 year [date_helper.rb#L97](https://github.com/rails/rails/blob/ae7d0d816db3f9a94008d36ab9efbe7583700981/actionpack/lib/action_view/helpers/date_helper.rb#L97) is interpreted as [ActiveSupport year method](http://api.rubyonrails.org/classes/Integer.html#method-i-year). In this case creating Range object <tt>(fyear..tyear)</tt> failes.<br/><br/>I did change nothing in [date_helper.rb#L97-110](https://github.com/rails/rails/blob/ae7d0d816db3f9a94008d36ab9efbe7583700981/actionpack/lib/action_view/helpers/date_helper.rb#L97-110) except indent.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3531', 'title': u'distance_of_time_in_words should correct process time periods longer than 1 year defined in seconds'}, {'body': u'Method <tt>distance_of_time_in_words</tt> [date_helper.rb#L70](https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/date_helper.rb#L70) was designed to be symmetrical for arguments swapping. It should also work well for supporting <tt>time_ago_in_words</tt> [date_helper.rb#L132](https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/date_helper.rb#L132)<br/><br/>ae7d0d816db3f9a94008d36ab9efbe7583700981 (Take leap years into account more seriously ...) added unsymmetry for long time periods. I propose to fix it.<br/><br/>PS. The condtion with leap years calculation (<tt>leap_years = (fyear > tyear) ? 0 : ...</tt>) is reasonable. Although <tt>from_time</tt> will be always less or equal than <tt>to_time</tt>. <tt>fyear</tt> can be greater than <tt>tyear</tt> for example at March 1st.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3530', 'title': u'distance_of_time_in_words method accepts args in both directions'}, {'body': u'Allows to have AR migrations that create indexes with specified per-column order (asc, desc) for some extra performance fine-tuning, e.g. http://stackoverflow.com/questions/743858/sql-server-indexes-ascending-or-descending-what-difference-does-it-make . Supported by most SQL databases.<br/><br/>add_index(:accounts, [:branch_id, :party_id], :order => {:branch_id => :desc, :part_id => :asc})<br/><br/>generates<br/><br/>CREATE INDEX by_branch_desc_party ON accounts(branch_id DESC, party_id ASC)<br/><br/>(this is to replace pull request 3351)<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/803f1e9f845f67cdf07cceb760c09c1a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3529', 'title': u'AR changes to support creating ordered (asc, desc) indexes'}, {'body': u'cc/ @vijaydev', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3528', 'title': u'Doc fix'}, {'body': u'In mysql, to look for a primary key, we should use the information_schema than the describe command.<br/>Because when there is no primary key, the describe command reports the not null unique key as primary key.<br/><br/>Please see also<br/>https://github.com/rails/rails/issues/3440<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3525', 'title': u'Fixed an issue id false option is ignored on mysql/mysql2 (fix #3440)'}, {'body': u'When the search path has multiple schemas, spaces were not being stripped<br/>from the schema names after the first.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4d4c378e3a10e2d01a636a33c359734c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3521', 'title': u'Fix postgres adapter to handle spaces between schemas'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3518', 'title': u'Resynchronizing the gemspecs'}, {'body': u'e6cc2ea201857a5f3700f589336df2880564cfea added here', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3517', 'title': u'Fix test as one more has_many added'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3516', 'title': u'Synchronize the gemspecs since CHANGELOG has been renamed to CHANGELOG.md'}, {'body': u'f.number_field generates <input type="number", size="30"../> which is invalid HTML5. See: http://dev.w3.org/html5/spec/Overview.html#number-state', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3514', 'title': u"Remove 'size' attribute from number_field form helper fixes #3454"}, {'body': u"I think it helps to build html in helpers and libraries likes:<br/><br/>``` ruby<br/>content_tag :ul do<br/>  @posts.map{|post| content_tag(:li, post.title)}<br/>end<br/>```<br/><br/>or<br/><br/>``` ruby<br/>content_tag :div do<br/>  [].tap do |out|<br/>    out << content_tag(:h1, 'Title')<br/>    out << content_tag(:p, 'text') if some_condition<br/>  end<br/>end<br/>```<br/><br/>I'm using this pattern often with <tt>safe_join</tt> method.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3510', 'title': u'Safe join array arg in capture and content_tag methods'}, {'body': u'Currently, methods available in Rails console (such as `app`, `helper`, `reload!`, etc.) are defined on Ruby\'s top level.<br/>That means, these methods are injected into all Objects. In fact, we can do something funny like this on our Rails console.<br/><br/>```<br/>> puts \'foobar\'.send(:app)<br/>#<ActionDispatch::Integration::Session:0x007ff67c0f8f28><br/>```<br/><br/>```<br/>> puts nil.send(:controller)<br/>#<ApplicationController:0x007ff681bdf5e0><br/>```<br/><br/>Reading IRB code, I found the IRB way is, to define this sort of methods in a module named IRB::ExtendCommandBundle, then IRB automatically includes (extends) these methods in IRB console\'s context.<br/>For example, you see, you can call `irb_jobs` method in your IRB but the following code raises `NoMethodError: undefined method `irb_jobs\'`, because this method is mixed into IRB\'s "main" context via IRB::ExtendCommandBundle.<br/><br/>```<br/>Object.new.send(:irb_jobs)<br/>```<br/><br/>Attached a patch and tests for Rails console to follow this IRB way. I confirmed it runs on MRI 1.8, 1.9, JRuby and Rubinius.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3509', 'title': u'move Rails console top level methods to IRB context'}, {'body': u'Squashed into one commit for pull request #3503<br/><br/>I realize that not all custom_counter_sql can be inferred from the finder_sql which is why they currently default to `COUNT(*)`. This patch will pass the columns used for "simple" `SELECT` to `COUNT`. If the `SELECT` contains any commas it will fallback to using \'*\'.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/583c3d751af6c13d910b4fa8c6ef065d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3507', 'title': u'Preserve SELECT columns on the COUNT for finder_sql when possible'}, {'body': u'I realize that not all custom_counter_sql can be inferred from the finder_sql which is why they currently default to `COUNT(*)`. This patch will pass the columns used for "simple" `SELECT` to `COUNT`. If the `SELECT` contains any commas it will fallback to using \'*\'.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/583c3d751af6c13d910b4fa8c6ef065d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3503', 'title': u'Preserve SELECT columns on the COUNT for finder_sql when possible'}, {'body': u'Imagine this scenario:<br/><br/>Lots of generators:<br/><br/>    lib/generators/foo/bar/bar_generator.rb<br/>    lib/generators/baz/bab/bab_generator.rb<br/><br/>... some of which reuse the same templates in different contexts. So they set a common source_root to `lib/generators/templates`.<br/><br/>Rails will look for a usage file in `lib/generators/USAGE` and will use the same usage file for both generators! Not necessarily a good thing!<br/><br/>This pull request exposes a `usage_file` class method on `Generator::Base` to allow explicitly setting the location of the usage file.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5d8c7a8d951a28e10bd7407f33df6d63?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3501', 'title': u'make the location of USAGE file configurable'}, {'body': u"Using the white-space: pre-wrap adds extra line breaks to prevent the text from breaking out of the element's box. In this case single line output can be extremely long, breaking out the <body> element.<br/><br/>See for reference: http://www.quirksmode.org/css/whitespace.html<br/><br/>__Before__<br/>![Before](http://stage.f.cl.ly/items/3I323m2c1Z3H0P2l3202/Screen%20Shot%202011-11-03%20at%209.55.57%20AM.png)<br/><br/>__After__<br/>![After](http://stage.f.cl.ly/items/3C452A250c3C2T0c2X0x/Screen%20Shot%202011-11-03%20at%209.55.28%20AM.png)<br/><br/>Note: This CSS property will be ignored in IE6 and 7, it is compatible with all other browsers (see prior reference).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6e77509d7891c1d2230f3240a5652b6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3500', 'title': u'CSS fix to prevent error output from being breaking out of body element.'}, {'body': u'Docblock contained a wrong example. The constraint class needs to have a matches? method (not matches).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d54c62322c39f914fb2ec6a31df5f314?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3499', 'title': u'Docblock fix'}, {'body': u'This addition will allow the USAGE files generated by the \'generator\' generator to embed Ruby code, allowing the resultant generator to modify its help message depending on the context in which it was invoked.<br/><br/>I\'ve now found myself missing this functionality in my 3rd generator-heavy app, so I thought maybe my edge case wasn\'t so "edge". Hence the pull request.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5d8c7a8d951a28e10bd7407f33df6d63?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3494', 'title': u'treat USAGE as an ERB template'}, {'body': u'After series of commits (ccbb3bb3d87a48c8763a8afff4c9b21a9bf2539e, bb2f53b4090768e4750af66c6fed15d6596bb11c, 9a6fc9a540cd23af3ca061cb7406a6cdd5ad4294) the implementation of SingletonResource constructor became too complicated:<br/><br/>https://github.com/rails/rails/blob/1afe269a4aa18a815c509d3f0348ed99a9b4b560/actionpack/lib/action_dispatch/routing/mapper.rb<br/><br/>``` ruby<br/>class Resource #:nodoc:<br/>  def initialize(entities, options = {})<br/>    @name = entities.to_s<br/>    @controller = (options[:controller] || @name).to_s<br/>    @as = options[:as]<br/>    # ...<br/>  end<br/><br/>  def name<br/>    @as || @name<br/>  end<br/><br/>  def plural<br/>    @plural ||= name.to_s<br/>  end<br/>  # ...<br/>end<br/>```<br/><br/>``` ruby<br/>class SingletonResource < Resource #:nodoc:<br/>  def initialize(entities, options)<br/>    super<br/><br/>    @as = nil<br/>    @controller = (options[:controller] || plural).to_s<br/>    @as = options[:as]<br/>  end<br/><br/>  def plural<br/>    @plural ||= name.to_s.pluralize<br/>  end<br/><br/>  def singular<br/>    @singular ||= name.to_s<br/>  end<br/>  <br/>  # ....<br/>end<br/>```<br/><br/>In singleton resource we get such code flow<br/><br/>```<br/>SingletonResource#initialize<br/>  Resource#initalize<br/>    @as = options[:as]<br/>    return<br/>  @as = nil<br/>  @controller = ... # <-- in this point executed #plural, <br/>                    # which calls Resource#name <br/>                    # and returns @name because @as == nil. <br/>                    # plural is cached to @plural instance method<br/>  @as = options[:as]<br/>```<br/><br/>So behaviour of initalize + plural is rather non-trivial. And what is more, method #plural is not used anywhere.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3492', 'title': u'Make SingletonResource implementaion more straightforward'}, {'body': u"The LoadError message in 1.9.3 is 'cannot load such file' instead of 'no such file to load'.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e7fdd112763061b9b4670a28f56ed8f3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3491', 'title': u'handle 1.9.3 LoadError messages in MissingSourceFile'}, {'body': u"I'm not sure if this test case is in right place :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c2dc9c02ce7a041285725a4fc9e5f6d2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3486', 'title': u'Failing test case for issue #3483'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/07eabe24326e5c3ae83ca52ef05b9cb8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3484', 'title': u'Fix typo in method comment'}, {'body': u"### Use case<br/><br/>Suppose we have vendored module `A` (extended with `AS::Concern`). This module suppose to be included in class. We want this module to have some additional functionality from another module `B`. In this case I didn't find other way than alias-method-chain `self.included` (any suggestions?).<br/><br/>### API<br/><br/>After this patch we can just to do this:<br/><br/>``` ruby<br/>A.included do<br/>  include B<br/>end<br/>```<br/><br/>In this case `B` will be included anytime when `A` got included.<br/><br/>### Implementation<br/><br/>I was thinking about 2 ways of doing it:<br/><br/>* store all passed blocks in Array and iterate<br/>* merge new given block to previous by creating new block that calls both (see diff)<br/><br/>Decided prefer second one because there is no performance impact when calling `.included` only once (as it works right now) - no additional objects, no additional method calls. <br/><br/>Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3481', 'title': u'ActiveSupport::Concern: allow #included to be called multiple times'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3480', 'title': u'In assert match pattern should be first'}, {'body': u"**Background:** Some webservers (thin and passenger for example) don't add a HTTP Date header to the response. This is not a problem for modern browsers but it can cause problems with other HTTP clients, for example Amazon's CloudFront [expects a Date header](https://forums.aws.amazon.com/thread.jspa?messageID=284053) when it gets a Cache-Control max-age value and .Net's HttpWebRequest's have [some similar issue](http://stackoverflow.com/questions/4328439/httpwebrequest-with-caching-enabled-throws-exceptions).<br/>From what I understand the HTTP spec says that the client should use the Date header when calculating how a long a cached response is valid.<br/><br/><br/>I can see that the Date header might not be Rails responsibility, but I think it would be good if ``#expires_in`` ensures that the client can use Cache-Control's max-age value by setting a Date header in the response. What you think about this?<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/372d2565db74cea37fef3ce5375fe6d6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3479', 'title': u'Ensure Date header on expires_in'}, {'body': u'Not <tt>cycle</tt> method converts nil to blank string.<br/><br/>``` ruby<br/>cycle(nil) # => ""<br/>```<br/><br/>Moreover current <tt>Cycle::to_s</tt> a little bit confusing it changes internal state of object.<br/><br/>I suggest to tune cycle helper class implementation.<br/><br/>*Pros:*<br/><br/>It makes such haml template cleaner:<br/><br/>``` haml<br/>%tr{:class => cycle(\'odd\', nil)} # => <tr> instead <tr class=""> on the second iteration<br/>  = #...<br/>```<br/><br/>This commit doens\'t affect documented behaviour, an example below will work fine.<br/><br/>``` erb<br/><tr class="<%= cycle(\'odd\', nil) %>"><br/>```<br/><br/>*Cons:*<br/><br/>If someone used undocumented trick <tt>cycle(\'odd\', nil) + " some-another-class"</tt> he or she should update to <tt>cycle(\'odd\', \'\') + " some-another-class</tt>. I think it\'s reasonalbe.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3478', 'title': u'Cycle helper method accepts nil as arguments'}, {'body': u"```dump_schema_information```: now explicitly orders inserts into schema_migrations table by version value<br/><br/>We use ```active_record.schema_format = :sql``` as our schema dump format, and the ```db/development_structure.sql``` sees quite a bit of trivial churn in the git history due to migrations having run in different orders, as migrations are created on different feature branches over time. With this trivial fix, only added/removed migrations will create changes to the schema dump file.<br/><br/>The complete activerecord test suite with all database drivers pass with this change. Unfortunately, that doesn't say a big deal, as ```dump_schema_information``` is only called by the ```db:structure:dump``` rake-task. Local manual testing does confirm the change, though.<br/><br/>Comments on this change?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5243438bc582a4247bbfa57d4f4a84ee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3477', 'title': u'dump_schema_information: explicitly order inserts into schema_migrations '}, {'body': u"```dump_schema_information```: now explicitly orders inserts into schema_migrations table by version value<br/><br/>We use ```active_record.schema_format = :sql``` as our schema dump format, and the ```db/development_structure.sql``` sees quite a bit of trivial churn in the git history due to migrations having run in different orders, as migrations are created on different feature branches over time. With this trivial fix, only added/removed migrations will create changes to the schema dump file.<br/><br/>The complete activerecord test suite with all database drivers pass with this change. Unfortunately, that doesn't say a big deal, as ```dump_schema_information``` is only called by the ```db:structure:dump``` rake-task. Local manual testing does confirm the change, though.<br/><br/>Suggestions for tests to add?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5243438bc582a4247bbfa57d4f4a84ee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3476', 'title': u'Stable migrations version order'}, {'body': u'Add regex to match message from ruby 1.9.3.  Regex taken from Rails 3 stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fb174e640e310c5f3d84b13f264b030b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3473', 'title': u'Fix load_error.rb to include regex to catch errors from ruby 1.9.3'}, {'body': u"From the perspective of consistency, we should use Object#in? method here (https://github.com/kennyj/rails/commit/7670a5187d2000a577c9aa982158808550033dfd#L0L166).<br/>From the perspective of D.R.Y., we should replace an array (['.', '..']) with constant.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3469', 'title': u'Refactor ActiveSupport::Cache::FileStore.'}, {'body': u'ActiveSupport::Cache::Entry::DEFAULT_COMPRESS_LIMIT is 16.kilobytes.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3468', 'title': u'fix a document for :compress_threshold. DEFAULT_COMPRESS_LIMIT is 16K.'}, {'body': u'Avoided to call `Marshal.dump` twice.<br/>And the original source has a special treat for Numeric(and descendants), String, FalseClass, but I did not do, because already marshaled.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3464', 'title': u'avoided to call `Marshal.dump` twice'}, {'body': u"Fix a document for race_condition_ttl.<br/>ActiveSupport::Cache::MemoryCache isn't exist.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3463', 'title': u"fix a document for race_condition_ttl. ActiveSupport::Cache::MemoryCache isn't exist."}, {'body': u'I removed a reference to SynchronizedMemoryStore and CompressedMemCacheStore.<br/>I think that this is the remaining code from 9cafc28874.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3462', 'title': u'removed a reference to SynchronizedMemoryStore and CompressedMemCacheStore '}, {'body': u'Ok so I was running rake test:uncommitted on a new generated application and I got the error that no such file to load functional/application_controller_test.rb<br/><br/>One way to fix this is fix the task itself to not include <code>ApplicationController</code> in the list. <br/><br/>But I think we should generate the <code>ApplicationControllerTest</code> file', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3461', 'title': u'Application controller test file'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3460', 'title': u'method redefined warning removed!'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3459', 'title': u'ActiveRecord is no more in controller directory.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3456', 'title': u'Add missing type to number_field_tag documentation'}, {'body': u'checking more!!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3449', 'title': u'More checks for instance writers.'}, {'body': u'Removed here 0d0176c4ffe5c58fd1002efbd8f7bd45a8872e33', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3448', 'title': u'Test fix Allow instances to disable record_timestamps'}, {'body': u'Use respond_with in the scaffold generated controller', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b3e33269ce1d3c9a580bac0f11436cf8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3446', 'title': u'Use respond_with in the scaffold generated controller'}, {'body': u'Test is calling #post which is looking for the create action in the PostsController.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b3e33269ce1d3c9a580bac0f11436cf8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3445', 'title': u"Fix railtie configuration test calling PostsController#create which didn'"}, {'body': u'Putting this on stderr makes rake tasks in cron completely unusable, as<br/>you can no longer tell the difference between a task that had an error<br/>and one that thinks installing rdoc on production is a great idea.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3662a3cca29fa036edcd594ce998cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3444', 'title': u'Dont assume not having RDoc is an error'}, {'body': u'People dont want stderr littered with crap, nor do they want to install rdoc on production servers', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3662a3cca29fa036edcd594ce998cbc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3443', 'title': u'Dont put silly rdoc warning on stderr'}, {'body': u'This will work with:<br/><br/>```ruby<br/>    user:<br/>      name: "Nome"<br/>    user/address: <br/>      street: "Rua"<br/>```<br/><br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5048703e352c69bc9bc2e09c7f941238?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3441', 'title': u'Fix deprecation warnings in nested I18n forms'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c0770bb3702176cbe1945a77dcbd09ec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3439', 'title': u'ActiveModel::Validator only takes one parameter, documentation had two params listed.'}, {'body': u"`ActiveRecord::Base#becomes` doesn't copy the errors information to the instance that it creates. This can be a pain if, for example, you're trying to use the returned instance in a form which expects to highlight fields with errors. It seems reasonable to expect that the returned instance share all the state of the original, including errors.<br/><br/>I've split this into two commits in case you'd prefer to use different models in the test (`Company` seemed like the clearest of the existing ones), or use a different implementation to fix it. If not, feel free to squash them.<br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/acd62030df551952268e84c8fff26a5b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3438', 'title': u'Becomes includes errors'}, {'body': u"I'm sort of tired of writing codes like this:<br/><br/>```ruby<br/>if Rails.env.development? || Rails.env.test?<br/>  ...<br/>end<br/>```<br/>I want StringInquirer to comprehend what I mean by this:<br/><br/>```ruby<br/>if Rails.env.development_or_test?<br/>  ...<br/>end<br/>```<br/>so, here's the patch.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3437', 'title': u'let StringInquirer match _or_ separated multiple words'}, {'body': u'Fix four deprecation warnings in action pack test suite by passing :formats instead of specifying the format inside the template name.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e9b949c8749222225501c99e8e8ad9ff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3435', 'title': u'Fix deprecation warnings in action pack render tests'}, {'body': u"Let's do the same trick for asset_path that we do for [image,javascript,stylesheet,video]_path to avoid namespace conflicts on named routes.<br/><br/>See also asset_tag_helper#275 and similar comments.<br/><br/>Can anybody else think of places asset_path is used that should get changed over?<br/><br/>Thanks in advance for thoughts/comments/feedback!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d35a5eb6f89727228e599e82b3ddf0f4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3428', 'title': u'Issue #3427 - asset_path_conflicts'}, {'body': u'Functional test to scaffold was introduced at July 1, 2009 - 86ff07410145430d08e97a8296486c4cd4304cde.<br/><br/>A coupe months ago David added paramify_values method  in ActionController::TestCase - 3f0c71c8524856c32bc056bdb38136b3d18f2aaf. Now #to_param is superfluous.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3424', 'title': u'Remove needless to_param in scaffold functional test'}, {'body': u'Why people add these!!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3422', 'title': u'Unused variable removed'}, {'body': u"We have very sensible value objects, which can't be created with invalid data. I supplied a patch to allow the `:converter` Proc to return nil. Before the patch, returning nil resulted in a confusing `NoMethodError` on `NilClass` when ActiveRecord tried to set the mapped properties to the corresponding value. The patch uses the  `:allow_nil` options to decide, whether the `:conversion` Proc can return nil values.<br/><br/>The patch changed the code in a way that the conversion Proc was run also for nil values. This backward compatibility issue wasn't caught by a test so I wrote one in a separate commit.<br/><br/>This is a re-open of #3420 because I picked the wrong merge-traget.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3421', 'title': u'The :converter Proc from #composed_of can return nil'}, {'body': u"We have very sensible value objects, which can't be created with invalid data. I supplied a patch to allow the `:converter` Proc to return nil. Before the patch, returning nil resulted in a confusing `NoMethodError` on `NilClass` when ActiveRecord tried to set the mapped properties to the corresponding value. The patch uses the  `:allow_nil` options to decide, whether the `:conversion` Proc can return nil values.<br/><br/>The patch changed the code in a way that the conversion Proc was run also for nil values. This backward compatibility issue wasn't caught by a test so I wrote one in a separate commit.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3420', 'title': u'The :converter Proc from #composed_of can return nil'}, {'body': u'This ensures that the following sequence of commands do not raise an error:<br/><br/>    rake db:create<br/>    rake db:drop<br/>    rake db:create', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5238fd6b05bebf4fcc4d9863291ae6b4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3418', 'title': u'Drop the test database when running rake db:drop '}, {'body': u'```ruby<br/><br/>test_to_s(TagNodeTest)<br/>    [/Users/arunagw/checkouts/rails/actionpack/test/template/html-scanner/tag_node_test.rb:58:in `test_to_s\'<br/>     /Users/arunagw/checkouts/rails/bundle/rbx/1.8/gems/mocha-0.10.0/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:22:in `run\'<br/>     kernel/bootstrap/array.rb:66:in `each\'<br/>     kernel/bootstrap/array.rb:66:in `each\']:<br/><"<a b=\\"c\\" d=\\"f\\" g=\\"h \'i\'\\" />"> expected but was<br/><"<a d=\\"f\\" g=\\"h \'i\'\\" b=\\"c\\" />">.<br/><br/><br/><br/> 1) Failure:<br/>test_using_hash_resource(RespondWithControllerTest)<br/>    [test/controller/mime_responds_test.rb:659:in `test_using_hash_resource\'<br/>     /Users/arunagw/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run\'<br/>     /Users/arunagw/checkouts/rails/activesupport/lib/active_support/callbacks.rb:426:in `_run_setup_callbacks\'<br/>     /Users/arunagw/checkouts/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks\'<br/>     /Users/arunagw/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run\'<br/>     kernel/bootstrap/array.rb:66:in `each\'<br/>     kernel/bootstrap/array.rb:66:in `each\']:<br/><"{\\"result\\":{\\"name\\":\\"david\\",\\"id\\":13}}"> expected but was<br/><"{\\"result\\":{\\"id\\":13,\\"name\\":\\"david\\"}}">.<br/><br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3416', 'title': u'ActionPack test fix for RBX'}, {'body': u'Related to https://github.com/rails/rails/issues/3389', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cebfabb19814410151c8375b798643df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3414', 'title': u'Removing duplicates in known_attributes at ActiveResource (closes #3389)'}, {'body': u'As shown in the follow example, the results all have id 1. This fixes the problem by removing duplicate id columns from join tables<br/><br/>```<br/>ruby-1.9.2-p290 :024 >  Post.find_by_sql("SELECT * from posts JOIN users ON posts.user_id = users.id")<br/>  Post Load (0.3ms)  SELECT * from posts JOIN users ON posts.user_id = users.id<br/> => [#<Post id: 1, title: "my first post", body: "Hi!\\r\\n\\r\\nThis is a awesome blog!\\r\\n\\r\\nZheng\\r\\n", user_id: 1, created_at: "2011-06-02 04:43:58", updated_at: "2011-06-02 04:43:58">, #<Post id: 1, title: "2nd post", body: "nothing special here", user_id: 1, created_at: "2011-06-02 04:43:58", updated_at: "2011-06-02 04:43:58">] <br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a434c7b2837e1d09bc1a32b17e3ca2a6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3412', 'title': u'Fixed find_by_sql with join statement'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3409', 'title': u'Lock turn version to 0.8.2 if Ruby version is 1.9.2'}, {'body': u'We should look for a best presentation for tests output.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3408', 'title': u'Remove Turn from default Gemfile.'}, {'body': u'No need to check ruby version now. <br/><br/>rake 9.2.2 is out with the fix which we want to run the test!<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3407', 'title': u'No need to check ruby version here as rake 9.2.2 is out with the same fix'}, {'body': u'Ok i got the name of that middleware now. I have added the name here<br/><br/>I got the proper name after doing this https://github.com/rails/rails/pull/3405<br/><br/>I will update the docrails with the proper name.<br/><br/><br/>cc/ @vijaydev', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3406', 'title': u'Add missing middleware'}, {'body': u'Inspect was showing <br/><br/>```ruby<br/><ActiveSupport::Cache::Strategy::LocalCache::Middleware:0x007fc5edba6480<br/>```<br/><br/>But if we use name then it will show simply <br/><br/>```ruby<br/>ActiveSupport::Cache::Strategy::LocalCache<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3405', 'title': u'Using middleware name to show proper name in the info'}, {'body': u'Removed warnings!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3404', 'title': u'Warnings removed from RequestIdTest'}, {'body': u'This change i have got when i created a new app<br/><br/>cc/ @vijaydev ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3403', 'title': u'middleware doc updated'}, {'body': u"After this change, decimal column attributes :precision and :scale will be preserved through migrations.  Two tests included, specifically:<br/><br/>1. test that changing a decimal column type keeps the new attributes, and<br/><br/>2. test that if you already have a decimal column with precision/scale, that changing another column in the same table doesn't wipe out the precision and scale<br/><br/>Both tests fail on master, and pass with this patch.<br/><br/>In fairness, the code to fix this I got from https://gist.github.com/971639 - this was pulled from lighthouse (see issue #625), and I'm not entirely sure who wrote it originally.  The tests are new.<br/><br/>Ref issues #3399, #625, #3073", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f4455584c55f3c9cfd2d485439603e5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3400', 'title': u'sqlite3 adapter drops :decimal columns precision & scale when migration tries to alter them'}, {'body': u'This patch provides a NullStore implementation of ActiveSupport::Cache::Store suitable for use in development and test environments where the code needs to use the cache interface, but actually caching data is not desired.<br/><br/>The cache store will never store data itself. It does implement the LocalCache strategy which will store values for the duration of a request to match the behavior of other cache implementations used in production environments.<br/><br/>It would be used then in the development.rb, for example, as:<br/><br/>```ruby<br/>config.cache_store = :null_store<br/>```<br/><br/>or alternatively<br/><br/>```ruby<br/>config.cache_store = nil<br/>```<br/><br/>(Note: this request was originally opened in Lighthouse at https://rails.lighthouseapp.com/projects/8994/tickets/6128)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3397', 'title': u'Null store'}, {'body': u"Here is a new storage engine for Rails session storage that stores sessions in the Rails.cache.<br/><br/>This analogous to MemCacheStore but it is far more flexible in that it can use any backend that is available for Rails.cache (i.e. DalliStore, RedisStore, etc.). It also doesn't require configuring your memcached cluster twice in your environment config file.<br/><br/>(Note: this was originally opened in Lighthouse at https://rails.lighthouseapp.com/projects/8994/tickets/6675)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3396', 'title': u'Add ActionDispatch::Session::CacheStore as a generic way of storing sessions in a cache'}, {'body': u"The cleanup method on ActiveSupport::Cache::FileStore on the 3.0 branch is defined but doesn't actually work. I have fixed the implementation so it can be used to clean up old cache entries either by expiration time or by how recently they've been used and added tests.<br/><br/>This method is needed to keep the cache from growing without bound until if fills up the disk.<br/><br/>The syntax is:<br/><br/>```ruby<br/>Rails.cache.cleanup(:expired_only => true)<br/>```<br/><br/>or<br/><br/>```ruby<br/>Rails.cache.cleanup(:not_accessed_in => 2.days)<br/>```<br/><br/>(Note: this request was originally opened in Lighthouse at https://rails.lighthouseapp.com/projects/8994/tickets/6308)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3395', 'title': u'Fix ActiveSupport::Cache::FileStore.cleanup to actually work.'}, {'body': u'There are a couple of threading issues with ActiveSupport::BufferedLogger.<br/><br/>If a thread is spawned and logs messages but does not flush the log, the messages will never be written and will remain in the buffer forever.<br/><br/>```ruby<br/>threads = []<br/>urls.each do |url<br/>threads << Thread.new do<br/><br/>logger.info("fetching #{url}")<br/>fetch(url)<br/>logger.info("#{url} retrieved")<br/>end end<br/>threads.each{|t| t.join}<br/>```<br/><br/>Silencing a logger for a block in one thread will silence it will silence it for all other threads as well. This means in a multi-threaded Rails application, log messages can be lost.<br/><br/>(Note: this pull request was originally opened in Lighthouse at https://rails.lighthouseapp.com/projects/8994/tickets/6671)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3394', 'title': u'Fix threading issues with BufferedLogger.'}, {'body': u'Added license = "MIT" to all gemspecs. <br/><br/>Life would be simpler if all gems declared their license but currently few do. This is important information when declaring the licenses an application is dependent upon in due-diligence scenarios (such as startup funding.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/251c79c16d6054813ca4bc5b944b0f35?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3393', 'title': u'Add license field to gemspecs'}, {'body': u'If I have defined subdomain as a tag in my config and that some request might not hitting on subdomain so I will get blank <pre>[]</pre> in my log as a tag.<br/><br/>I am not sure if this is a good idea to remove that. But I think showing blank is not required.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3387', 'title': u'Checking blank if tag might coming nil or blank'}, {'body': u'See also: https://github.com/rails/rails/issues/985<br/>And: http://stackoverflow.com/questions/7499172/html-emails-sent-through-rails-arrive-as-attachment', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3090', 'title': u'multipart emails missing content-type boundary'}, {'body': u'Fixes test', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3375', 'title': u'Adding ActionDispatch::RequestId in middleware test'}, {'body': u'As per [Regexp](http://www.ruby-doc.org/core-1.9.2/Regexp.html), `\\w` includes `[0-9]`, thus making `\\d` redundant.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/74712fd9c19f36134151f23c4505435c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3374', 'title': u'Regexp fixup'}, {'body': u'I just saw ada78066fdbc and I remembered that I backported it in a project some months ago', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3373', 'title': u'Backports SecureRandom.uuid from Ruby 1.9'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3371', 'title': u'Fix ORA-00932 error when trying to insert 0 to DATE type columns.'}, {'body': u"The `#added?` method makes it possible to check if a specific error has been added, using the same parameters as for `#add`.<br/><br/>This is useful if you need different behaviour depending on what errors are present on an object. My use case was when adding email addresses to a list. Some errors are permanent (e.g. already subscribed) while other errors are not permanent (e.g. invalid formatting), so the user can be given a chance to remedy the error.<br/><br/>I had a mix of errors on the same attribute, so I could not simply check for the presence of errors on that attribute. Checking for key-value-pairs was also made difficult, as my app is translated into five languages.<br/><br/>I ended up monkey patching ActiveModel::Errors, as have others:<br/>http://stackoverflow.com/questions/6826820/default-activerecord-activemodel-errors-are-anonymous<br/>http://stackoverflow.com/questions/3671098/better-way-to-access-individual-rails-activerecord-error<br/><br/>I'm not an experienced Rails contributor, so if you have comments on coding style, please let me know. I'll be happy to make modifications.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d1f6789769c66d266a246bd9b24ca982?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3369', 'title': u'New #added? method on ActiveModel::Errors'}, {'body': u'Use the ActiveSupport::Deprecation methods instead of printing deprecation warning to stderr directly', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7656e40e0f8440463391ecf0d5b14b1d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3366', 'title': u'Fix deprecation msg to stderr'}, {'body': u'https://github.com/rails/rails/commit/0ca69ca65f83b4bb34f81f077c1c38c66ad868b9#commitcomment-657776<br/> - Aaron agrees.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3362', 'title': u'Remove superfluous assignment in cookies'}, {'body': u"- Resolve issues #3333 and #3348 : Asset pipeline is trying to compute public path of file contents<br/><br/>This issue only occurs in Production mode when 'config.assets.debug = true'<br/><br/>In this case, the asset pipeline uses the contents of the css file as the pathname causing an error that is quite hard to track down. This only occurs with certain css file contents, that seemed pretty arbitrary when I tried to narrow it down.<br/><br/>I have not added any tests for this because I'm not sure how to mimic the Production environment in a test. I'd be happy to do it if anyone can give me some guidance on how to accomplish that. The existing tests however, still all pass.<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/110bcd4edcff8c61ef332348016ef5cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3361', 'title': u'- Resolve issues #3333 and #3348 : Asset pipeline is trying to compute public path of file contents'}, {'body': u'The correct constant naming is `DataMapper`. Applied that to symbol and constant-namings throughout the source.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1bdea1eaab174b4e08a46911fc9af96?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3359', 'title': u'Fixed DataMapper namings in symbols and constants.'}, {'body': u'Warning removed. And Bump the rack version for 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3358', 'title': u'Bump rack and warning removed'}, {'body': u'Added test case for postgresql database', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3357', 'title': u'Added test case for postgresql database'}, {'body': u'Bump Rack to 1.3.5. Warnings removed!! ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3356', 'title': u'Bump Rack to 1.3.5'}, {'body': u'In single-page-designs an oft-used pattern is to embed the initialisation data as JSON within the HTML page output. E.g.:<br/><br/>    <script>App.reset(<%= raw @people.to_json %>);</script><br/><br/>This could result in the following output:<br/><br/>    <script>App.reset([{"name":"<script>alert(\'foo\');</script>"}]);</script><br/><br/>Browsers will complain about this, because within `<script>` tags the `</` characters aren\'t allowed. This patch always escapes the `</` characters as `<\\/`. So the example output above would become:<br/><br/>    <script>App.reset([{"name":"<script>alert(\'foo\');<\\/script>"}]);</script><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a31c2c26350e9e2b07fbd99fbd5ff520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3354', 'title': u'Allow to_json output to embed within <script> tags in HTML output.'}, {'body': u'Bump sprockets 2.0.3', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3352', 'title': u'Bump sprockets'}, {'body': u'Allows to have AR migrations that create indexes with specified per-column order (asc, desc) for some extra performance fine-tuning, e.g. http://stackoverflow.com/questions/743858/sql-server-indexes-ascending-or-descending-what-difference-does-it-make .  Supported by most SQL databases.<br/><br/>add_index(:accounts, [:branch_id, :party_id], :order => {:branch_id => :desc, :part_id => :asc})<br/><br/>generates<br/><br/>CREATE INDEX by_branch_desc_party ON accounts(branch_id DESC, party_id ASC)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/803f1e9f845f67cdf07cceb760c09c1a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3351', 'title': u'AR changes to support creating ordered (asc, desc) indexes'}, {'body': u"Some gems/plugins require the rake :environment task to load the rails stack to do their stuff, but this isn't available in engines.<br/><br/>In the past I have fixed this by modifying things to check if :environment exists as a task, and if not use app:environment.<br/><br/>I think it makes sense however to fix this in one place - gems shouldn't have to worry about whether they are being used by an engine or not as much as possible.<br/><br/>I couldn't find any tests for this - please direct me to them if I've missed it and I'll add a test.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77cfd91999abfee3323de5814749b4fb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3350', 'title': u'Added environment rake task to engines'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3349', 'title': u'Fix to insert systimestamp(Oracle) or current_timestamp(PG) values'}, {'body': u'Added test case for postgresql database', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3346', 'title': u'Added test case for postgresql database'}, {'body': u'autoloading ConnectionAdapters in active_record.rb. here(https://github.com/castlerock/rails/commit/1efd88283ef68d912df215125951a87526768a51).<br/><br/>No need to have a explicit require in sqlite and postgresql adapters.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3344', 'title': u'remove require since autoloaded in active_record.rb'}, {'body': u'fix to remove warning in test cases', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3343', 'title': u'fix to remove warning in test cases'}, {'body': u'Doing a find in a batch seems to mixin the find_in_batches scope :<br/><br/>    named_scope :containing_the_letter_a, :conditions => "body LIKE \'%a%\'"<br/>    Post.containing_the_letter_a.find_in_batches(:batch_size => 1) do |posts|<br/>     Post.all<br/>    end<br/><br/>Post.all would have done :<br/><br/>     SELECT * FROM `posts` <br/><br/>but it did<br/><br/>    SELECT * FROM `posts` WHERE (body LIKE \'%a%\')<br/><br/>The issue is coming from ActiveRecord::Base#scoped_methods which return the find_in_batches conditions when calling Post.all.<br/>This have been fixed in master but not in 2-3-stable.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6af603aeb99bf47aba506bfa02cf0aa8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3342', 'title': u'bug in find_in_batches with scoped_methods'}, {'body': u'<br/>When using accepts_nested_attributes_for and a :reject_if => all_blank, the _destroy parameter is also taken into consideration for blank attributes.  This can present a situation where a user leaves a form blank for a nested model, submits it, and the nested model record is created anyway.<br/><br/>#### A Contrived Example<br/>A sample model:<br/><br/>    class Pirate < ActiveRecord::Base<br/>      has_many :ships<br/>      accepts_nested_attributes_for :ships, :reject_if => :all_blank,  :allow_destroy => true<br/>    end<br/><br/>partial rendered html form for pirate:<br/><br/>    <div><br/>      <input type="text" value="" name="pirate[ships_attributes][0][name]" /><br/>      <input type="hidden" value="0" name="pirate[ships_attributes][0][_destroy]"><br/>      <input type="checkbox" value="1" id="pirate_ships_attributes_0__destroy" name="pirate[ships_attributes][0][_destroy]"><br/>      <label for="pirate_ships_attributes_0__destroy"> destroy</label><br/>    </div><br/><br/>submitted parameters will contain:<br/><br/>     "ships_attributes"=>{"0"=>{"name"=>"", "_destroy"=>"0"}}<br/><br/>#### Problem<br/><br/>Although the intention is to reject the ship, the _destroy parameter technically has a non-blank value, therefore the ship record would still be created anyway.<br/><br/>#### Strategy<br/><br/>My recommendation for this pull request is to modify the ALL_BLANK proc to ignore the _destroy meta attribute.  This would preserve the ability to destroy records by setting it truthy, but reject it if all core model attributes are blank.<br/><br/>#### Issue<br/>https://gist.github.com/rails/rails/issues/2937', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f8613ea4c0b83b835c69740e1105a91d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3340', 'title': u'Exclude _destroy parameter in :all_blank check (issue #2937)'}, {'body': u"When running `rake routes` for controller only route like:<br/><br/>    match 'api/:action' => 'api'<br/><br/>we get:<br/><br/>      api/:action(.:format) api#<br/><br/>This patch removes the trailing `#`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38becc6fc03453ccb1edfcdea1122408?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3337', 'title': u'Remove trailing "#" on rake routes for controller only routes'}, {'body': u"I use this solution in one my multi languages project. There are a lot of localized routes:<br/><br/>``` ruby<br/>scope '/:locale', :locale => /en|ru|de/ do<br/>  resources ... # a lot of resources<br/>end<br/>```<br/><br/>Without default parameters it's too noisy add :locale in each request in functional tests.<br/><br/>I would be very much obliged for your help.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3336', 'title': u'Set default parameters for functional tests'}, {'body': u"There doesn't appear to be any reason to allow nullable timestamps.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/af54a0871600db7fbdbb5c558a6e29a3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3334', 'title': u'Default timestamps to non-null'}, {'body': u"Hey there,<br/><br/>I added a `record` attribute to the `ActiveRecord::StaleObjectError` exception.<br/>Instead of a string, now the record raising this exception is passed to the constructor.<br/><br/>This becomes pretty handy, for example when you want to reload the `record` before rendering a form again.<br/><br/>Example:<br/><br/>```ruby<br/>rescue_from 'ActiveRecord::StaleObjectError' do |exception|<br/>  respond_to do |format|<br/>    format.html do<br/>      exception.record.reload<br/>      render :action => :edit<br/>    end<br/>  end<br/>end<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/079c4b4af6edbc54003d22b9fe0ec4fc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3331', 'title': u'Include affected record when raising an ActiveRecord::StaleObjectError'}, {'body': u"Found when running test with oracle. It's only in Rails gitignore.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3330', 'title': u'Ignore sqlnet 3 0 stable'}, {'body': u'The issue seems to be that, if the record is a new record, the internal collection array is being iterated when autosaving associated records.<br/><br/>Since association destroy/delete now removes records from the internal array via Array#delete (https://github.com/rails/rails/blob/3-1-stable/activerecord/lib/active_record/associations/collection_association.rb#L449), this has side-effects on the iteration within `save_collection_association` in autosave. Namely, the record after the record removed from the collection is skipped during the autosave.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a90cb3e9ce416c6354603f00c9af91e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3329', 'title': u"Autosave association doesn't save all records on a new record for a collection association if there are records marked for destruction"}, {'body': u'Rails 3.0.10 broke compatibility with Rubinius 1.2.4. Would be nice to know through CI if something like this happens again. Added rbx, rbx-2.0, and jruby to .travis.yml.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/964c068a0bce23ae74d183fa6e3f9798?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3327', 'title': u'Travis CI testing for alternate Ruby interpreters'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3324', 'title': u'Fix store tests for Ruby 1.8'}, {'body': u"I got tired of seeing this inconsistently aligned code that is produced by `rails new` in `Gemfile`:<br/><br/>```<br/># Bundle edge Rails instead:<br/># gem 'rails',     :git => 'git://github.com/rails/rails.git'<br/>```<br/><br/>Just to be clear, I'm talking about the whitespace after the comma and before the `:git` above.<br/><br/>This commit fixes it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/79f9616c279f40ef953f366dcfe38dc8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3320', 'title': u'fix inconsistent alignment in Gemfile generator'}, {'body': u"ActiveModel::Errors#generate_message requires that the model we're adding errors to implements i18n_scope. This is not obvious from the documentation, and it is also not necessary as there are translation fallbacks that don't use i18n_scope.<br/><br/>The first of the three commits skips the translation defaults where i18n_scope is used if the model doesn't respond to it.<br/><br/>I also noticed that there were no tests on ActiveModel::Errors#add when message is a Symbol, or when message is a Proc. I wrote tests for these cases, each in it's own commit to make it easier if you'd like to pull these but not the commit dealing with i18n_scope.<br/><br/>Please bear in mind that, if you'd like to keep the requirement for 18n_scope on the model, the test case for when message is a Symbol won't pass. If generate_message doesn't check if the model responds, the test needs a minimal implementation of Person.i18n_scope to pass. I'll be happy to fix this.<br/><br/>PS. This is my first contribution to Rails. Yay! \\o/<br/>I attended an Open Source Hack Night in Stockholm on October 11. Kudos to Valtech for organizing it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d1f6789769c66d266a246bd9b24ca982?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3319', 'title': u'ActiveModel::Errors#generate_message without i18n_scope, and more test cases for #add'}, {'body': u'Added test to check that the vendor/assets/stylesheets directory is created', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3315', 'title': u'Added test to check that the vendor/assets/stylesheets directory is creat'}, {'body': u'<br/>Previously, specifying a delimiter to number_to_phone when no area code is present would result in the delimiter at the start of the resulting phone number:<br/><br/>For example:<br/><br/>number_to_phone("5550000", :delimiter => ".") <br/>would become: .555.0000<br/>but should be: 555.0000<br/><br/>(notice, the leading \'.\')<br/><br/>This pull request fixes that. All existing tests pass and new test added.<br/><br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/110bcd4edcff8c61ef332348016ef5cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3314', 'title': u'Remove user-specified delimiter from start when no area code is present (in number_to_phone)'}, {'body': u'There seem to be a confusion with digests, fingerprinting and precompilation: <br/> <br/>    config.assets.digest = false<br/><br/>removes fingerprinting (as it should), but then adding<br/><br/>    config.assets.compile = false<br/><br/>(in prod., for example) removes all possibility to access any asset.<br/>It raises an unwanted<br/><br/>    Sprockets::Helpers::RailsHelper::AssetPaths::AssetNotPrecompiledError<br/><br/>Incoherent, since:<br/> * asset is compiled and present in public/assets/..<br/> * asset is correctly referenced in manifest<br/><br/>Disabling digest should not disable precompilation pattern. <br/><br/>This patch intends to fix this.<br/><br/>Note. Sry for double post, reopened with proper commit messages.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c1607873b99845b2cd53f8634860d4d4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3311', 'title': u'Patch assets related helpers when digest is false and compile is false '}, {'body': u'There seem to be a confusion with digests, fingerprinting and precompilation: <br/> <br/>    config.assets.digest = false<br/><br/>removes fingerprinting (as it should), but then adding<br/><br/>    config.assets.compile = false<br/><br/>(in prod., for example) removes all possibility to access any asset.<br/>It raises an unwanted<br/><br/>    Sprockets::Helpers::RailsHelper::AssetPaths::AssetNotPrecompiledError<br/><br/>Incoherent, since:<br/> * asset is compiled and present in public/assets/..<br/> * asset is correctly referenced in manifest<br/><br/>Disabling digest should not disable precompilation pattern. <br/><br/>This patch intends to fix this.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c1607873b99845b2cd53f8634860d4d4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3310', 'title': u'Patch assets related helpers when digest is false and compile is false'}, {'body': u'TEST', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7243bfda042be1b2e71a92b0cfd5e119?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3309', 'title': u'1 2 stable'}, {'body': u'First pull request!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7243bfda042be1b2e71a92b0cfd5e119?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3308', 'title': u'2 3 stable'}, {'body': u'Filter `rack.request.form_vars` along with the already excluded `RAW_POST_DATA` from `request.filtered_env` as it is essentially the same potentially sensitive data.<br/><br/>Addresses concerns raised in #337', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a3da5e88217881b9ca61a5740b3d304f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3305', 'title': u'Exclude rack.request.form_vars from request.filtered_env'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a805dcc5d573193fae3a20f97ff7a6dd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3304', 'title': u'comment typo'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a805dcc5d573193fae3a20f97ff7a6dd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3303', 'title': u'typo in comment'}, {'body': u'Since some web servers / load balancers use 307, activeresource should treat HTTP status 307 (Temporary Redirect) as redirection, same as 301 and 302; added missing test cases for statii 301 and 302.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/342b52db159ecbebfdf3ec8f7c0b31ff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3302', 'title': u'activeresource should treat HTTP status 307 (Temporary Redirect) as redirection, same as 301 a'}, {'body': u"Its a little bit hacky but I think it works until some refactoring. First I tried to resolve it creating a renderer:<br/><br/>https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/renderers.rb#L85<br/><br/>but there is a test that renders text with a layout and was failing because the layout wasn't being called.<br/><br/>This commit fixes this issue:<br/><br/>https://github.com/rails/rails/issues/3234", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc66c82eada8b3869009812a61cf5993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3299', 'title': u'Set the Content-Type header as text/plain by default when rendering text. Fixes #3234'}, {'body': u"Hi there,<br/><br/>when Marshal.load can't read an object, it raises an ArgumentError. This is happening after migrating from rails 3.0.x to 3.1, when the session contains a FlashHash object. That's because FlashHash doesn't inherit from Hash anymore (see 76c2ea7882a83159408bdf1f7c363f442a65c4f1) - related issue: https://github.com/rails/rails/issues/2509<br/><br/>I couldn't write a test to reproduce it, unfortunately - and I couldn't find any test exercising this portion of the code. Maybe somebody more used to the codebase?<br/><br/>Best!<br/>Bruno<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db9d3850381c196b2916e25a1e9016c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3298', 'title': u"fixes error when can't unmarshal session contents"}, {'body': u'Hey, is this a valid fix for https://github.com/rails/rails/issues/3268 ?<br/><br/>Now the object is being serialized correctly but some tests needed to change: <node></node> for <node/> .', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc66c82eada8b3869009812a61cf5993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3297', 'title': u'Empty AM objects are not serialized as a line break string: <model/> instead of <model>\\n</model>. Fixes #3268'}, {'body': u"We can specify an array of included associations like `user.as_json(:include => [:asso1, :asso2])`<br/>However if we specify options for an association, then it doesn't work <br/><br/>`user.as_json(:include => [{:asso1 => {:only => :field1}} , :asso2]) ` will throw<br/><br/>`TypeError: {:asso1 => {:only => :field1}} is not a symbol`<br/><br/>This fixes the above issue.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a434c7b2837e1d09bc1a32b17e3ca2a6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3295', 'title': u'Fix multiple includes with options'}, {'body': u'please see https://github.com/rails/rails/issues/3259', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3294', 'title': u'fix #3259 (Asset precompilation does not work when deploying under sub-path)'}, {'body': u'Original discussion at: #2275.<br/><br/>Additions here: separated delegation method with `allow_nil` and without it as @jeremy suggested.<br/><br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3290', 'title': u'Module#delegate refactoring to minimize ruby code eval'}, {'body': u"``` ruby<br/>class HomeController < ApplicationController<br/>  before_filter :some, :only => [:aaa, 'bbb'] # Works well<br/>  respond_to :xml, :only => [:aaa, 'bbb']     # <-- Should also work<br/><br/>  def aaa<br/>    respond_with :aaa => 3<br/>  end<br/><br/>  def bbb<br/>    respond_with :bbb => 3<br/>  end<br/><br/>  private<br/>  def some<br/>    # ...<br/>  end<br/>end<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3289', 'title': u'Support symbol and string actions in AC#respond_to options'}, {'body': u'Like send_data https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/data_streaming.rb#L111', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3288', 'title': u'Preserve send_file options hash'}, {'body': u"The directory 'vendor/assets/javascripts' is referenced in  `railties/lib/rails/generators/rails/app/templates/app/assets/javascripts/application.js.tt`, but isn't actually created as part of the generator suites.<br/><br/>```javascript<br/>// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,<br/>// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.<br/>```<br/><br/>I've added a method to the AppGenerator class and a relevant test to ensure this directory is created.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/09553d244e9a7d5d652c000ded36d4ff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3287', 'title': u"Ensure that the directory 'vendor/assets/javascripts' is created by AppGenerator"}, {'body': u'Fixed typo in file railties/guides/source/engines.textile', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/37fb5d7247d26fbd3ae3fff62de978c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3286', 'title': u'Corrected typo'}, {'body': u'Hey, please validate if this is a valid fix for the issue #3280.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc66c82eada8b3869009812a61cf5993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3285', 'title': u'Fixes #3280: Shorthand route nested in scope produces missing controller error'}, {'body': u"Global variable `$rails_rake_task' not initialized Warning removed", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3278', 'title': u"Global variable `$rails_rake_task' not initialized Warning removed"}, {'body': u'I was waiting for new Active Record [first_or_create](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/relation.rb#L121) method (mentioned in [master changelog](https://github.com/rails/rails/blob/master/activerecord/CHANGELOG)) for Rails 3.1.1. But is was not merged into [3.1.1 stable](https://github.com/rails/rails/blob/3-1-stable/activerecord/lib/active_record/relation.rb) yet. Weird is, that this feature is not mentioned in Rails 3-1 branch [changelog](https://github.com/rails/rails/blob/3-1-stable/activerecord/CHANGELOG).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5d361c5cdfa815082d54022bc45ece2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3275', 'title': u'Improve ActiveRecord changelog'}, {'body': u'ambiguous first argument; put parentheses or even spaces Warning removed!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3274', 'title': u'ambiguous first argument; put parentheses or even spaces Warning removed!'}, {'body': u"JSON responder currently returns errors without an :errors root which I believe it should. I think that's how it is documented to work as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b3e33269ce1d3c9a580bac0f11436cf8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3272', 'title': u'JSON responder should return errors with :errors root'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3270', 'title': u'(small patch) fix invalid regex in testcase'}, {'body': u'expire_action can expire the custom path directly instead of passing :controller/:action for url generator.<br/><br/>For example, <br/><br/>```ruby<br/>caches_action :feed, :cache_path => proc do<br/>    if params[:user_id]<br/>      user_list_url(params[:user_id, params[:id])<br/>    else<br/>      list_url(params[:id])<br/>    end<br/> end<br/>```<br/><br/>So we can use **expire_action(list_url(params[:id]))** to expire the cache.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/83c8cca11558f32207645ca270ae8475?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3267', 'title': u'expire_action can expire by the custom path directly'}, {'body': u'Ok so here some more warnings removed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3266', 'title': u'Warnings removed when running with 1.9.3'}, {'body': u'URI.escape is obsolete : wanring removed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3265', 'title': u'URI.escape is obsolete : wanring removed'}, {'body': u'I wanted to be able to take advantage of custom subdomains for secure URLs, such as "https://secure.mysite.com" or piggy-back on Heroku\'s SSL.<br/><br/>Usage:<br/><br/>```ruby<br/>class FooController < ApplicationController<br/>   force_ssl :host => "secure.mysite.com", :only => :index<br/>   # ... <br/>end<br/>```<br/><br/>It strips out the `:host` key before passing off the options to the `before_filter` method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/023a6a37e8177cb2f84a236bbce643cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3262', 'title': u'Add optional host option to force_ssl'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3261', 'title': u'Test utf8 assets filenames with request instead of manifest lookup'}, {'body': u'The PostgreSQL adapter attempts to clear out the statement cache on `reconnect!`, which in turn issues a `DEALLOCATE` query for each cached statement. If the connection has been lost, the query results in an `PGError` being raised.<br/><br/>This change first checks the connection is OK before attempting to `DEALLOCATE` the statement.<br/><br/>Fixes issue #3160', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3ddf2897026370c1b869159ba19124ec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3258', 'title': u'Postgres: Do not attempt to deallocate a statement if the connection is no longer active.'}, {'body': u'We often use link_to to point to some record, for example:<br/><br/>    link_to product.name, product<br/><br/>I think that it is a good approach to make use of #to_s method in models to point, how that record is represented by string by default, so for example:<br/><br/>    class Product << ActiveRecord::Base<br/>      def to_s<br/>        name<br/>      end<br/>    end<br/><br/>That way, we can use that method in all links to that record:<br/><br/>    link_to product.to_s, product<br/><br/>so when we will have to change that default string representation of model (for example in User model, "#{first_name} #{last_name} instead of username), we will have to change it only in #to_s of that model, so for example.<br/><br/>Thanks for features of #to_s, we can shorten it to:<br/><br/>    link_to product, product<br/><br/>So it would be nice, if #link_to would be able to get url from body of link, if no url is given, so we would be able to do just simply:<br/><br/>    link_to product<br/><br/>I thought that maybe #link_to have already such as feature, but for now it produces link to the current page with product name.<br/><br/><br/>I wanted to try add such as feature, but I have problems with running Rails from Github, because of this bug: https://github.com/carlhuda/bundler/issues/1470<br/><br/>So I\'ve just edited files of action_view of Rails 3.1.1.rc1 from my installed gems, and this feature works on application which is using that gem, so I think that it will work with Rails from Github.<br/><br/>When that bug will be fixed, I can add tests for it, but if somebody want, go ahead and check if it is working with Rails from Github and write tests for it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6eded0937cdaaf986756ececa8718e76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3256', 'title': u'link_to(model) shorthand for link_to(model.to_title, model)'}, {'body': u"Your inbox will become dirty. I should be making one big PR's :-)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3255', 'title': u'App gitignore sqlnet log 3 1 stable'}, {'body': u"Sorry for again commit. It actually required in Application's .gitignore also.<br/><br/>Thanks :-)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3254', 'title': u'Sqlnet should also be ignored into the app gitignore'}, {'body': u'In case of oracle!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3253', 'title': u'Gitignore sqlnet file'}, {'body': u'Was added by de5c48c4e36ef477b641bf11d0f883f074164415', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3252', 'title': u'Remove unnecessary dup in expire_page'}, {'body': u'sqlnet.log file to gitignore. Generates when running with oracle! <br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3250', 'title': u'sqlnet.log file to gitignore. Generates when running with oracle! '}, {'body': u'Introduced here f41b58d3b25eb57ba5c890b713301ba2e3fcb9b7', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3249', 'title': u'Fixed BodyProxy.new for tests! for wrong argument'}, {'body': u"Fixed failing tests!<br/><br/>It's introduced here b992f529e8ca0d988fa384e0e73e36a927ab49a5", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3248', 'title': u'Query cache test fix 3 1 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3245', 'title': u"Fixed undefined method `second' in FormOptionsHelperTest"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5cba606090e5f29f910274796748f20a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3244', 'title': u"One of the activemodel naming tests wasn't asserting anything."}, {'body': u'(This was originally pull request #1670, but that was against 3-1-stable - this pull request is based against master instead).<br/><br/>Under thin, QueryCache is leaking connections.<br/><br/>This is caused by the fact that the thread that runs the QueryCache::BodyProxy#close method is not the same as the thread that executes QueryCache#call. A connection is checked out within QueryCache#call; this connection becomes orphaned, while a new connection is checked out within #close when theclear_query_cache call is made.<br/><br/>This patch prevents the connection checked out within QueryCache#call from being orphaned by creating an identifier that is stored within a thread local and used within ConnectionPool to uniquely identify the connection. This identifier is passed to BodyProxy at construction time and pushed into the thread that ultimately becomes responsible for the clear_query_cache call.<br/><br/>The connection is subsequently checked back in as expected at the end of the request lifecycle, plugging the leak.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3243', 'title': u'QueryCache/ConnectionPool thread fix (was #1670)'}, {'body': u"SUMMARY:<br/><br/>Active Record purports to support connecting to multiple databases from different models.<br/>Hence, never assume `ActiveRecord::Base.connection` is the correct connection!<br/><br/>This commit patches `ActiveRecord::Associations::AliasTracker` to fetch it's connection from the appropriate base model.<br/><br/>/cc @jonleighton<br/><br/><br/>MORE DETAILS:<br/><br/>I have 2 apps, 1 rails and 1 sinatra. both use active record.  I wrote some integration tests that test the API between the 2 apps over rack/rack-client so they run in the same memory space for these tests.<br/><br/>The apps have separate databases. The sinatra app initializes it's AR connection using an abstract model superclass which calls 'establish_connection'.  When this app runs on it's own, it never sets up (or needs to setup) ActiveRecord::Base.connection.<br/><br/>Recently with the upgrade from 3.0.9 to 3.1, tests where the sinatra app runs in isolation break with:<br/>ActiveRecord::ConnectionNotEstablished<br/><br/>I think this can be traced back to these 2 changes:<br/>https://github.com/rails/rails/commit/6490d65234b89d4d28308b72b13d4834fd44bbb3<br/>https://github.com/rails/rails/commit/e8874318b7a025ffd30df1a53c403eb9d8912c9f<br/><br/>these changes refactor alias_tracking into a new class `ActiveRecord::Associations::AliasTracker`, but introduce the regression of calling `ActiveRecord::Base.connection`.  Where previously it was `join_base.active_record.connection` or in the case of `AssociationScope` perhaps it didn't need a connection?  I get a little lost attempting to follow the code from just the diff.<br/><br/>I attempted to reproduce my scenario as minimally as possible with `no_base_connection_test.rb`.  To reproduce the error simply change the one-line implementation of `connection` in `alias_tracker.rb`, to what it was previously: `ActiveRecord::Base.connection`<br/><br/>I imagine some other convoluted failure scenarios could be contrived in which `ActiveRecord::Base.connection` connects to a database of one type, but another set of models connect to a database of a different type, and strange incorrect table quoting behavior might be observed.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dc893f8ae12045dc71048a0c6a56fc01?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3240', 'title': u'small [PATCH] to AliasTracker.connection fixes ConnectionNotEstablished'}, {'body': u"A blank password should change password_digest.<br/>Otherwise validations e.g.(on password length) with ````:if => :password_digest_changed?```` won't work.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0e8c41f8fafe51a9e98ae4b25a0869f8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3238', 'title': u'A blank password should change password_digest'}, {'body': u'With this patch, asset helpers especially image_tag can use data: scheme in its src.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a1cbed8bf64473e2acdd0c7066cc5b29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3237', 'title': u'Support data: url scheme'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3236', 'title': u'Fixed test_nonexisting_method_with_arguments to revert commit 29a5aea'}, {'body': u'In the comment for the doc:app rake task, "availble" should be spelled "available".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c69aac6da04a0bd37d2d4f5e3aa678e3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3233', 'title': u'Fix spelling in doc:app rake task'}, {'body': u"I'm using postgreSQL with multiple schemas.<br/><br/>Rails 3.1 uses prepared statements and does not take into account the 'schema_search_path'. This is a big problem because the statement is prepared once and then the same prepared statement is executed many times no matter if you changed the schema, i.e, the prepared statement is executed ALWAYS for the same schema, the one set when the statement was prepared.<br/><br/>This patch adds the schema search to the sql key to allow the use of prepared statements when changing schemas in postgreSQL, <br/><br/>Discussion here:<br/>https://groups.google.com/forum/#!msg/rubyonrails-core/r2VOKcyUyrs/JQj4MB_lhRMJ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f63a259f9b2375e2e900b8cfcc1420fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3232', 'title': u'Use the schema_search_path in prepared statements.'}, {'body': u'Current implementation of ActiveModel::Errors#to_json returns hash<br/>without full messages. <br/><br/>``` ruby<br/>@model.errors.to_json <br/>  # => "{\\"subdomain\\":[\\"can\'t be blank\\"],\\"title\\":[\\"is too short (minimum is 2 characters)\\"]}"<br/>```<br/><br/>But frontend has no clue how to humanize the attribute name and create full message.<br/>(assuming that to_json is in most cases used to pass data to another context e.g. to Web frontend or API client)<br/>This makes #to_json method useless and require to create own serializer.<br/><br/>In order to fix that changed the behavior so that #to_json returns full messages.<br/><br/><br/>I would say that any serializer of `AM::Errors` should return full message because generate full messages from that serialization without errors object is impossible. But this is still a point to discuss.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3231', 'title': u'Make AM::Errors#to_json usable'}, {'body': u'Ported #3229 for 3-1-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3230', 'title': u'ruby193: String#prepend for 3-1-stable'}, {'body': u"Ruby 1.9.3 has a new String method `prepend` which should be considered unsafe.<br/><br/>```ruby<br/>> 'foo'.html_safe.prepend('><').html_safe?<br/>=> true<br/>```<br/><br/>This patch only applies to master, I will make another pr for 3-1-stable branch.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3229', 'title': u'ruby193: String#prepend'}, {'body': u'Using Rails 3.1 and protecting some controller actions with HTTP digest authentication. Some actions accept filter parameters from the query string, and I have a button to "clear all filters". This \'reset\' effectively sets the query string to empty, but leaves the \'?\' on the URI. (1)<br/><br/>In Chrome, this causes the HTTP authentication to fail, while Firefox silently removes the trailing \'?\' and continues.<br/><br/>Some code examples follow, but I\'m not familiar enough with the HTTP specs to say if this is a bug in `ActionController::HttpAuthentication::Digest#validate_digest_response` or if the bug lies in `Rack::Request#fullpath`. However, I\'m filing the issue here as a starting point for discussion.<br/><br/>Here\'s the gist of my controller<br/><br/>```ruby<br/>class SecureController<br/>  before_filter :authenticate!<br/><br/>  def secret<br/>    # do some secure stuff<br/>  end<br/><br/>  def authenticate!<br/>    authenticate_or_request_with_http_digest("my_realm") do |username|<br/>      USERS[username]  # assume this is a username/digest hash defined elsewhere<br/>    end<br/>  end<br/><br/>end<br/>```<br/><br/>*STEPS TO REPRODUCE:*<br/><br/>> navigate to `http://localhost:3000/secure/secret`<br/>_=> prompted for username and password_<br/><br/>> enter valid user credentials<br/>_=> access granted, page renders_<br/><br/>> filter data with a query, e.g. `http://localhost:3000/secure/secret?foo=bar`<br/>_=> filtered data is returned_<br/><br/>> reset filter, e.g. `http://localhost:3000/secure/secret?` (2)<br/>_=> authentication fails, even with valid username/password_<br/><br/>In Chrome, the filter reset leaves the URL with a trailing \'?\'. In FireFox, the \'?\' is removed. However, if I manually type in the address `http://localhost:3000/secure/secret?` in FireFox, the authentication failure is replicated.<br/><br/>1. Actually, the filters and button are all generated automatically with Active Admin...<br/><br/>2. The code to reset the filters is actually JavaScript and is as follows:<br/><br/>```javascript<br/>  $(".clear_filters_btn").click(function(){<br/>    window.location.search = "";<br/>    return false;<br/>  });<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f5c893d10022c94d11aa9c430070f319?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3228', 'title': u"HTTP digest authentication fails when request URI ends with '?'"}, {'body': u"From #3222:<br/><br/>> @mjtko could you please provide a patch that is basically moving the write manifest to static compiler ?<br/><br/>Hi @josevalim et al!<br/><br/>Here is the new pull request.<br/><br/>Feel free to cherry-pick the changes you want - I've tested each of them in isolation but I think they're all reasonable enough.<br/><br/>Hope this patch has little enough cleverness for you! ;-)<br/><br/>Cheers,<br/><br/>Mark.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3225', 'title': u'assets rake task refactoring work - the sequel'}, {'body': u'This pull request incorporates the aforementioned failing test case in #3221, as well as significant refactoring to both the assets rake task and the `Sprockets::StaticCompiler` class.<br/><br/>All tests from assets_tests.rb pass in my environment (including the newly added test case).<br/><br/>I think these changes whip the assets rake task into a bit of a better shape and also open up the doors to creating some more fine-grained tests for the `StaticCompiler`.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3222', 'title': u'assets rake task refactoring work'}, {'body': u"This is a failing test case for the issue first described at https://github.com/rails/rails/pull/3199#issuecomment-2283644 namely 'assets:clean initializes the wrong environment so assumes the asset prefix of development, rather than the asset prefix definied in production'.<br/><br/>As a bonus, this patch also contains a small fix to the test I wrote yesterday for #3198. :)<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3221', 'title': u'Failing test for assets:clean task issue'}, {'body': u'fixed #2980. I think that this problem has 2 pieces. Testcase problem and config missing problem.<br/><br/>Testcase problem is regex error.<br/><br/>"//abc/" =~ /\\/\\/abc\\//<br/>=> 0 (not nil)<br/>"http://abc/" =~ /\\/\\/abc\\//<br/>=> 5 (not nil)<br/> "http://abc/" =~ /^\\/\\/abc\\//<br/><br/>therefore, problem was not happen.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3219', 'title': u'fixed #2980. I think that this problem has 2 pieces. Testcase problem and '}, {'body': u'the `to_formatted_s` instance method example is using an Array instead of a Range', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ecd20118eccc74fbe790e75a923de7e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3212', 'title': u'incorrect to_formatted_s example'}, {'body': u'Ignore public/assets folder in git by default for new application. It allows to get clean output status from git status command on production environment (after reake assets:precompile)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3210', 'title': u'Add public/assets folder to gitignore template'}, {'body': u':subdomain can now be specified with a value of false in url_for, allowing for subdomain(s) removal from the host during link generation. Closes #2025', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/14755f594c369d7fdaed2c0fdc759531?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3209', 'title': u':subdomain => false will remove all subdomains now. Closes #2025'}, {'body': u'Changing rake db:schema:dump to run :environment as well as :load_config, as running :load_config alone will lead to the dumper being run without including extensions such as those included in foreigner and spatial_adapter.<br/><br/>That is, these libraries are set up to register their extensions through railties and ActiveSupport.on_load(:active_record), but the libraries are never loaded with :load_config alone, so they are never run.<br/><br/>This reverses a change made here: [5df72a2](https://github.com/rails/rails/commit/5df72a238e9fcb18daf6ab6e6dc9051c9106d7bb#L0L324)<br/><br/>I\'m assuming here that :load_config needs to be invoked separately from :environment, as it is elsewhere in the file for db operations, if not the alternative is to go back to "task :dump => :environment do".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4493ae064e6e2841f376fd1dc12b7ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3208', 'title': u'Change rake db:schema:dump to load schema dumper extensions such as those used by foreigner and spatial_adapter'}, {'body': u'Fixes documentation to say that as_json transforms it into a hash rather than a JSON String.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/49eb0eb4881b898ad2e464296025ee00?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3206', 'title': u'as_json documentation says that as_json returns a string.'}, {'body': u"Quoted path to <Rails.env>_structure.sql file in db:test:clone_structure task.<br/><br/>Leaving the path unquoted causes errors in paths containing spaces or dashes. So far as I can tell Rails doesn't have tests for rake tasks otherwise I would have written one.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/238ef07c3c64486de45c3751c9c88726?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3203', 'title': u'db:test:clone_structure if path to .sql file contains spaces or dashes'}, {'body': u"Versions of rack-cache prior to 1.1 delete the If-Modified-Since and If-Not-Modified headers when<br/>`config.action_controller.perform_caching` is true.<br/><br/>This creates  two problems:<br/> * unexpected, inconsistent behaviour between development & production environments<br/> * breaks (production) applications that use of these headers -- really ungood for people trying to develop things that speak sensible HTTP.<br/><br/>I originally opened #3053 about this, but then discovered that Rails wasn't the culprit. The solution is upgrading to 1.1, which doesn't break anything as far as I could tell.<br/><br/>My test & changes are based off of master. I believe rack-cache 1.0.3 first appeared in some beta incarnation of 3.1, so it'd be good to get it into those branches if possible.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40f438095ffe6ce6a6ccffc4837e80d2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3202', 'title': u'Use rack-cache 1.1'}, {'body': u'Just a small spelling error....', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4e8076a0fdac6b8f284d8b316efdf7f3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3200', 'title': u'Rescuable spelling error'}, {'body': u'Patch and associated test to fix #3198.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3199', 'title': u'(Fix) Asset pipeline unexpectedly removes digest assets - 3.1.1.rc2'}, {'body': u"AV::TestCase, AM::TestCase and AC::TestCase classes have class method <tt>tests</tt>. It allow to set manually testing class if it can't be determened from test case name automatically. It's rather hard to find <tt>tests</tt> method in real life but it can be usefull in big projects.<br/><br/>I suggest to make these methods a little bit flexible. @josevalim found 8e946daf6957b46744a90d25266b0ec5e8537079 (changes ActionController::TestCase#tests) suitable. I prepared changes for ActionMailer and ActionView also. <br/><br/>https://github.com/avakhov/rails/commit/0defbc6bfeff053983ef65739b2dcc080b2ad227#diff-0<br/>AM::TestCase uses <tt>constantize</tt> for conversion and raise NonInferrableMailerError exception in case of error. It almost keeps original behaviour from AM::TestCase#determine_default_mailer: https://github.com/rails/rails/blob/41c8277a9b04dda40972bbafa2dbfc00c5c238fb/actionmailer/lib/action_mailer/test_case.rb#L31<br/><br/>https://github.com/avakhov/rails/commit/8df7fe3f630e13da1585c151f6f2f986ea7dcdfd#diff-0<br/>AV::TestCase uses <tt>safe_constantize</tt> and not raise any exceptions. It's closer to AV behaviour just to check <tt>helper_class</tt>: https://github.com/rails/rails/blob/64b0c8888b908ede5372e0a70cb4cb8731d372ba/actionpack/lib/action_view/test_case.rb#L86<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3196', 'title': u'Improve tests method for ActionView::TestCase and ActionMailer::TestCase'}, {'body': u"Suggest improve a little syntax for ActionController::TestCase test method.<br/><br/>If it's ok I create similar commits for ActionMailer and ActionView (not create pull requests yet): 33168c5a1c7cbdbfb6be0a78cb01cd52bf5633f2 and 9a8a3230dd907e79309f576135b6bde160b764a2", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3194', 'title': u'normalize arg for AC::TestCase tests class method'}, {'body': u'Similar e8987c30d0dc3ae5903a6d3a6e293641759b6fc4', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3193', 'title': u'use safe_constantize instead constantize in AC::TestCase'}, {'body': u'The change in PR #3121 introduces a regression in the behaviour of the `assets:precompile` task when the task is enhanced. e.g.<br/><br/>```ruby<br/>Rake::Task[\'assets:precompile\'].enhance do<br/>  puts "Precompiling themes..."<br/>  # ...<br/>end<br/>```<br/><br/>Using `ruby` rather than `Kernel.exec` causes the task enhancement to run multiple times (3 times in 3.1.1.rc2) when it should run only once. This is because `ruby` forks and continues running the task (and its enhancements) after it is called, whereas `Kernel.exec` replaces the current process.<br/><br/>Explicitly calling `exit` after calling `ruby` fixes this issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3192', 'title': u'Fix regression in assets:precompile task when task is enhanced'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3191', 'title': u'To support ActiveRecord unit tests for IBM DB2'}, {'body': u'Removes the recursive Rake call that compiles the assets without digests, as it does not play well when `assets:precompile` is called from or enhanced by another rake task.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3189', 'title': u'Refactor assets:precompile task to avoid (one of the) Rake tail-calls'}, {'body': u'In 2.3, the application trace displayed in the browser when an error occurs, contains literally "<a href=..." instead of a clickable link to the offending line. This patch simply removes the incorrect "h" escaping call.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d3a67995dec8ea93c52fe752ec4d3004?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3187', 'title': u"Don't html-escape <a> links in the development mode's stack trace."}, {'body': u'Warnings removed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3186', 'title': u'Void context warnings removed 3 1 stable'}, {'body': u'Warnings removed!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3185', 'title': u'Use of :: in void context Warning removed'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3181', 'title': u'Modified how to handle if ActiveRecord is defined.'}, {'body': u'Follow the guide ,I think its value  should set false by default . disable it can increase the speed of the request time in development mode.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9d438bc8e2498ccb87754c9e41674ccd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3180', 'title': u'Set config.assets.debug to false by default in development.rb  '}, {'body': u"warning removed : '&' interpreted as argument prefix", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3178', 'title': u"warning removed : '&' interpreted as argument prefix"}, {'body': u'Warnings removed possibly useless use of :: in void context', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3177', 'title': u'possibly useless use of :: in void context Warning removed'}, {'body': u"This is a clone of pull request #3172  but sending it to master instead.<br/><br/>When you've got an AR Model and you override the `as_json` method, you should be able to add default options to the renderer, like this:<br/><br/>```ruby<br/>class User < ActiveRecord::Base<br/>  def as_json(options = {})<br/>    super(options.merge(:except => [:password_digest]))<br/>  end<br/>end<br/>```<br/><br/>This was not possible before this commit. See the added test case.<br/><br/>Thanks<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4dc7bd4eef74839f5331c580fa88fd1f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3175', 'title': u'Allow default options for `as_json` method on models'}, {'body': u'Added fix so that file store does not raise an exception when cache dir does not exist yet. This can happen if a delete_matched is called before anything is saved in the cache.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c64b3d19b97bf48ab60ee203c96c405a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3174', 'title': u'Fixed file store to handle delete_matched being called before cache dir is created.'}, {'body': u"When you've got an AR Model and you override the `as_json` method, you should be able to add default options to the renderer, like this:<br/><br/>```ruby<br/>class User < ActiveRecord::Base<br/>  def as_json(options = {})<br/>    super(options.merge(:except => [:password_digest]))<br/>  end<br/>end<br/>```<br/><br/>This was not possible before this commit. See the added test case.<br/><br/>Thanks<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4dc7bd4eef74839f5331c580fa88fd1f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3172', 'title': u'Allow default options for `as_json` method on models'}, {'body': u"Do i need to provide some tests? I think it's possible, but i haven't a good idea about how to test this behavior.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5adcc3757d6c4f5609aa2dc3b41f4705?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3171', 'title': u'There is no actual need of calling self.klass if there is option options[:primary_key]'}, {'body': u'Hi all.<br/><br/>Current implementation of `Rails::Generators::Actions#rake` disregards set `RAILS_ENV` environment. Not sure if this is intentional, but there are some use cases where this behavior is harmful. E.g., ponder on writing a thor script, including `Rails::Generators::Actions` to it and calling rake from it. Like this:<br/><br/>```ruby<br/>class Setup < Thor<br/>  include Rails::Generators::Actions<br/><br/>  desc "db", "initialize db and load schema"<br/>  def db<br/>    rake "db:setup"<br/>    rake "db:test:clone"<br/>  end<br/>```<br/><br/>If you call it from command line like `RAILS_ENV=staging thor setup:db`, you\'ll surprisingly find out, that rake is being explicitly run in development environment, and this definitely violates the [POLA](http://en.wikipedia.org/wiki/Principle_of_least_astonishment).<br/><br/>Suggested patch just honors `RAILS_ENV` variable set.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4486876726bcef5b87268564fc29e6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3167', 'title': u'RAILS_ENV environment variable is ignored when running rake from thor script using Rails::Generators::Actions'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3162', 'title': u'Allow setting of custom compiler for assets precompiling'}, {'body': u'See previous discussion here: https://github.com/rails/rails/issues/2294<br/><br/>Since this functionality can now be added without changes to the Sprockets codebase, I want to again propose that this functionality is added. It is a port of my digestion gem (https://github.com/spohlenz/digestion) that allows specific asset paths to be excluded from digest fingerprinting.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3161', 'title': u'Add config.assets.digest_exclusions config option [fixes #2294]'}, {'body': u"This fixes issue #3158, wherein digest authentication headers weren't including the query string when generating the request digest.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fe9801b2169e088c6965fc87a77dc4e9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3159', 'title': u'Fixed digest authentication for requests with a query string [#3158]'}, {'body': u'see #3154, we need a way can add attributes to form tag:<br/><br/>    <%= button_to "foo", "/foo", :remote => true, :form => { "data-type" => "json" } %><br/><br/>will generate<br/><br/>    <form method="post" action="/foo" class="button_to" data-remote="true" data-type="json"><div><input  type="submit" value="foo" />...</div></form><br/><br/>p.s. there is a "form_class" option may become redundant since we can pass :form => { :class => "custom_class" }', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c38fd9074fb072551c0ff80ccd90d24e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3156', 'title': u'Make button_to helper support "form" option'}, {'body': u'Following on discussion from #3151, this is an implementation of `String#pluralize` that includes updated tests an an additional `plural` argument to override the inflector.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6cb846fa3915943695482f6bf78084b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3155', 'title': u'added optional count and plural arguments to String#pluralize'}, {'body': u'We may use data-type attribute to set Ajax request type for "data-remote" requests. (see [jquery-ujs wiki](https://github.com/rails/jquery-ujs/wiki/Unobtrusive-scripting-support-for-jQuery))<br/>link_to helper has no problem, but button_to will add "data-type" to the wrong input tag and does not work:<br/><br/>     <%= button_to "foo", "/bar", :remote => true, "data-type" => "json" %><br/><br/>     <form method="post" action="/bar" data-remote="true" class="button_to"><div><input data-type="json" type="submit" value="foo" />...</div></form><br/><br/>The "data-type" should be in form tag with "data-remote" , not input tag. This patch result:<br/><br/>    <form method="post" action="/bar" data-remote="true" data-type="json" class="button_to"><div><input  type="submit" value="foo" />...</div></form><br/><br/>It will be nice also backport to 3-1-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c38fd9074fb072551c0ff80ccd90d24e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3154', 'title': u'Fix button_to helper for data-type option'}, {'body': u'Fixed failing test http://travis-ci.org/#!/rails/rails/builds/189790/L87', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a647b68e3ff3335e06f78d05fa657e3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3152', 'title': u'Fixed failed test under 1.8.7 as map.keys order in indeterminable'}, {'body': u"The `include_count` parameter makes `pluralize` more flexible by giving the ability to pluralize a word based on a count without necessarily having to include the count at the beginning of the string.<br/><br/>I came across this while trying to generate markup of the form `<b>3</b> dogs`, which isn't possible without the `include_count` parameter.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16f606d6f3cd4f7b742ec0d6db1674bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3151', 'title': u'Added include_count parameter to pluralize.'}, {'body': u'CGI is used here (line 166) : https://github.com/rails/rails/tree/master/actionpack/lib/action_controller/vendor/html-scanner/html/sanitizer.rb#L166', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3150', 'title': u'add missing require to html sanitizer'}, {'body': u'Before this fix Model.except(something) wouldn\'t get rid of \'something\'<br/>clauses in the query. Same thing for Model.only().<br/><br/>The two deleted lines were introduced [here](https://github.com/rails/rails/commit/8572ae6671c6ec7c2524f327cee82215896e5648#L5R75) to "evaluate default scopes at the last possible moment" and that made impossible to remove conditions from the default scope. The behavior after this fix is the same we had before Rails 3.1, which means #except and #only can modify the default_scope.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aebc2d07a50011e2a30d38435fde564a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3143', 'title': u'fix #except and #only with `default_scope`'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3142', 'title': u'Fixes #3087'}, {'body': u'The Rails configuration option "enforce_ssl" is handy but is currently unable to take advantage of features in Rack::SSL, such as passing a Proc to the middleware to exclude certain urls or url patterns from being redirected to https.  This patch allows the user to specify ssl_options which are passed directly to the Rack::SSL middleware on initialization if enforce_ssl is set to true.<br/><br/>Without this patch the user must insert the Rack::SSL middleware onto the stack manually in order to add configuration options.<br/><br/>This patch also adds a test for the passing of options to the Rack::SSL middleware and adds mention of the ability to configure Rack::SSL to configuring.textile.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c3dce717fc1f2915c5cd966680b7f1f7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3141', 'title': u'Make the Rack::SSL middleware configurable'}, {'body': u'Added support for a user-specified console rc file ("config/console_rc.rb").  This the gives the user the ability to define convenience methods for the console that are specific to a particular project.  <br/><br/>This plays a different role than `.irbrc` as it is project-specific and thus can be versioned with the rest of the project and used by other users and on different servers.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16f606d6f3cd4f7b742ec0d6db1674bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3139', 'title': u'Added support for a user-specified console rc file ("config/console_rc.rb")'}, {'body': u"This commit https://github.com/rails/rails/commit/0cb84f18d646dda6e46bab86a2c817ded0da0d10 broke the `image_path` helper when the assets pipeline is enabled. <br/><br/>Instead of `/assets` it would prepend `/images` when `image_path()` was used. This is due to the way `image_path` and `path_to_image` are aliased to each other in `asset_tag_helper`<br/><br/>This patch fixes the `image_path` helper.<br/><br/>I am perplexed as to why in `sprockets_helper_text` what is tested is `asset_path`, an undocumented method, and not `image_path` which is the publish API (along with `video_path`, `audio_path` and all its siblings)<br/><br/>Shouldn't the test be refactored somehow?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/919feaa12651b668d8ee9a41215b1976?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3138', 'title': u'Correctly override image_path in sprockets rails_helper'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3136', 'title': u'Avoid use of existing precompiled assets during rake assets:precompile run'}, {'body': u"It would seem that if one precompiles an application's assets, thus creating a `manifest.yml` file, the value of `config.digest` is ignored.<br/><br/>This issue might go unnoticed in **production** (assets are precompiled) or in **development** (assets are compiled on-demand) but it has caused me considerable pain in **test**. Given the following in `test.rb`<br/><br/>     config.serve_static_assets = true<br/>     config.assets.digest = false<br/> <br/>...calling `asset_path` appends a digest to the asset path, making all views un-testable for the presence of said asset.<br/><br/>This patch fixes this.<br/><br/>Do I need to back port this against **3-1-stable**? I can open another pull request but as it currently applies cleanly, it might be unnecessary...", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/919feaa12651b668d8ee9a41215b1976?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3135', 'title': u'Give precedence to `config.digest = false` over the existence of manifest.yml asset digests'}, {'body': u"I'm running the bug mentioned here: http://projects.puppetlabs.com/issues/8800 on several projects when updating from Rails 2.3.10 to Rails 2.3.14 on RubyGems 1.3.5.<br/><br/>The patch mentioned in the pull request here: https://github.com/rails/rails/pull/2818 seems to work properly, although that pull request seems to include a whole load of other commits, so hereby a pull request with one commit.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b03a585714720f790097be85dee458c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3134', 'title': u'Patch for bug on RubyGems 1.3.5 in 2 3 stable'}, {'body': u"Based on http://projects.puppetlabs.com/issues/8800 and https://github.com/rails/rails/pull/2818<br/><br/>Without it, my applications won't start at all (updated from Rails 2.3.10 to Rails 2.3.14)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b03a585714720f790097be85dee458c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3133', 'title': u'Patch for bug on RubyGems 1.3.5 in 2 3 stable'}, {'body': u"The ActiveResource::Base.build method currently doesn't send the custom headers with the request for the /new resource. This is required when ARes is interacting with a REST API which uses HTTP header authentication instead of HTTP basic authentication.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4dcfd2f7d671af330bcba3fe03277c71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3132', 'title': u'ActiveResource::Base.build should send headers'}, {'body': u"I've done a quick fix on this method that returned me `nil` when Mime::Type `@string` is 'application/json'.<br/><br/>The method fail because `@string =~ /html/` return nil when @string do not contains 'html'.<br/>I've updated an existing test in order to check the method when using HTTP_ACCEPT and CONTENT_TYPE, not the route ending with `.json`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/609b69cbb09257883a4e32d7d5aff098?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3127', 'title': u'Mime::Type#html? should always return true/false, never nil.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1700eeb3b7d7cc960e03a016be7dcaff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3125', 'title': u'Implement Mime::Type#respond_to? (consistently with #method_missing) Closes #3032'}, {'body': u"Hello!<br/><br/>I noticed a difference between 2 very similar method implementations:<br/><br/>https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers.rb#L19<br/><br/>https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/asset_tag_helpers/stylesheet_tag_helpers.rb#L20<br/><br/>The commits 871b87a, 8db51ee3c created this difference. But at 2007 html safe buffers didn't exist at all. Stylesheet link implementation with manual escaping of path traveled from one file to another. Now it's dangerous, because it's possible to pass unsafe options as in the test in my commit.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3124', 'title': u'escape options for the stylesheet_link_tag method'}, {'body': u'https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/string/output_safety.rb#L19<br/><br/>at the line 19 the input param is strigified already.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3123', 'title': u'remove superfluous to_s in ERB::Util.html_escape'}, {'body': u'The Kernel.exec method launches the current program ($0) after setting some environment variables.  This current ruby script has a shebang line and no .rb in its name. Launching a script this way does not work on Windows. By using the +ruby+ method that is included in Rake, we can launch the current script with the current ruby version and bypass the identified Windows issue.<br/><br/>This patch should be applied to 3-1-stable and master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a70654b096e9bf5adc83132beebe230b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3121', 'title': u'Re-launch assets:precompile task using (Rake.)ruby instead of Kernel.exec so it works on Windows'}, {'body': u'Designed to remove the need to do something like this:<br/><br/>  var = complex_expression<br/>  var.some_predicate? ? var : nil<br/><br/>  @user.try(:valid?) && @user<br/><br/>Instead, expressed in terms of return_if, becomes:<br/><br/>  complex_expression.return_if(:some_predicate?)<br/><br/>  @user.return_if(:valid?)<br/><br/>Which will return *nil* if the predicate evaluates to false, or the receiver if the predicate evaluates to true. Also accepts scopes in the form of a string, with method names separated by a dot \'.\'. Such as:<br/><br/>  @user.return_if("pages.all?") { |page| page.has_title? } # => @user/nil<br/><br/>Calls the block passed with the receiver if no method is given. <br/><br/>  @user.return_if { |u| u.activated? }<br/><br/>Recommend checking out the documentation provided for more details.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5895e46682709b1bc8aeb0677231be73?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3120', 'title': u'Object#return_if - designed to simplify common pattern similar to Object#try'}, {'body': u'Remove Sprockets compute_public_path, AV compute_plubic_path can be used directly', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3115', 'title': u'Remove Sprockets compute_public_path, AV compute_plubic_path can be used '}, {'body': u'This is just to correct a small documentation error that was introduced in 310565f.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16f606d6f3cd4f7b742ec0d6db1674bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3114', 'title': u'Minor doc fix to String#constantize'}, {'body': u'Patch to solve issue here: https://github.com/rails/rails/issues/3093<br/><br/>Allows you to pass a block to link_to_function (similar to link_to) if the link text is too complex to be passed as a string argument.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5895e46682709b1bc8aeb0677231be73?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3108', 'title': u'Added option to pass block to link_to_function'}, {'body': u"Any nested resources with an ActiveResource object are not persisted so actions such as destroy won't work.<br/>This patches ActiveResource::Base#load to set any nested resources as persisted.<br/><br/>I was debating simply passing in true as opposed to attrs.has_key?(resource.primary_key.to_s), thoughts?<br/><br/>I also changed the setup fixtures keys in load_test.rb to be strings, to avoid calling stringify_keys everywhere (should be working with string keys anyways through ActiveResource).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b3e33269ce1d3c9a580bac0f11436cf8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3107', 'title': u'Fix ActiveResource nested resources not being persisted'}, {'body': u'I fixed a bug with the json serialization when the class setting is set to not include the root, but an instance is serialized with the root option passed as true.<br/><br/>Test added, existing tests were unmodified and are still passing.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c69521d6e22fc0bbd69337ec8b1698df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3106', 'title': u'ActiveModel JSON serialization bug fix'}, {'body': u'`safe_constantize` is similar to `constantize` except that it returns `nil` when the given `String` does not correspond to a defined constant (instead of raising a `NameError`).  This was inspired by some discussion around my proposal for a `String#is_a_class_name?` method.  Jos\xe9 Valim suggested `safe_constantize` as more flexible alternative to `is_a_class_name?`-- the equivalent syntax would be `my_string.safe_constantize.is_a?(Class)`.<br/><br/>I also refactored the `ActiveSupport::Inflector.*constantize` tests so that both the `ActiveSupport::Inflector` and the `String` `*constantize` methods are tested.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16f606d6f3cd4f7b742ec0d6db1674bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3105', 'title': u'safe_constantize'}, {'body': u'Working with @josevalim so we can fix this issue https://github.com/plataformatec/devise/issues/1339', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/efb7c66871043330ce1310a9bdd0aaf6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3103', 'title': u"set env to let rails and co. (read gems) know we're precompiling"}, {'body': u'ActiveRecord requires sqlite3 to be ~> "1.3.4", but the Gemfile says ~> "1.3.3". This is a commit to bump it so the tests run.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/efb7c66871043330ce1310a9bdd0aaf6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3102', 'title': u'Bump sqlite3 in Gemfile to 1.3.4'}, {'body': u'When passing objects and options to named routes like profile_customer_url options are modified.<br/>New keys are added: :_positional_args, :_positional_keys, because given options are first modified and then merged to returned hash.<br/>This bug was introduced by version 3.1.0, this pull request corrects this behavior, it contains test and fixed code .', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6227374304a32792244c0043ec4dce36?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3099', 'title': u'Named routes are modifying passed options'}, {'body': u'I found myself needing a method to tell me whether or not a given `String` is the name of a defined class (in other words a `String` that when `constantized` refers to a `Class` object).  I discovered that [other people](http://stackoverflow.com/questions/1187089/how-do-i-check-if-a-class-already-exists-in-ruby) had the same need.  This is a simple method on `String` to do just that.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16f606d6f3cd4f7b742ec0d6db1674bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3098', 'title': u'String#is_a_class_name?'}, {'body': u"Closes #3088<br/><br/>The error on 1.9.2 is raised here.<br/>https://github.com/ruby/ruby/blob/ruby_1_9_2/lib/date.rb#L615<br/><br/>I'm going to send a pull request to fix this in ruby, but this pr has the goal to bring the fix to older versions or ruby too.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3097', 'title': u"raise an appropriate ArgumentError when the date couldn't be parsed"}, {'body': u"A few problems with FileStore.<br/><br/>```ruby<br/>          # Make sure file name is < 255 characters so it doesn't exceed file system limits.<br/>          if fname.size <= 255<br/>            fname_paths << fname<br/>          else<br/>            while fname.size <= 255  #*** 1. This should be frame.size > 255<br/>              fname_path << fname[0, 255]  #*** 2. The variable is called frame_paths not frame_path<br/>              fname = fname[255, -1] #*** 3. This always returns nil, should be frame[255..-1]<br/>            end<br/>          end<br/>```<br/><br/>1. The while loop here will never run because it should be fname.size > 255 not <=.  <br/>2. The variable in the while loop should be fname_path**s** not fname_path<br/>3. fname[255, -1] always returns nil, it should be using frame[255..-1]<br/>4. File.atomic_write hooks into Tempfile, which automatically appends random characters to the end of the filename.  Since atomic_write is called after the filename is broken in to 255 character chunks, there is a chance that Tempfile will append extra characters to the filename so that it exceeds 255 characters.<br/><br/><br/>**tldr; Refactored FileStore#key_file_path so that it properly splits the filename into directories when the filename is too long for the filesystem.**<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c64b3d19b97bf48ab60ee203c96c405a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3096', 'title': u'FileStore key_file_path does not properly limit filenames to 255 characters'}, {'body': u'A simple change to actionpack/lib/sprockets/helpers/rails_helpers.rb, based off this previous commit:<br/><br/>https://github.com/rails/rails/commit/2684f17a17e4f97bdb89d20b4cd08585235263a2<br/><br/>which I found when encountering this problem:<br/><br/>http://www.ruby.code-experiments.com/blog/2011/09/a-problem-with-the-rails-31-asset-pipeline.html<br/><br/>I would appreciate feedback on the tests, specifically the "alternate asset prefix" test on line 345 of the updated sprockets_helper_test.rb.<br/><br/>Albert<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a7c1bd011419bd06463527bb7b488643?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3092', 'title': u'Sprockets to use config.assets.prefix, with tests'}, {'body': u"restore jquery-rails dependency to prevent 'couldn't find jquery' error in newly generated Rails 3.1 engines (ref: [http://bit.ly/n65tsC](http://bit.ly/n65tsC)); enabled for mountable engines as well.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dcfde00ac1fae8b575b2f9b39c7e244b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3091', 'title': u"restore jquery-rails dependency to prevent 'couldn't find jquery' error in newly generated engines"}, {'body': u'I somehow missed adding "the" last time I edited this. I must have hit undo before proposing the patch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f2bef52a79e8016894602a2f7eb0a82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3086', 'title': u'I somehow missed adding "the" last time I edited this. I must have hit un'}, {'body': u"Add a missing require for 'active_support/deprecation' in Module#deprecate", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d04cf9da2cc22288970d93858e1a36c9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3084', 'title': u'Dependency fix for activesupport'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3081', 'title': u'Move precompiling from task to Sprockets::StaticCompiler'}, {'body': u'I have an app that is using a legacy db with "year" column types, not produced via migrations.<br/><br/>This change allows us to produce a schema file from the db.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f8d64945b3ebd2705950a9775f2232a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3079', 'title': u'V3.0.10 tweak to handle dumping schema for mysql column type "year" as int'}, {'body': u'Replace line repeatings with a loop  ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ea659696522572e50cdf1ca972a7331b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3074', 'title': u'DRY code in /tasks/release.rb'}, {'body': u"rake test fails when mysql, mysql2 and postgresql tested. It finishes successfully for sqlite.<br/>because SQLite3::VERSION value cannot be get unless current adapter is SQLite3Adapter.<br/><br/>```ruby<br/><br/>$ cd activerecord<br/>$ rake test<br/>... snip ...<br/>Using mysql with Identity Map off<br/><br/>  1) Error:<br/>test_cache_does_not_wrap_string_results_in_arrays(QueryCacheTest):<br/>NameError: uninitialized constant QueryCacheTest::SQLite3<br/>    /home/yahonda/Dropbox/git/rails/activerecord/test/cases/query_cache_test.rb:151:in `test_cache_does_not_wrap_string_results_in_arrays'<br/>    /home/yahonda/.rvm/gems/ruby-1.9.2-p290@rails_master/gems/mocha-0.10.0/lib/mocha/integration/mini_test/version_142_to_172.rb:27:in `run'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:35:in `block in run'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/callbacks.rb:408:in `_run_setup_callbacks'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:34:in `run'<br/><br/>3150 tests, 9670 assertions, 0 failures, 1 errors, 0 skips<br/><br/>... snip ...<br/>Using mysql2 with Identity Map off<br/><br/>  1) Error:<br/>test_cache_does_not_wrap_string_results_in_arrays(QueryCacheTest):<br/>NameError: uninitialized constant QueryCacheTest::SQLite3<br/>    /home/yahonda/Dropbox/git/rails/activerecord/test/cases/query_cache_test.rb:151:in `test_cache_does_not_wrap_string_results_in_arrays'<br/>    /home/yahonda/.rvm/gems/ruby-1.9.2-p290@rails_master/gems/mocha-0.10.0/lib/mocha/integration/mini_test/version_142_to_172.rb:27:in `run'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:35:in `block in run'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/callbacks.rb:408:in `_run_setup_callbacks'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:34:in `run'<br/><br/>3134 tests, 9638 assertions, 0 failures, 1 errors, 0 skips<br/><br/>... snip ...<br/>Using postgresql with Identity Map off<br/><br/>  1) Error:<br/>test_cache_does_not_wrap_string_results_in_arrays(QueryCacheTest):<br/>NameError: uninitialized constant QueryCacheTest::SQLite3<br/>    /home/yahonda/Dropbox/git/rails/activerecord/test/cases/query_cache_test.rb:151:in `test_cache_does_not_wrap_string_results_in_arrays'<br/>    /home/yahonda/.rvm/gems/ruby-1.9.2-p290@rails_master/gems/mocha-0.10.0/lib/mocha/integration/mini_test/version_142_to_172.rb:27:in `run'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:35:in `block in run'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/callbacks.rb:408:in `_run_setup_callbacks'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks'<br/>    /home/yahonda/Dropbox/git/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:34:in `run'<br/><br/>3218 tests, 9959 assertions, 0 failures, 1 errors, 0 skips<br/><br/>Test run options: --seed 3894<br/>Errors running test_mysql, test_mysql2, test_postgresql<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3070', 'title': u'Define sqlite3_version only when current_adapter is SQLite3Adapter.'}, {'body': u'Hello,<br/><br/>Currently delegate methods must point to methods of the same name. <br/><br/>This patch adds the ability to have differing names between delegate methods and the<br/>methods they delegate to via a hash argument, with the keys being the new, delegate<br/>method and the values being the original, method being delegated to (similar to alias/alias_method).<br/><br/>(This patch is merely an extension of the existing functionality, the existing API still works as before.)<br/><br/>\u2014 Travis<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3ee6c3893e75232ed43ed4e8e9a7cf39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3069', 'title': u'Ability to explicitly name delegate methods and the methods they delegate to'}, {'body': u'The current behavior is that the ignored non-project files are hardcoded to test/dummy in the generated .gitignore. The patch makes .gitignore a template and ensures that the test dummy directory corresponds to the supplied path if the --dummy-path option is supplied (or not).<br/><br/>I included a sanity check test that passes for the current behavior and one for the new behavior.<br/><br/>Mike<br/><br/>P.s. First time committing, hope things look OK. Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b0c31b2dad1edd570adff34f672e6314?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3066', 'title': u'When running plugin new the generated .gitignore should include non-project files in test dummy'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3065', 'title': u'Fix test to reflect use of to_param for keys'}, {'body': u'This Sqlite3 should be in if block.<br/>Was giving error because sqlite3 is not loaded<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3064', 'title': u'fix test error when running with postgresql.'}, {'body': u'Version 0.46 depends on rbx-require-relative, which requires Ruby 1.9.2.<br/><br/>**Note**: This is in the `platforms :mri_18` block in the Gemfile.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3062', 'title': u'Lock linecache to <= 0.45'}, {'body': u"for Sqlite3 in AR-JDBC.It's Jdbc::SQLite3::VERSION<br/><br/>/cc @spastorino", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3060', 'title': u'Query cache test 3 1 stable'}, {'body': u"for Sqlite3 in AR-JDBC.It's Jdbc::SQLite3::VERSION", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3058', 'title': u'Fixed test for JRuby. '}, {'body': u'THis version is compatible with 3.1 and above', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3057', 'title': u'Bump AR-JDBC version.'}, {'body': u'THis version is compatible with 3.1 and above', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3056', 'title': u'Arjdbc bump'}, {'body': u'Also, reduced plural/singular regex-rules by one each.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df08a0889bad0229c372f702976a3da6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3055', 'title': u'added pluralization for "bonus"'}, {'body': u'When using a video_tag with multiple sources in production the files are not found if using the asset unique fingerprints. When source is not an array video_tag has the expected result.<br/><br/>Also, I want to add type attribute to each source. The final markup should be<br/><br/>```html<br/><source src="/assets/video-afafsafa876fa8f76af6af7a6faaf8f6f.mp4" type="video/mp4" /><br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/840125df8ab996b3f6f84327e4becb30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3050', 'title': u'Make sure video tags with multiple sources works with asset fingerprints.'}, {'body': u"As follows from #1555 `ActiveSupport::SafeBuffer#sub/gsub` won't set method-local globals for block on 1.8 ruby.  <br/><br/>Because of that Hash#to_query breaks when safe string is used as key (underneath CGI.escape invokes gsub with block on all items of hash):<br/><br/>```<br/>  >> { '^^'.html_safe => ':(' }.to_query<br/>  NoMethodError: You have a nil object when you didn't expect it!<br/>  You might have expected an instance of Array.<br/>  The error occurred while evaluating nil.size<br/>```<br/><br/>The fix is simple use `to_param` on key instead of `to_s` since it is an alias of `to_s` for simple objects and alias of `to_str` for `ActiveSupport::SafeBuffer`.<br/><br/>I've provided test to show behavior.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3049', 'title': u'Fix Hash#to_query edge case with html_safe string on 1.8 ruby'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/25e782eb7e799e78d781b0026fc6a4d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3048', 'title': u'Fix typo in deprecation notice'}, {'body': u'The ActiveResource base error tests mock posts with incorrectly structured JSON errors.<br/>This fixes those mocks and patches ActiveResource to correctly parse JSON errors.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b3e33269ce1d3c9a580bac0f11436cf8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3046', 'title': u'Fix ActiveResource JSON error parser and incorrect tests'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab074ca0a48f06ab110c374fc7db258e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3044', 'title': u'Paragraph about using variables in I18n translations was added to I18n Guide'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab074ca0a48f06ab110c374fc7db258e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3043', 'title': u'Paragraph about using variables in I18n translations was added to I18n Guide'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5fe204135849ac59602946d565992285?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3042', 'title': u'Fix typo in deprecation warning.'}, {'body': u"config.action_controller.asset_host shouldn't set to nil during precompile", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3040', 'title': u"config.action_controller.asset_host shouldn't set to nil during precompile"}, {'body': u'This comes from a suggestion in the comments of #2649', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3039', 'title': u'Skip app/assets/images/rails.png when --skip-public-assets is given.'}, {'body': u'Followup for #3031 and #3035.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5d98f3a41d99feee05c758ae751739?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3037', 'title': u'MessageVerifier: set serializer and crypto algorithm using an option hash'}, {'body': u'See #534', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3036', 'title': u'Cherry pick 1318'}, {'body': u'Implemented suggestions of #3031.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5d98f3a41d99feee05c758ae751739?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3035', 'title': u'Make API for custom message serializers nicer.'}, {'body': u'By default, these ActiveSupport classes use Marshal for serializing and deserializing messages. Unfortunately, the Marshal format is closely associated with Ruby internals. This makes the resulting message very hard to unserialize messages generated by these classes in other environments like node.js.<br/><br/>This patch solves this by allowing you to set your own custom serializer and deserializer lambda functions. By default, it still uses Marshal to be backwards compatible. Simple example:<br/><br/>``` ruby<br/>verifier = ActiveSupport::MessageVerifier.new("Hey, I\'m a secret!")<br/>verifier.serializer = lambda { |value| ActiveSupport::JSON.encode(value) }<br/>verifier.deserializer = lambda { |value| ActiveSupport::JSON.decode(value) }<br/>    <br/>message = verifier.generate({ :foo => 123, \'bar\' => Time.local(2010) })<br/>p verifier.verify(message) # => { "foo" => 123, "bar" => "2010-01-01T00:00:00-05:00" }<br/>```<br/><br/>Note that based on the serializer and deserializer, it may not be possible to do a lossless roundtrip as seen in the example. That might not be a problem depending on your needs, but using Marshal as the default makes sense so users don\'t have to worry about that.<br/><br/>The way I implemented it may not be optimal, so I welcome any feedback!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5d98f3a41d99feee05c758ae751739?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3031', 'title': u'Custom serializers and deserializers in MessageVerifier and MessageEncryptor.'}, {'body': u'This is a patch for issue #2923.<br/><br/>The removed code is redundant because https://github.com/rails/rails/blob/7abf4413366c5bf2b9462ef9dfbd710038b41a6c/activerecord/lib/active_record/relation/query_methods.rb#L289 will reapply the rule.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38becc6fc03453ccb1edfcdea1122408?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3030', 'title': u"Fix: habtm doesn't respect select query method"}, {'body': u"Looks like the remaining default regexp (```/application.(css|js)$/```) was matching things like ```someapplication.js```. Converted that to a Proc which properly matches what it's supposed to. As this is the second regexp I've fixed, I don't think regexp's are a good idea in this context.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4d67dc1cd9bbfe01348bdaaa8b1e105?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3027', 'title': u'Default precompile regex was erroneously matching files'}, {'body': u'Inspired by dlt https://github.com/dlt/rails/commit/9e615634745dc81598e7b880d52411338d3a7a93<br/><br/>This should close https://rails.lighthouseapp.com/projects/8994/tickets/6627-server-hanging-when-using-extreme-values-for-date_select-start_year', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/205e54814019c759313bab1dd21f248d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3025', 'title': u'Fixes an issue when creating a date select with too many options.'}, {'body': u'The current implementation of AR::Base.becomes doesn\'t work as expected. Calling `subclass_instance.becomes(SuperClass)` changes `subclass_instance.type` to `SuperClass`, i.e.:<br/><br/>```ruby<br/>class SuperClass < ActiveRecord::Base<br/>end<br/>class SubClass < SuperClass<br/>end<br/><br/>subclass_instance = SubClass.new<br/>subclass_instance.type # => "SubClass"<br/>subclass_instance.becomes(SuperClass)<br/>subclass_instance.type # => "SuperClass"<br/>```<br/><br/>I\'ve added the method `becomes!` to AR::Base which resembles the current behavior and changed AR::Base.becomes back to the old behavior (before e781853).<br/><br/>Refs #98 and https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5953', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/339afe23b1cc100ca9a04b40e671391a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3023', 'title': u'AR::Base.becomes should not change the STI type'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/613340c5fef56ad6fc3bf8cc617266ae?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3019', 'title': u'Fix for validates_numericality_of allowing scientific notation through.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a1aa32e382b5ba15e50fce05b77eacd7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3016', 'title': u'Fixed the uninitialized variable @persisted warning in actionpack tests.'}, {'body': u'Clear cache before of each precompile to avoid inconsistencies. Fixes #3014', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3015', 'title': u'Clear cache before of each precompile to avoid inconsistencies. Fixes #3014'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3012', 'title': u'Add missing changelog entries for actionpack'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3011', 'title': u"Don't mount Sprockets if config.assets.compile is disabled"}, {'body': u'I\'ve added a helper to render all flash messages and customize the output if needed.<br/><br/>On Controller:<br/><br/>```ruby                <br/>class PostsController < ApplicationController<br/>  def index<br/>    flash[:notice] = "Everything is ok :)"<br/>    flash[:alert] =  "Error :("<br/>  end<br/>end<br/>```<br/>  <br/>Then on the view:<br/><br/>```<br/><%= flash_messages %><br/># => <p class="flash flash_notice">Everything is ok :)</p><br/>#    <p class="flash flash_alert">Error :(</p><br/>         <br/><%= flash_messages :with_parent_element => :div %><br/># => <div class="flash flash_notice">Everything is ok :)</div><br/>#    <div class="flash flash_alert">Error :(</div><br/><br/><%= flash_messages :using_class => :message %><br/># => <p class="message message_notice">Everything is ok :)</p><br/>#    <p class="message message_alert">Error :(</p><br/><br/><%= flash_messages :with_parent_element => :div, :using_class => :message %><br/># => <div class="message message_notice">Everything is ok :)</div><br/>#    <div class="message message_alert">Error :(</div>   <br/><br/><%= flash_messages :using_class => :nil %><br/># => <p>Everything is ok :)</p><br/>#    <p>Error :(</p><br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df23382db80111520deb86d46a47f70f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3009', 'title': u'Adding a helper to render all messages stored on flash object.'}, {'body': u'Since version 8.4, PostgreSQL supports specifying custom LC_COLLATE and LC_CTYPE for CREATE DATABASE, so one database cluster can now contain databases with different collations.<br/><br/>This adds support for lc_collate and lc_ctype options for database.yml', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/318ae5b23214514697e45c3071ece99c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3008', 'title': u'Added support for LC_COLLATE and LC_CTYPE for PostgreSQL adapter.'}, {'body': u'mri_18 => mri AND version 1.8<br/><br/>It can just included into mri_18 block and will available for JRuby<br/>also.<br/><br/>Problem : I was just changing the JSON gem version to older one.<br/>And found that i have to change it two places.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3007', 'title': u"Wrting JSON gem for once. It's only required when 1.8.7"}, {'body': u"When precompiling assets if for example an image is precompiled, and it's later referenced in a stylesheet (via the asset_path helper), the lookup for the digest for that image will currently always fail, and raise an AssetNotPrecompiledError<br/><br/>The commit ensures the digests are stored in the correct location during precompiling so they are available if needed.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e6946821c84c934c60a567db6d7a164a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3004', 'title': u'Precompile asset digests'}, {'body': u'dump_schema_information: explicitly order inserts into schema_migrations table by version value<br/><br/>This is to reduce churn in the db/development_structure.sql file when using :sql as active_record.schema_format. When using postgresql in particular, the order of versions is somewhat arbitrary. Now only added/removed migrations will create changes to the schema dump file.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5243438bc582a4247bbfa57d4f4a84ee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/3003', 'title': u'dump_schema_information: explicitly order inserts into schema_migrations '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3001', 'title': u'Fix precompile asset_host test'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/3000', 'title': u'Fix for relative url root in assets'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2997', 'title': u'Backport e767cda (move assets tests to assets_test file) to 3-1-stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2996', 'title': u'Move asset tests to assets_test file'}, {'body': u'relative_url_root must be used in assets only if config.action_controller exists', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2994', 'title': u'relative_url_root must be used in assets only if config.action_controller exists'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a1aa32e382b5ba15e50fce05b77eacd7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2993', 'title': u'fixed the failing generators_test in railties.'}, {'body': u'Simplified ActiveSupport::Array#in_groups_of(n) to avoid the creation of a local temporary array', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/359b7a7fc263382baee62d91c1e4c25e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2990', 'title': u'Simplified ActiveSupport::Array#in_groups_of(n) to avoid the creation of '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2988', 'title': u'Remove odd asignation'}, {'body': u'Asset host should be ignored during precompile.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2987', 'title': u'fix https://github.com/rails/rails/issues/2947 (with testcase)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2986', 'title': u'fix https://github.com/rails/rails/issues/2947 (with testcase)'}, {'body': u'Hi, everyone.<br/>I have failed in operation of git. It committed again. sorry.<br/>This commit include a testcase.<br/><br/>Original pull request was 2976 (https://github.com/rails/rails/pull/2976)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2985', 'title': u'fix https://github.com/rails/rails/issues/2582 (with testcase)'}, {'body': u"As per [this](http://groups.google.com/group/rubyonrails-docs/browse_thread/thread/a8f4a89c9dc8d2ac) thread on the `rubyonrails-docs` mailing list, I've prepared the getting_started application.<br/><br/>Currently, it is stashed in `railties/guides/code/getting_started/`, - I also added a link to it in the getting_started guide. <br/><br/>Side note: A [similar pull request](https://github.com/lifo/docrails/pull/65) was sent to `lifo/docrails` - however, I heard that docrails wasn't being merged, and I also was told by @fxn to submit to `rails/rails` directly.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/de85c185f39ef9feef79d9933409d400?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2984', 'title': u'Added getting_started application to railties/guides/code/getting_started'}, {'body': u'This is the backported of #1296 to `3-1-stable`, as it was fixed in `master` but not on `v3.1.0`. I hit it hard when I upgraded my application to 3.1.0 and Ruby 1.9.2. <br/><br/>@tenderlove and @josevalim, please merge this in before release `v3.1.1`. :heart: :heart: :heart:', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2983', 'title': u'Issue #636 - Parsing an xml file with multiple records and extra attribut'}, {'body': u'Unescaping URL before it is processed, otherwise, there would be a problem with non-english character URL. Please see: https://github.com/rails/rails/issues/2703#issuecomment-1977252', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4074211a059075db95a4f42dcdbab5c3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2982', 'title': u'Problem with non-english character URL'}, {'body': u"Set relative url root in assets when controller isn't available for Sprockets. Fix #2435<br/><br/>See https://github.com/rails/sass-rails/issues/42 for details", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2977', 'title': u"Set relative url root in assets when controller isn't available for Sprockets"}, {'body': u'see https://github.com/kennyj/sprockets/commit/a61207bd387e3b9b5a08baf8e9db382ecd971ef8', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f0b221851379759360d7130dabdfa53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2976', 'title': u'fix https://github.com/rails/rails/issues/2582'}, {'body': u'New pull request per @jonleighton in pull request #2972. Changes erroneous "rescue" to "ensure".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d698e867b4281d2c6fcc9bc96780852?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2974', 'title': u'Use ensure instead of rescue'}, {'body': u'We had a situation where the CSRF token additions in jquery_ujs were lost in a refactor and had a hell of a time tracking down why every post was logging the user out (we have a GET-heavy site and the pattern wasn\'t immediately clear since it manifested in the one broadly-used POST-based feature).<br/><br/>I poked around and saw the session clearing stuff in the CSRF protection code and realized what our problem was, but then I noticed that the big scary "WARNING" message was being logged with logger.debug. If we had seen that warning message in the development logs, it would have been immediately clear what was happening.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d698e867b4281d2c6fcc9bc96780852?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2972', 'title': u'Use log.warn instead of debug for CSRF token warning'}, {'body': u'Added a case to check the status of the migration after a rollback and redo.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a1aa32e382b5ba15e50fce05b77eacd7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2970', 'title': u'Added a case to check the status of the migration after a rollback and redo.'}, {'body': u"So most of the unused variables removed. Don't know how can we stop adding this.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2969', 'title': u'Warnings removed 3 1 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2968', 'title': u"No need to use </form> here. It's already in whole_form block"}, {'body': u'No assert was here for this test!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2967', 'title': u'Add missing assert'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2966', 'title': u'Not used variables removed. Warnings removed.'}, {'body': u'The subject says it all...', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b09d62315dbafc471538dd71d404ad48?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2964', 'title': u'Silence Ruby warnings about uninitialized instance variable.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2960', 'title': u'Add missing require in base_test.rb, fixes isolated test'}, {'body': u'This adds some tests for `rake db:migrate:status` task.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2957', 'title': u'Tests for rake db:migrate:status.'}, {'body': u'At the moment you can only get an array of full messages. The link with their attributes are lost.<br/><br/>I\'d like clients to be able to relate full error messages to their corresponding fields.<br/><br/>So I\'d like to get e.g. :<br/><br/>     [ [:name, "Name is invalid"], [:name, "Name is too short"], [:email, "Email can\'t be blank"] ]<br/><br/>With this patch it makes the implementation possible with:<br/><br/>     obj.errors.map { |attr, msg| [attr, obj.errors.full_message(attr, msg)] }<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a31c2c26350e9e2b07fbd99fbd5ff520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2956', 'title': u'Ability to get single full error message'}, {'body': u'Polymorphic record with optimistic locking and counter cache should be destroyed without catching the ActiveRecord::StaleObjectError. It works fine with has_many, but not works with polymorphic has_many. It also might not work with has_one.<br/><br/>Issue #2954', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/832ed6ace46d61032151f4e1864c057f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2955', 'title': u'Polymorphic with optimistic lock and counter cache should be destroyed'}, {'body': u'This commit adds a db:structure:load task that is run instead of<br/>db:schema:load when schema_format is set to :sql. This patch also removes<br/>the prefixing of the structure.sql files to mimic the use of a single<br/>schema.rb file. The patch originates from github issue #715.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/302c6c56b99912a673f1213b0709c902?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2948', 'title': u'schema_format :sql should behave like schema_format :ruby'}, {'body': u'Say I have these GitHub-style models,<br/><br/>```ruby<br/>class User < ActiveRecord::Base<br/>  has_many :projects do<br/>    def personal<br/>      where(:owner => proxy_association.owner.name)<br/>    end<br/><br/>    def personal_first<br/>      order("projects.owner <> \'#{proxy_association.owner.name}\'")<br/>    end<br/><br/>    def visible_to(user)<br/>      user == proxy_association.owner ? scoped : where(:private => false)<br/>    end<br/>  end<br/>end<br/><br/>class Project < ActiveRecord::Base<br/>end<br/>```<br/><br/>Through the `:projects` association, I can get:<br/><br/>* Only personal projects: `@user.projects.personal`<br/>* Projects ordered so the personal projects come first: `@user.projects.personal_first`<br/>* Projects that a user is allowed to see: `@user.projects.visible_to(current_user)`<br/><br/>The problem is that if I combine any two of these methods, it bombs, complaining about there being no `proxy_association` method defined on `ActiveRecord::Relation`.<br/><br/>I\'ve updated the collection proxy to pass its `@association` on to further scopes by opening up a `proxy_association` accessor on `ActiveRecord::Relation`. I\'d love to get your feedback. Thank you.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0887991a8846577a6aa85433d6ab3ea2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2946', 'title': u'Collection proxy loses its proxy_association when scoped further'}, {'body': u'We needed to use some of the features of `accepts_nested_attributes_for` (such as `:_destroy`) but we needed to filter the incoming attributes.  This patch puts the methods `accepts_nested_attributes_for` defines in a module which can sit behind a custom implementation so that it can call `super`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d069ac0170dc6c93bad77734258fadae?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2945', 'title': u'Nested attribute setters can be overridden.'}, {'body': u'I\'ve hit some issues while running tests over the latest \'test-unit\' 2.3.2 ... <br/>as the `Test::Unit#run` code https://github.com/rails/rails/blob/master/activesupport/lib/active_support/testing/setup_and_teardown.rb#L56-94 is far from being perfect for > 1.3.2 (that is all 2.x versions). <br/>so I wrote an "integration" for it, now the new `Test::Unit` should be much happier as it\'s `run` method (which has changed since 1.3.2) does not get completely replaced.<br/>all is backward compatible - I\'ve added some tests but I\'m no expert in \'test-unit\' thus let me know if there\'s something "smelly".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/caa2df9372ffa0a9e95b2bab1e8fea34?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2942', 'title': u'better support for ActiveSupport::TestCase running over Test::Unit 2.x'}, {'body': u'This PR is a combination of this original PR...<br/>https://github.com/rails/rails/pull/2497<br/><br/>And a better fix from this commit...<br/>https://github.com/rails/rails/commit/8196c842b6f32271c23cba6b97918d32747018d8#actionpack/lib/action_dispatch/routing/url_for.rb<br/><br/>This PR backports the fix to 3-0-stable using the cleaner solution.  This cleaner fix already exists in master and 3-1-stable.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/898bf26eb61308fe717a243441cc615d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2939', 'title': u'fix url_for when passing a hash to prevent unwanted additional values being added to the hash (backport to 3-0-stable)'}, {'body': u"db:migrate:status only looks in the app's db/migrate directory, which is no good for engines. It should use ActiveRecord::Migrator.migrations_paths instead.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4fe35d76373429a6bdd9326b5ebbd515?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2936', 'title': u'db:migrate:status not looking at all migration paths'}, {'body': u"I'm afraid I'm a rails noob, so I don't understand why this is the way it is - but Date.today and Date.tommorow being equal depending on what time of the day it's checked seems a bit confusing to me. <br/><br/>Is this a real issue, or a quirk of ruby or rails?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4f1b82f58e7e3ef7c0db81eb21238aa4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2934', 'title': u'Make Date.today unsurprising (so Date.tomorrow > Date.today )'}, {'body': u'Otherwise, we must see an error message for the `password_digest` column<br/>when a user inputs blank password into a user registration form.<br/><br/>If a developer think this is not secure, he/she should use the<br/>ordinary validation mechanism against the `password` attribute.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2933', 'title': u'A blank password should be allowed.'}, {'body': u'cc @vijaydev', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2931', 'title': u'better method documentation on disable safe string methods'}, {'body': u'unescape URL before it is processed, otherwise, there would be a problem with non-english character URL. Please see: https://github.com/rails/rails/issues/2703#issuecomment-1977252', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4074211a059075db95a4f42dcdbab5c3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2929', 'title': u'unescape URL before it is processed, otherwise, there would be a problem with non-english character URL. '}, {'body': u'Add ability to associate existing but unassociated records for nested_attributes<br/><br/>Fixes issue #2925', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/31c4a590d4c752f53038d786516c4c74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2928', 'title': u'Add ability to associate existing but unassociated records for nested_att'}, {'body': u'Backport to 3-1-stable of PR https://github.com/rails/rails/pull/2499', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/898bf26eb61308fe717a243441cc615d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2926', 'title': u'assert_select_email fix for 3-1-stable'}, {'body': u"The ticket has been auto closed when migrating from lighthouse. But the problem itself hasn't been resolved.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3dda5dfd21d398021466f71f871920de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2924', 'title': u'#1003 (has_many through uniq count issue) fix'}, {'body': u'Thanks to the hard work of Ken Collins ( @metaskills ) on the ActiveRecord SQLServer Adapter ( https://github.com/rails-sqlserver/activerecord-sqlserver-adapter ), AR SQLServer Adapter works for Linux, OSX and Windows. Thus the sqlserver adapter should include so that users may use it with the new application generator:<br/><br/>    rails new w00t -d sqlserver ...<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b9b5ff40232c1dfd61238c2a90467f84?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2922', 'title': u'Include ActiveRecord SQLServer Adapter by @metaskills in new application generator.'}, {'body': u'Backport to 3-1-stable of PR https://github.com/rails/rails/pull/2485', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/898bf26eb61308fe717a243441cc615d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2921', 'title': u'fix exists? to return false if passed nil (backport to 3-1-stable)'}, {'body': u"Hi,<br/><br/>Today I was bitten by exactly this: https://github.com/rails/rails/pull/1519<br/><br/>I'm glad to see it's fixed in 3.1 but I think that pull request should be merged into 3.0-stable, which is which I just did. It's just the same commits by @dmitriy-kiriyenko, unmodified. Tests are passing.<br/><br/>(I didn't know if I should have reopened that pull request or send this new one; sorry if I chose badly and feel free to do whatever should have been done).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/45742831d67c80d12cd7b24907b8d760?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2920', 'title': u'Backport "ActiveRecord::Persistence#touch should not use default_scope" (pull request #1519) to 3.0'}, {'body': u'Backport to 3-0-stable of PR https://github.com/rails/rails/pull/2485', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/898bf26eb61308fe717a243441cc615d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2919', 'title': u'fix exists? to return false if passed nil (backport to 3-0-stable)'}, {'body': u'Backport to 3-0-stable of PR https://github.com/rails/rails/pull/2499', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/898bf26eb61308fe717a243441cc615d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2918', 'title': u'assert_select_email fix for 3-0-stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2914', 'title': u'Add ROWNUM to test first and last to support Oracle.'}, {'body': u"Make sure require_tzinfo only calls Kernel#require if TZInfo isn't already present.<br/><br/>This wasn't a problem when require_tzinfo was only called from TimeZone#initialize, but now it's being called for every lookup to TimeZone.[] (via lazy_zones_map)<br/><br/>TimeZone lookup can occur when unmarshalling TimeWithZone objects, which is where I first saw the big slowdown (500ms for each Rails action that loaded from Rails.cache)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8b3a5fa50d63275c5c6e304f1a081bfb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2913', 'title': u"Make sure require_tzinfo only calls Kernel#require if TZInfo isn't already present"}, {'body': u"Make sure require_tzinfo only calls Kernel#require if TZInfo isn't already present.<br/><br/>This wasn't a problem when require_tzinfo was only called from TimeZone#initialize, but now it's being called for every lookup to TimeZone.[] (via lazy_zones_map)<br/><br/>TimeZone lookup can occur when unmarshalling TimeWithZone objects, which is where I first saw the big slowdown (500ms for each Rails action that loaded from Rails.cache)<br/><br/>https://gist.github.com/1200301<br/><br/>This should probably be applied to rails-3-1-stable as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8b3a5fa50d63275c5c6e304f1a081bfb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2911', 'title': u"Make sure require_tzinfo only calls Kernel#require if TZInfo isn't alread"}, {'body': u"Fixes Issue #1604 https://github.com/rails/rails/pull/1604 for 3-1-stable<br/>Thanks https://github.com/bradrobertson<br/><br/>modified table_exists? in the postgresql adapter to always use the current search_path unless a explicit schema is specified.<br/><br/>Currently one cannot load schema.rb into a new (empty) postgresql schema. create_table forces a table drop which checks table_exists? first. This returns true even though the table doesn't actually exist in the current schema. Thus a PG error is thrown when it tries to drop the nonexistent table.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7f0f3eb43dda94e699a3c2c2804bc31d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2909', 'title': u'Postgresql adapter: added current_schema check for table_exists?'}, {'body': u'Please see this issue: https://github.com/rails/rails/issues/2703#issuecomment-1977252', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4074211a059075db95a4f42dcdbab5c3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2907', 'title': u'Unescape URL, otherwise, request fails on URLs that contain non-english character'}, {'body': u"Fixing `record_key_for_dom_id` documentation.<br/><br/>The default implementation joins everything with '_' and not with '-'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4dc7bd4eef74839f5331c580fa88fd1f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2905', 'title': u'Fixing small typo in the `record_key_for_dom_id` documentation.'}, {'body': u'Refactor assets tests to use add_to_config instead of creating initializers with config values', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2904', 'title': u'Refactor assets tests to use add_to_config'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ce586ba21854eca5701c10f5fe687807?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2903', 'title': u'Add :environment back into the db:schema:dump dependency list'}, {'body': u'Use https for travis-ci build status image to prevent Github from caching the failed build image. [ci skip]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/afe7c8a8965c568040a204b321aa3c8d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2901', 'title': u'Use https for travis-ci build status image url.'}, {'body': u'Pull request #2230 was included in #2577, causing test failure: http://travis-ci.org/#!/rails/rails/builds/134540/L107', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40894bb928ebe715f1dfa655f969cf14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2898', 'title': u'Remove failing test from pull request #2230.'}, {'body': u'This is a patch for issue #2820 ("ActiveRecord 3.1 does not restore connection inheritance after establish_connection/remove_connection on a model").<br/><br/>It applies the solution described in that ticket. There is also a change in `connection_adapters/abstract/connection_specification.rb` to ensure that a `nil` pool can\'t leak out and cause `NoMethodError`s.<br/><br/>This pull request is against 3-1-stable. I\'ve verified that the patch also works on master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/292ea489740972fd2437b28bbfbccac8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2897', 'title': u'Patch for issue #2820'}, {'body': u"Sum and other calculations generate wrong sql when used with includes and called on included table.<br/>The following line will raise sql exception.<br/><br/>`Category.includes(:authors).sum('authours.id')`<br/><br/><br/>The problem was in Relation#references_eager_loaded_tables?, it checks that Relation#to_sql references eager loaded tables, but to_sql and and sql generated by Relation#sum is two different things.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/92eacf4307bbccd8bcf30fccfd3e7655?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2896', 'title': u'sum fail on includes'}, {'body': u'When we run ```bundle exec rake test``` for  railties it should show warnings.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2895', 'title': u'Warnings removed and use w for railties'}, {'body': u'This allows to use `should have_key` on error models in specs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2893', 'title': u'add has_key? to ActiveModel::Errors'}, {'body': u"This is a large commit but it will clean up almost all of the errant whitespace issues in the repo.<br/><br/>I've run the test suite and everything still passes.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2891', 'title': u'Clean up of errant whitespace'}, {'body': u"Added default number values to avoid precision/separator/delimiter bug when locale != :en<br/><br/>With default_locale different from :en and no region locale file, precision, separator and delimiter where not defaulted, resulting in errors such as :<br/><br/>    wrong argument type nil (expected Fixnum)<br/><br/>    actionpack (3.1.0) lib/action_view/helpers/number_helper.rb:281:in `round'<br/>    actionpack (3.1.0) lib/action_view/helpers/number_helper.rb:281:in `number_with_precision'<br/>    actionpack (3.1.0) lib/action_view/helpers/number_helper.rb:362:in `number_to_human_size'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ce67a22b074034df72dd978d4608714c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2890', 'title': u'Issue 2802'}, {'body': u"config.action_controller.perform_caching isn't used anymore in assets pipeline, instead we are using config.assets.digest now", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2889', 'title': u"config.action_controller.perform_caching isn't used anymore in asset pipeline"}, {'body': u'During discussions on `#RubyOnRails`, it was discovered that when `config.assets.compile` is set to `false`, assets are still compiled under the following conditions:<br/><br/>1. `config.serve_static_assets` is set to `false` (the default in production) and any request is made for an asset<br/>2. any request is made for an asset without digest (irrespective of the value of `config.serve_static_assets`)<br/><br/>This pull request contains a patch to only mount the asset server if `config.assets.compile` is set to `true`.  In the instance that it is set to `false`, and a request is made as outlined above, the user agent will receive a 404.<br/><br/>A test for the patch, _"assets routes are not drawn when compilation is disabled"_, is included, as is a small change to the existing test _"assets do not require any assets group gem when manifest file is present"_ which now serves the precompiled asset statically rather than via the assets server.<br/><br/>(Additional credit due to `cachemoney` on `#RubyOnRails` for working on this with me.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2886', 'title': u'Assets are still compiled when config.assets.compile set false (including in production)'}, {'body': u"I'm deeply sorry, I failed when pushing #2877, test of #first shouldn't take any order.<br/><br/>This happens because #first just adds a LIMIT to the SQL query, therefore not changing the records' order.  <br/>When #last orders the records by id (unless there's already an order provided) and takes the first elements (which were the last ones).<br/><br/>Therefore in postgresql, #last must be ordered by id in this test. Otherwise, the database will return them in a different, unpredictable order.<br/><br/>cc @arunagw @spastorino", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2883', 'title': u"#first doesn't take an order in this test"}, {'body': u'before add should allow the developer to return false to prevent addition of the object to the association<br/><br/>if the developer wants to add objects with possible rejection criteria, in tests for example, communication via exception is not appropriate.<br/>in general there should be a mechanism by which before_add callbacks for associations should be able to halt addition silently.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1e2f907b5827a6f705d61c04d5e24bfc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2881', 'title': u'before add should allow the developer to return false to prevent addition'}, {'body': u'Squash of https://github.com/rails/rails/pull/2837', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/380f2ee82510287050b118947e8526dd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2879', 'title': u'has_secure_password should allow optional password confirmation'}, {'body': u"5f5527c726841cdefb82965a645d554767c5a6a9 order the records by their id in order to properly get the last one.<br/>On some databases though (like postgresql), it seems when the records are not ordered, the order is a bit random.<br/>Therefore, this made the tests fail, on postgresql only.<br/><br/>It makes sense to actually order the records by primary key (except when there's already an order, which last manages) when getting the last record as the last record of something unordered is quite useless.<br/><br/>cc @arunagw @jonleighton", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2877', 'title': u'Last orders the records by id'}, {'body': u"The original regex was matching things like ```jquery.min.js``` and putting a lot of junk (like ```jquery-#{digest}.min.js```) in ```public/assets/``` that shouldn't be there. The new regex matches everything except files *ending* with .js or .css (as was intended).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4d67dc1cd9bbfe01348bdaaa8b1e105?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2876', 'title': u'Fixed assets precompile regex'}, {'body': u'Make `ActiveSupport::OrderedHash` extractable when using `Array#extract_options!`<br/><br/>`ActiveSupport::OrderedHash` is actually a subclass of the hash, so it does make sense that it should be extractable from the array list.<br/><br/>This is a backport of #2827 to `3-1-stable`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2874', 'title': u'Make `ActiveSupport::OrderedHash` extractable when using `Array#extract_options!`'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2873', 'title': u'Remove unused config variable from test.rb template'}, {'body': u'Thank you @spastorino for catching the empty test in b84cee0, as I totally forgot that I still have to make it html_safe.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2872', 'title': u'Make sure that result from content_tag_for with collection is html_safe'}, {'body': u'cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2871', 'title': u'Backport #2789 to 3-1-stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2870', 'title': u'Uglifier bump'}, {'body': u"Rails 2.3.11 and Rails 3.0 don't query the database for belongs_to associations when the foreign key is NULL.<br/><br/>It looks like this regression has been introduced by a9bed98.<br/><br/>This patch adds a test case and fixes the behavior.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b0cbdfc5749885a2f634b6373e9fe0ab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2869', 'title': u"Don't find belongs_to target when the foreign_key is NULL. Fixes #2828"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2868', 'title': u'Sort here to make sure the order is ok.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2867', 'title': u'Need to make sure about order here.'}, {'body': u'change order of super and initialization as per https://github.com/rails/rails/pull/2857/files#r112685 ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db08b7613d6bf1b94e662b1f96f9ef02?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2863', 'title': u'Silence unitialized instance variable warnings'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2862', 'title': u'Add entry about Asset behaviour fix to ActionPack ChangeLog (3-1-stable)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2861', 'title': u'Add entry about Asset behaviour fix to ActionPack ChangeLog'}, {'body': u"AssetNotPrecompiledError should be raise when config.assets.digest = false, config.assets.compile = false and asset isn't present in manifest file<br/><br/>Actual result: assets aren't digested, but are being compiled by Sprockets (the compile flag is being ignored)<br/><br/>Expected result: AssetNotPrecompiledError must be raised since the user is trying to request a not precompiled asset and compile flag is false.<br/><br/><br/>This can be merged safely in 3-1-stable and master", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2860', 'title': u'Fix AssetNotPrecompiledError behavior'}, {'body': u'Silence warnings about<br/><br/>warning: instance variable @id not initialized<br/>warning: instance variable @body not initialized', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db08b7613d6bf1b94e662b1f96f9ef02?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2857', 'title': u"Tests shouldn't produce warnings"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db08b7613d6bf1b94e662b1f96f9ef02?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2856', 'title': u'remove two lines that exactly duplicate lines before'}, {'body': u'Fixes #2832<br/><br/>Already in 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2855', 'title': u'We need to recorder here. Need to drop the order from default scope.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2854', 'title': u'Find in batches changelog'}, {'body': u'For non boolean value x,<br/>```if x.nil?```<br/>could be written as<br/>```unless x```<br/>and it performs better.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77cab3552528245d781a427da3d9e0f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2852', 'title': u'if ... nil? is more expensive than unless'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2851', 'title': u'No need to use a begin block there'}, {'body': u'Ok.. so this issue is about find_in_batch. <br/><br/>We should not include any default scope of that class in find_in_batch. <br/><br/>Because we do last.id for the next batch start. If any default_scope is present in that class then it should be ignored. <br/><br/>If we include that default scope in query then the result will go wrong.<br/><br/>Here we need to do <br/><br/>```ruby<br/>relation.default_scope = nil<br/>```<br/><br/>we cannot call unscoped here other wise all the scope will go and user will not get any exception if he is providing any select or other things in find_each method<br/><br/><br/>I have some queries which i have taken from the logs of two application.<br/><br/>Rails 3.1.0<br/><br/>```ruby<br/>Scoped order and limit are ignored, it\'s forced to be batch order and batch size<br/>  Blog Load (22.6ms)  SELECT "blogs".* FROM "blogs" WHERE ("blogs"."id" >= 0) ORDER BY title, title2, "blogs"."id" ASC LIMIT 1000<br/>  Blog Load (0.4ms)  SELECT "blogs".* FROM "blogs" WHERE ("blogs"."id" > 2000) ORDER BY title, title2, "blogs"."id" ASC LIMIT 1000<br/><br/>```<br/><br/><br/><br/>Rails 3.0.10<br/><br/>```ruby<br/>Scoped order and limit are ignored, it\'s forced to be batch order and batch size<br/>  SQL (0.5ms)   SELECT name<br/> FROM sqlite_master<br/> WHERE type = \'table\' AND NOT name = \'sqlite_sequence\'<br/><br/>  Blog Load (11.1ms)  SELECT "blogs".* FROM "blogs" WHERE ("blogs"."id" >= 0) ORDER BY "blogs"."id" ASC LIMIT 1000<br/>  Blog Load (0.2ms)  SELECT "blogs".* FROM "blogs" WHERE ("blogs"."id" > 2001) ORDER BY "blogs"."id" ASC LIMIT 1000<br/>```<br/><br/>The default scope in code added here 8572ae6671c6ec7c2524f327cee82215896e5648 for except method.<br/><br/>Fixed issue #2832<br/><br/>If it\'s looks ok then i will do it for master also. :-)<br/><br/>/cc @jonleighton<br/><br/>/cc @tenderlove ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2850', 'title': u'Find in batch fix'}, {'body': u'<br/>In JRuby backtrace is different.<br/>In JRuby first is "org/jruby/RubyKernel.java"<br/><br/><br/>fixed tests for activesupport with JRuby. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2849', 'title': u'Jruby activesupport fix 3 1 stable for JRuby'}, {'body': u'<br/>In JRuby backtrace is different.<br/><br/>In JRuby first is "org/jruby/RubyKernel.java"<br/><br/>fixed activesupport tests for JRuby', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2848', 'title': u'Need to have a check here for JAVA PLATFORM for JRuby'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2846', 'title': u'Bcrypt 3 1 stable'}, {'body': u"Some of the warnings coming in running tests.<br/><br/>I have made three commits to know well what commit is for.<br/><br/>The main warnings added recently into the code base. Please don't add them!<br/><br/>This is same as https://github.com/rails/rails/pull/2843<br/><br/>One file got changed only.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2844', 'title': u'Warnings removed from master'}, {'body': u"Some of the warnings coming in running tests.<br/><br/>I have made three commits to know well what commit is for. <br/><br/>The main warnings added recently into the code base. Please don't add them!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2843', 'title': u'Warnings removed for test 3 1 stable'}, {'body': u'Add ability to specify gems inside groups using ```group(*names, &block)```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/84188f5e909563cfa252bb739e643295?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2841', 'title': u'Add gem group support to generators'}, {'body': u"I don't think password_confirmation should be a must on all sign ups, if you implement the reset password functionality you don't need to confirm the user's password.<br/><br/>That''s better for a usability point of view since you save time to the user on the sign up, don't make them type more.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/380f2ee82510287050b118947e8526dd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2837', 'title': u'has_secure_password should allow optional password confirmation'}, {'body': u'I suggest to adjust comment in ActionController helpers file in accordance with new behavior after the commit 250fb3f6c297e1f0bdc8', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2836', 'title': u'fix helpers behavior description'}, {'body': u'Glad to follow this new convention ;--)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2835', 'title': u'Include ticket numbers in AP CHANGELOG'}, {'body': u"We need to check here for the table name.<br/>Abstract classes are having nil class name.<br/>So nil.gsub will give a error here.<br/><pre><br/>1) Error:<br/>test_include_polymorphic_has_one_defined_in_abstract_parent(AssociationsJoinModelTest):<br/>NoMethodError: undefined method `gsub' for nil:NilClass<br/></pre>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2831', 'title': u'Fixed test for 3-1-stable. Abstract class is having nil class name.'}, {'body': u'<pre>/Users/arunagw/checkouts/rails/activerecord/test/cases/base_test.rb:1895: warning: ambiguous first argument; put parentheses or even spaces</pre>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2830', 'title': u'Warning removed 3 1 stable'}, {'body': u'Fixed tests.<br/><br/>master commit 5a05207d99b7e2678f9b42db2d9ffc21ec2c8c3b<br/><br/><pre><br/>test_should_group_by_summed_field_having_condition_from_select(CalculationsTest):<br/>ActiveRecord::StatementInvalid: PGError: ERROR:  column "min_credit_limit" does not exist<br/>LINE 1: ... firm_id FROM "accounts"  GROUP BY firm_id HAVING min_credit...<br/>                                                             ^<br/>: SELECT SUM("accounts"."credit_limit") AS sum_credit_limit, MIN(credit_limit) AS min_credit_limit, firm_id AS firm_id FROM "accounts"  GROUP BY firm_id HAVING min_credit_limit > 50<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:962:in `async_exec\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:962:in `exec_no_cache\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:551:in `block in exec_query\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:244:in `block in log\'<br/>    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/notifications/instrumenter.rb:21:in `instrument\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:239:in `log\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:550:in `exec_query\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:1031:in `select\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:18:in `select_all\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:63:in `select_all\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/relation/calculations.rb:258:in `execute_grouped_calculation\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/relation/calculations.rb:185:in `perform_calculation\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/relation/calculations.rb:155:in `calculate\'<br/>    /Users/arunagw/checkouts/rails/activerecord/lib/active_record/relation/calculations.rb:93:in `sum\'<br/>    /Users/arunagw/checkouts/rails/activerecord/test/cases/calculations_test.rb:174:in `test_should_group_by_summed_field_having_condition_from_select\'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.9.12/lib/mocha/integration/mini_test/version_142_to_172.rb:27:in `run\'<br/>    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:35:in `block in run\'<br/>    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/callbacks.rb:408:in `_run_setup_callbacks\'<br/></pre>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2829', 'title': u'pg does not allow aliases in the having clause, but functions are fine'}, {'body': u"Make `ActiveSupport::OrderedHash` extractable when using `Array#extract_options!`<br/><br/>`ActiveSupport::OrderedHash` is actually a subclass of the hash, so it does make sense that it should be extractable from the array list.<br/><br/>I think this is a bug, so if there's a backport necessary please let me know. Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2827', 'title': u'Make `ActiveSupport::OrderedHash` extractable when using `Array#extract_options!'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2826', 'title': u'Changelog entry about remove of bcrypt as hard dependency on ActiveModel'}, {'body': u'For details see the comments on 67790644372<br/><br/>This can be merged safely in 3-1-stable and master. I will send changelog entry in another pull request (because is a change incompatible between branches)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2825', 'title': u'Add comments about bcrypt-ruby gem to SecurePassword and add it to default Gemfile'}, {'body': u'As in previous commit it removed.<br/><br/>Removed commit here 67790644372ad3a771810f1d6d99687d795789ea', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2824', 'title': u'Need to add here to pass the test'}, {'body': u'Hi,<br/><br/>Puppet dashboard reveal a problem with Ruby On Rails with a gem_dependency call. It\'s not compatible with the rubygem packaged version (1.3.0) of Ubuntu Lucid Lynx LTS. It throws this error message :<br/>gem_dependency.rb:81 "undefined method `requirement\' for #Rails::GemDependency:0x7f8dbb42dad8"<br/><br/>You can have more information on this issue : <br/>http://projects.puppetlabs.com/issues/8800<br/><br/>I have already made a patch which seems to fix the problem : <br/>http://projects.puppetlabs.com/attachments/1466/dashboard-fix-requirements-lucid.patch<br/><br/>Would you please apply it in the next version of Rails 2.3.X ?<br/><br/>Thanks,', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a2a8b503860ac2fec8b55222fd533e3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2819', 'title': u'gem requirement without :version => hash is invalid '}, {'body': u'Hi,<br/><br/>Puppet dashboard reveal a problem with Ruby On Rails 2.3.X with a gem_dependency call. It\'s not compatible with the rubygem packaged version of Ubuntu Lucid Lynx LTS. It throws this error message :<br/>gem_dependency.rb:81 "undefined method `requirement\' for #Rails::GemDependency:0x7f8dbb42dad8"<br/><br/>You can have more information on this issue : <br/>http://projects.puppetlabs.com/issues/8800<br/><br/>I have already made a patch which seems to fix the problem : <br/>http://projects.puppetlabs.com/attachments/1466/dashboard-fix-requirements-lucid.patch<br/><br/>Would you please apply it in the next version of Rails 2.3.X ?<br/><br/>Thanks,', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a2a8b503860ac2fec8b55222fd533e3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2818', 'title': u'Rails 2.3.12 & 2.3.14 : invalid gem_dependency'}, {'body': u"Should the directory 'public/assets/' be included in .gitignore file?!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be110ccb289808429894c89202e4384b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2817', 'title': u"'public/assets/' directory in .gitignore"}, {'body': u'So instead of having to do this:<br/><br/>```ruby<br/>   @items.each do |item|<br/>     content_tag_for(:li, item) do<br/>        Title: <%= item.title %><br/>     end<br/>   end<br/>```<br/><br/>You can now do this:<br/><br/>```ruby<br/>   content_tag_for(:li, @items) do |item|<br/>     Title: <%= item.title %><br/>   end<br/>```<br/><br/>(Same goes for the `div_for`)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2816', 'title': u'Make `content_tag_for` and `div_for` accepts the array of records'}, {'body': u"I used <tt>link_to_unless_current('events', events_path)</tt> in my project. But if new <tt>Event</tt> object is invalid link to <tt>'events'</tt> is not created.<br/><br/>I suppose <tt>current_page?</tt> should return false for all non-GET requests. But I'm not sure that this solution has no side effects.<br/><br/>What do you think about this commit? Thanks in an advice.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2815', 'title': u'current_page? returns false for non-GET requests'}, {'body': u'Edited activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb via GitHub', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/651ca6c34d9228f68cd35841c4604212?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2814', 'title': u'Edited active_record/connection_adapters/postgresql_adapter.rb to standard postgresql default values compatibility '}, {'body': u'After migrate from config/environent.rb to config/application.rb we should use 4-space indent instead 2-space.<br/><br/>```<br/>  module CustomApp<br/>    class Application < Rails::Application<br/>      # some code from generator<br/>      # ...<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/54e74983d81fa2fbe4c28e8392532f18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2811', 'title': u'fix indent for generator environment method'}, {'body': u'There is an issue when URL contains non-English characters (e.g. Thai). <br/>Please see this issue: https://github.com/rails/rails/issues/2703<br/><br/>By unescaping PATH_INFO, the issue is resolved.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4074211a059075db95a4f42dcdbab5c3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2810', 'title': u'Issue with non-English URL'}, {'body': u'Added test coverage for both as well as --skip-git. Renames .gitkeep to .keep. This makes the rails command a bit more SCM agnostic. Tests pass.<br/><br/>This closes #2800. Users of other SCM\'s can now generate rails apps that will add the "empty" directories to source control, but will not have a useless .gitignore or mis-named .gitkeep files.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/79b1b001d5ff186c9bd02e7487aa4142?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2808', 'title': u'added --skip-ignore and --skip-keeps options to generators'}, {'body': u"Following fdd619e9a7a5b9457f77e6322c920b99c3c09599, I noticed there's no need to manually define `each`, `[]` and `has_key?` in the cookie jar.<br/><br/>This PR improves it, using delegate instead of manually defining the methods.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2806', 'title': u'Dry up CookieJar by using delegate instead of redefining methods'}, {'body': u'Just a tiny fix in the ActiveModel::Dirty documentation. The documentation mentions setting a class attribute, when actually its a method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d7e50e89af3b389aff5fe0e64a64c14f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2803', 'title': u'Fix typo in ActiveModel::Dirty documentation'}, {'body': u'Obvious breakage is obvious:<br/><br/>    case Time.now<br/>    when Class.new(Time)<br/>      :ffffuuuuuuuuu<br/>    when Time<br/>      :yay<br/>    end', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f183bcc4176b308c9edabe79299e448f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2801', 'title': u'Fix obviously breakage of Time.=== for Time subclasses'}, {'body': u"There is a bug in `content_for`. It should only return stored content when no block has been provided, but instead it returns stored content when the block generates a blank buffer and has a `nil` return value, which is what happens in a situation like this:<br/><br/>    <% content_for :foo do %><br/>      <% if something_falsy %><br/>        foo<br/>      <% end %><br/>      <% if something_else_falsy %><br/>        bar<br/>      <% end %><br/>    <% end %><br/><br/>Ultimately this is because `capture` returns `nil` (vs `''`) when the resulting buffer is `blank?`, but that's apparently intended behaviour, so it's better to fix `content_for` to explicitly check `block_given?` rather than relying on the truthiness of `capture(&block)`.<br/><br/>The bug provokes a deprecation warning in 3.0.x (see #2794); there is no such warning in 3.1.x, but it's still unintended behaviour.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be3698f145a80c1230fd667c87d0f0c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2799', 'title': u'Never return stored content from content_for when a block is given'}, {'body': u'Use method aliasing for `DateTime#<=>` to be compatible with other libraries that define `<=>` on DateTime. By calling super, ActiveSupport 3.1 bypasses any `<=>` method defined on DateTime.<br/><br/>For example, if another library wrote this:<br/><br/>```ruby<br/>class DateTime<br/>  def compare_with_comparability(other)<br/>    compare_without_comparability (other.respond_to?(:comparable_datetime) ? other.comparable_datetime : other)<br/>  end<br/>  alias_method :compare_without_comparability, :<=><br/>  alias_method :<=>, :compare_with_comparability<br/>end<br/>```<br/><br/>If ActiveSupport 3.1 was loaded after, then it would bypass this extension. If both sides use method aliasing, then both extensions would be used regardless of load order. This also affects the `home_run` DateTime replacement because it defines a `DateTime#<=>` method overriding the `Date#<=>` method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d643c10e432e230c9d4bf97d15d6a46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2797', 'title': u'Datetime coercion'}, {'body': u'Using `content_for` in Rails 3.0.x can result in a bogus deprecation warning ("`<% %> style block helpers are deprecated`") because of a bug in how `content_for` works. `content_for` should only return stored content when no block has been provided, but instead it returns stored content when the block generates a blank buffer and has a `nil` return value, which is what happens in a situation like this:<br/><br/>    <% content_for :foo do %><br/>      <% if something_falsy %><br/>        foo<br/>      <% end %><br/>      <% if something_else_falsy %><br/>        bar<br/>      <% end %><br/>    <% end %><br/><br/>Ultimately this is because `capture` returns `nil` (vs `\'\'`) when the resulting buffer is `blank?`, but that\'s apparently intended behaviour, so it\'s better to fix `content_for` to explicitly check `block_given?` rather than relying on the truthiness of `capture(&block)`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be3698f145a80c1230fd667c87d0f0c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2794', 'title': u'Never return stored content from content_for when a block is given'}, {'body': u'skip test_should_group_by_summed_field_having_condition_from_select on Oracle<br/><br/>Oracle does not allow use of aliases from SELECT in HAVING clause<br/><br/>Replaces previous pull request https://github.com/rails/rails/pull/2751', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2793', 'title': u'Skip test_should_group_by_summed_field_having_condition_from_select for Oracle'}, {'body': u'When you pass empty array to content_tag attribute, the html attribute is rendered with empty value.<br/><br/>Now:<br/><br/>```ruby<br/>content_tag(:p, "foo", :class => [])<br/>#=> <p class="">foo</p><br/>```<br/><br/>Fixed:<br/><br/><br/>```ruby<br/>content_tag(:p, "foo", :class => [])<br/>#=> <p>foo</p><br/>```<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e28434223c9c5d2ee0d7f7b7c887b36a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2792', 'title': u'Empty array in html attributes'}, {'body': u'After this fix Gem.loaded_specs.keys will show gems are<br/>only for the current environment.<br/><br/>See issue #2764.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3b354b8884f2e454ee938c87ce66f935?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2790', 'title': u'Use Bundler.setup instead of Bundler.require.'}, {'body': u"Currently, #first and #last are using `to_a`, which retrieves all entries from the database and loads them in memory.  <br/>That's quite inefficient and useless.<br/><br/>This PR changes this behavior, to only retrieve the required entries.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2789', 'title': u'Use LIMIT SQL word in first - Closes #2783'}, {'body': u'Port of #2782 to master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2788', 'title': u'assets:precompile should not append asset digests when config.assets.digest is false'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2787', 'title': u'Add missing changelog entries for 3.1.1'}, {'body': u'Port of #2785 to master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2786', 'title': u'Remove explicit references to Rails.application.config from AssetPaths in Sprockets helper'}, {'body': u'Moves references to `config.assets.compile` and `config.assets.digest` to helper level methods so that they may be overriden.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2785', 'title': u'Remove explicit references to Rails.application.config from AssetPaths in Sprockets helper'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2784', 'title': u'Add missing changelog entries for 3.1.1'}, {'body': u'See my comment on #2768.<br/><br/>Basically, given that `config.assets.digest` can be set to false in production mode, `rake assets:precompile` should respect this configuration and not append asset digests to the filenames when set to false.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2782', 'title': u'assets:precompile should not append asset digests when config.assets.digest is false'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2780', 'title': u'Assets pipeline: fix in manifest location and remove unused code'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab074ca0a48f06ab110c374fc7db258e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2779', 'title': u'Nginx and Apache configs to serve precompiled gzip assets were added to Asset Pipeline Guide'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ab074ca0a48f06ab110c374fc7db258e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2778', 'title': u'Apache and nginx configs to serve compiled gzipped assets were added'}, {'body': u'Replace split on comma with a regexp that will reverse all ASC/DESC specifically<br/><br/>#1697 says it was fixed, but that fix was reverted in 971a74b. It seems likely 18d307ed94ee9 was failing on Travis because MAX (the function used in the test scenario) does not actually accept multiple arguments on MySQL.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1135d4703e47b03465798d3f63b3995f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2775', 'title': u'Fixes bug in ActiveRecord::QueryMethods, #1697'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2772', 'title': u'Backports of the assets pipeline changes done in 3-1-stable'}, {'body': u'IF we are calling from engine folder then we need to use app:', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2771', 'title': u'Engine migration fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2768', 'title': u'Always enable digest and compile in the Rake task'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2762', 'title': u'Assets Guide updates'}, {'body': u'http://guides.rubyonrails.org/3_1_release_notes.html includes this link to http://edgeapi.rubyonrails.org/classes/ActionController/Streaming.html<br/>should link to<br/>http://api.rubyonrails.org/classes/ActionController/Streaming.html', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db08b7613d6bf1b94e662b1f96f9ef02?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2761', 'title': u"don't need edgeapi now that we are on 3.1"}, {'body': u'Revert "Ruby 1.8.7+ provides to_date/to_datetime, AS just makes them public." to support date implementations without private to_date/to_datetime on Time (home_run).<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d643c10e432e230c9d4bf97d15d6a46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2760', 'title': u'Fix ActiveSupport compatibility with home_run'}, {'body': u'This pull request let\'s you write:<br/><br/>    User.where(:first_name => "Scarlett").first_or_create!(:last_name => "Johansson", :hot => true)<br/><br/>Take a look at #2420 for the discussion about this.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7e565a1681dc0137f43826aa840686af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2757', 'title': u'Add first_or_create family of methods to Active Record'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2756', 'title': u'Change manifest.yml location with config.assets.manifest'}, {'body': u'https://github.com/rails/rails/issues/2687', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d1f5556fd1ea9b1dcbddae79d2ec383b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2754', 'title': u'Removing hard dependency on ActiveModel for BCrypt as per issue #2687'}, {'body': u'Last two asserts in this test assume that all_comments are ordered by posts.id and then by comments.id therefore additional ordering is added. Without it test was failing on Oracle which returned results in different order.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2752', 'title': u'Ensure correct ordering of results in test_update_all_with_joins_and_offset_and_order '}, {'body': u'Use of SQL aggregate function in HAVING clause is supported by all databases therefore better use syntax that is supported by all databases.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2751', 'title': u'Fix test should group by summed field having condition from select for oracle'}, {'body': u'Oracle does not allow double quotes in table and column names at all therefore quoting removes them.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2750', 'title': u'Fix test column names are escaped for oracle'}, {'body': u'This give to users a idea about how they can expire all the assets using this option.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2748', 'title': u'Add config.assets.version to config/application.rb'}, {'body': u'as @dhh pointed in #2741', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2747', 'title': u'Manifest is generated by default when assets are precompiled'}, {'body': u'Same #2741 but for 3-1-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2746', 'title': u'Read digests of assets from manifest.yml when precompile is used'}, {'body': u'For 3-0-stable only.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2744', 'title': u'Mysql2 bump'}, {'body': u'This give to users a idea about how they can expire all the assets using this option.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2742', 'title': u'Add config.assets.version to config/environments/production.rb'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2741', 'title': u'Read digests of assets from manifest.yml if config.assets.manifest is on'}, {'body': u'```ruby<br/>class Foo < ActiveRerocd::Base<br/>  serialize :posts, Array<br/>end<br/><br/>foo = Foo.new<br/>foo.posts = "a"<br/>foo.save # It doen\'t raise an error.<br/><br/>foo.posts # It raises ActiveRecord::SerializationTypeMismatch<br/>```<br/><br/>It\'s strange, when you save the data, it doesn\'t raise any error, but when we get the data, it raises an error.<br/><br/>so, in #dump, we should raise an error, too<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/01f04a3bb55ef948a186620fa5d5ea29?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2737', 'title': u'Coders::YAMLColumn#dump should raise an error'}, {'body': u"This pull request accompanies #2733, and provides two deprecations related to the use of `delegate`:<br/><br/>1. Delegating to a private method on the target object<br/>2. Delegating to an attribute writer method (e.g. `foo=`) that accepts multiple arguments<br/><br/>The code is a bit tricky, so you're welcome to reviewing it. However, the acceptance of this request should be predicated upon the successful inclusion of #2733.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2736', 'title': u'Deprecate delegation to private methods'}, {'body': u"I'm a big fan of the idea of http://humanstxt.org and I noticed during the week that Google have a pretty nice humans.txt http://www.google.com/humans.txt<br/><br/>As DHH said at RailsConf, the best thing that Rails provides is empty files, so adding humans.txt to the base rails generator would hopefully encourage the adoption of humans.txt.<br/><br/>Including the Rails Core team by default seems obvious and, I think, appropriate.<br/><br/>What do you think?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b408c8d259cc9b98cf69da4afcad92fb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2734', 'title': u'add humans.txt'}, {'body': u'Remove the use of `#__send__` in order to boost performance. This also means that you can no longer delegate to private methods on the target object.<br/><br/>The merits of this pull request is being discussed [on the mailing list](http://groups.google.com/group/rubyonrails-core/browse_thread/thread/c47a7d7c93ae5eea). Please let it remain open so the diff can be easily browsed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2733', 'title': u'Improve the performance of #delegate'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2724', 'title': u'Avoid extra recursive call in Sprockets helpers'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2723', 'title': u'Update changelogs for Rails 3.1.0'}, {'body': u'Disable mangle temporary in Uglifier since is causing problems with Prototypejs files. Closes #2537', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2721', 'title': u'Disable mangle temporary in Uglifier since is causing problems with Prototypejs'}, {'body': u'Small doc fixes', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fcb760f377e8544848df4550ea5ac55b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2720', 'title': u'Doc fixes'}, {'body': u'This makes the code more readable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2718', 'title': u'Split long string into multiple shorter ones '}, {'body': u"This patch fixes a bad options order in ActiveRecord::Migration::CommandRecorder#invert_rename_index<br/><br/>`ActiveRecord::ConnectionAdapters::SchemaStatements#rename_index` always had the same signature : `rename_index(table_name, old_name, new_name)`.<br/><br/>When using the new reversible migrations in Rails 3.1.rc6, I found it was unfortunately inverted to `rename_index(new_name, old_name, table_name)`, which is wrong. It should have been  `rename_index(table_name, new_name, old_name)` instead. Hence this patch, which copies the way `rename_column` is inverted. Please let me know if I'm not clear.<br/><br/>All tests are green on sqlite3, mysql, mysql2 and postgresql.<br/><br/>Since it's a defect, the patch is tiny and shouldn't have any side effect, I think it could be safely merged into master and 3.1-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a00ce848763a4472291fcbcefd31a07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2716', 'title': u'Fix bad options order in AR::Migration::CommandRecorder#invert_rename_index'}, {'body': u'Some fixes in the api docs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2714', 'title': u'doc fixes'}, {'body': u'More detailed discussion can be checked out at ticket: #2648', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2713', 'title': u'remove misleading line on 500 error page. #2648'}, {'body': u'"options" seems to be more descriptive in this case.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2712', 'title': u'Use "options" instead of "hash" as argument name '}, {'body': u'Replace the methods with a single call to delegate.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2711', 'title': u'Refactor ActionDispatch::Http::UploadedFile '}, {'body': u'There was a minor typo in one of the examples in the guide and while I was at it, I also made some text changes for the sake of the reader.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/90793237d18f9c12460d11a2db4ee277?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2706', 'title': u'Fixed some typos and made minor text changes in the Plugins guide.'}, {'body': u"Allow checking the in-memory inclusion of has_many :through members when those members are persisted. <br/><br/>Since this works when all records are new, we expected this to also work when just the parent and join record are new.<br/><br/>The implementation isn't great but is the least intrusive change we found that fixed our test case.<br/><br/>NOTE: This is an updated pull request of https://github.com/rails/rails/pull/2672 to point to 3-0-stable instead.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edb76e4c5a37b46bda604e84ba685055?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2705', 'title': u'Improve in-memory checking on has_many :through members'}, {'body': u'Removed Unused Variable. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2702', 'title': u'Removed Unused Variable. '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2701', 'title': u'Fix failing asset test under 1.8'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f2bef52a79e8016894602a2f7eb0a82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2700', 'title': u'fix README.rdoc for railties adding in feedback from pull request 2684'}, {'body': u'http://travis-ci.org/#!/rails/rails/builds/101771/L551', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2699', 'title': u'Fix failing asset debug test under 1.8'}, {'body': u'fixed bug when using collection_singular_ids : now considering :conditions, :order on the association reflection<br/><br/>    class User < ActiveRecord::Base<br/>          has_many  :friendships<br/>          has_many  :friends,<br/>              :through => :friendships,<br/>              :conditions => "state = \'accepted\'",<br/>              :order => :lastname<br/>    end<br/><br/>on rails console :<br/><br/>    User.last.friend_ids<br/><br/>gives<br/><br/>    SELECT `users`.* FROM `users` ORDER BY users.id DESC LIMIT 1<br/>    SELECT DISTINCT `friendships`.friend_id FROM `friendships` WHERE (`friendships`.user_id = 10)<br/><br/>should be<br/><br/>    SELECT `users`.* FROM `users` ORDER BY users.id DESC LIMIT 1<br/>    SELECT `users`.* FROM `users` INNER JOIN `friendships` ON `users`.id = `friendships`.friend_id WHERE ((`friendships`.user_id = 10) AND ((state = \'accepted\'))) ORDER BY lastname', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6af603aeb99bf47aba506bfa02cf0aa8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2698', 'title': u'Collection singular ids with conditions'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2696', 'title': u'Removing redundant stringify_keys in Sprockets helpers'}, {'body': u'Previously, only "1" and "true" were accepted. This change makes any value, or no value at all, have the same effect.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2695', 'title': u"Don't require a specific value for the ?debug flag"}, {'body': u'Thx to @vijaydev for catching this. cc @josevalim<br/>Original pull #2563', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2694', 'title': u'Moved strict validation changelog entry to right place'}, {'body': u"ActiveResource attempts to cope with a server that may or may not have :include_root_in_json enabled by heuristically unwrapping the payload if there's a single key in the decoded response hash.  The problem is that it's legitimate for a server to return a single hash key of unwrapped content, though (e.g. `{:id => 1}`), which causes ActiveResource to choke.<br/><br/>This patch enhances the heuristic to only unwrap the content if:<br/><br/>* there is only one key<br/>* and the value of that key is either an Array or Hash<br/><br/>Tests included.  If desired I can provide a pull request for 3-1-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/079ab1cc5aa71e625bb160e62b09f09c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2692', 'title': u'ActiveResource remove_root bug'}, {'body': u'`ActiveSupport::Dependencies` is used all over. Introducing a shorthand makes the tests much less verbose.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2691', 'title': u'Use a shorthand in the DependenciesTest'}, {'body': u'Remove some redundant calls and make the code more readable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2690', 'title': u'Make Sprockets::Helpers::RailsHelper#debug_assets? more readable'}, {'body': u'Refactor `stylesheet_link_tag` and `javascript_include_tag`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2689', 'title': u'Refactor the Sprockets asset tags'}, {'body': u'Move the debugging tests into their own test class and remove redundancies.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2688', 'title': u'Refactor asset debugging tests'}, {'body': u"Current Rails 2.3 outputs a meaningless error log like this:<br/><br/>```<br/>Session contains objects whose class definition isn\\'t available.<br/>Remember to require the classes for all objects kept in the session.<br/>(Original exception: #{const_error.message} [#{const_error.class}])<br/>```<br/><br/>I found this was fixed in Rails 3, so this patch applies to 2-3-stable only.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2685', 'title': u'Do not escape # sign for interpolation'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f2bef52a79e8016894602a2f7eb0a82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2684', 'title': u'Rephrasing to sound more natural, and some grammar fixes.'}, {'body': u"Fix broken test test_copying_migrations(RailtiesTest::EngineTest):<br/>NoMethodError: undefined method `log_level' for #<Rails::Engine::Configuration:0xb87a98c><br/><br/>this is a revert from c29426d81c641d4ee51d7b4ac8b393c8961238b9  one of change ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2683', 'title': u'Engine test fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2682', 'title': u'Update changelogs (3-0-stable)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2681', 'title': u'Documentation changes: Assets Pipeline guide and Railties changelog'}, {'body': u'I found a trivial inconsistency on AR table_name computing behavior.<br/><br/>While there are an abstract_class model and its child:<br/><br/>```ruby<br/>class User < ActiveRecord::Base<br/>  self.abstract_class = true<br/>end<br/><br/>class Admin < User<br/>end<br/>```<br/><br/>The child\'s table_name changes depending on whether the abstract model\'s table_name were called or not.<br/><br/>```ruby<br/>User.table_name<br/>=> "users"<br/>User.scoped.to_sql<br/>=> SELECT "users".* FROM "users"<br/>Admin.table_name<br/>=> "users"<br/>Admin.scoped.to_sql<br/>=> SELECT "users".* FROM "users"<br/><br/>Admin.table_name<br/>=> "admins"<br/>Admin.scoped.to_sql<br/>=> SELECT "admins".* FROM "admins"<br/>```<br/><br/>This doesn\'t matter for normal use, but sometimes causes weird errors, for example, when dealing with an AR extension plugin that scans through descendants of AR::Base on Railtie hook.<br/><br/>Here\'s a patch that makes abstract models always skip compute_table_name.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2679', 'title': u'do not compute table names for abstract classes'}, {'body': u'Hi,<br/><br/>I recently ran into issues using ActiveResource against another Rails app running out of Pow.  Rails doesn\'t use the ContentLength middleware by default when started from `config.ru`, so if the rack server (in Pow\'s case nack) doesn\'t add a Content-Length header on its own (which nack doesn\'t, but many servers do), ActiveResource ignores the response body of a `save`, preventing me from reading the server state (which in the case of `create`s means you lose track of the new object\'s ID).<br/><br/>The [relevant part of the HTTP 1.1 spec](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13) says that the Content-Length header "SHOULD be sent whenever the message\'s length can be determined prior to being transferred," but SHOULD isn\'t MUST, and even if it were, it\'s conceivable that a custom JSON API might start streaming before it has finished counting bytes, so requiring a Content-Length header as evidence that a response body exists seems incorrect.<br/><br/>The current behavior came about [in this commit](https://github.com/rails/rails/commit/154081f0f74988bdb8979f0447ff5816ab83d8fd) from @malyk, associated with [lighthouse ticket \\#5038](https://rails.lighthouseapp.com/projects/8994/tickets/5038).  The [test case from that thread](https://github.com/rails/rails/commit/39debfc854c782f263a8340b63c9d8892f92a94b) provided by @neerajdotname still passes, so this patch doesn\'t alter any tested behavior, and presumably satisfies \\#5038.<br/><br/>This patch also provides better resilience by ignoring the body of an HTTP response that [isn\'t allowed to have one](http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.4) as another way of preventing parse errors if the server sends a garbage body along with a 204 response.<br/><br/>\\#5038 didn\'t make it into 3.0, so this bug only manifests on 3-1-stable and onward.  I\'d be happy to provide a pull request for 3-1-stable as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/079ab1cc5aa71e625bb160e62b09f09c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2678', 'title': u"ActiveResource shouldn't rely on the presence of Content-Length "}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2677', 'title': u'Refactoring javascript_include_tag and stylesheet_link_tag Sprockets helpers'}, {'body': u'Heya,<br/>I ran into a fun issue on ruby 1.9 where my autoload_once stuff was geting reloaded on each request. Turns out that under 1.9, "/var/log".start_with?(Pathname("/var")) returns false, and I was using :<br/><br/>```config.autoload_once_paths += [config.root.join(\'lib\')]```<br/><br/>Converting to strings fixed the issue. The attached patch just calls to_s on the autoload_once pathnames in load_once_path?, which is the only problem-point I\'ve discovered when using Pathnames instead of regular strings.<br/><br/>Any thoughts?<br/><br/>-Jonathan', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9e5ce6f28587baa2a566eb4f2d76c13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2675', 'title': u'Fix autoload_once_paths when using Pathnames & ruby 1.9'}, {'body': u'Helps fixing #2567 which prevented my app from starting up properly (using Devise).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/25e782eb7e799e78d781b0026fc6a4d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2674', 'title': u'Add back autoload :Table'}, {'body': u'Heya,<br/>I ran into a fun issue on ruby 1.9 where my autoload_once stuff was geting reloaded on each request.  Turns out that under 1.9, "/var/log".start_with?(Pathname("/var")) returns false, and I was using : <br/><br/>  config.autoload_once_paths += [config.root.join(\'lib\')]<br/><br/><br/>Converting to strings fixed the issue.  The attached patch just calls to_s on the autoload_once pathnames in load_once_path?, which is the only problem I\'ve discovered when using Pathnames instead of regular strings.<br/><br/>Any thoughts?<br/><br/>-Jonathan', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9e5ce6f28587baa2a566eb4f2d76c13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2673', 'title': u'autoload_once fix when using Pathnames on ruby 1.9'}, {'body': u"Allow checking the in-memory inclusion of has_many :through members when those members are persisted. <br/><br/>Since this works when all records are new, we expected this to also work when just the parent and join record are new.<br/><br/>The implementation isn't great but is the least intrusive change we found that fixed our test case.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edb76e4c5a37b46bda604e84ba685055?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2672', 'title': u'Improve in-memory checking on has_many :through members'}, {'body': u'This new functionality for Array instances. Two methods that help check inclusion two o more values. I think it will be very helpful for developers, because you can write your code shorter.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a3ab353191f97f7a782e5d64fc3bda3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2671', 'title': u"Extend Array functionality with two 'include' methods."}, {'body': u'Before this change, the only way to find the Rails Initialization Guide was through Google. :-)<br/><br/>This commit adds it to the index.html and to the "Index" dropdown menu.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/32701e4c5c6d91bbbb092077f8bdd2f8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2670', 'title': u'docs: Add the Initialization guide to the index.'}, {'body': u"Just removed a word that was left over from someone's earlier commit.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/32701e4c5c6d91bbbb092077f8bdd2f8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2669', 'title': u'docs: Remove extra word from sentence in initialization guide.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2668', 'title': u"Debug assets shouldn't ignore media type for stylesheets. Closes #2625"}, {'body': u'if you want to read the file you may need to ask if there is something<br/>to read from', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2c03aac7f78bbc6fb032cd39e8ddbe28?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2664', 'title': u'adds delegetion for eof? to AD::Http::UploadedFile'}, {'body': u'This follows @siong1987\'s pull request, #2659, adding a test checking that we don\'t transform the string "u2028" into the appropriate html character.<br/><br/>cc @pixeltrix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2660', 'title': u'Testing u2028'}, {'body': u'As @dmathieu mentioned, the old fix breaks the tests in 1.9. Encoding::CompatibilityError: incompatible encoding regexp match (ASCII-8BIT regexp with UTF-8 string).<br/><br/>So, now this new commit uses UTF-8 string instead of ASCII-8BIT string.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2659', 'title': u'use utf-8 for regex instead of ASCII-8BIT string.'}, {'body': u'This ensures that the protocol does not get carried over when there are<br/>two or more requests in functional tests. This was a problem when e.g.<br/>the first request was HTTP and the second request was HTTPS.<br/><br/>Closes #2654.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ebe96461709771a430da9c7c58f9ae5f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2658', 'title': u'Make ActionController::TestCase#recycle! set @protocol to nil'}, {'body': u'Use the Linus-style conditional. Also fix the documentation slightly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2657', 'title': u'Simplify JavaScriptHelper#escape_javascript'}, {'body': u"Lets not use 'include' (a ruby keyword) as a variable. Changed it to 'included_assocs'.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d700771597aa972b45c024dc59a37af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2655', 'title': u"Dont use 'include' as variable"}, {'body': u'Array wrap() is getting used in almost all of the  ActiveModel::Serialization methods. There was no require for array wrap, so added them for extra safety.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d700771597aa972b45c024dc59a37af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2653', 'title': u'Missing require array/wrap in serialization'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2652', 'title': u'Remove trailing whitespace'}, {'body': u'Added a few more tests with only-include and except-include option combinations in ActiveModel serialization class. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d700771597aa972b45c024dc59a37af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2651', 'title': u'More tests for only-include and except-include options in serialization'}, {'body': u'This fixes the failing actionpack test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2650', 'title': u'make sure we have the same encoding in the string and regex'}, {'body': u"Unless you'e new to Rails you know what the index.html file says and you don't look at it, and more often than not you forget to remove it before firing up `rails server` expecting to see your freshly crafted index view for welcome_controller. <br/><br/>So isn't it about time we had an option to remove it along with being able to skip-javascript and skip-bundle?<br/><br/>The option I've added is:<br/>`-I, [--skip-index-html]        # Skip public/index.html file`<br/><br/>Thanks to @parndt for pointing me to right files, and @radar for annoyance.<br/><br/>**I know I targeted `master` (It's my first patch) but can we have this in Rails 3.1.1? or sooner?**", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9db8544717ba3d5a90afb1b5b9bd50bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2649', 'title': u'Added a generator option to remove the public/index.html file when generating a new application'}, {'body': u'Fixed 500 error message which is misleading by suggesting all rails apps have exception notifications by default. This discourages users from complaining when the site fails for them.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8d19f3dc0175c287f41fde0b2ac58e8f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2648', 'title': u'Fixed 500 error message'}, {'body': u"params is a method, defined in every controller, which always returns a hash.  <br/>If it raises a NoMethodError, it means there's a bug somewhere else, which we want to know about.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2647', 'title': u'remove useless rescue'}, {'body': u'Just like 44f0d94469fb6, but for engines', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2646', 'title': u'Add destroy alias to engines'}, {'body': u'Add config.allow_debugging option to determine if the debug_assets query param can be passed by user and if debug option can be used in stylesheet_link_tag and javascript_include_tag', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2644', 'title': u'Add config.allow_debugging option'}, {'body': u"I think this lines up more closely with the docs, specifically the example in responder.rb between lines 30-56.<br/><br/>I can't find anywhere in the HTTP spec that takes a position on this. I've found it helpful to have the resulting resource sent back to the client on a PUT request and I've had to get by with render instead of the cleaner respond_with.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c114d21b6b0d8d8f061dfb0b92e3af95?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2643', 'title': u'Make respond_with return JSON/XML for PUT requests'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2638', 'title': u'Remove trailing whitespace from ActiveSupport::TestCase'}, {'body': u"Add documentation to `Sprockets::NullCompressor` and `Sprockets::LazyCompressor`. Also, make `LazyCompressor#compressor` private, as it isn't part of the public API.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2636', 'title': u'Document the Sprockets compressors'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2634', 'title': u'Fix Sprockets rewrite_asset_path'}, {'body': u'With this change, the default `trusted_proxies` pattern can be replaced entirely when configured with a Regexp, or appended to when configured with a String.<br/><br/>This allows developers to create a more specific pattern for their network, preventing local clients from being filtered as proxies.<br/><br/>*****<br/>When configured with a Regexp<br/><br/>    HelloWorld::Application.config.action_dispatch.trusted_proxies = /1\\.2\\.3\\.4/<br/><br/>The ActionDispatch::RemoteIp middleware instance (and its RemoteIpGetter) will have the Regexp above assigned to its `@trusted_proxies` instance variable.<br/><br/>    /1\\.2\\.3\\.4/<br/><br/>*****<br/>When configured with `nil`, or not explicitly configured<br/><br/>    HelloWorld::Application.config.action_dispatch.trusted_proxies = nil<br/><br/>The default Regexp matching private IP addresses will be assigned to `@trusted_proxies`.<br/><br/>    /(^127\\.0\\.0\\.1$|^(10|172\\.(1[6-9]|2[0-9]|30|31)|192\\.168)\\.)/<br/><br/>*****<br/>When configured with a String<br/><br/>    HelloWorld::Application.config.action_dispatch.trusted_proxies = "1.2.3.4"<br/><br/>The String will be combined with the default Regexp matching private IP addresses and assigned to `@trusted_proxies`.<br/><br/>    /(^127\\.0\\.0\\.1$|^(10|172\\.(1[6-9]|2[0-9]|30|31)|192\\.168)\\.)|(1\\.2\\.3\\.4)/<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e0b4a8a548f66d727368c29fad9eab18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2632', 'title': u'Trusted proxies are configurable'}, {'body': u'No need for them lines to get so long! Also, move that comment into<br/>the method body where it belongs!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2631', 'title': u'Refactor Sprockets::Helpers::RailsHelper#performing_caching?'}, {'body': u'This is  revised request of:  https://github.com/rails/rails/pull/2617 (which simply hard-coded the production environment). Not sure about grabbing Rails.configuration from force_ssl, works, but nothing else seems to be doing that...<br/><br/>config.force_ssl (the name which was suggested) already exists (for globally forcing ssl).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6f448664cd294829b9ed0cd356f91cb1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2630', 'title': u'config.ignore_force_ssl_filter so filter can be ignored in any desired '}, {'body': u'I added a failing test case. <br/><br/>works:<br/> IM=false ruby -Itest test/cases/associations/has_one_through_associations_test.rb<br/><br/>fails:<br/> IM=true ruby -Itest test/cases/associations/has_one_through_associations_test.rb<br/><br/>This bug seems to come from active_record/associations/association.rb (def load target).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3dcfe148e29aba731693d7b61e790243?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2628', 'title': u"has_one through doesn't work properly when Identity Map is enabled"}, {'body': u'Lets added the travis build status image to our README. Will be a clear indicator of the status of rails codebase, right in the project repo page.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d700771597aa972b45c024dc59a37af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2627', 'title': u'travis status image added'}, {'body': u'\'slice\'.pluralize should be "slices" and not "slice"', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8dfc69af947da21fe9c169e8dcc918ec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2626', 'title': u'Slice not pluralized to slices'}, {'body': u'Added a failsafe so that relation#inspect will not accidentally fill the memory with all the objects from the database on a faulty query.<br/><br/>http://stackoverflow.com/q/6859738/146272', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1178c7bae28fff8f7c948fb7c8c6c30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2623', 'title': u'Relation#inspect memory failsafe'}, {'body': u"I'll admit, I'm not 100% sure why this fix works, but `stream.respond_to?(:external_encoding)` was returning true even when `stream.external_encoding` was nil. The scenario where it would get triggered was when using active record alone with other frameworks, such as Padrino.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/229e3746f6f5100c1d7d5d7a8a5b82d5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2621', 'title': u'Issue with schema dump'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2620', 'title': u'Fix CI and rename 1 misleading test case.'}, {'body': u'This is to fix issue #2587.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2618', 'title': u'fix escape_javascript for unicode character \\u2028.'}, {'body': u"In its current implementation, you can't run tests without also setting up ssl, which doesn't seem practical.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6f448664cd294829b9ed0cd356f91cb1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2617', 'title': u'force_ssl now only works in production environment'}, {'body': u'Removed my name from the changelog as the amount of blogspam became ridiculous.<br/>When will docrails be back? :-p', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/756daf26a0d77df3f9136534e32c7b3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2616', 'title': u'Removed my name from the changelog as the amount of blogspam became ridic'}, {'body': u'(cherry picked from commit 5e73a2fa50e0e54ee69ab8725dc2d23facaf807d)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2615', 'title': u'Cherry picked "remove extra space since comment_if already returns the space." on rc6, already apply on master.'}, {'body': u'Hi,<br/><br/>There were two instances of `test_generator_if_skip_active_record_is_given` in `railties/test/generators/app_generator_test.rb`. One was doing fine. However other was actually testing skipping of sprockets. Please review the changes.<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/910dbaf2f5dabdec5c05dedd5c47193e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2612', 'title': u'Rename test_generator_if_skip_active_record_is_given'}, {'body': u'Strange a bit, that here is no alias for `rails destroy` action. Lots of people write `rails g` every day, but are not able to write `rails d` instead of `rails destroy`. <br/><br/>![](http://i.qkme.me/5tzy.jpg)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0730b35a43de1bcbd5345cc9b8d38acd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2611', 'title': u'Added destroy alias to rails generator'}, {'body': u'added missing link to url_for in documentation', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5744235abab8e6c1c6c6034874392d5a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2610', 'title': u'added link to url_for in documentation'}, {'body': u'Sprockets 2.0.0.beta.14 contains some fixes for assets precompilation', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2609', 'title': u'Bump sprockets to 2.0.0.beta.14'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2607', 'title': u'Add .rbenv-version to .gitignore'}, {'body': u'Per @tenderlove :heart:', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2605', 'title': u'3-1-stable 2602 backport'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2604', 'title': u'Minor edit in the params wrapper api docs'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2603', 'title': u'Minor change in the 3.1 release notes'}, {'body': u'In looking through the current implementation of PredicateBuilder, I caught an assumption that a model\'s primary key is "id" in the automatically-added select clause. This is just a quick fix to honor the primary_key if an alternate is specified.<br/><br/>Also, while looking at that first commit, I noticed we are clobbering select_values in the incoming relation, so that\'s fixed, too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2602', 'title': u'Fix assumption of primary key name in PredicateBuilder subquery.'}, {'body': u'Updated the docs for the has_many :finder_sql option to reflect changes made in rails/rails@a7e19b30ca71f62af516, i.e. the use of Procs when interpolation of the SQL is required.<br/><br/>Sorry to add it directly to the code but docrails is down at the moment.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a76465ee86928a4212a10e9c3a332e19?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2600', 'title': u'Updated the docs for the has_many :finder_sql option'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/132a034ca081fb81a8be8c78d8d4780d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2599', 'title': u'Creation of inquirer methods on the fly for performance boost'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d602eadb9367e8c1a2e00c0bef73555c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2597', 'title': u'actionpack/lib/action_controller/base.rb: docs typo'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d602eadb9367e8c1a2e00c0bef73555c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2596', 'title': u'ActionController::Redirecting : fix docs typo'}, {'body': u'Documenting this change on the asset_pipeline Guide. https://github.com/rails/rails/commit/7223f10acda3d5683e6de817bc7131ca109f3f28<br/><br/>@fxn, think this is all yours :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2595', 'title': u'Document debugging assets set by default for dev and test envs on guides'}, {'body': u'@fxn: All yours :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2589', 'title': u'Mailer guide fixes'}, {'body': u'Hi, <br/><br/>First of all, this is my first attempt at contributing to rails. I tried to follow the Rails guide, but I might be off. Feel free to give me guidelines ^^<br/><br/>I\'ll take the example of a blog with posts & comments to illustrate the issue.<br/><br/>ActiveResource takes all attributes of an object to create an object out of it. For instance if the JSON passed around is:<br/><br/>```json<br/>post = {<br/>  id: 123,<br/>  title: "Hey!",<br/>  comments: [{id: 456, content: "Loving this"}]<br/>}<br/>```<br/><br/>It will create the correct `Comment` object associated with the `Post`. This works fine.<br/><br/>The problem is when we try to pass via ARes an object with serialized attributes. Let\'s say that we have:<br/><br/>```ruby<br/>class Post<br/>  serialize :updates, Array<br/>end<br/>```<br/><br/>with updates defined as such: `[{:user_updating_id => :update_date_to_i}, ...]`<br/><br/>We could now have something like that:<br/><br/>```json<br/>post = {<br/>  id: 123,<br/>  title: "Hey!",<br/>  updates: [<br/>    {1 => 5464848414}, {2 => 9787987421}<br/>  ]<br/>}<br/>```<br/><br/>The problem arise when we try to do a .to_sym on the parameters. In 1.8.7 it would just return nil:<br/><br/>```ruby<br/>ruby-1.8.7-p299 :001 > 1.to_sym<br/> => nil <br/>```<br/><br/>But in 1.9.2 it crashes:<br/><br/>```ruby<br/>ruby-1.9.2-p290 :001 > 1.to_sym<br/>NoMethodError: undefined method `to_sym\' for 1:Fixnum<br/>```<br/><br/>I\'m suggesting skipping attributes that are not valid to have the same behavior between Ruby 1.8.7 and 1.9.2. I inspired myself from the fact that we "`next`" blank attributes, so why not unsuitable ones?<br/><br/>This is not ideal, since it would be better to be able to determine if something is a serialized attribute or another model embeded and then have a different logic, but at least this would prevent ARes from crashing for Ruby 1.9.2 as it does right now if we have the situation detailed above.<br/><br/>Let me know if you need more detail or if you need something else to accept this patch!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fb042ce6a66cc962a00576632311c880?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2585', 'title': u'In some case ActiveResource fails to handle serialized attributes with Ruby 1.9 and crashes'}, {'body': u'cc @josevalim @dhh<br/><br/>More info: https://github.com/rails/rails/issues/2132#issuecomment-1696304', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2583', 'title': u"Read extra args for 'rails new' from ~/.railsrc"}, {'body': u'cc. @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2581', 'title': u'Debug assets by default in development and test environments'}, {'body': u"The current sprocket cache system is designed to speed up compiles on your system. It seems like people want to hack it into a way to do offline compiles. This is just a fucking mess and impossible to debug.<br/><br/>The current cache stuff is still useful, but there should be a simple way to load computed digests into your environment.<br/><br/>On `assets:precompile`, a `manifest.yml` gets written out to `public/assets`. On boot that gets read and we just use that to do the lookup, no sprockets needed.<br/><br/>**Caveats**<br/><br/>This only works if you are completely replacing the public/assets directory on deploy. This isn't going to be for everyone like people doing rolling git deploys (github does this). So it should probably be opt in or opt out.<br/><br/>It requires sprockets/master for now, need to do another release soon.<br/><br/>Please test this shit.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2580', 'title': u'Read digests from asset manifest yml'}, {'body': u'Modified `#xml_http_request?` to return a boolean. It used to be `false` or `0` (which evaluates to `true`).<br/><br/>*When inspecting, or aggregating request data `true` makes more sense then `0`.*', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ff912e33733a3afa86851ade03568794?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2578', 'title': u'[minor] Modify #xml_http_request? to return true instead of 0'}, {'body': u'This seems to fix bug #2131.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40894bb928ebe715f1dfa655f969cf14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2577', 'title': u'Fix double slash at start of paths when mounting an engine at the root.'}, {'body': u'See #2570', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ca46a3d7ca39aae7b2b27526d0ad64f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2571', 'title': u'3.0.10 MailHelper.simple_paragraph'}, {'body': u'This is a fix for #2568. Ended up being a really simple fix, just renamed `simple_format` to `text_format` in `ActionMailer::MailHelper`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ca46a3d7ca39aae7b2b27526d0ad64f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2570', 'title': u'3 0 mailer text format'}, {'body': u"### Problem<br/><br/>Some validation is connected are not connected with end user and breaking it is a bug than problem with user input. Some peaces of it can be emberded to DB(like foreign keys), but some are not. And I think it's a good idea to use AM validators to do such checks as well.<br/><br/>### Use case<br/><br/>``` ruby<br/>class User < ARB<br/>  validates_presence_of :author<br/>end<br/>```<br/><br/>`#author` is usually set in controller from `current_user`. If somebody forgets to do it - user see error: <br/><br/>`Author cann't be blank`<br/><br/>That he can not correcterize. More over dev team is not notified about the problem.<br/><br/>### Solution<br/><br/>In order to deliver debug information to dev team<br/>instead of display error message to end user<br/>Implemented `validate!` method that generates validator <br/>that always raise exception when fails. <br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2563', 'title': u'Implemented strict validation concept'}, {'body': u'rdoc/task fix backported from master, for us poor schmucks still on 2-3-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/756daf26a0d77df3f9136534e32c7b3c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2562', 'title': u'Patch 1'}, {'body': u'When generating a model/migration from cli wouldn\'t that be nice if there would be an ability to specify whether particular property should also have an index like this: <br/><br/>```ruby<br/>rails g model person name:string:index profile:string<br/>```<br/><br/>so developer could just run \'rake db:migrate\' w/o looking into migration file?<br/><br/>The main change is adding the *has_index* property in the railties/lib/rails/generators/generated_attribute.rb:<br/><br/>```ruby<br/>module Rails<br/>  module Generators<br/>    class GeneratedAttribute<br/>      attr_accessor :name, :type, :has_index<br/><br/>      def initialize(name, type, has_index = false)<br/>        type = :string if type.blank?<br/>        @name, @type, @has_index = name, type.to_sym, has_index.eql?("index")<br/>      end<br/><br/>      ...<br/><br/>      def has_index?<br/>        @has_index<br/>      end<br/>    end<br/>  end<br/>end<br/>```<br/><br/>What do you think of it? Was it worth implementing?<br/><br/>**UPD**: added ability to specify :limit and :precision/:scale column options in migration like this: name:string[40] or name:string[40]:index or price:decimal[5.2] as proposed below (I chosen square brackets because parentheses break bash shell)<br/><br/>**UPD** changed a dot to a comma and square brackets to curly ones while specifying column type options', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ac26c8df072a31865cf42e838fbdaa33?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2555', 'title': u'When generating a model/migration from cli added ability to specify whether particular property should also have an index'}, {'body': u"It's a minor minor change, I only removed the blank spaces from the file.<br/><br/>Regards", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/062c05be3066f359170aa148ac95aaa9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2551', 'title': u'Cleanup application.css'}, {'body': u'When a route points to an unimplemented controller,  `ActionController::RoutingError` is raised with a message `No route matches ...`, although the route *does* exist and match.<br/><br/>    MyApp::Application.routes.draw do<br/>      root :to => \'welcome#index\'<br/>    end<br/><br/>and example spec that fails with misleading error:<br/><br/>    describe "welcome" do<br/>      it "GET / -> welcome#show" do<br/>        { :get => "/" }.should route_to(:controller => "welcome", :action => \'index\')<br/>      end<br/>    end<br/><br/>This is a pull request version of https://github.com/rails/rails/issues/2546', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1764a8db261a619b1a8e35c9498c0edf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2549', 'title': u'When a route references a missing controller, raise ActionController::RoutingError with clearer message'}, {'body': u'Fix formatting of active_record_validations_callbacks.textile so guide will render properly at http://edgeguides.rubyonrails.org/active_record_validations_callbacks.html#displaying-validation-errors-in-the-view<br/><br/>If you scroll down to section 8.2 you can see the formatting stops rendering properly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/afe7c8a8965c568040a204b321aa3c8d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2545', 'title': u'Fix formatting of active_record_validations_callbacks.textile'}, {'body': u"`require 'models/reply'` is not referenced anywhere and the tests run fine without it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38becc6fc03453ccb1edfcdea1122408?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2543', 'title': u'Remove unused require in activerecord/test/cases/attribute_methods_test.rb'}, {'body': u"I don't know why the scope :actionmailer got removed in a previous commit, but after some fiddling I'm pretty certain that, according to documentation, it should be there.<br/><br/>http://repo.or.cz/w/ruby-on-rails.git/blobdiff/4b05de19aaebcbe20941e8b13aaed2060759ed1c..bf7429041e64ee0f347764a4579c8c1d14d5b391:/actionmailer/lib/action_mailer/base.rb (sorry for the link, googled it)<br/><br/>I had a very quick look at the tests and did not find trace about this auto lookup feature, but is documented in guides and code comments.<br/><br/>Otherwise if it's intended we should tweak the code comments and guides instead.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/25e782eb7e799e78d781b0026fc6a4d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2542', 'title': u'Make subject auto lookup in ActionMailer work as advertised'}, {'body': u'Ruby 1.9.2 minitest is now applying our backtrace cleaner in tests fixes #1575<br/><br/><br/>If looks good then port it to master also.<br/><br/><br/>/cc @dhh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2540', 'title': u'Ruby 1.9.2 minitest is now applying our backtrace cleaner in tests fixes #1575'}, {'body': u'From 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2539', 'title': u'Delegate expl'}, {'body': u'Required here as we are using delegate here.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2538', 'title': u'Notifications test fix'}, {'body': u'Unused variable removed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2536', 'title': u'Unused variable removed.'}, {'body': u'including delegation here as removed from <br/><br/>68cb61865a495a9e5911b04557486cd372920b82', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2535', 'title': u'Delegation fix'}, {'body': u'railties test fixed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2534', 'title': u'Need to include public_send'}, {'body': u'Encoding an infinite or NaN number as json returns it as an unescaped/unquoted Infinity or NaN.<br/><br/>```ruby<br/>  { \'infinite\' => 1.0/0.0, \'nan\' => 0.0/0.0 }.to_json<br/>  # => { \'infinite\' : Infinity, \'nan\' : NaN }<br/>```<br/><br/>The resulting JSON is invalid and will break parsing (most notably with the jQuery JSON and AJAX methods). <br/><br/>I changed the behaviour to return null instead, as this is the recommended solution according to  to www.json.org/json.ppt (slide 16).<br/><br/>```ruby<br/>  { \'infinite\' => 1.0/0.0, \'nan\' => 0.0/0.0 }.to_json<br/>  # => { \'infinite\' : null, \'nan\' : null }<br/>```<br/><br/>Alternative solutions would be to return them as Strings "NaN", "Infinity" (or even "PositiveInfinity"). IMO this is special behaviour that should be implemented on the application-level.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5a3cdca851be0f6fea2a746b78afa0b8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2532', 'title': u'JSON: Encode infinite or NaN floats as `null` to generate valid JSON.'}, {'body': u"As the same request is reused thru all the routing constraints,<br/>accessing a memoized form of `params` would prevent the router from<br/>redefining it with a new set of parameters (the current route<br/>parameters).<br/><br/>Another solution could be to `dup` the `env` [here](https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/routing/mapper.rb#L40), but I' not sure this is a good idea in terms of memory.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2531', 'title': u'Calling `request.params` in routing constraints cannot interfere with subsequent routes. [Closes #2510] '}, {'body': u'*.sqlite3-journal files will be created during development and should be ignored by default.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0b94537b299e8e8ef6e4d0c9921c8d98?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2529', 'title': u'Ignore by default sqlite3-journal files.'}, {'body': u'Rails.initialized? can be called at any time without raising an exception [Closes #2507]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2528', 'title': u'Rails.initialized? can be called at any time without raising an exception [Closes #2507]'}, {'body': u'Methods like status and location are interfering with redirect_to [Closes #2511]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2527', 'title': u'Methods like status and location are interfering with redirect_to [Closes #2511]'}, {'body': u"Commit ecd37084b28a05f05251 did not take into account the use of creation_options inside the access denied exception handler. This causes the mysql user provisioning feature to fail:<br/><br/>```<br/>$ rake db:create:all<br/>Access denied for user 'user'@'localhost' (using password: YES). <br/>Please provide the root password for your mysql installation<br/>><br/>rake aborted!<br/>undefined local variable or method `creation_options' for main:Object<br/>```<br/><br/>I believe this fixes the problem.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ad414b53e35e0edb2e4937e1db9a1fa7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2524', 'title': u'Use mysql_creation_options inside rescue block'}, {'body': u'The test test_nil_raises_error_when_allow_nil_is_false is only passing because the convert proc is throwing an error. If this proc did not throw an error, then no exception would be raised when assigning nil to an aggregation that does not allow nil.<br/><br/>This changes assigning nil to an aggregation that does not allow it to raise a ActiveRecord::AggregationNilNotPermittedError.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91e8840fc25244e0303c6c6cab989537?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2523', 'title': u'Raise error when setting aggregation to nil when nil is not allowed'}, {'body': u"We need to include jquery-rails to pass test<br/><br/>It's in master <br/><br/>https://github.com/rails/rails/pull/2239<br/><br/>And need to call initializers true here.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2522', 'title': u'Railties test fix'}, {'body': u'Fixes bug in validates_presence_of which would only allow model to be valid if boolean field was true. That is validates_presence_of would find a model invalid if a boolean field (with a presence validator on it) was set to false. This seems inconsistent with the behavior of this validator with other types of data.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/04e37f7d55bdb2b2871834700fa30c97?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2521', 'title': u'validates_presence_of on boolean field bug'}, {'body': u'This adds support for multiple etags in an If-None-Match header.<br/><br/>From RFC 2616, Section 14.62<br/><br/>> A client that has **one or more entities** previously obtained from the resource can verify that none of those entities is current by including a list of their associated entity tags in the If-None-Match header field.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/da673e0d9cea081c001b281a09699cd0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2520', 'title': u'Support for multiple etags in an If-None-Match header'}, {'body': u"The two README links on the GitHub page are broken when the current page is anything other than *github.com/rails/rails/*. Even *github.com/rails/rails* (without the trailing slash) broke the links. Fixed this by making the links absolute.<br/><br/>The fix also meant a change in the Rakefile and that's the reason for this PR instead of a docrails commit.<br/><br/>Reference: 96c57d4bd0678103d28a87b455e4aef2a7e285b4 (This was the commit that made the original change in order to make these links work on GitHub as well)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2519', 'title': u'Fixes the README links in README.rdoc on GitHub'}, {'body': u'This is the same fix is #2514, but applied to 3-1-stable as @josevalim requested.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/42d4590355a1404230fbc9aff4dd377b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2518', 'title': u'Fix active record observer disabling for 3-1-stable'}, {'body': u"Fixed FrameworksTest. <br/><br/>Broken after b14f1c3ad72f7aeef4f725637b835da56bcd7d39<br/><br/>```ruby<br/><br/><br/>  1) Error:<br/>test_sets_action_controller_and_action_mailer_load_paths(ApplicationTests::FrameworksTest):<br/>ActiveSupport::Testing::RemoteError: caught NoMethodError: undefined method `[]' for #<ActionView::PathSet:0x103c866b8><br/>    test/application/initializers/frameworks_test.rb:37:in `test_sets_action_controller_and_action_mailer_load_paths'<br/>    /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/isolation.rb:65:in `run'<br/>    /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/isolation.rb:100:in `run_in_isolation'<br/>    /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/isolation.rb:97:in `fork'<br/>    /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/isolation.rb:97:in `run_in_isolation'<br/>    /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/isolation.rb:63:in `run'<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2516', 'title': u"We need [] method here. previously it's an array."}, {'body': u'fix Hash#extract! to work properly with HashWithIndifferentAccess and to not return nil values for keys that don\'t exist<br/><br/>This commit fixes 2 issues:<br/><br/>First, `HashWithIndifferentAccess#extract!` used to return a Hash object instead of a HashWithIndifferentAccess object.<br/><br/>Second, Hash#extract! used to include keys with nil values when the original hash didn\'t have the key.  For example `{:foo => "foo"}.extract!(:bar)` would return `{:bar => nil}`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/da673e0d9cea081c001b281a09699cd0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2515', 'title': u'fix Hash#extract! for HashWithIndifferentAccess and non-existant keys'}, {'body': u"This is a fix for #2461.<br/><br/>Is it too late to get this in 3.1?  Let me know and I can submit a pull request to get it in 3.1 as well.  It'd be nice to get it in since this is new behavior for 3.1.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/42d4590355a1404230fbc9aff4dd377b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2514', 'title': u'Allow ActiveRecord observers to be disabled.'}, {'body': u'Cheery-picked from master. Action pack failing because of nil.dup. <br/><br/><br/>8196c842b6f32271c23cba6b97918d32747018d8', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2512', 'title': u'Cant dup on nil 3 1 stable'}, {'body': u"Ported Pratik's changes from mysql_adapter to mysql2_adapter for bulk table operations.<br/>(https://github.com/rails/rails/commit/30176f28a41681c7607eed39d03501327869d40c)<br/><br/>Tests were written in Pratik's commit and are passing now for mysql2 adapter.<br/><br/>This could be extracted into an abstract mysql adapter in time to resolve the inherent duplication.<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a58476c5ed6be25f09c96a2a1125533?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2505', 'title': u'bulk alter table working for mysql2 connection adapter'}, {'body': u"Added in previous commit. <br/><br/>We cannot dup on nil. First we will check then do the dup <br/><br/><br/><br/>fixed failing test <br/><br/>```ruby<br/><br/><br/>  1) Error:<br/>test_ensure_url_for_works_as_expected_when_called_with_no_options_if_default_url_options_is_not_set(EmptyUrlOptionsTest):<br/>TypeError: can't dup NilClass<br/>    /Users/arun/checkouts/rails/actionpack/lib/action_dispatch/routing/url_for.rb:143:in `dup'<br/>    /Users/arun/checkouts/rails/actionpack/lib/action_dispatch/routing/url_for.rb:143:in `url_for'<br/>    /Users/arun/checkouts/rails/actionpack/test/controller/base_test.rb:289:in `test_ensure_url_for_works_as_expected_when_called_with_no_options_if_default_url_options_is_not_set'<br/>    /Users/arun/checkouts/rails/bundle/ruby/1.9.1/gems/mocha-0.9.12/lib/mocha/integration/mini_test/version_142_to_172.rb:27:in `run'<br/>    /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:35:in `block in run'<br/>    /Users/arun/checkouts/rails/activesupport/lib/active_support/callbacks.rb:426:in `_run_setup_callbacks'<br/>    /Users/arun/checkouts/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks'<br/>    /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:34:in `run'<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2503', 'title': u'We cannot dup on nil.'}, {'body': u"Fix assert_select_email to work on non-multipart emails as well as converting the Mail::Body to a string to prevent errors.<br/><br/>assert_select_email didn't work at all on emails that weren't multipart.  Emails with one text/html part were simply skipped and nothing was tested at all.  The original test for assert_select_email also didn't report any errors because it didn't perform any of the inner assert_select tests.<br/><br/>assert_select_email now works on both single-part and multipart emails.<br/><br/>This patch also fixes the body passed to the HTML::Document.new which expects a string.  The body is a Mail::Body class which threw this error if passed...<br/>```<br/>NoMethodError: undefined method `encoding_aware?' for <div><p>foo</p><p>bar</p></div>:Mail::Body<br/>```<br/><br/>Converting the body to a string with to_s fixes that issue.<br/><br/><br/>Please backport to Rails 3-0 stable as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/898bf26eb61308fe717a243441cc615d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2499', 'title': u'Fix assert_select_email to work on non-multipart emails as well as converting the Mail::Body to a string to prevent errors.'}, {'body': u"When calling url_for with a hash, additional (likely unwanted) values (such as :host) would be returned in the hash... calling #dup on the hash prevents this<br/><br/>Before fix:<br/><br/>options = {:controller => 'projects', :action => 'index'}<br/>url_for(options)<br/>options => {:controller => 'projects', :action => 'index', :host => 'www.example.com', :protocol => 'http'}<br/><br/>After fix:<br/><br/>options = {:controller => 'projects', :action => 'index'}<br/>url_for(options)<br/>options => {:controller => 'projects', :action => 'index'}", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/898bf26eb61308fe717a243441cc615d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2497', 'title': u'When calling url_for with a hash, additional (likely unwanted) values (such as :host) would be returned in the hash'}, {'body': u'Details: https://github.com/rails/rails/issues/2383#issuecomment-1782975', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2495', 'title': u'Set appropriate Sprockets::Environment#version before of precompile assets'}, {'body': u'Porting https://github.com/rails/rails/pull/2489', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8c0fa1974a8e6dff3c89e075367589ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2494', 'title': u'Porting changes on form_tag method signature to 3-0-stable'}, {'body': u"Fixing issue #2492. ActionView::Base.field_error_proc doesn't call for label.<br/><br/>objectify_options method should be applied to the proper options arg.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/afbeac88d096ee5a31793d64d157b556?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2493', 'title': u"Fixing issue #2492. ActionView::Base.field_error_proc doesn't call for la"}, {'body': u"I previously fixed the stringify_keys for all the other functions in form_tag_helper but couldn't figure out how to fix label_tag (and so left it out). I believe this fixes that now.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f2bef52a79e8016894602a2f7eb0a82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2491', 'title': u'fix destructive stringify_keys for label_tag'}, {'body': u'When geocoding IP addresses, I found that remote_ip values for requests coming through multiple proxies were incorrect.<br/><br/>Currently RemoteIpGetter instances are looking at the **right-most** IP address in the X-Forwarded-For header for the originating remote IP.<br/><br/>Wikipedia\'s [X-Forwarded-For article](http://en.wikipedia.org/wiki/X-Forwarded-For) describes the format of the (non-RFC-standard) field as "a comma+space separated list of IP addresses, the **left-most** being the farthest downstream client", which is consistent with what I\'m seeing.<br/><br/>Have you seen otherwise in the wild?<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e0b4a8a548f66d727368c29fad9eab18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2490', 'title': u'The first IP address in the X-Forwarded-For header is the originating IP'}, {'body': u'Realized that when using the third parameter (parameters_for_url), the form_tag method calls html_options_for_form, which ends calling url_for with two parametrs, which throws:<br/>```Wrong number of arguments (2 for 1)``` exception.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8c0fa1974a8e6dff3c89e075367589ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2489', 'title': u'Remove parameters_for_url from form_tag method header'}, {'body': u"Use cached column information for the join table of a has_many :through association in ActiveRecord::Associations::ClassMethods::JoinDependency::JoinAssociation#association_join. This prevents us from having to fire off new schema info queries every time we call #joins() with a :through association.<br/><br/>Commit 96bd936 fixed this last year for plain has_many associations, but it still happens for has_many :through's.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/349ebc82502b22272184dccd32b0a045?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2487', 'title': u'Use cached column information for the join table of a has_many :through'}, {'body': u"This is slightly heavy-handed as I'm not familiar enough with the `AR::Relation`'s code for a better fix.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2486', 'title': u'Default scope thread safety'}, {'body': u'fixes exists? on ActiveRecord classes to return false if passed nil (which may come from a missing URL param)<br/><br/>Before:<br/>Topic.exists?(nil) => true<br/><br/>After:<br/>Topic.exists?(nil) => false<br/><br/>This is the behaviour that Rails 2.x had and should be how Rails 3.x works as well.<br/><br/>Please backport to Rails 3-0 stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/898bf26eb61308fe717a243441cc615d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2485', 'title': u'fix exists? to return false if passed nil (which may come from a missing '}, {'body': u"Some client send broken accept line and the accept line breaks Rails' template resolver mechanism from bothering Mime::Type.parse().<br/><br/>This patch lets Mime::Type.parse() ignore qvalue when accept line has only one mime-type.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/70e13d9877054026fda46d5a5b53a236?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2482', 'title': u"handle '*/*;q=0.1' style single but has qvalue acceptline."}, {'body': u'This pull request adds a test demonstrating how table names are not correctly detected by ActiveRecord::Relation.  I\'ve sketched out an insufficient patch (b039f1b3f781cd60a9c60d469c7fff1b744f9cb0) which allows the new test to pass for Oracle but breaks the test suite in other places, especially for other databases (or at least SQLite3).<br/><br/>In order to get the test to fail, run \'rake test_oracle\' after setting up test/config.yml to use an Oracle database with a username like \'ops$user\', or any valid variation that has non-word characters in it.  It should pass otherwise.<br/><br/>Discussion<br/>------------------------<br/><br/>Eager loading will revert to the left-outer-join strategy when using fully-qualified table names on Oracle. For example:<br/><br/>```ruby<br/>  class Dept < ActiveRecord::Base<br/>    set_table_name "dept"<br/>  end<br/>  <br/>  class Emp < ActiveRecord::Base<br/>    set_table_name "emp"<br/>    belongs_to :dept, :select => "id, name nombre"<br/>  end<br/>  <br/>  Emp.find(1, :include => :dept).dept.nombre       # ok<br/>  Emp.find(:first, :include => :dept).dept.nombre  # ok<br/>```<br/><br/>This code works as written because the default one-query-per-association strategy is used; as a result the select is used and nombre gets set on the dept record. However if you qualify the table name then the select is not used in some cases; find using an id breaks but find :first still works.<br/><br/>```ruby<br/>  class Dept < ActiveRecord::Base<br/>    set_table_name "schema_name.dept"<br/>  end<br/>  <br/>  class Emp < ActiveRecord::Base<br/>    set_table_name "schema_name.emp"<br/>    belongs_to :dept, :select => "id, name nombre"<br/>  end<br/>  <br/>  Emp.find(1, :include => :dept).dept.nombre       # NoMethodError<br/>  Emp.find(:first, :include => :dept).dept.nombre  # ok<br/>```<br/><br/>In the id case eager loading reverts to the left-outer-join strategy and the select is ignored. The difference can be traced to the `tables_in_string` method which is responsible for extracting tables from the select string. This is how it\'s written in 2.3.5:<br/><br/>```ruby<br/>  # [active_record/association.rb]<br/>  def tables_in_string(string)<br/>    return [] if string.blank?<br/>    string.scan(/([\\.a-zA-Z_]+).?\\./).flatten<br/>  end<br/>```<br/><br/>Turns out the regexp doesn\'t handle the fully-qualified names properly. There were [some patches](https://rails.lighthouseapp.com/projects/8994/tickets/4770-patch-patches-for-activerecord-oracle-enhanced-adapter-compatibility) that partially fix this in 3.0.0 but the fix isn\'t complete. This is how the same method is currently:<br/><br/>```ruby<br/>  # [active_record/relation.rb]<br/>  def tables_in_string(string)<br/>    return [] if string.blank?<br/>    # always convert table names to downcase as in Oracle quoted table names are in uppercase<br/>    # ignore raw_sql_ that is used by Oracle adapter as alias for limit/offset subqueries<br/>    string.scan(/([a-zA-Z_][.\\w]+).?\\./).flatten.map{ |s| s.downcase }.uniq - [\'raw_sql_\']<br/>  end<br/>```<br/><br/>This handles word-based schemas, but it will not handle other valid Oracle schemas like \'schema$name\' nor will it handle tables with a db link. The method can be kind-of fixed with a fancier regexp:<br/><br/>```ruby<br/>  class ActiveRecord::Relation<br/>    NONQUOTED_OBJECT_NAME   = /[A-Za-z][A-z0-9$#]{0,29}/<br/>    NONQUOTED_DATABASE_LINK = /[A-Za-z][A-z0-9$#\\.@]{0,127}/<br/>    TABLES_IN_STRING = /((?:#{NONQUOTED_OBJECT_NAME}\\.)?#{NONQUOTED_OBJECT_NAME}(?:@#{NONQUOTED_DATABASE_LINK})?)\\..?/<br/>  <br/>    def tables_in_string(string)<br/>      return [] if string.blank?<br/>      string.scan(TABLES_IN_STRING).flatten.map {|str| str.downcase }.uniq - [\'raw_sql_\']<br/>    end<br/>  end<br/>  <br/>  class Dept < ActiveRecord::Base<br/>    set_table_name "schema_name.dept"<br/>  end<br/>  <br/>  class Emp < ActiveRecord::Base<br/>    set_table_name "schema_name.emp"<br/>    belongs_to :dept, :select => "id, name nombre"<br/>  end<br/>  <br/>  Emp.find(1, :include => :dept).dept.nombre       # ok<br/>  Emp.find(:first, :include => :dept).dept.nombre  # ok<br/>```<br/><br/>But this is getting kinda wild. Moreover it\'s not correct for other databases.<br/><br/>A couple links:<br/><br/>* [a test of the regexp above](https://gist.github.com/490817)<br/>* [a more thorough study of the select issue](https://gist.github.com/486750)<br/><br/>And note that this reproduces and addresses [issue 5200](https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5200-inconsistencies-when-eager-loading-with-fully-qualified-table-names-using-oracle) from lighthouse, which was not migrated to github.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2e2d8c8ff86e18bf49f777f39028823e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2481', 'title': u'Inconsistencies when eager loading with fully-qualified table names using Oracle'}, {'body': u"I've committed a fix for the issue described in the following ticket.<br/>https://github.com/rails/rails/issues/2479", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11c1fcb84ab1fdf769cbc3f7c8466528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2480', 'title': u'ActiveResource::Base.delete should pass headers'}, {'body': u"running tests with test-unit allways resulted in 0% Passed, because the<br/>passed tests wouldn't be countet. With add the<br/>::Test::Unit::TestCase#add_pass method the passed test cases get countet<br/>correctly", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2c03aac7f78bbc6fb032cd39e8ddbe28?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2472', 'title': u'adds ::Test::Unit::TestCase#add_pass method'}, {'body': u'On Oracle disable_referential_integrity before execution of block will disable foreign key constraints and after block will enable them but when constraints are enabled then they are validated. Therefore created record with invalid foreign key should be deleted before enabling foreign key constraints.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2466', 'title': u'Fixed test_disable_referential_integrity on Oracle'}, {'body': u'Include Rake::DSL into monkey-patch to remove more warnings.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edb76e4c5a37b46bda604e84ba685055?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2465', 'title': u'Further monkey-patching to avoid deprecation warnings'}, {'body': u'of test_disable_referential_integrity(AdapterTest).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2464', 'title': u'Add insert into fk_test_has_pk to avoid a Failure when tested with Oracle database'}, {'body': u'Refactoring based on a wishful comment.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/83a9c9496491ad52f6d6b0be9ae4fb3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2460', 'title': u"Enumerable#find IS like 'first_match'"}, {'body': u'Over 50k people have received their first taste of Rails by playing through "Rails for Zombies" (http://railsforzombies.org).  Only problem is when they start to play around using a zombie scaffold:<br/><br/>rails generate scaffold zombie name:string<br/><br/>This generates controller which improperly singularizes zombies, so the instance variables are all @zomby.  As a side-effect of this form attributes don\'t work.  The parameters properly send "zombie"=>{"name"=>"test"}", but the controller is looking for params[:zomby].<br/><br/>For the sake of new people trying to learn Rails who email me wondering why their first app doesn\'t work, and... well.. for the sake of the zombies, can we fix this tragedy?<br/><br/><br/>![Zombies were people too](https://img.skitch.com/20110807-rk3rjabfkyxx2gwsnru1tsrgdy.png)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7255c45cb618d9759e1be08fdc9c365c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2457', 'title': u'Added irregular zombie inflection, so zombies != zomby'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2455', 'title': u'Edit changelog to mention about x_sendfile_header default change'}, {'body': u'Tested with Oracle database, HasManyAssociationsTest got 9 errors as follows.<br/><br/>```ruby<br/><br/>  4) Error:<br/>test_clearing_an_association_collection(HasManyAssociationsTest):<br/>ActiveRecord::StatementInvalid: OCIError: ORA-00907: missing right parenthesis: UPDATE "COMPANIES" SET "CLIENT_OF" = NULL WHERE "COMPANIES"."ID" IN (SELECT "COMPANIES"."ID" FROM "COMPANIES"  WHERE "COMPANIES"."TYPE" IN (\'Client\', \'SpecialClient\', \'VerySpecialClient\') AND "COMPANIES"."CLIENT_OF" = 1 AND "COMPANIES"."ID" IN (3) ORDER BY id)<br/>```<br/><br/>Although this ORA-00907 error message is not straightforward, this error can be fixed by removing "ORDER BY id" from subquery.<br/>:order => "id" argument is removed from :clients_of_firm because update statement result will not be affected by removing order by clause.<br/><br/>All activerecord tests are passed with this fix for PostgreSQL 8.4 and MySQL 5.1.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e2cb998e15d8e8fdef4f11a1f510fe74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2452', 'title': u'Removed :order => "id" from :clients_of_firm to fix ORA-00907 errors.'}, {'body': u'Before this change, when using sqlite, I could not see the begin, commit or rollbacks in the log files.  With MySQL this information is shown and it is very useful when debugging transactions. <br/><br/>This is how it all started:<br/>http://stackoverflow.com/questions/6892630/sqlite-transactions-not-showing-in-test-log', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4cfa27623a7f68e3d297e786e2264d24?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2451', 'title': u'sqlite transactions in log files'}, {'body': u'This can be backported to 3-1-stable and 3-0-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2450', 'title': u'Fix ActiveSupport::Gzip under Ruby 1.8.7. Closes #2416'}, {'body': u'A couple of small fixes for asset pipeline, as per discussion in: https://github.com/rails/rails/issues/2211<br/><br/>* update `rake assets:clean` to also invoke `rake tmp:clear` to dump the tmp cache and force a full recompile<br/>* update digest generation for assets to include current environment + version number to avoid accidentally serving the wrong version', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a17f0025641b4be419a6cd3845e55dd2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2448', 'title': u'Asset pipeline fixes: clear out tmp cache and use environment in digest generation'}, {'body': u'using rake beta to pass with 1.9.3 and ruby-head.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2446', 'title': u'Using rake 0.9.3.beta to pass with 1.9.3 and ruby-head'}, {'body': u'* Replaced a single line double-ternary with a more idiomatic functional use of if-else.<br/>* Replaced repeated options Hash [] calls with a parallel assignment.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cfc1397a59f523269342e1a7bdfe096b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2444', 'title': u'Minor refactor to delegate'}, {'body': u'Happy Rubinius Day!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2442', 'title': u'Test against Rubinius'}, {'body': u"<br/>I've added an option to `accepts_nested_attributes` called `:reject_unless`. It works the same way as `:reject_if`, but using negative conditions. Sometimes this can help you to specify your conditions in a more semantic way, making the code a bit more readable. For example:<br/><br/>```ruby<br/>accepts_nested_attributes_for :author, :reject_unless => proc {|attributes| attributes[:name].present? && attributes[:age].present?}<br/>```<br/><br/>looks clearer than<br/><br/>```ruby<br/>accepts_nested_attributes_for :author, :reject_if => proc {|attributes| attributes[:name].blank? || attributes[:age].blank?}<br/>```<br/><br/>I know this is not a significant change, but it adds something similar to those things we like in Ruby and Rails, like the `unless` keyword :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/09a14d61e3e1f8b1fe6866b4fdbb4abe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2441', 'title': u'Add :reject_unless option to accepts_nested_attributes'}, {'body': u"I got this error running AR tests under Rubinius:<br/><br/>```<br/><br/>undefined method `to_time' on an instance of Time. (NoMethodError)<br/><br/>Backtrace:<br/>  Kernel(Time)#to_time (method_missing) at kernel/delta/kernel.rb:79<br/>     Time#<=> (compare_with_coercion) at /Users/guille/code/rails/activesupport<br/>                                         /lib/active_support/core_ext/time<br/>                                         /calculations.rb:310<br/>```<br/><br/>The error is fixed including a missing require", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2439', 'title': u'Fix AR test suite error under Rubinius 2.0 #rbxday'}, {'body': u'rake db:fixtures:load is extended so that the load order of fixtures can be specified either in the environment file or on the command line.<br/><br/>Also a VERBOSE flag is introduced whereby rake displays the fixtures name when loading so traceback of loading errors is simpler.<br/><br/>Both changes are fully backward-compatible.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/697bcc59590398c96965d28f73a7a8a0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2433', 'title': u'Ability to specify fixtures load order'}, {'body': u'This is my first commit (ever), so not sure if this is something that Rails could use, and if this needs testing (guessing no), but it helped me out a lot during testing, so perhaps it\'s useful for others as well.<br/><br/>This adds the `HTTP_HOST` env variable to the `ActionController::RoutingError` error message. For me this proved invaluable for use during testing multi-domain apps to understand why routes which are domain-constraint won\'t work as expected.<br/><br/>It basically changes this:<br/><br/>`No route matches [POST] "/signup" (ActionController::RoutingError)`<br/><br/>into this:<br/><br/>`No route matches [POST] "/signup" on mydomain.dev (ActionController::RoutingError)`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/39fc02d6a812edf6daa8914247e9b4c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2432', 'title': u'Add HTTP_HOST information to RoutingError for multi-domain apps'}, {'body': u'The `rake install` command was broken because of this inconsistency.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edb76e4c5a37b46bda604e84ba685055?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2426', 'title': u'Make rails gem build directory consistent with actionpack, etc.'}, {'body': u"ActiveSupport::Date does not override the Date.today method. This means that the core ruby library's .today method is called which may be based off of a different time zone than what's set in config.time_zone.<br/><br/>3rd times a charm.. :)  Sorry for the excessive pull reqs.. it'll go smoother in the future.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/240b3c90db0dbb2b3121b2f9c3cb40b0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2424', 'title': u'Fixing bugs in ActiveSupport::Date. Fixes #759.'}, {'body': u"without this fix Rails process itself somehow works fine, but rake tasks and migrations fail with error messages like<br/>  undefined method 'quote_table_name' for nil:NilClass<br/><br/>Problem was found/fixed in 3.0 release line, and it looks like 3.1 would benefit from same fix as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a755176a85626be390098c493730227?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2423', 'title': u'Patch connection problem'}, {'body': u'ActionView::Helpers::TextHelper#simple_format should not change the text in place. Now it duplicates it.<br/><br/>simple_format should not edit the string in place, but rather should duplicate and return a modified copy. We were running into the cumulative paragraphs error (see https://github.com/rails/rails/issues/1980). Also note that this was changing the string pointed to by the model, if only for the duration of the request. This is bad.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edb76e4c5a37b46bda604e84ba685055?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2421', 'title': u'Simple_format should not edit it in place. (Fixes https://github.com/rails/rails/issues/1980)'}, {'body': u'Hi.<br/><br/>There is an explicit code that if you run "rake db:create" in development environment, both development and test databases are created. However, rake db:drop just drops the database for the environment the task is run.<br/><br/>It would be more convenient if rake db:drop would also drop the test database if run in development environment. Suggested patch does this.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4486876726bcef5b87268564fc29e6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2419', 'title': u'When running "rake db:drop" also drop test database in development environment'}, {'body': u'simple_selector: attributes with brackets in double quotes not recognized<br/><br/>HTML::Selector#simple_selector can recognize attributes in single and<br/>double quotes. But when the attribute value contains square brackets,<br/>and the value is enclosed in double quotes, an exception<br/>`ArgumentError: Invalid selector: "]` is thrown.<br/><br/>Related to issue #2412.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4bf5fdd75123f51bab7ccb9b6636dbfd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2418', 'title': u'simple_selector: attributes with brackets in double quotes not recognized'}, {'body': u'remove all unwanted forward slashes', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2415', 'title': u'remove all unwanted forward slashes'}, {'body': u"There are two issues here:<br/><br/>#1) ActiveSupport::Date current method has a misleading conditional. Time.zone is always returned because config.time_zone is set by default on a project.<br/><br/>#2) ActiveSupport::Date does not override the Date.today method. This means that the core ruby library's .today method is called which may be based off of a different time zone than what's set in config.time_zone.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/240b3c90db0dbb2b3121b2f9c3cb40b0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2414', 'title': u'Fixing bugs in ActiveSupport::Date. Fixes #759.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/57b5309e59253ef8b6f096d14358d82a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2413', 'title': u'accept hash of options to recreate database for postgres adapter'}, {'body': u'Rails Asset Pipeline is awesome, but when I came from Jammit I was upset, that Sprockets joins all JS files in development too, because I can\u2019t find troublesome JS files just by error messages in console (I need to open huge application.js and try to understand which CoffeeScript file corresponds to line 1046).<br/><br/>So I was very happy to find `?debug_assets=1` option in Assets Pipeline docs, but I want it for every development request (we include all subfiles in top of `application.js` and we use CoffeeScript without `;`-problem, so we haven\u2019t side effects). I understand that `debug_assets` have some side effects for some developers, so I add non-default options `config.assets.debug` to make ex-Jammit users more happy.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cd32d17c95d3bfb352504c36462b98bd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2411', 'title': u'Debug assets by config'}, {'body': u'This commit resolves a mysql2 adapter compatibility issue when database rake tasks such as `rake db:test:prepare` etc are invoked (resolves "Task not supported by \'mysql2\'" errors).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/150a5f2939c9434028592950d8985a0a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2409', 'title': u'V.2.3.8.mysql2'}, {'body': u"Included TagHelper within TextHelper, since it's used there (so that we can include TextHelper in files, i.e., a different helper).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edb76e4c5a37b46bda604e84ba685055?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2398', 'title': u"Included TagHelper within TextHelper, since it's used there (so that we c"}, {'body': u'There is a call in activesupport-3.0.9/lib/active_support/cache.rb#read_multi to delete entry (on or about line 348). This breaks the call in both 3.0.x and 3.1 branches with any cache other than MemCacheStore.. The change is trivial so the code is below. Also added a test case.<br/><br/>```ruby<br/>  if entry.expired?<br/>    delete_entry(key)<br/>  else<br/>    results[name] = entry.value<br/>  end<br/>```<br/><br/>Unfortunately, the delete_entry method takes two arguments. It should be:<br/><br/><br/>```ruby<br/>  if entry.expired?<br/>    delete_entry(key, options)<br/>  else<br/>    results[name] = entry.value<br/>  end<br/>```<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2393', 'title': u'Fix ArgumentError in ActiveSupport::Cache::CacheStore.read_multi'}, {'body': u'<br/>I have added this test in reference to b93a918337e99c3fe3ad059f093b1ee56b9e6a7d .<br/><br/>We have added a new config in test.rb. I have included test for all three files.<br/><br/>I think this will help to keep track if something got changed. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2390', 'title': u'Test added to check development.rb, test.rb and production.rb content'}, {'body': u'After closing #1937 with fcbde454f6 there is an unnecessary require in `active_support/core_ext/module/delegate.rb`<br/><br/>Patch removes the unnecessary lines.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4486876726bcef5b87268564fc29e6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2389', 'title': u'Remove unnecessary require (happened after fcbde454f6)'}, {'body': u'Removing some warnings.<br/><br/>47f60dee8be11c9d4e36 -> Remove fixture warning. "<<: *DEFAULTS" is no longer supported<br/>fc51c227bdeedc0a8bd0 -> Remove ambiguous first argument warning.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2224acac6b9f3f0e7728322f48866d1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2388', 'title': u'Remove warnings...'}, {'body': u'Remove fixture warning. "<<: *DEFAULTS" is no longer supported', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2224acac6b9f3f0e7728322f48866d1e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2387', 'title': u'Removing YAML deprecated DEFAULTS.'}, {'body': u'In order to use StrictSanitizer in test mode<br/>Consider :id as not sensetive attribute that can be filtered from<br/>mass assignement without exception.<br/><br/>cc @josevalim<br/><br/>Original discussion #2067', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2385', 'title': u"MassAssignmentProtection: consider 'id' insensetive in StrictSanitizer"}, {'body': u'modified fix #1872 according to jose valim\xb4s suggestions. this is cherry picked from 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7c33b1ba3982f3573b526154736f43d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2384', 'title': u'modified fix #1872 according to jose valim\xb4s suggestions. this is cherry'}, {'body': u'Cherry picked my fix for #2368  <code>rake about</code> not showing the middleware, db adapter and db schema version information.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2382', 'title': u'Fix #2368 (3-1-stable)'}, {'body': u'Cherry picked my fix for #2368  <code>rake about</code> not showing the middleware, db adapter and db schema version information.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2381', 'title': u'Fix #2368 (3-0-stable)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2380', 'title': u"Fix ActionMailer's test suite. 'rake test' is usable again"}, {'body': u'Removing extra requires from the test. Already loaded in abstract_unit.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2379', 'title': u'Removing extra requires from the test. Already loaded in abstract_unit.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2378', 'title': u'Remove warnings by calling remove_method'}, {'body': u"remove extra require for 'active_support/dependencies' as it is required in abstract_unit.rb", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2377', 'title': u"remove extra require for 'active_support/dependencies' as it is required "}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2376', 'title': u'Use remove_method on generated setters (this suppresses warnings)'}, {'body': u"<code>rake about</code> is not showing the middleware information (#2368) as well as the db adapter and db schema version. Those items were raising exceptions which are silently rescued. <br/><br/>Having the task load the environment ensures that ActiveRecord is loaded fine (for the db adapter and schema version to be found properly).<br/><br/>As for the middleware, I'm not sure how that got fixed :). As @arunagw says in #2368, <code>Rails.configuration.middleware</code> seems to be of different classes in different places.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2375', 'title': u'Fixes #2368. rake about not showing a few properties'}, {'body': u'Loading AS encoding.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2374', 'title': u'3-0-stable schema dumper test fix'}, {'body': u"Loading AS encoding in helper.<br/><br/>In master it's AS encoding loaded by blank.rb but here we need to load for test.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2373', 'title': u'3-1-stable schema dumper test fix'}, {'body': u"This speeds up remove_possible_method substantially since it doesn't<br/>have to rescue a NameError in the common case.<br/><br/>Closes #2346.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/334805ec86cb3fe1ac2eda776a921fb2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2372', 'title': u'Issue 2346 3-1-stable port'}, {'body': u"This speeds up remove_possible_method substantially since it doesn't<br/>have to rescue a NameError in the common case.<br/><br/>Closes #2346.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/334805ec86cb3fe1ac2eda776a921fb2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2371', 'title': u'remove_possible_method: test if method exists'}, {'body': u"remove extra require for 'stringio' as it is required in helper.rb", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2370', 'title': u"remove extra require for 'stringio' as it is required in helper.rb"}, {'body': u"Need a return before skip. can't use encoding_aware? here. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2369', 'title': u'3 1 stable schema dumper fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2365', 'title': u"`skip` doesn't work on 1.8.7 (it's a no-op), so use `pending` instead"}, {'body': u"Resubmitted per @josevalim's suggestion in #2363", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2364', 'title': u'Resolve warnings by instantizing @attrubtes as nil'}, {'body': u"When @attributes is undefined (in the case of some of the tests using `.allocate` instead of `.new` on an AR class) a warning will be thrown.<br/><br/>As this adds an extra conditional it could be a performance hit but I suspect the only time anybody is really calling `#inspect` on an AR object is from within the console so it shouldn't be a big deal.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2363', 'title': u'Resolve warnings by checking if @attributes is defined'}, {'body': u'adhere to submission port (587) instead of relay (25) by convention, especially when using user / pass<br/><br/>re:<br/>* http://tools.ietf.org/html/rfc4409<br/>* http://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol<br/>* http://mostlygeek.com/tech/smtp-on-port-587/', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f2b38133a59126871ff01b402721d4db?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2361', 'title': u'adhere to submission port (587) instead of relay (25) by convention, espe'}, {'body': u"I'm running into a problem where I have a caches_action in one of my controllers, adding an optional parameter to the cache_path, and I'm seeing the format added twice.  For instance:<br/><br/>    action.xml?thing=value.xml <br/><br/>instead of:<br/><br/>    action.xml?thing=value<br/><br/>This also makes it extremely difficult to target with expires_action, as the format is appended only when infer_extension is true.  This patch fixes the key generation to not include the extension if it's already been included.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2359', 'title': u"Ensure that the format isn't applied twice to the cache key."}, {'body': u"We need to write return skip. <br/><br/>Was giving error in 1.8.7 <br/><pre><br/>NoMethodError: undefined method `external_encoding' for #<StringIO:0xb538b778><br/></pre>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2358', 'title': u'skiping magic comment test for < 1.9'}, {'body': u"Support backwards compatible interface for migration down/up with rails 3.0.x.<br/><br/>Please see issue: #2348.  <br/><br/>If this looks good, I'll backport to 3-1-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2357', 'title': u'Support backwards compatible interface for migration down/up with rails 3.0.x.'}, {'body': u"I've also filed this at https://github.com/rails/rails/issues/2355", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f2bef52a79e8016894602a2f7eb0a82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2356', 'title': u'fix stringify_keys destructive behavior for most FormTagHelper functions'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f2bef52a79e8016894602a2f7eb0a82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2354', 'title': u'remove redundant calls to stringify_keys'}, {'body': u'Change to ActiveSupport::Cache to remove the behavior where it always returned frozen objects from the cache. This behavior was originally added so that the various cache implementations would work the same. Previously, MemoryStore would return objects that could be mutated and the cache would be affected by these changes. Freezing the objects ensured that no cached object could be accidentally changed.<br/><br/>However, the tradeoff has been that if you really want to manipulate an object you get a frozen object exception and end up needing to code around it. This ends up happening more often than anticipated.<br/><br/>This patch changes the behavior to instead always return a copy of the cached object. This still protects you from accidentally changing a cached object, but returns the flexibility of being to do what you want with the object.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd922fce44ba22e32f8b6c44dcd3a6f9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2353', 'title': u'Change ActiveSupport::Cache behavior to not return frozen objects'}, {'body': u'This fixes the test suite for master', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2351', 'title': u"this test can't be executed on ruby 1.8"}, {'body': u'This fixes the test suite for 3-1-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2350', 'title': u'Green 3 1'}, {'body': u'This fixes the test suite for 3-0-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2349', 'title': u'Green 3 0'}, {'body': u'Covering more files for plugin new generator test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2345', 'title': u'Covering more files in test for plugin new generator. '}, {'body': u'This resolves the warning being throw in `actionpack/capture_helper_test#test_flush_output_buffer_concats_output_buffer_to_response`<br/><br/>After the OutputBuffer was being flushed by calling `[0,0]` on it the `@dirty` instance variable was not initialized in the new instance. This was throwing a warning.<br/><br/>The fix here will set the `@dirty` instance variable to `false` on the new instance when the slice method is invoked.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2344', 'title': u'Reset @dirty to false when slicing an instance of SafeBuffer'}, {'body': u'Test added for plugin new generator to generate mailer', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2343', 'title': u'Test add for plugin new generator generate mailer'}, {'body': u'Instead of removing the instance variable just set it to nil, resolves the warnings because of a missing instance variable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2342', 'title': u'Resolve "instance variable @controller not initialized" warnings for sprocket_helper_test'}, {'body': u'This might be controversial as the `mark` element would not be supported in older browsers but obviously the default can be overridden. (or suggest the HTML5 shim)<br/><br/>In addition, I removed the `highlight` class as this is implied with the `mark` element.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2341', 'title': u"Default to the semantically correct HTML5 'mark' element for text highlighting"}, {'body': u"Here you go @josevalim - I've cherry-picked the commit from https://github.com/rails/rails/pull/2287 and targeted master.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e01ec1de2f7783812d2235a6a9aaaeea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2339', 'title': u'Ensure that app/mailers gets created in new plugins (#2287 brought into master)'}, {'body': u'uglifier-rails: https://github.com/guilleiguaran/uglifier-rails<br/><br/>It can be moved to Rails Github account if you want', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2335', 'title': u'Use uglifier-rails to set default js compressor for Rails'}, {'body': u'See #2330.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2332', 'title': u'Backport #2330 into 3-1-stable'}, {'body': u"This fixes a bug for inline resource declarations with options:<br/><br/>    resources :messages, :comments, :controller => 'threads'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2330', 'title': u'Inline resources router fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2329', 'title': u'Give attribution to Peter Jaros for the patch we paired on'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2327', 'title': u"We don't need to require erb here."}, {'body': u'Test fixed for plugin generator. Failing because content moved to gemspec.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2326', 'title': u'pluging generator test fix'}, {'body': u"It casts all nil values to blank string. I think, it is a bug, because rails < 3.1 didn't do it. Here is solution. Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3cd1aea8a39b32b4b2ef859ba64b3fd7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2325', 'title': u'Nil values uniquines validation'}, {'body': u"Hi,<br/><br/>We were writing documentation for the Toronto Ruby Hack Fest for Rails 3.1 when I noticed that putting a file in any `assets/` directory will display an error as Sprockets is expecting a directory.<br/><br/>After further inspection, Rails only checks if the file exists and not if they are directories.<br/><br/>I've modified the code and tested to make sure that Rails only adds directories to Sprockets.<br/><br/>Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/817064769d0316491e902fc65ac0e742?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2324', 'title': u'Rails 3.1 throws a Errno::ENOTDIR if files are put in assets directories'}, {'body': u'I updated the test to successfully authenticate, instead of failing, when the credentials URI differs from the request path seen by the server. Without this change, digest authentication cannot go through a proxy that rewrites the request, and this is specifically what the Digest Auth specification, RFC 2617 - http://tools.ietf.org/html/rfc2617 requires.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5b94f15ac725ff2e6fd6feace2006726?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2323', 'title': u'Fix for digest authentication bug - issue #2301'}, {'body': u'At least Google Chrome warns if JSONP is used and mimetype is application/JSON.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/40e339cf56748d69c828b78c7160f961?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2321', 'title': u'JSONP should use mimetype application/javascript'}, {'body': u'Fixed a small typo in deprecation error message.<br/>This only applies to 3-0-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2320', 'title': u'callback methods are Class methods'}, {'body': u'See #2305.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2319', 'title': u'Backport #2305 into 3-1-stable'}, {'body': u"Raise a rescuable exception when Rails doesn't know what to do with the format, rather than responding with a head :not_acceptable (406)<br/><br/>Otherwise it's impossible for rails apps to use rescue_from to customize Rails behavior when someone visits /products.php and you really just want to redirect them to /products.<br/><br/>Without this patch, you'd have to do one of: <br/><br/>1. register a mime type for every extension someone hits your site with<br/>2. alias method chain the head() method in a super ugly Rails hack.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/abee6b688fb7bbef062225d51c05acbd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2313', 'title': u'Raise a rescuable exception, rather than responding with a head :not_acceptable (406)'}, {'body': u'When schema is altered using the sqlite3 adapter, if you are using an unconventional primary key, that key can be lost. This is because the :id option is set during a table copy, but the :primary_key option is ignored. This can cause your schema.rb file to drift from the intended/original table schema.<br/><br/>Instructions to reproduce the bug is located here and applies to rails 2.3.11 and rails 3.0.9: https://gist.github.com/1109790 .<br/><br/>I have included a test that exposes the bug and the commit that fixes it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/59117dd496b61b6e451ccd12786ab128?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2312', 'title': u'Sqlite drops unconventional pks when copying/altering tables'}, {'body': u"Currently `ActiveSupport::Deprecation` is a global that can be only used by Rails due to its generated messages. However it is a very nicely written piece of software that could be used by Rails applications (you know some of them last for years and it would be nice for them to have the ability to deprecate their own api) or gems that already depend on `rails` or `active_support`. This patch aims at fixing it.<br/><br/>It let's you use `ActiveSupport::Deprecation` as a module and include it in a class.<br/><br/>And it also adds additional argument to `ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy` and `ActiveSupport::Deprecation::DeprecatedConstantProxy` constructors so that warnings can be generated by other objects than `ActiveSupport::Deprecation` module itself (but that's the default).<br/><br/>I added few more tests to make sure that those features works as advertised.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b81cae1fb43808ac23a2188258ca9e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2310', 'title': u'Allow ActiveSupport::Deprecation features to be used by rails applications and library authors'}, {'body': u'Reverse order fix when using function for ActiveRecord::QueryMethods Fixes #1697<br/>Allowing the split to not to mangle the functions in the order clause', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/506c80139a1fc2c51c9acc28b22ab1cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2309', 'title': u'Unmangaling reverse_sql_order when function is used'}, {'body': u"fix for issue #1872: the method build_request_uri in action_controller/test_case.rb called url_options, which finally delegates to default_url_options, for the first time. This call is too early but it seems also necessary as there is no change between 3.0.x and 3-1-stable. memoizing this first call in action_controller/metal/url_for.rb then prevents future calls to reach default_url_options again, which was the problem. memoization also doesn\xb4t happen in 3.0.x.<br/><br/>Added test case for the according modification showing that without memoization the :locale\xb4s value is 'de' and not 'en' as noted in the issue\xb4s description.<br/><br/>Closes #2031 and #1872", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7c33b1ba3982f3573b526154736f43d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2307', 'title': u'3 1 stable fix1872'}, {'body': u'cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2306', 'title': u'Backport #1969 - Closes #2304'}, {'body': u'As of right now `AM::Errors#include?` is pretty much useless.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2305', 'title': u'Improve AM::Errors#include?'}, {'body': u'When creating a query with `select` and `includes` like<br/><br/>    Post.select(\'author_id, COUNT(author_id) AS num_posts, authors.*\').group(\'author_id\').includes(:author)<br/><br/>the `select` part is ignored when querying the database.<br/><br/>However, if `to_sql` is called on the Relation, the query gets constructed directly.<br/><br/>to_sql output:<br/><br/>    SELECT author_id, COUNT(author_id) AS num_posts, authors.* FROM "posts"  GROUP BY author_id<br/><br/>query sent to the db:<br/><br/>    SELECT "posts"."id" AS t0_r0, "posts"."author_id" AS t0_r1, "posts"."title" AS t0_r2, "posts"."body" AS t0_r3, "posts"."type" AS t0_r4, "posts"."comments_count" AS t0_r5, "posts"."taggings_count" AS t0_r6, "posts"."taggings_with_delete_all_count" AS t0_r7, "posts"."taggings_with_destroy_count" AS t0_r8, "posts"."tags_count" AS t0_r9, "posts"."tags_with_destroy_count" AS t0_r10, "posts"."tags_with_nullify_count" AS t0_r11, "authors"."id" AS t1_r0, "authors"."name" AS t1_r1, "authors"."author_address_id" AS t1_r2, "authors"."author_address_extra_id" AS t1_r3, "authors"."organization_id" AS t1_r4, "authors"."owned_essay_id" AS t1_r5 FROM "posts" LEFT OUTER JOIN "authors" ON "authors"."id" = "posts"."author_id" GROUP BY author_id<br/><br/>See the attached patch for a complete testcase which currently fails.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c11579192bd480035b95d6cc82a79907?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2303', 'title': u"Eager loading with 'includes' overrides 'select' in SQL query"}, {'body': u'It would seem that `FormOptionsHelper#options_for_select` uses some syntactic sugar (`Symbol#to_proc`) which can cause severe performance problems under certain circumstances, when using `ruby 1.8.7` w/ `Rails 3-1-stable`<br/><br/>In my case, I was rendering a page with 10 selects of about 700 options each (there is a use case for that, trust me), and after the first couple of requests it would take as long as 8 seconds more, per request (from 300ms to ~9secs). Eeek!<br/><br/>After a long session with `perftools.rb` and `rack-perftools_profiler` I managed to track it down to `options_for_select` and its use of `map(&:to_s)`. The symptoms were seemingly random, long, garbage collection pauses, in the middle of a request.<br/><br/>`Perftools.rb` pointed me to `Array.map` creating tens of thousands of `Proc` objects as a side-effect of calling `Symbol#to_proc`. <br/><br/>Depending on the initial free memory allocation, garbage collection would not kick in until after 800MB of memory needed to be inspected by the GC. Unsurprisingly, my machine would stop responding during those long GC pauses.<br/><br/>I have not managed to reproduce with code the long GC pauses, I guess they need to happen inside the Rails rendering pipeline and under a specific memory situation, but I have managed to benchmark a significant improvement when replacing `Symbol#to_proc` with a block:<br/><br/>    https://gist.github.com/1109416<br/>  <br/>The results:<br/><br/>    Using ruby 1.8.7 (2011-02-18 patchlevel 334) [i686-darwin10.7.0], MBARI 0x6770, <br/>    Ruby Enterprise Edition 2011.03<br/><br/>    Rehearsal --------------------------------------------------------<br/>    Using Symbol#to_proc   3.520000   0.060000   3.580000 (  3.594295)<br/>    Standard call          2.890000   0.020000   2.910000 (  3.038064)<br/>    ----------------------------------------------- total: 6.490000sec<br/><br/>                               user     system      total        real<br/>    Using Symbol#to_proc   3.750000   0.060000   3.810000 (  3.856077)<br/>    Standard call          2.690000   0.010000   2.700000 (  2.713586)<br/><br/>Now, I know 3.1 is only offering token Ruby 1.8.7 support and that 3.2 will most likely require 1.9.2, but this can be a real performance problem in real-world applications. One not worth not addressing for the sake of a bit of syntactic sugar...<br/><br/>The fix in this pull request should have zero side-effects and would save the mane of many a developer. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/919feaa12651b668d8ee9a41215b1976?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2302', 'title': u'Improve performance and memory usage for options_for_select with Ruby 1.8'}, {'body': u'Fixed some types in the active_resource/test/cases/base/shema_test.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91e8840fc25244e0303c6c6cab989537?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2296', 'title': u'fix some typos'}, {'body': u'The current gemspec files generated by "rails plugin new" are not optimal for creating gems. They do not include full meta-information, nor do they include dependencies.<br/><br/>Bundler can now manage dependencies declared in the .gemspec file through the addition of a simple "gemspec" directive in your Gemfile. This allows dependencies to be declared once, and applies to both base and development dependencies. For more information, check out:<br/>http://gembundler.com/rubygems.html<br/>http://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/<br/><br/>This pull request includes a refactoring of the Gemfile and .gemspec files generated by "rails plugin new". Dependencies are now managed in the .gemspec file where possible. Comments have been added to both files explaining dependency management choices.<br/><br/>In addition, the .gemspec file has been updated to include more meta-information, such as author and email. Defaults have been added that include "TODO", which prevents gems from being built without review. The version has been extracted into a separate file, to be consistent with bundler and svenfuchs/gem-release.<br/><br/>Hopefully, all of these changes will eliminate the need to run a separate tool such as Bundler or Jeweler to create a gem template which then needs to be merged with the output of "rails plugin new". Merging is a messy, error-prone process that leaves you wishing for a cleaner alternative.<br/><br/>-----<br/>These changes were originally proposed in https://github.com/rails/rails/pull/2282. I\'m following the recommendation to submit these changes to master in the form of several atomic commits.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e01ec1de2f7783812d2235a6a9aaaeea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2295', 'title': u'Improve dependency management and gemspec file for plugins'}, {'body': u"Running 'rake test' (with Rake 0.9.2) in ActiveSupport folder I'm getting error under Ruby trunk:<br/><br/>```<br/>/Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/test/unit.rb:167:in `block in non_options': file not found: test/**/*_test.rb (ArgumentError)<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/test/unit.rb:146:in `map!'<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/test/unit.rb:146:in `non_options'<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/test/unit.rb:207:in `non_options'<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/test/unit.rb:52:in `process_args'<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/minitest/unit.rb:891:in `_run'<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/minitest/unit.rb:884:in `run'<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/test/unit.rb:21:in `run'<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/test/unit.rb:326:in `block (2 levels) in autorun'<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/test/unit.rb:27:in `run_once'<br/>\tfrom /Users/guille/.rvm/rubies/ruby-head/lib/ruby/1.9.1/test/unit.rb:325:in `block in autorun'<br/>rake aborted!<br/>```<br/><br/>This fixes it.<br/><br/>cc @tenderlove", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2293', 'title': u'Fix ActiveSupport Rakefile for Ruby trunk'}, {'body': u"Tenderlove persuaded me to tweak my last patch a little, to remove the unnecessary regexp.  It's a bit cleaner, and might be a shade faster.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9e5ce6f28587baa2a566eb4f2d76c13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2291', 'title': u'Replace unnecessary regexp in Dependencies#load_missing_constant'}, {'body': u'fix for issue #1872: the method build_request_uri in action_controller/test_case.rb called url_options, which finally delegates to default_url_options, for the first time. This call is too early but it seems also necessary as there is no change between 3.0.x and 3-1-stable. memoizing this first call in action_controller/metal/url_for.rb then prevents future calls to reach default_url_options again, which was the problem. memoization also doesn\xb4t happen in 3.0.x. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7c33b1ba3982f3573b526154736f43d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2290', 'title': u'fix for issue #1872'}, {'body': u'@spastorino, enjoy! :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2289', 'title': u'More Irc notifications (from Travis with love, again)'}, {'body': u'Hey @spastorino bro,<br/><br/>Enjoy :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2288', 'title': u'Irc notifications (from Travis with love)'}, {'body': u'When calling "rails plugin new [plugin_name] --full", an app/mailers directory was not created in the resultant plugin. This pull request corrects that.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e01ec1de2f7783812d2235a6a9aaaeea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2287', 'title': u'Ensure that app/mailers gets created in new plugins'}, {'body': u'remove unused variables warnings removed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2285', 'title': u'remove unused variables warnings removed'}, {'body': u'Hey Mr @tenderlove<br/><br/>Enjoy :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2284', 'title': u'enable Travis CI irc notifications to #rails-contrib on irc.freenode.org'}, {'body': u'remove deprication warning: ambiguous first argument; put parentheses or even spaces', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2283', 'title': u'remove deprication warning: ambiguous first argument; put parentheses or '}, {'body': u'The current gemspec files generated by "rails plugin new" are not optimal for creating gems. They do not include full meta-information, nor do they include dependencies.<br/><br/>Bundler can now manage dependencies declared in the .gemspec file through the addition of a simple "gemspec" directive in your Gemfile. This allows dependencies to be declared once, and applies to both base and development dependencies. For more information, check out:<br/>http://gembundler.com/rubygems.html<br/>http://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/<br/><br/>This pull request includes a refactoring of the Gemfile and .gemspec files generated by "rails plugin new". Dependencies are now managed in the .gemspec file where possible. Comments have been added to both files explaining dependency management choices.<br/><br/>In addition, the .gemspec file has been updated to include more meta-information, such as author and email. Defaults have been added that include "TODO", which prevents gems from being built without review. The version has been extracted into a separate file, to be consistent with bundler and svenfuchs/gem-release. Also, an app/mailers directory has been included (I\'m not sure why this was omitted?).<br/><br/>Hopefully, all of these changes will eliminate the need to run a separate tool such as Bundler or Jeweler to create a gem template which then needs to be merged with the output of "rails plugin new". Merging is a messy, error-prone process that leaves you wishing for a cleaner alternative.<br/><br/>I know this is rather late in the RC cycle, but please consider these changes for 3.1. Thanks!<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e01ec1de2f7783812d2235a6a9aaaeea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2282', 'title': u'Improve dependency management and gemspec file for plugins'}, {'body': u'remove deprication warning for ruby 1.9.3-head for unused variable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2281', 'title': u'remove deprication warning for ruby 1.9.3-head for unused variable'}, {'body': u"--backtrace<br/><br/>.rvm/rubies/ruby-1.9.3-head/lib/ruby/1.9.1/test/unit.rb:167:in `block in non_options': file not found: test/**/*_test.rb (ArgumentError)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2280', 'title': u'Let run test with ruby 1.9.3-head'}, {'body': u'Hi,<br/>I stumbled across a potential optimization in Dependencies#load_missing_constant, which currently instantiates a regexp once for every line in Kernel#caller, each time load_missing_constant is called.<br/><br/>We have a relatively large app with a lot of autoloaded constants.  After making this regexp constant, we see a noticeable difference to request times when running in development on 1.9.2 - dropping from 4.15s to 3.55s. (The difference in REE was less impressive - 4.96s to 4.88s).<br/><br/>Any comments?<br/>-Jonathan', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9e5ce6f28587baa2a566eb4f2d76c13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2279', 'title': u'Constantize a regexp in Dependencies#load_missing_constant'}, {'body': u'Cherry-pick of #2277 for 3-1-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2278', 'title': u'Fix actionpack 3 1'}, {'body': u"This fixes actionpack's test suite.<br/><br/>* Sprockets API has changed. We can't use << on paths anymore.<br/>* The file's hash can't be relied to never change. Use assert_match instead of assert_equal.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2277', 'title': u"Fix actionpack's test suite"}, {'body': u'I tried to call select with multiple arguments few times, and now I added it. Such API is much more natural than string for me.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c544188078900e5d5976689949177f11?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2276', 'title': u'allow select to have multiple arguments ie. Post.select(:id,:name,:author)'}, {'body': u'Rewrite code to have minimum amount of eval.<br/><br/>Properly namespaced the module in the pull request.<br/>Original pull resquest #2255.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2275', 'title': u'Refactor Module.delegate'}, {'body': u"refactored 'assert_redirected_to': local call to validate_request! will be called in assert_response already. changed names of local variables in order to recognize the semantics a bit easier.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7c33b1ba3982f3573b526154736f43d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2273', 'title': u"refactored 'assert_redirected_to'"}, {'body': u"`id` will be the only real sort criteria in any case as it's unique.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2272', 'title': u'Simplify the test by using id and name.'}, {'body': u'I tried to call select with multiple arguments few times, and now I added it. Such API is much more natural than string for me.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c544188078900e5d5976689949177f11?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2271', 'title': u'allow select to have multiple arguments ie. Post.select(:id,:name,:author)'}, {'body': u"First time contributor so I'm not sure if I'm 'doing it right'. Should I rebase on master and submit a second pull request?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c0ccb7ec696d6524e9ee8048835d710e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2270', 'title': u'Add code statistics for Javascript and CoffeeScript files to `rake stats` task'}, {'body': u'The default includes all instance variables which is many kilobytes long<br/>and takes too long to generate, as well as being just plain not useful.<br/><br/>The original impetus for this change was the development 500 page taking<br/>ages to render, in part because of the potentially massive amount of<br/>data that inspect would be generating and displaying. This was mitigated<br/>somewhat by 5b8801442ea02fc942ae0ee8ef81a9120525f5f0, though this commit<br/>fixes one of the root problems and has the added benefit of being more<br/>useful when debugging in console.<br/><br/>References #1525.<br/><br/>(Not sure whether this should be against 3-1-stable or master, it should apply cleanly against either.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/116ed602629e00b79eae9af774398bb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2269', 'title': u'Short inspect'}, {'body': u'Removing sendfile middleware from default. Loading sendfile when x_sendfile_header is true<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2268', 'title': u'Removing sendfile middleware from default. Loading sendfile when x_sendfi'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2266', 'title': u'Upgrade Rack version to 1.3.2 that fix Rack::Utils.escape for Ruby 1.8.7'}, {'body': u"Made '--skip_bundle=true' the default when generating a new project. This skips automatically installing gems from the project\xb4s Gemfile. Idea from issue #2132.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7c33b1ba3982f3573b526154736f43d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2265', 'title': u'3 1 stable'}, {'body': u'Should fix issue described here:<br/>https://github.com/rails/rails/issues/1525<br/><br/>When a Template:Error is raised, the content of the rendered template will be nil, which in turn causes the .html_safe to throw another error, which in turns causes the same loop to go forever until the host machine runs out of memory.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d0fb2c115d6529a76fa7a3cce8a56761?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2264', 'title': u'- fix Template::Error causing a memory leak'}, {'body': u'When `:format => true`, the format segment is mandatory (as opposed to `:format => false`).<br/><br/>Before this patch, it was not possible to specify a resource route with a mandatory format.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2263', 'title': u'Allow a route to have :format => true'}, {'body': u'When format is true, it is mandatory (as opposed to `:format => false`). This is currently not possible with resource routes, which automatically make format optional by default.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2262', 'title': u'Allow a route to have :format => true'}, {'body': u'remove require as Connectionadapters is autoloaded', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2261', 'title': u'remove require as Connectionadapters is autoloaded'}, {'body': u"addresses issue #1907 - any routes that follow a route with a constraints<br/>  block are inheriting the previous route's constraints.<br/><br/>note: backport for 3-1-stable for pull request here: https://github.com/rails/rails/pull/2245#issuecomment-1646998.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c6f618ac80494d9a6847d4a953554e2f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2260', 'title': u'3 1 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2258', 'title': u'Use shorter class-level File methods instead of going through File.stat'}, {'body': u'See #2251.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2257', 'title': u'Backport #2251 into 3-1-stable'}, {'body': u'See #2252.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2256', 'title': u'Backport #2252 into 3-1-stable'}, {'body': u'Current implementation of `Module.delegate` have some evil in constructing ruby code too match.<br/>This patch rewrites the method to have minimal amount of eval,  that I suppose always a good idea e.g. more code reused, less strings to construct.<br/><br/>Diff says it all.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2255', 'title': u'Refactor Module.delegate'}, {'body': u'cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2254', 'title': u'provide more explicit test names'}, {'body': u'This was already merged to master, but not yet to 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5d38ab152e1e3e219512a9859fcd93af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2253', 'title': u'Stringify parameter values in tests branched off 3-1-stable'}, {'body': u'This brings back the ability to overwrite/extend polymorphic url helpers via application helpers that was present in Rails 2.3 and Rails 3.0.<br/><br/>Thus allowing to do something like this:<br/><br/>    module ApplicationHelper<br/>      def posts_path(*args)<br/>        do_something(*args)<br/>        super<br/>      end<br/>    end', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2252', 'title': u'Make polymorphic_url calls go through application helpers again.'}, {'body': u'Having UPDATE ... ORDER BY is sometimes necessary when performing incremental updates on UNIQUE indexed columns.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2251', 'title': u'Bring back the ability to provide :order for update_all'}, {'body': u'Fix for rake rails:template in 3-0-stable. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2249', 'title': u'Rake template path fix'}, {'body': u"Following #1555, gsub and sub can't be used with Safe Buffers because of incorrect behavior with global variables when using blocks.<br/>I have therefore disabled gsub and sub for safe strings, inviting people to use it on unsafe strings only.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2248', 'title': u'make gsub and sub unavailable in SafeBuffers - Closes #1555'}, {'body': u'cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2247', 'title': u'Add test checking that precompiling assets performs caching'}, {'body': u"This my result of the Rails HackFest, I've added some methods for register js and css compressors for Sprockets:<br/><br/>```ruby<br/># Register compressors<br/>Sprockets::Compressors.register_js_compressor(:closure, Closure::Compiler)<br/>Sprockets::Compressors.register_css_compressor(:yui, YUI::CssCompressor)<br/><br/># Register a compressors and set as default for fallbacks<br/>Sprockets::Compressors.register_default_js_compressor(:uglifier, Uglifier, :default => true)<br/><br/># Load compressors constants only when are needed<br/>Sprockets::Compressors.register_js_compressor(:uglifier, 'Uglifier', {:default => true, :require => 'uglifier'})<br/>Sprockets::Compressors.register_css_compressor(:yui, 'YUI::CssCompressor', :require => 'yui/compressor')<br/><br/># Ask for registered compressors<br/>Sprockets::Compressors.registered_css_compressor(config.assets.css_compressor)<br/>Sprockets::Compressors.registered_js_compressor(:uglifier)<br/>Sprockets::Compressors.registered_js_compressor(:unexistent_compressor)<br/>```<br/><br/>Also I cleanup Sprockets railtie to use this API instead of hardcode expansions directly in the code. (I've added some registers for all expansions defined in the railtie)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2246', 'title': u'Public API for add new compressors to Sprockets'}, {'body': u"addresses issue #1907 - any routes that follow a route with a constraints<br/>  block are inheriting the previous route's constraints.<br/><br/>An example of this:<br/>https://github.com/spaghetticode/constraints/blob/master/config/routes.rb<br/><br/>and the gist of the resulting @named_routes instance variable:<br/>https://gist.github.com/1103314", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c6f618ac80494d9a6847d4a953554e2f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2245', 'title': u'Memoizing @blocks & disposing of constraints options properly'}, {'body': u"Hi,<br/><br/>We were writing documentation for the Toronto Ruby Hack Fest for Rails 3.1 when I noticed that putting a file in any `assets/` directory will display an error as Sprockets is expecting a directory.<br/><br/>After further inspection, Rails only checks if the file exists and not if they are directories.<br/><br/>I've modified the code to make it only accept directories, however I'm not sure where to write tests for it. Can someone point me in the right direction?<br/><br/>I'll continue to look at tests to find an appropriate spot and I'll include the tests once I figure out where to put them :P", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/817064769d0316491e902fc65ac0e742?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2244', 'title': u'Rails 3.1 throws a Errno::ENOTDIR if files are put in assets directories'}, {'body': u'As per request of @fxn in bb3b3e306252129f24e69eede9793cfc131c766e and #2226', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2243', 'title': u'Help the next guy with explanations - See bb3b3e306'}, {'body': u'1) Failure:<br/>test_scaffold_tests_pass_by_default(ApplicationTests::RakeTest) [test/application/rake_test.rb:245]:<br/>Expected /7 tests, 10 assertions, 0 failures, 0 errors/ to match "==  CreateUsers: migrating ====================================================\\n-- create_table(:users)\\n   -> 0.0017s\\n==  CreateUsers: migrated (0.0018s) ===========================================\\n\\nLoaded suite /Users/miteshjain/.rvm/gems/ruby-1.9.2-p180/gems/rake-0.9.2/lib/rake/rake_test_loader\\nStarted\\n\\nFinished in 0.003070 seconds.\\n\\n0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\\n\\nTest run options: --seed 18477\\nLoaded suite /Users/miteshjain/.rvm/gems/ruby-1.9.2-p180/gems/rake-0.9.2/lib/rake/rake_test_loader\\nStarted\\n..EEEE.\\nFinished in 1.202395 seconds.\\n\\n  1) Error:\\ntest_should_get_edit(UsersControllerTest):\\nActionView::Template::Error: couldn\'t find file \'jquery\'\\n  <br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9d659a36c0ffc29defdeee9f3034b800?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2239', 'title': u'fixing broken test as jquery-rails is included in application.js'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2238', 'title': u'Ordering with extra spaces was raising a SQL exception'}, {'body': u'I\'ve found this hugely helpful in development. I looked for another $DEBUG type flag to check against, but decided to just use .debug and if it\'s appropriate, it\'ll log. Any thoughts?\n\nIf you\'re not convinced, throw this in your application controller and see how helpful it is:\n\n``` ruby\n  # show helpful info on why we redirected in logs\n  def redirect_to(options = {}, response_status = {})\n    ::Rails.logger.error("Redirected by #{caller(1).first rescue "unknown"}")\n    super(options, response_status)\n  end\n```\n\nAlso, happy to add a test, just didn\'t have a strong feeling on what would be a good method. \n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1ccb5123d1af92e24b32cec62abcf9a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2237', 'title': u'log at debug level what line caused the redirect_to'}, {'body': u'This time rebased off master as requested in #2194', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8f0660cdc9f5d91c7d97456f8f0be8c7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2236', 'title': u'Fix after_initialize and Base.create edge case'}, {'body': u'I think this can go with 3-1-stable. Bug fix.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2235', 'title': u'Location var fix cherry pick from master to 3-1-stable'}, {'body': u'Allowing the split to not to mangle the functions in the order clause', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/506c80139a1fc2c51c9acc28b22ab1cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2234', 'title': u'Unmangaling reverse_sql_order when function is used'}, {'body': u'I cherry-picked same commits to my previous pull https://github.com/rails/rails/pull/2229 into master<br/><br/>Thanks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/86112553d9846f4c7b16e8bfee1f28f4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2233', 'title': u'Fix issue 1951 master Namespaced model partial_path is wrong in namespaced controllers'}, {'body': u'Allowing the split to not to mangle the functions in the order clause', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/506c80139a1fc2c51c9acc28b22ab1cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2232', 'title': u'Unmangaling reverse_sql_order when function is used'}, {'body': u'Fix for https://github.com/rails/rails/issues/1697<br/><br/>This fix allows for functions to be used in the order clause when calling .last ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/506c80139a1fc2c51c9acc28b22ab1cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2231', 'title': u'Mangaled sql on order with functions'}, {'body': u'I\'m looking to fix #2131 but I don\'t sure about how to do it. I\'ve added a test case for the error described in the issue.<br/><br/>The test is this:<br/><br/>```ruby<br/>test "request url for controller action when engine is mounted at root" do<br/>  get "/weblog"<br/>  assert_equal "http://example.org/weblog", last_response.body<br/>end<br/>```<br/><br/>last_response.body (request.url) must be equal to "http://example.org/weblog" but it\'s "http://example.org//weblog"<br/><br/>Any ideas to solve it?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2230', 'title': u'Adding test case for request.url in engine mounted at root (#2131)'}, {'body': u'Hi, I added a test case and the code that fixes this issue: https://github.com/rails/rails/issues/1951<br/><br/>Regards.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/86112553d9846f4c7b16e8bfee1f28f4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2229', 'title': u'Fix issue 1951 Namespaced model partial_path is wrong in namespaced controllers'}, {'body': u"Unfortunately #respond_to?(:controller) won't work as suggested, nor will respond_to?(:params), as #controller is present and #params is delegated to #controller. #delegate's implementation makes respond_to? return true regardless whether the target responds to it.<br/><br/>I did something slightly different with the tests in 4901c5147b66e.  There I duplicated the stylesheet and javascript link tag test with and without #params provided, in the style of asset_tag_helper_test.  Doesn't seem to be justified, given it doesn't really give us any new coverage.<br/><br/>A better fix, but far more far-reaching fix might be to have #delegate override respond_to? to check the target's #respond_to?, so we could use #respond_to?(:params) here.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b4493ae064e6e2841f376fd1dc12b7ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2228', 'title': u'Simple fix to the NoMethodError noted in #2177.'}, {'body': u"I've been testing this (see sample app: https://github.com/skippy/rails31QueryCache) and I actually think this is a bigger issue than raised in #2142.  The query cache is triggered so early in the rack stack that if something goes wrong with the database (such as a misconfiguration or it goes down) it becomes a bit tricky to capture that error... you definitely can't do it from the controller level (it looks like hoptoad works as it monkey patches low enough to grab the error).<br/><br/>I think @pritchie has a valid point so here is my attempt to address it.  if it fails in the `QueryCache` rack layer, let it continue through and if it fails somewhere else (most likely) then so be it; it will throw the same error but higher up on the stack where it can be handled by application-specific logic.<br/><br/>Please comment.<br/><br/>thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/925b3c7354d16011fcb78895d2c6ceb3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2227', 'title': u'not allowing QueryCache Rack to fail on database exception (#2142)'}, {'body': u"Currently, rake assets:precompile takes the perform_caching option from the current environment.  <br/>This means if we run the task with the default environment (development), the generated javascript files won't build asset_path with the file's timestamp.<br/><br/>This is probably not what the user expects. He precompiles the files, it's to use them !<br/>Therefore, it makes very few sense to build the assets without the timestamps in assets-path.<br/><br/>This makes perform_caching always true when precompiling the assets.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2226', 'title': u'rake assets:precompile should always perform caching - Closes #2199'}, {'body': u"There are two issues here:<br/><br/>#1) ActiveSupport::Date current method has a misleading conditional. Time.zone is always returned because config.time_zone is set by default on a project.<br/><br/>#2) ActiveSupport::Date does not override the Date.today method. This means that the core ruby library's .today method is called which may be based off of a different time zone than what's set in config.time_zone.<br/><br/>Submitting a pull request.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/240b3c90db0dbb2b3121b2f9c3cb40b0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-org-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2225', 'title': u'Fixing bugs in ActiveSupport::Date (#759)'}, {'body': u"Ported pull request #2219 to master as requested by @spastorino.<br/><br/>Fix fragment cache helper regression on cache miss introduced with 03d01ec7.<br/><br/>Contains following patches cherry-picked from @lhahne's 3-0-stable branch:<br/><br/>* Added tests for the output_buffer returned by CacheHelper (c476a6b)<br/>The output_buffer returned by CacheHelper should be html_safe if the original buffer is html_safe.<br/><br/>* made sure that the possible new output_buffer created by CacheHelper is of the same type as the original (39a4f67)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c11579192bd480035b95d6cc82a79907?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2224', 'title': u'Fix fragment cache helper regression on cache miss introduced with 03d01e'}, {'body': u'I can write tests for this as needed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8f0660cdc9f5d91c7d97456f8f0be8c7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2223', 'title': u'possible fix for deprecating config.action_view.debug_rjs='}, {'body': u'I can write tests for this as needed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8f0660cdc9f5d91c7d97456f8f0be8c7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2222', 'title': u'possible fix for deprecating config.action_view.debug_rjs='}, {'body': u'Porting this pull request changes: https://github.com/rails/rails/pull/2213 from 3-1-stable to master branch', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8c0fa1974a8e6dff3c89e075367589ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2221', 'title': u'Fix ActiveSupport::Cache::FileStore#file_path_key does not work if initialized with Pathname'}, {'body': u"As requested by @fxn I squashed the commits from pull request #2150 into one commit.<br/><br/><br/>Fix fragment cache helper regression on cache miss introduced with 03d01ec7.<br/><br/>Contains following patches cherry-picked from @lhahne's 3-0-stable branch:<br/><br/>* Added tests for the output_buffer returned by CacheHelper (c476a6b)<br/>The output_buffer returned by CacheHelper should be html_safe if the original buffer is html_safe.<br/><br/>* made sure that the possible new output_buffer created by CacheHelper is of the same type as the original (39a4f67)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c11579192bd480035b95d6cc82a79907?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2219', 'title': u'Fix fragment caching (squashed commits)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2218', 'title': u'Remove unneccesary map chaining'}, {'body': u"As per issue 1580:<br/><br/>I got burned by the fact that `Enumerable#index_by` does not return an `Enumerator` if called without block, so I took a moment to fix the issues I could find in the `Enumerable` extension, namely:<br/><br/>`#index_by`, `#group_by` and `#each_with_object` now return `Enumerator`s as they should.<br/><br/>`#many?` iterates only as much as needed to determine the result. It also doesn't rely on `#size` (which not all `Enumerable`s respond to).<br/><br/>The patch also improves the robustness of the tests. `#each_with_object` is also optimized by not capturing the block.<br/><br/>Problems not addressed:<br/>* most extensions assume that the `Enumerable` yields only one argument.<br/>* the definition of `#many?` can be confusing because the form without block doesn't test for truthiness. Thus `foo.many?` is not necessarily equal to `foo.many?{|x| x}`, and `foo.any?` can be false while `foo.many?` can be true (e.g. `foo = [nil, nil]`). Discounting `nil`/`false` would be ideal, except that it could break compatibility, so I leave this up to the powers that be.<br/><br/>Patch & comments to be found in the [imported issue](https://github.com/rails/rails/issues/893)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2217', 'title': u'Fix enumerable'}, {'body': u'The 3.1 App Generator leaves leading whitespace for selected optional requires.  Its an aesthetic change, but good for consistency.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/700eacfd79780dfbd6453c971cadafb8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2216', 'title': u'Remove generated whitespace'}, {'body': u'cc @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2215', 'title': u'Avoid Symbol#to_proc since is slow for Ruby 1.8.7'}, {'body': u'This fixes the issue reported on the following pull request: https://github.com/rails/rails/pull/2209', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8c0fa1974a8e6dff3c89e075367589ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2213', 'title': u'ActiveSupport::Cache::FileStore#file_path_key does not work if initialized with Pathname'}, {'body': u'When generating the config/application.rb for a project, chosen optional requires show up with a leading space.  This is purely a code aesthetic change for the generated output, but keeps consistency.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/700eacfd79780dfbd6453c971cadafb8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2210', 'title': u'Aesthetic change - Remove leading spaces'}, {'body': u"When you initialize ActiveSupport::Cache::FileStore with a Pathname instance (e.g., Rails.root.join('tmp', 'cache')), #file_path_key does not work correctly--it expects cache_path to be a String, so cache_path.size is the length of the path. When cache_path is a Pathname, cache_path.size is the size of the referenced file or directory on disk.<br/><br/>This appears to have been introduced on 2010-04-27 by commit ee51b51b60f9e6cce9ba.<br/><br/>See also:<br/><br/>* #181<br/>* #816", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e46f1a286953aa72f5b80c9ca875912b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2209', 'title': u'ActiveSupport::Cache::FileStore#file_path_key does not work if initialized with Pathname'}, {'body': u"When ActiveSupport::Cache::FileStore is initialized with a Pathname (e.g., Rails.root.join('tmp', 'cache')), #file_path_key is incorrect--cache_path.size is Pathname#size instead of String#size.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e46f1a286953aa72f5b80c9ca875912b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2207', 'title': u'ActiveSupport::Cache::FileStore#file_path_key does not work if initialized with Pathname'}, {'body': u'There was a small error in the documentation for the method translate:<br/>the value returned for a missing translation key :"blog.post.title" is not:<br/><br/>```   <span class="translation_missing" title="translation missing: blog.post.title">Title</span><br/>```   <br/><br/>but actually it is: <br/>```   <span class="translation_missing" title="translation missing: en.blog.post.title">Title</span><br/>```   <br/><br/>I just changed the doc.<br/><br/>Gnagno', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7eb9a418af99971678657c3ba34173f3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2206', 'title': u'small change in method documetation'}, {'body': u'I think this can go with 3-0-stable. As it will give error when somebody will run. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2205', 'title': u'rake test:uncommitted for 3-0-stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2204', 'title': u'Backport from 3-0-stable for 3-1-stable'}, {'body': u'backport from master fixes #713', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2203', 'title': u'3 1 stable fixes #713'}, {'body': u"Given you type this command without an argument:<br/>       **rake rails:template**    <br/>instead of:<br/>      **rake rails:template LOCATION=~/template.rb**<br/><br/>Before the fix, you get the following:<br/>    **rake aborted!<br/>    can't convert nil into String**<br/>Now you will get this error message:<br/>    **Do not know where template file is. Define LOCATION=/path/to/template variable and add it to end of command line**<br/><br/>Background material: http://m.onkey.org/rails-templates", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fad223f451238f7858aa6dbaa2a4ef9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2202', 'title': u'3 1 stable'}, {'body': u'Updated the description', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2201', 'title': u'Improve rails:template undefined LOCATION variable error message fixed '}, {'body': u"When using active record's as_json to customize the to_json output, the included association's as_json is not considered. This patch fixes it <br/><br/>/cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4979f884dda391780954a5c73dee588?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2200', 'title': u"ActiveRecord as_json doesn't consider :include's as_json"}, {'body': u'this is fixed ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2198', 'title': u'Improve rails:template undefined LOCATION variable error message fixed'}, {'body': u'fixed issue #1742 invalid update json response with generated controller scaffolding and written respected test cases.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9d659a36c0ffc29defdeee9f3034b800?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2197', 'title': u'fixed issue #1742 invalid update json response with generated controller scaffolding'}, {'body': u'Spliting the ouput of git ls-files for running tasks Fixes #713', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2196', 'title': u'Spliting the ouput of git ls-files for running tasks Fixes #713'}, {'body': u"Command line information for `rails --help` shows `All commands can be run with -h for more information.`<br/>It doesn't include `--help`. Now it's like `All commands can be run with -h (or --help) for more information.`.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2e9fedaf01e874c630ae7f635ae584ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2195', 'title': u'Small missing information added to command description. --help also works'}, {'body': u'Reviewed #2074, simplified its tests and rebased off 3-1-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8f0660cdc9f5d91c7d97456f8f0be8c7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2194', 'title': u'Fix after_initialize and Base.create edge case'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a434c7b2837e1d09bc1a32b17e3ca2a6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2193', 'title': u'only install ruby-prof for mri ruby'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2188', 'title': u'Fixes typo'}, {'body': u'Added missing runner to engine rake to ensure that engine can run the app rake tasks (as per master)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/60961911dd560012042ef79be5725c61?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2186', 'title': u'Fixed engine rake tasks'}, {'body': u'lazy load ConnectionAdapters <br/><br/>all tests passed', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2185', 'title': u'lazy load ConnectionAdapters remove require.'}, {'body': u'3 0 stable duplicate test removed <br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2183', 'title': u'3 0 stable duplicate test'}, {'body': u"That's my first pull request for the project rails, so that's not very complex commits. I just corrected 5 warnings which were showing up during the unit testing.<br/><br/>I hope you'll accept it<br/><br/>Thanks", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c8d2d7e1e07aa57dcee128e2ec203e7a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2180', 'title': u'Warning corrections'}, {'body': u"Resolution for Issue 2074<br/><br/>Default values that are dependent on other attributes aren't getting set in after_initialize if create is called with a block to set the initial attributes.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fde6d4570c6079da6cb6d129f1638364?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2175', 'title': u'3 0 stable'}, {'body': u"Boolean arguments are bad. You guys knew it when changing `ActiveRecord::Base#save` from `save(false)` to `save(:validate => false)`.<br/><br/>I suggest also remove boolean argument `include_seconds` from `distance_of_time_in_words` and `time_ago_in_words`, replacing in with `include_seconds => true` hash option. Of course to keep it as deprecated option. This is somehow a resurrection of #898.<br/><br/>Also `time_ago_in_words` is now currently not accepting options at all, that makes it inconsistent with `distance_of_time_in_words`. It's not accepting and not passing `:locale`, I mean.<br/><br/>So the attached code fixes both issues. Please, check it out.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4486876726bcef5b87268564fc29e6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2173', 'title': u'Improve signature of distance_of_time_in_words and time_ago_in_words helpers'}, {'body': u'This conditions is required to work with database create task. 1.9.2 is having a bug with "Calling return within begin still executes else". <br/><br/>http://redmine.ruby-lang.org/issues/4473<br/><br/>This fixes #899 <br/><br/><br/>This pull is for 3-1-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2172', 'title': u'Database rake 1.9.2 3 1 stable'}, {'body': u'This conditions is required to work with database create task. 1.9.2 is having a bug with "Calling return within begin still executes else". <br/><br/>http://redmine.ruby-lang.org/issues/4473<br/><br/>This fixes #899 <br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2171', 'title': u'This conditions is required to work with database create task. 1.9.2 is h'}, {'body': u"Hi, <br/>  I've set skip_bundle to false as discussed in issue #2132 and renamed it to run_bundler since, at least to<br/>  me, sounds better than having an option set to true by default.<br/><br/>  Please review and let me know wether this is acceptable or needs work.<br/><br/>Cheers!<br/><br/>Sebastian.-", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fa9d528ecf7c7a859cef2de473f8608a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2170', 'title': u'rename skip_bundle to run_bundler and set to false by default'}, {'body': u'Hey Guys,<br/><br/>This fixes a brittle test in fixtures_test.rb which fails when you are in a timezone which is ahead of UTC but UTC is in the previous day still.<br/><br/>Here is the failure : http://staging.travis-ci.org/#!/rails/rails/builds/2438/L1786<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2165', 'title': u'Timezone fixtures test correction'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2164', 'title': u'missing require of string/encoding to have access to encoding_aware?'}, {'body': u'This is related issue #2043 which itself is related to issue #706<br/><br/>Added a failing test to test that assert_template supports specifying both partials and layouts. Also, applied the patch from issue #706 to fix the behavior described. <br/><br/>The test however fails with a **expecting layout <"layout_for_partial"> but action rendered layouts <[nil]>** error message. <br/><br/>This is because on [line #22 of actionpack/lib/action_controller/test_case.rb file](https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/test_case.rb#L22), payload[:layout] is nil. No idea how to fix that!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ff984622cd3a9ca31bd0e7e034fc8b17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2161', 'title': u'Added a failing test to verify that assert_template supports specifying bot'}, {'body': u'Hey Guys,<br/><br/>This changes the year of a date used in a test which fails when using 1.8.7 on a 32bit machine (ArgumentError: time out of range)<br/><br/>Thanks,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2160', 'title': u'Changed the year of a date used in a test which fails when using 1.8.7'}, {'body': u'Check Accept and Content-Type headers before evaluating them in xhr requests. Closes #2119<br/><br/>An xhr request must have an "Accept" or "Content-type" header in order to be considered a request with valid_accept_header.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/813d927e5cbd9efe3634662debcc0849?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2159', 'title': u'Fixed issue #2119: XHR without Accept and Content-Type header gets 500 error'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2157', 'title': u'Avoid Symbol#to_proc (3-1-stable)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2156', 'title': u'Adding changelog entry for submit helper change (3-1-stable)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2155', 'title': u'Adding changelog entry for submit helper change which removed object_name_id generation'}, {'body': u'See https://github.com/rails/rails/commit/0e1d617b8b869426960ec25b62620fe1599cb5e6#commitcomment-484668 for a discussion!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2154', 'title': u'Avoid Symbol#to_proc'}, {'body': u'Change d3cfee11 removed the automatically generated `object_name_submit` `id` attributes on form submit elements. This makes the documentation match.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2abf5beb51d5d66211d525a72c5cb39d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2152', 'title': u'Update/correct documentation of form helper'}, {'body': u"assign_nested_attributes_for_collection_association should work with Ruby 1.9 [Closes #2106]<br/><br/>Ruby 1.9's Symbol won't respond to to_i so let's use object_id to emulate it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2151', 'title': u"assign_nested_attributes_for_collection_association should work with Ruby 1.9's Symbols"}, {'body': u'Alias `<<` as `append=` for ActiveSupport::SafeBuffer to fix "undefined method `append=\'" error with fragment cache helper on cache miss introduced with 03d01ec73edfac7768cd.<br/><br/>Since 03d01ec7 `fragment_for` sets the`output_buffer` to a SafeBuffer. ERB expects `append=` to be defined on the output_buffer.<br/>This means subsequent ERB tags after a call to the fragment `cache` helper and a cache miss would cause an "undefined method `append=\'" error.<br/><br/>Includes updated testcase.<br/>This should be cherry-picked into master as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c11579192bd480035b95d6cc82a79907?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2150', 'title': u'Fix fragment caching regression from 03d01ec'}, {'body': u'Hey Guys,<br/><br/>This removes a test which fails when using 1.8.7 on a 32bit machine (ArgumentError: time out of range)<br/><br/>Thanks,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2149', 'title': u'Removed a test which fails when using 1.8.7 on a 32bit machine'}, {'body': u'This fixes errors when using Active Record outside of Rails. In Rails,<br/>these files are required by other classes that are always loaded, so<br/>this error does not happen.<br/><br/>Without core_ext/module/delegation, a NoMethodError is raised because<br/>`delegate` remains undefined.<br/><br/>Without core_ext/class/attribute_acessors, an ArgumentError is raised because<br/>`delegate` does not receive a value for its :to option.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6621ca717b64e2e1717b2af82e3762b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2148', 'title': u'Explicitly require Active Support dependencies (master)'}, {'body': u'This fixes errors when using Active Record outside of Rails. In Rails,<br/>these files are required by other classes that are always loaded, so<br/>this error does not happen.<br/><br/>Without core_ext/module/delegation, a NoMethodError is raised because<br/>`delegate` remains undefined.<br/><br/>Without core_ext/class/attribute_acessors, an ArgumentError is raised because<br/>`delegate` does not receive a value for its :to option.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6621ca717b64e2e1717b2af82e3762b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2147', 'title': u'Explicitly require Active Support dependencies (3-1-stable)'}, {'body': u"In 1.9, the NON_WHITESPACE_REGEXP will always be UTF-8.<br/>So encode the string in utf-8 for proper comparison.<br/><br/>If the string is binary, we won't be able to encode it in UTF-8.<br/>Then, it's never blank (because it's binary, there's a test about that : https://github.com/rails/rails/blob/master/activesupport/test/gzip_test.rb#L16 ).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2146', 'title': u'fix String#blank? on binary strings'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2141', 'title': u'Config files to get Rails on Travis-CI'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e9e852b18079792bc5f4ec52b8e37c53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2140', 'title': u'Fix for #2078 (against 3-1-stable)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e9e852b18079792bc5f4ec52b8e37c53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2139', 'title': u'Fix for #2078 (against master)'}, {'body': u'Rails guides seems to be having validation errors with tags <notextile> & </notextile>.For more details <br/>http://validator.w3.org/check?verbose=1&uri=http%3A%2F%2Fedgeguides.rubyonrails.org%2Fsecurity.html<br/><br/>So, i have changed the notextile tags with ascii quotes on generator.rb & textile_extensions.rb.<br/><br/>Previously it was <notextile>, now it  is &lt;notextile&gt;<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fb6e22787531bbbd4cc3c8c63636880a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2136', 'title': u'notextile tag in rails guides generator has been placed with ascii quotes'}, {'body': u'This is the same as https://github.com/rails/rails/pull/2133 for 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/83a9c9496491ad52f6d6b0be9ae4fb3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2135', 'title': u'Ensure status codes are logged properly (3-1-stable)'}, {'body': u'This is a slightly modified version of https://github.com/rails/rails/pull/2133 for 3-0-stable.<br/><br/>/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/83a9c9496491ad52f6d6b0be9ae4fb3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2134', 'title': u'Ensure status codes are logged properly (for 3-0-stable)'}, {'body': u'Had to move `AC::Metal::Instrumentation` before `AC::Metal::Rescue` so that status codes set by `rescue_from` blocks are logged properly.<br/><br/>Previously, the Rails logger was logging a `Completed 500` for anything that passed through a rescue_from block, even if it set a different status code for the response.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/83a9c9496491ad52f6d6b0be9ae4fb3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2133', 'title': u'Ensure that status codes are logged properly'}, {'body': u'Show a deprecation warning if user passing less number of argument in the dynamic finder<br/><br/>The previous behavior was unintentional, and some people was relying on it. In the next version of Rails, the dynamic finder will always expecting the number of arguments to be equal or greater (so you can still pass the options to it.) It will raise the ArgumentError otherwise.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2129', 'title': u'Show a deprecation warning if user passing less number of argument in the'}, {'body': u'The previous behavior was unintentional, and some people was relying on it. Now the dynamic finder will always expecting the number of arguments to be equal or greater (so you can still pass the options to it.)<br/><br/>So if you were doing this and expecting the second argument to be nil:<br/><br/>```ruby<br/>    User.find_by_username_and_group("sikachu")<br/>```<br/><br/>You\'ll now get `ArgumentError: wrong number of arguments (1 for 2).` You\'ll then have to do this:<br/><br/>```ruby<br/>    User.find_by_username_and_group("sikachu", nil)<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2128', 'title': u'Raise an ArgumentError if user passing less number of argument in the dynamic finder'}, {'body': u'Without this, when ActiveRecord is used outside of Rails, the call to<br/>cattr_accessor on line 334 gets piped through method_missing, which in turn<br/>makes AS give an error message about the missing :to option to `delegate`.<br/><br/>I had to fix this for FriendlyId because it loads only Active Record, bypassing<br/>the main Rails initialization which would normally require this file early on.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6621ca717b64e2e1717b2af82e3762b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2127', 'title': u"it's sometimes possible to be missing `cattr_accessor` in migration.rb"}, {'body': u'<pre>ruby-1.8.7-p352 :012 >   :a !~ /^[a-z_][a-zA-Z_0-9]*$/<br/> => true <br/>ruby-1.9.2-p290 :001 > :a !~ /^[a-z_][a-zA-Z_0-9]*$/<br/> => false <br/></pre><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2124', 'title': u'Checking with to_s. As regexp fail with 1.8.7'}, {'body': u'This is to avoid a conflict that occurs when you add Rake to<br/>your Gemfile. There is a Commands Object in Rake that conflicts<br/>with the Commands module in plugin.rb. See rails issue #1866.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1237fa7ee270ace2ebb53c8cab91a6b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2122', 'title': u'Issue #1866: Changed Commands module to RailsCommands.'}, {'body': u'Changes from master. <br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2121', 'title': u'3 1 plugin new gen test'}, {'body': u'About the actionpack bug #2119 "XHR Req without Accept and Content-Type header gets 500 error".<br/><br/>Now an xhr request must have an "Accept" or "Content-type" header in order to be considered a request with valid_accept_header.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/813d927e5cbd9efe3634662debcc0849?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2120', 'title': u'Fixed issue #2119: XHR without Accept and Content-Type header gets 500 error'}, {'body': u'As we are adding db folder in it. Required in test also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2118', 'title': u'As we are adding db folder in it. Required in test also.'}, {'body': u'cc @spastorino', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2116', 'title': u'Fix Rails::Generators::Actions#environment when env is passed'}, {'body': u"Here's the commit to the 3-0-stable branch.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1237fa7ee270ace2ebb53c8cab91a6b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2115', 'title': u'Issue #1866: "rails plugin" command doesn\'t work with rake 0.9'}, {'body': u"I made a patch to the plugin.rb file [here](https://github.com/dyba/rails/commit/c2d3a43eca9952b1eb115719175a9457136e37d9). Users were trying to include rake in their Gemfile and afterward install a plugin using the rails plugin command. See the issue [here](https://github.com/rails/rails/issues/1866). I'm new at this so maybe I didn't follow the conventions, but I want to be a regular contributor to the Rails repo. Someday I'll be on the other side of this pull request. I'll welcome any feedback.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1237fa7ee270ace2ebb53c8cab91a6b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2113', 'title': u'"rails plugin" command doesn\'t work with rake 0.9'}, {'body': u'Added gem helper to rake task for engines, as per pull request from 3-1-stable, #2103', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/60961911dd560012042ef79be5725c61?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2108', 'title': u'Adds gem helper rake tasks to engines generator'}, {'body': u"Added gem helper tasks to Rakefile for engine plugins.  It makes sense for this to be there given they're being generated to be gemified.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/60961911dd560012042ef79be5725c61?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2103', 'title': u'Added gem helper tasks to Rakefile for engine plugins.'}, {'body': u'I added a fix to ensure migrations are packaged too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/60961911dd560012042ef79be5725c61?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2101', 'title': u'Added db to gemspec so migrations are packaged'}, {'body': u'Backport of #2090, as requested by @spastorino.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38becc6fc03453ccb1edfcdea1122408?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2099', 'title': u'Backport #2090 to 3-1-stable'}, {'body': u'Added a time_of_day method to the Time class. The method returns one of the following symbols (depending on time of day):<br/><br/>:morning, :afternoon, :evening', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eba718793368b0c863088a73010afa42?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2096', 'title': u'Time method: time_of_day'}, {'body': u"In 3.0.9 and below, form_for() could accept a :remote option passed in either options or options[:html]. However, any :remote option passed in as options[:html][:remote] is ignored because of the line:<br/><br/>``` ruby<br/>options[:html][:remote] = options.delete(:remote)<br/>```<br/><br/>I've changed this to:<br/><br/>``` ruby<br/>options[:html][:remote] = options.delete(:remote) if options.has_key?(:remote)<br/>```<br/><br/>This resolves issue #2094 and keeps Rails 3.1 consistent with prior versions. Furthermore, this change keeps form_for() consistent with other methods such as link_to() that allow the :remote option to be passed in the same hash as other html options.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e01ec1de2f7783812d2235a6a9aaaeea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2095', 'title': u'Fixes overriding of options[:html][:remote] in form_for() (Issue #2094)'}, {'body': u'Engines generated by rails plugin new myengine --mountable do not package up the app, config or db folders as expected.  I have patched the gemspec file to ensure that the app files, config (routes especially important as they are broken in 3.1pre) and the db so that rake railties:install:migrations works.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/60961911dd560012042ef79be5725c61?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2092', 'title': u'Fixed engine gemspec so that app, config, and db are packaged up'}, {'body': u'`map` should be `match`. The relevant entry in the changelog is part of Rails 3.1.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38becc6fc03453ccb1edfcdea1122408?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2090', 'title': u'Fix wildcard route code example in changelog'}, {'body': u'Currently, if any of multiple Date parameters\' bits were provided but blank, then defaulted to 1.<br/><br/>Consequently, this request params<br/><br/>    "birthday(1i)"=>"2007", "birthday(2i)"=>"", "birthday(3i)"=>""<br/><br/>is converted into this, even if ```User.validates_presence_of :birthday```.<br/><br/>    Mon, 01 Jan 2007<br/><br/>Don\'t you think this is strange? Still not?<br/><br/>Then how about this?<br/>![What date should it be?](https://img.skitch.com/20110715-bm8k89b95jhw9r1ug8bn2yw7w2.png)<br/><br/>    "birthday(1i)"=>"", "birthday(2i)"=>"5", "birthday(3i)"=>""<br/><br/>=><br/><br/>    Sun, 01 May 0001<br/><br/>**OMG this is totally stupid**, isn\'t it?<br/><br/>Attached patch turns this into nil. Isn\'t this the most "least surprise" behavior?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2086', 'title': u'convert multiple Date parameters into a nil if any of its bits were blank'}, {'body': u'Route requirements are sorted such that :controller and :action are<br/>always first and the rests are sorted alphabetically.<br/><br/>Instead of<br/><br/>    {:id=>/[A-Z]\\d{5}/, :controller=>"photos", :action=>"show"}<br/><br/>we get<br/><br/>    {:controller=>"photos", :action=>"show", :id=>/[A-Z]\\d{5}/}', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/38becc6fc03453ccb1edfcdea1122408?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2082', 'title': u'Better formatting of rake routes (issue #1991)'}, {'body': u"This fixes the latest incarnation of https://github.com/rails/rails/issues/1537 where CacheHelper might try to use splice! for a html_safe buffer which converts the buffer unsafe. This change has been tested against Rails's tests and slim-lang which originally raised this issue.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/82b20bdfa6cf080ea6197257a0aa792a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2080', 'title': u'Fix improper detection and handling of html_safe buffer in CacheHelper'}, {'body': u'Fixing bug in ActiveResource::Base#create where returned data is not loaded if the transfer-encoding is chunked.  Includes tests & all ActiveResource tests pass.<br/><br/>Commit 154081f0f74988bdb8979f0447ff5816ab83d8fd created this bug, with the goal of fixing 204 responses.  There were no tests with this patch, so I added new tests to cover this & my own issue.  Refactored the ```load_attributes_from_response``` method to make the logic around when to load attributes more obvious.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dec4b8a778cfd30bbe8f2364059fdb1b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2079', 'title': u'ActiveResource::Base#create data is not loaded if the transfer-encoding is chunked'}, {'body': u"```ruby<br/>x = Builder::XmlMarkup.new<br/>x.instruct!<br/>```<br/><br/>Gives the following stack trace with Ruby 1.8.7, Builder 3.0.0, Rails 3.1.0.rc[1-4]:<br/>https://gist.github.com/1046481<br/><br/>Looks like an incompatibility between fast_xs and Builder 3.0.0, when it's included and overridden in ActiveSupport.  The Builder 3.0.0 version takes an encoding argument.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c681b5db4f87c37e814dbf5cfdbe18e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2076', 'title': u'Fixed issue #1859: ArgumentError for to_xs after instruct! is called'}, {'body': u"In production mode we were measuring the number of objects created, because the GC was working too hard imo, esp. compared to rails2.<br/><br/>Typically we got these numbers per request, the top 5:<br/><br/> Total: 134949 samples<br/>   20460  15.2%  15.2%    22374  16.6% Object#match_attribute_method?<br/>    6907   5.1%  20.3%    38812  28.8% Array#map<br/>    5662   4.2%  24.5%     5662   4.2% Set#subtract<br/>    4359   3.2%  27.7%     5513   4.1% Set#merge<br/>    3762   2.8%  30.5%    18610  13.8% Object#read_attribute<br/>    3288   2.4%  32.9%    18607  13.8% ActiveRecord::Base#attributes<br/><br/>So for every request about 15% of all objects created, are created by the calls to match_attribute_method? in ActiveModel.<br/><br/>At 10 requests/second, this patch saves over 10 million objects per minute for us in production mode.<br/><br/>I'm however not that familiar with ActiveModel, and this is probably not the best way to solve this. But I thought I put this out there first and work from there. My main question atm is: are there times when this cache would need to be cleared?<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a31c2c26350e9e2b07fbd99fbd5ff520?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2075', 'title': u"Optimization of ActiveModel's match_attribute_method?"}, {'body': u'assert nothing raised for setting a cookie value to nil in ActionDispatch', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c681b5db4f87c37e814dbf5cfdbe18e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2073', 'title': u'ported test from pull request #2071 to master'}, {'body': u'I needed to format an ordinalized number with markup, like so:<br/><br/>1&lt;sup&gt;st&lt;/sup&gt;<br/><br/>I found that there was no way to get just the suffix from ActiveSupport short of gsubbing out the original number.<br/><br/>This patch adds ActiveSupport::Inflector.ordinal(number) and Integer#ordinal to support this functionality:<br/><br/>1&lt;sup&gt;#{1.ordinal}&lt;/sup&gt;<br/><br/>Tests and docs are included, all tests are passing.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d7f375e2ef2256700f5a38f491606e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2072', 'title': u'Add ActiveSupport::Inflector.ordinal and Integer#ordinal'}, {'body': u"write_cookies! in ActionDispatch::TestRequest won't write nil value when $KCODE == 'u' on 1.8.7", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c681b5db4f87c37e814dbf5cfdbe18e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2071', 'title': u'write_cookies! nil exception in ActionDispatch::TestRequest'}, {'body': u"Rack::Utils.escape(str) breaks when cookie value is nil.<br/><br/>```<br/>NoMethodError: private method `gsub' called for nil:NilClass<br/>    activesupport (3.1.0.rc4) lib/active_support/whiny_nil.rb:48:in `method_missing'<br/>    rack (1.3.1) lib/rack/backports/uri/common.rb:24:in `encode_www_form_component'<br/>    rack (1.3.1) lib/rack/utils.rb:23:in `escape'<br/>    actionpack (3.1.0.rc4) lib/action_dispatch/testing/test_request.rb:86:in `escape_cookie'<br/>    actionpack (3.1.0.rc4) lib/action_dispatch/testing/test_request.rb:81:in `write_cookies!'<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c681b5db4f87c37e814dbf5cfdbe18e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2070', 'title': u"write_cookies! in ActionDispatch::TestRequest won't write nil value"}, {'body': u'GCing a Tempfile object deletes the actual file on the filesystem. So, two (or more) Tempfiles pointing to one same actual file should better not exist.<br/>However, we found this actually happens in our real world applications because Tempfiles are duped in parameter_filter here https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/http/parameter_filter.rb#L39<br/><br/>Because of this, a request with an attachment very rarely dies with `IOError: closed stream`.<br/><br/>Attached a patch and test that changes Tempfile unduplicable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2068', 'title': u'make Tempfile unduplicable'}, {'body': u'As discussed here https://github.com/rails/rails/commit/2a24bcc6cf97fa9ecb78fa21ec23b25438d20371#commitcomment-470614<br/><br/>Bringing back `:strict` default mass assignment sanitizer in test environment.<br/><br/>@josevalim, I am not sure I understand what problem did you mention with ActiveResource in the comment above. Can you please exaplain?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2067', 'title': u'Reenable strict default sanitizer in test env app template'}, {'body': u"I'm sorry I forgot to add magic comments in my previous commit 9c60860322d58e1a2fcd42f1a21ec86ec2caa50b", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2066', 'title': u'missing magic comments'}, {'body': u'Cache key was incorrectly using timezone-dependent record#updated_at when it should be using a timezone-independent value to generate the cache key<br/><br/>See https://github.com/rails/rails/issues/2059', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cfc1397a59f523269342e1a7bdfe096b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2065', 'title': u'Backport of cache_key fix from master'}, {'body': u'See https://github.com/rails/rails/issues/2059', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cfc1397a59f523269342e1a7bdfe096b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2064', 'title': u'Backports cache_key fix from master'}, {'body': u'Cache key was incorrectly using timezone-dependent record#updated_at when it should be using a timezone-independent value to generate the cache key.<br/><br/>Thanks for the short lesson, NZKoz.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cfc1397a59f523269342e1a7bdfe096b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2063', 'title': u'Patch for https://github.com/rails/rails/issues/2059'}, {'body': u'MSSQL and Firebird DBs require the fake column to named.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1e765e9ed7b03eefa822069f0af836ef?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2062', 'title': u'Fix MSSQL and Firebird .exists? problem (issue #1623)'}, {'body': u"usage of DIV tag for 'field_with_error' output brakes paragraph tags in some forms<br/>SPAN tag is less 'intrusive', so it is used instead<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b99c70d85265a280851ec032140c6014?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2058', 'title': u'small fix of small issue #2057'}, {'body': u"Ran into problems with merging branch bhus:render_partial_invalid_check (issue #2018), so created this 'fresh' one directly off of master with same changes. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d625f61d1be90f381a9bfc6bc1bdf7c9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2055', 'title': u'Added view template invalid name check, along with tests.'}, {'body': u"String#blank? doesn't treat fullwidth whitespace char as a blank character, but we CJK speakers usually DO regard it as a blank char. Thus we often have to monkey patch String#blank? method.<br/>This patch makes String#blank? to do so by default.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2052', 'title': u'treat fullwidth whitespace as a blank character'}, {'body': u'Fix a wrong assertion on url_helper_test, and add missing `#html_safe?` assertion', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2048', 'title': u'Fix a wrong assertion on url_helper_test, and add missing `#html_safe?` a'}, {'body': u'Fix a wrong assertion on url_helper_test, and add missing `#html_safe?` assertion', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2047', 'title': u'Fix a wrong assertion on url_helper_test, and add missing `#html_safe?` a'}, {'body': u'Fix a wrong assertion on url_helper_test, and add missing `#html_safe?` assertion', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2046', 'title': u'Fix a wrong assertion on url_helper_test, and add missing `#html_safe?` a'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4bc78b05de901eb940206c3693ef03d9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2044', 'title': u'- fixed comment description for ActiveResourse::Base#new_element_path;'}, {'body': u'Fix for SqlBypass session store - for master, see #2040, #2016<br/><br/>Two issues fixed:<br/>1) connection_pool is not defined - needed by SessionStore#drop_table!<br/>and create_table! since c94651f<br/><br/>2) initialization of connection to the default of AR::Base.connection<br/>only occurred at the singleton level - the instance level method defined<br/>by cattr_accessor did not have this logic', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2042', 'title': u'Fix for SqlBypass session store (for master)'}, {'body': u'Fixed session ID fixation for ActiveRecord::SessionStore - for master with squashed commits, see #2039, #2016<br/><br/>I have found that Rails will take an invalid session ID specified by the<br/>client and materialize a session based on that session ID. This means<br/>that it is possible, among other things, for a client to use an<br/>arbitrarily weak session ID or for a client to resurrect a previous used<br/>session ID. In other words, we cannot guarantee that all session IDs are<br/>generated by the server and that they are (statistically) unique through<br/>time.<br/><br/>The fix is to always generate a new session ID in #get_session if an<br/>existing session cannot be found under the incoming session ID.<br/><br/>Also added new tests that make sure that an invalid session ID is never<br/>materialized into a new session, regardless of whether it comes in via a<br/>cookie or a URL parameter (when :cookie_only => false).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2041', 'title': u'Fixed session ID fixation for ActiveRecord::SessionStore (for master)'}, {'body': u'Fix for SqlBypass session store - split off from #2016<br/><br/>Two issues fixed:<br/>1) connection_pool is not defined - needed by SessionStore#drop_table!<br/>and create_table! since c94651f<br/><br/>2) initialization of connection to the default of AR::Base.connection<br/>only occurred at the singleton level - the instance level method defined<br/>by cattr_accessor did not have this logic', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2040', 'title': u'Fix for SqlBypass session store'}, {'body': u'Fix for session ID fixation issue in ActiveRecord::SessionStore - squashed commits for #2016<br/><br/>I have found that Rails will take an invalid session ID specified by the<br/>client and materialize a session based on that session ID. This means<br/>that it is possible, among other things, for a client to use an<br/>arbitrarily weak session ID or for a client to resurrect a previous used<br/>session ID. In other words, we cannot guarantee that all session IDs are<br/>generated by the server and that they are (statistically) unique through<br/>time.<br/><br/>The fix is to always generate a new session ID in #get_session if an<br/>existing session cannot be found under the incoming session ID.<br/><br/>Also added new tests that make sure that an invalid session ID is never<br/>materialized into a new session, regardless of whether it comes in via a<br/>cookie or a URL parameter (when :cookie_only => false).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2039', 'title': u'Fix for session ID fixation issue in ActiveRecord::SessionStore (squashed commits)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2038', 'title': u'remove extra space since comment_if already returns the space.'}, {'body': u'Hi all<br/><br/>I ran into this issue yesterday:<br/><br/>User model has `latitude` and `longitude` attributes which are both decimal fields<br/><br/>When using these attributes to create data attribute tags, the quotations were added twice (as a result of calling to_json).<br/><br/>``` rhtml<br/><%= content_tag(:div, "", :data => {:latitude => @user.latitude, :longitude => @user.longitude} %><br/><br/># => <div data-latitude=""123.000"" data-longitude=""123.000""></div><br/>```<br/><br/>Fixed this by adding BigDecimal to the list of class types which should not be converted to a JSON string', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8538bd148e2bc82674009a35eabc8948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2036', 'title': u'TagHelper creates invalid data attributes when value is a BigDecimal'}, {'body': u'This is the same request as #1758 but without mistakes and in one commit', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2035', 'title': u'Added checking for X-Forwarded-For valid IP format in request'}, {'body': u'The current implementation of `ActionView::PartialRenderer#partial_path` forces all instances of a given class to render the same partial. When you call `<%= render @object %>` in a view, the current implementation asks the object\'s class for a partial path instead of the instance itself.<br/><br/>Also, defining the partial path for `FormBuilder` uses a strange hack on its `self.model_name` method, which is unexpected.<br/><br/>We propose deprecating `#partial_path` on the return value of `#model_name` on the classes of `ActiveModel` objects. Our replacement is to implement `#to_path` on instances directly. This allows different instances of the same class to use whatever logic they want to pick a partial to render.<br/><br/>We built a default implementation of `#to_path` into `ActiveModel::Conversion`, so `ActiveRecord::Base` subclasses will work correctly without changes to existing application code in most cases. Failing that, the old way will still work but is now deprecated.<br/><br/>In the spirit of the other methods in `ActiveModel::Conversion` (such as `#to_key`), we chose to name our method `#to_path` instead of `#partial_path`. This way, people might be encouraged to use the path in other contexts. The name "partial_path" seems to be too viewy for models to care about.<br/><br/>### Motivation<br/><br/>We wanted to build a `TableBuilder` to display records, analogous to the `FormBuilder`:<br/><br/>```erb<br/><%= table_for(@person) do |t| %><br/>  <%= t.field :name %><br/>  <%= t.field :age %><br/><% end %><br/>```<br/><br/>We then wanted to be able to reuse the definition of the table in a partial.  The cleanest way to represent this seemed to be:<br/><br/>```erb<br/><%= table_for(@person) do |t| %><br/>  <%= render t %><br/><% end %><br/>```<br/><br/>Or, as a shortcut:<br/><br/>```erb<br/><%= table_for(@person) %><br/>```<br/><br/>Since all `TableBuilder` objects have the same class, they have the same `.class.model_name.partial_path`, and so they render the same partial.  We needed the partial to be based on the object the `TableBuilder` was presenting.<br/><br/>`FormBuilder` objects can be rendered in this way, and they get around the issue by having a partial path of `"form"`.  When the `PeopleController` is rendering its `#edit` action, this resolves to `"people/form"`, which is the right partial.  However, when another controller, say the `AccountsController`, tries to render `account_fields.fields_for(:person)`, it renders `"accounts/form"`, passing it the `Person` form builder.  Therefore, `FormBuilder` has not solved this problem yet.<br/><br/>This commit does not solve the problem for `FormBuilder` because it would be a breaking change, but it does make the solution possible. It also enables us to write a similar solution for our `TableBuilder`.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2034', 'title': u'Allow ActiveModel-compatible instances to define their own partial paths'}, {'body': u'Using count does not create additional array object.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3ebc1f56421482200a561a312206cec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2032', 'title': u'#many? - uses count instead of select'}, {'body': u"As I've said in #1366 that I'd add a comment lines in the initializer files.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2029', 'title': u'Mention about acronym inflection in config/initializers/inflections.rb'}, {'body': u"The TagHelper module should be included within AV::Helpers::AssetTagHelper as many of its methods depend on the tag method from TagHelper.<br/><br/>In particular, this fixes an error (NoMethodError: undefined method `tag') when image_tag, etc are called from a Sprockets environment (e.g. .js.erb).<br/><br/>I'm unsure of how best to write a test to catch regressions though.<br/><br/>This fix should also be cherry-picked to 3-1-stable.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2026', 'title': u'Include TagHelper within AssetTagHelper'}, {'body': u"Version comparison using strings (in the situations like `RUBY_VERSION < '1.9.2'`) can be faulty at times. <br/>Gem::Version is now equipped with symbols for version comparison. It can be used like `Gem.ruby_version < '1.9.2'`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2e9fedaf01e874c630ae7f635ae584ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2024', 'title': u'Version comparison using strings can be faulty.'}, {'body': u'The same patch with #2007 for 3-1-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2022', 'title': u'having() raises NoMethodError (3-1-stable)'}, {'body': u'Also, move the utils test into its own test case.<br/><br/>This cleans up the refactoring from #2012 a bit.<br/><br/>@tenderlove, can you merge this in as well?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2021', 'title': u'Make #extract_schema_and_table an instance method in Utils'}, {'body': u"There weren't examples for the behavior of #titleize on camelcased or underscored strings. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1a119e166b419859ff46b09ec53aa95c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2019', 'title': u'Additional examples for #titleize in ActiveSupport '}, {'body': u'Issue #1967 -- better error message when partial has a name that is not a valid Ruby identifier.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d625f61d1be90f381a9bfc6bc1bdf7c9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2018', 'title': u'Render partial invalid check'}, {'body': u'This just adds a test case to make sure it does.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/602f1b8ccf99dc47c43da83d53b4ffd5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2017', 'title': u'ActiveRecord::Base subclasses should pass ActiveModel::Lint.'}, {'body': u"I have found that Rails will take an invalid session ID specified by the client and materialize a session based on that session ID. This means that it is possible, among other things, for a client to use an arbitrarily weak session ID or for a client to resurrect a previous used session ID. In other words, we cannot guarantee that all session IDs are generated by the server and that they are (statistically) unique through time.<br/><br/>The fix is to always generate a new session ID in #get_session if an existing session cannot be found under the incoming session ID.<br/><br/>@NZKoz here's the pull request as per our earlier emails<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2016', 'title': u'Fix for session ID fixation issue in ActiveRecord::SessionStore'}, {'body': u'When calling `#inspect`, make sure to check if `@attributes` is defined before accessing it. This fixes a warning when `#inspect` is called before `#initialize`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2014', 'title': u'Fix a warning in AR::Base'}, {'body': u"Move the private method `#extract_schema_and_table` into a separate `Utils` module so that it can be tested without resorting to `#send`.<br/><br/>If you'd like, more of these auxiliary methods can be moved out of `PostgreSQLAdapter`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2012', 'title': u'Refactor PostgreSQLAdapter a bit'}, {'body': u'Because we now all live on Ruby > 1.8.7.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2011', 'title': u'replaced some "i += 1" sort of codes with Enumerable#with_index'}, {'body': u'Rails.cache does not properly cache "false", it returns nil instead. <br/><br/>This is because the value is checked with an <br/><br/>if value<br/>  # ...<br/>else<br/>  value = nil  # => sets false values to nil<br/>end<br/><br/>I changed it to:<br/>if defined?(value)<br/><br/><br/>Example:<br/><br/>Rails.cache.fetch(\'foo\') { false }<br/>=> false  # uncached value<br/><br/>Rails.cache.fetch(\'foo\') { false }<br/>=> nil  # from cache<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5a3cdca851be0f6fea2a746b78afa0b8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2010', 'title': u'Properly cache value when it is "false"'}, {'body': u'revised!! ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2009', 'title': u'TODO fix explicitly loading exceptations, autoload removed'}, {'body': u'Rails 3.0.x implementation of `AR::Relation#order` is confusing to me - new orders do not overwrite previous.<br/>There is `#reorder` method that suppose to do that.<br/><br/>For people that are actively using `default_scope :order => ..` or `has_many :..., :order =>` this behavior makes `#order` completely unusable. <br/><br/>``` ruby<br/>class Account<br/>  default_scope :order => "title"<br/>end<br/>Account.order("created_at DESC") <br/>    # => SELECT `accounts`.* FROM `accounts` ORDER BY title, accounts.created_at desc LIMIT 1<br/>```<br/><br/>No chance to change the default. That is why `#reorder` should be used every where.<br/>Similar problem described for associations #1660.<br/><br/>If there is any other reason why Rails team made this approach can you please explain.<br/><br/><br/>In order be able to overwrite order specified before<br/>(e.g. by `default_scope` or `has_many` association order)<br/>Make `order` method to always apply new order on top of previous<br/><br/>``` ruby<br/>Account.order("created_at DESC") <br/>    # => SELECT `accounts`.* FROM `accounts` ORDER BY accounts.created_at desc, title LIMIT 1<br/>```<br/>In this case orders applied naturally and more close to classical OOP (overwrite property with new value).<br/><br/>When you need to apply non reverse order you always can pass them as one call:<br/><br/>``` ruby<br/>Account.order([:name, "created_at desc"])<br/>    # => SELECT `accounts`.* FROM `accounts` ORDER BY title, accounts.created_at desc LIMIT 1<br/>```<br/><br/>I understand this is kinda sensible change, but I think this is where AR should be one day.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2008', 'title': u'AR::Relation#order: reverse all applied orders'}, {'body': u"The following query fails because 10000 does not respond_to empty?<br/><br/>    Developer.group(:name).having('sum(salary) > ?', 10000)<br/><br/>This behavior is obviously not consistent with `where()` which woks with the following parameters<br/><br/>    Developer.where('salary > ?', 10000)<br/><br/>This pull request includes a failing test case and the fix.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2007', 'title': u"having() raises NoMethodError: undefined method `empty?' when the given argument does not respond to empty?"}, {'body': u'When using wildcard %d in assets path is suposed to have a random-like number between [0-3].<br/>It works using String.hash instance method, but in ruby 1.9 this method is not returning always the same hash for the same string. <br/>Just run "hi".hash twice in two different irb consoles. (In the same it works, I read that have some random seed...)<br/><br/>So in production, every server instance have a different asset number. Or with one server, every restart has a different number too.<br/><br/>The asset is still available but in the browser side is better to have the same asset ID because the browser can cache the asset just once and not 4 times.<br/><br/>I\'ve changed this to use a String.bytes.sum instead of String.hash', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4859830e8f55f47d30b8fd4db2b4865c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2005', 'title': u'Fixing asset number for asset_path with %d to be consistent in ruby 1.9'}, {'body': u'Backport of https://github.com/rails/rails/pull/1997', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/769f0b312d64290f1c6c5e73039c582b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2004', 'title': u'Backport of #1997'}, {'body': u'Backport of https://github.com/rails/rails/pull/1997', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/769f0b312d64290f1c6c5e73039c582b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2002', 'title': u'Backport of #1997'}, {'body': u'This is useful for engines with own application.{js|css}-files.<br/>See: https://github.com/rails/rails/issues/1520', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/960a8ebd6e2e80f443e6fdccaa27232d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/2001', 'title': u'Now accepting css/js files in deeper directory structures by default.'}, {'body': u'This is for example useful for engines having their own application.js/.css<br/><br/>See: https://github.com/rails/rails/issues/1520', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/960a8ebd6e2e80f443e6fdccaa27232d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/2000', 'title': u'Accept application.js/.css to exist in a deeper directory depth by default'}, {'body': u'After `require active_record` reference to `ActiveRecord::Relation` causes error "undefined method \'delegate\' for Relation class". You must also `require active_record/base` or just fake refer `ActiveRecord::Base`.<br/><br/>Suggest requiring delegation stuff from ActiveSupport explicitly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4486876726bcef5b87268564fc29e6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1999', 'title': u'Add require ActiveSupport delegation to ActiveRecord::Relation class.'}, {'body': u'This caused that `find_each` may produce extra db call taking all the records from db, return array with all records, and was less efficient than `ActiveRecord::Base#all`. There is no sense to keep _scope_ with this method, as it expects block and having further scopes after `find_each` is not possible.<br/><br/>eg. (notice last query)<br/><pre><br/>ruby-1.9.2-p180 :016 > User.find_each{|u| }<br/>  User Load (93.8ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` >= 0) ORDER BY `users`.`id` ASC LIMIT 1000<br/>  User Load (175.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` > 1000) ORDER BY `users`.`id` ASC LIMIT 1000<br/>  User Load (0.5ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` > 2000) ORDER BY `users`.`id` ASC LIMIT 1000<br/>  User Load (308.2ms)  SELECT `users`.* FROM `users` <br/></pre><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/769f0b312d64290f1c6c5e73039c582b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1997', 'title': u'Make `ActiveRecord::Batches#find_each` to not return `self`.'}, {'body': u'For production - leave the default<br/>For test and dev: :strict.<br/><br/>Squash commits of #1746.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1996', 'title': u'Rails app template: setup different mass assignment sanitizer for envs'}, {'body': u'This fix #1970', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1995', 'title': u'Prototype rails.js fixes for 3-0-stable'}, {'body': u'Changed to_s method on date to not add a space before single digit days for :long and :short date formats.<br/><br/>Having an extra space before single digit days doesn\'t make sense to me. If date contains 2011-7-6 and date.to_s(:long) is called, "July  7, 2011" is returned (with two spaces between July and 7). It seem more intuitive for just "July 7, 2011" to get returned.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d48d3849102b57bbc1462c0da0b3866?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1994', 'title': u'Removed space padding before single digit days on date.to_s(:long) and :short'}, {'body': u'See new method mysql_creation_options. It is used by both<br/>create_database and recreate_database so they are consistent.<br/><br/>(Manual cherry pick of 3ba3125b24b532876c95c8d9d00c9b69faab5a60)<br/><br/>See discussion at https://github.com/rails/rails/pull/1952', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bfaba91f41f0c01aba1ef0751458b537?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1990', 'title': u'rake db:test:purge creates mysql database with wrong charset & collation (3-1-stable)'}, {'body': u'See new method mysql_creation_options. It is used by both<br/>create_database and recreate_database so they are consistent.<br/><br/>(Manual cherry pick of 3ba3125b24b532876c95c8d9d00c9b69faab5a60)<br/><br/>See discussion in https://github.com/rails/rails/pull/1952', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bfaba91f41f0c01aba1ef0751458b537?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1989', 'title': u'rake db:test:purge creates mysql database with wrong charset & collation (master branch)'}, {'body': u"So, somehow a pointless change to a case statement slipped in with some other commits, recently. I think the committer meant well, but didn't realize the case statement (which I wrote) already passed tests as-is. Could always just revert those two commits, as well, but I figured merging a pull request was probably quicker. :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1987', 'title': u'Remove case statement changes from 2e0840d and 56ac32a. Inheritance FTW.'}, {'body': u'Add w3c_validators gem to the doc group to fix failing validation of guides. (see 8b25b55)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1983', 'title': u'Cherrypick for 3-1-stable - adding w3c_validators gem'}, {'body': u'Backport #1778 to 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1982', 'title': u'Backport of #1778 (fix nested fields_for when Hash-based model is passed)'}, {'body': u'In order make Relation behavior closer to Array<br/>Made Relation#sum to accept block and delegate it to Array#sum<br/><br/><br/>``` ruby<br/>TeamMember.has_many :time_sheets<br/><br/>TeamMember.first.time_sheets.class  # => Array<br/>TeamMember.first.time_sheets.sum(&:hours) # raises ArgumentError<br/>```<br/><br/>And this patch makes it all work.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1979', 'title': u'Fixed AR::Relation#sum compatibility with Array#sum'}, {'body': u"'Can't modify frozen object' when calling #freeze after instantiation<br/><br/>Although I _did_ add tests to this which _should_ have failed, for some reason they didn't.  If someone with more knowledge of Rails dependencies could help me out I would appreciate it.<br/><br/>The issue this fixes is here: https://github.com/rails/rails/issues/1966<br/><br/>There is a 100% repeatable (on the 3 MacBooks I tried) bug wherein executing the following:<br/><br/>    rails new foo<br/>    cd foo<br/>    bundle install<br/>    rails console<br/><br/>And within IRB:<br/><br/>    ActiveSupport::TimeZone.new('Alaska').freeze<br/><br/>Raises a `Can't modify a frozen object` RuntimeError.<br/><br/>Although I can get this error to occur every time, I cannot get it to be reproduced in a test.<br/><br/>I hope this at least puts everyone on the right track to tracking down this problem.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f80fe9dc2c31f42d4ce72593fe559fd0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1977', 'title': u'TimeZone requires preloading before #freeze'}, {'body': u'Current implementation of `ActiveRecord#calculate` is that it drops provided `select` values. This ruins query when calling calculate on a relation with `having` conditions based on `select`.<br/><br/>Example:<br/><br/>``` ruby<br/>class User < ActiveRecord::Base<br/>  has_many :operations<br/>end<br/><br/>class Operation < ActiveRecord::Base<br/>  belongs_to :user<br/>end<br/><br/>relation = User.joins(:operations).select("sum(operations.amount) AS deposit").group("users.id").having("deposit > 100")<br/>relation.count # raises sql error "no such column \'deposit\'"<br/>```<br/><br/>Provided patch fixes the error by keeping `select` values untouched if there is `having` clause in query.<br/><br/>Bug occurs in master, 3-1-stable and 3-0-stable<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4486876726bcef5b87268564fc29e6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1969', 'title': u'ActiveRecord calculation fail when having contains conditions based on select values'}, {'body': u"Currently `AR::Relation#find` is compatible with `Array#find`: <br/>if no block given - acts as AR finder, if block given - load result and delegate to `Array#find` <br/><br/>But collection association doesn't work like this:<br/><br/>``` ruby<br/>Project.order(:id).find {|p| p.id > 3} # => Project<br/>User.first.projects.find{|p| p.id > 3} # => ArgumentError<br/>```<br/><br/>In order to make CollectionAssociation behave closer to Array<br/>Add ability to pass block to #find method just like Array#find does.<br/><br/><br/>See also: #1955", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1968', 'title': u'Fixed CollectionAssociation#find to be compatible with Array#find'}, {'body': u'For a has_one association, setting an associated object which fails validation, but no previous object was set, *target* is nil. This causes an "undefined method `[]=\' for nil:NilClass" exception, where an ActiveRecord::RecordNotSaved exception is expected. Fixed by only calling set_owner_attributes if we have a target.<br/><br/>With test case.<br/><br/>This affects the current master as well as the 3-1-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c11579192bd480035b95d6cc82a79907?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1964', 'title': u'Only call set_owner_attributes for has_one association if target exists. [3.1.0rc4]'}, {'body': u'Updated the engine rake task so that it loads the tasks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5a8ab1ea865141adaa35ab9408435003?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1963', 'title': u'Fix engine rake task'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1957', 'title': u'Add w3c_validators gem to the doc group to fix failing validation of guides'}, {'body': u"Currently `AR::Relation#find` is compatible with `Array#find`: <br/>if no block given - acts as AR finder, if block given - load result and delegate to `Array#find` <br/><br/>But collection association doesn't work like this:<br/><br/>``` ruby<br/>Project.order(:id).find {|p| p.id > 3} # => Project<br/>User.first.projects.find{|p| p.id > 3} # => ArgumentError<br/>```<br/><br/>In order to make CollectionAssociation behave closer to Array<br/>Add ability to pass block to #find method just like Array#find does.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1955', 'title': u'Fixed CollectionAssociation#find to be compatible with Array#find'}, {'body': u"Following #1950, I've seen several places where the load path is updated when using bundler to require the libraries would be better.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1954', 'title': u'Rely on load_paths.rb instead of manually adding them'}, {'body': u"In db:test:purge ActiveRecord::Base.connection.recreate_database is called with the full database config options hash instead of the :charset and :collation hash that is expected.<br/><br/>This causes my test database to be created with the collation set incorrectly (I need utf8_bin) and my fixtures don't load and my tests fail. (Further explanation in comments).<br/><br/>See new method mysql_creation_options. It is used by both create_database and recreate_database so they are consistent.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bfaba91f41f0c01aba1ef0751458b537?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1952', 'title': u'rake db:test:purge creates mysql database with wrong charset & collation'}, {'body': u"Railties tests fail because it can't find `rails/generators`.<br/>Adding railties to the load path fixes it.<br/><br/>And master is green on my machine with this commit.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1950', 'title': u"Add railties to the load path if it's not already there"}, {'body': u"I've cherry-picked two commits for 3-1-stable.<br/><br/>One, from @sikachu, which fixes the tests for actionpack and should bring back the CI to green.<br/>One from me, which declares all Numerics as html_safe instead of only Fixnums ( #1935 ).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1949', 'title': u'Cherry picks for 3-1-stable'}, {'body': u'Currently, only Fixnums are. Floats and other numeric classes should too.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1948', 'title': u'All numerics should be html_safe'}, {'body': u'Apply fix for #1925 into 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1947', 'title': u'Refactor sprockets asset paths to allow for alternate asset environments'}, {'body': u'Apply fix for #1945 into 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1946', 'title': u'Fix engine migrations check'}, {'body': u'Currently the install:migrations rake task for an engine is added even if no migrations directory exists, due to a broken check in the has_migrations? method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1945', 'title': u'Fix has_migrations? check in Rails::Engine'}, {'body': u'As assign_nested_attributes_for_collection_association already supports without_protection coming in as an option (see line 424 in activerecord/lib/active_record/nested_attributes.rb [1]), allow this option to be specified when calling accepts_nested_attributes_for.  Without allowing this option to be specified here, the only way to call it is to call #{association}_attributes directly with an options hash.<br/><br/>[1]<br/><br/>        elsif assignment_opts[:without_protection]<br/>          association.build(attributes.except(*unassignable_keys(assignment_opts)), assignment_opts)<br/>        else<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1944', 'title': u'Allow without_protection to be set on nested_attributes accessors.'}, {'body': u'This cherry picks #1940 for 3.0 stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1942', 'title': u'Cherry Pick for 1940'}, {'body': u'The changes broke bulk migration tests and were fixed in 4d256bc6; however that brought back the issue of #1857 and so this commit goes back to the original scenario and just adds change_table to the list<br/>of methods which are to be recorded in the CommandRecorder. The method_missing now delegates all calls to the underlying connection as before. <br/><br/>cc: @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1941', 'title': u'Reversing the changes related to CommandRecorder'}, {'body': u'This follows the discussion in #1939<br/><br/>Currently, when using respond_with in a POST request without providing any `:location`, the error generated is not explicit at all, generating confusion.<br/><br/>This provides a more helpful error.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1940', 'title': u'Provide a more explicit message when we try to redirect to a missing location'}, {'body': u'This modifies to_json so that I can pass root: false. It also allows from_json to exclude the root element by passing an optional second parameter. Look good?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9d778043b9c008cf3f5c6bc52e648c53?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1938', 'title': u'Make to_json take a parameter to exclude root'}, {'body': u'Just as it says on the tin. Added Enumerable#count_by which performs a group_by and returns the keys and count of matching elements rather than the array of matching elements. Includes failing test, the method itself, and RDoc for the method.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9ebda660f4816d6db73033d8a0b75db2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1932', 'title': u'Added Enumerable#count_by and tests'}, {'body': u'Some methods like PREPARE and DEALLOCATE have also been extracted to introduce `reset_cache!`.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1930', 'title': u'#1892 Clear query cache after a migration'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c2dc9c02ce7a041285725a4fc9e5f6d2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1929', 'title': u'Create a test case for disable_referential_integrity'}, {'body': u'The following code:<br/><br/>```ruby<br/>select :post, :category_ids, [], {}, :multiple => false<br/>```<br/><br/>Generates the select with name `post[category_id][]`. This is kinda confusing to add `[]` in case of `false` and `nil` for multiple attribute.<br/><br/>In real example with conditional multiple key we need the following:<br/><br/>``` ruby<br/>select ..., {:class => "gg").merge(my_condition ? {:multiple => true}, {})<br/>```<br/><br/>That is not very natural. So fixed default name to add `[]` only when `:multiple` looks truly.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1927', 'title': u'Fixed ActionView::FormOptionsHelper#select with :multiple => false'}, {'body': u'/cc @dhh /cc @josh /cc /cc @josevalim<br/><br/>This is for example useful for engines having their own application.js/.css<br/><br/>See: https://github.com/rails/rails/issues/1520', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/960a8ebd6e2e80f443e6fdccaa27232d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1926', 'title': u'Accept application.js/.css to exist in a deeper directory depth by default'}, {'body': u'This patch refactors the Sprockets asset path helpers to make it easier to integrate alternate asset environments and prefixes. In my specific case, this makes integrating themes using the asset pipeline a whole lot easier.<br/><br/>The main change is to source the asset environment and prefix from helper-level methods (<code>asset_environment</code> and <code>asset_prefix</code>), rather than hard-coded within the <code>AssetPaths</code> class.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1925', 'title': u'Refactor sprockets asset paths to allow for alternate asset environments'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1924', 'title': u'Put back Rails.application#env_default and deprecate it [Closes #1922]'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c2dc9c02ce7a041285725a4fc9e5f6d2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1921', 'title': u'Create a test case for disable_referential_integrity'}, {'body': u'<br/>This is required here also. Let this fix come with 3.0.10. <br/><br/>Just saw this is got fixed in master as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1916', 'title': u'3-0-stable ActiveModel::Dirty patch for multiple assignments to the same attribute'}, {'body': u'In order to select single column from the ActiveRecord objects scope<br/>Implemented ActiveRecord::Base.map method that does direct query if<br/>column name given or process as Array#map when block given.<br/><br/>``` ruby<br/>Person.map(:id) # SELECT people.id FROM people<br/>Person.map(:role, :distinct => true) # SELECT DISTINCT role FROM people<br/>Person.map(:id, :limit => 5, :conditions => {:confirmed => true})<br/>```<br/><br/>Method is also available in associtions:<br/><br/>``` ruby<br/>project.team_members.map(:role)<br/>```<br/><br/>Backward compatibility - process as regular Array#map if block given:<br/><br/>``` ruby<br/>Person.limit(5).map(&:id)<br/>project.team_members.map(&:role)<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1915', 'title': u'ActiveRecord::Base.map method for direct select by single column'}, {'body': u'Space is required to pass tests. <br/><br/>/cc @josevalim<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1912', 'title': u'Fix plugin_new_generator_test.rb'}, {'body': u'New code is shorter and more intention-revealing.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ad4631ddac812d2492978b531cadb387?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1909', 'title': u"Use 'delegate' macro instead of writing out methods by hand "}, {'body': u'This fixes the specs in active support.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1905', 'title': u"Configurable objects don't respond_to? if the method hasn't been compiled"}, {'body': u'As @tenderlove asked, sending the pull request for 3-1-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e4679be8d7d2484f9c0b8c4df71f4d2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1904', 'title': u'Fix #1571 for 3-1-stable'}, {'body': u'After commit 266b80c7b28c7587ab1c75aae6e3288e2f6c1aba added <br/><br/>"test_configuration_is_crystalizeable(ConfigurableActiveSupport)" starts failing <br/><br/><pre><br/>  1) Failure:<br/>test_configuration_is_crystalizeable(ConfigurableActiveSupport)<br/>    [test/configurable_test.rb:61:in `test_configuration_is_crystalizeable\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/callbacks.rb:399:in `_run_setup_callbacks\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/callbacks.rb:81:in `send\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run\']:<br/><false> is not true.<br/></pre><br/><br/><br/>As we are using InheritableOptions here which is inherited from OrderedOptions. In this commit OrderedOptions  got a method respond_to? with return true.<br/><br/>I have just removed it and run all the tests. It passes for "activesupport", "railties", "actionapck" and all.<br/><br/>I am not sure that why this is required. Or may be we need a test for this respond_to here.<br/>Curious to know actually. May be some other fix is required here.<br/><br/>/cc chriseppstein<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1903', 'title': u'Removing respond_to? from OrderedOptions. '}, {'body': u'Fixes tests "test/json/decoding_test.rb" <br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1901', 'title': u'It should be in Json format to work with JsonGem'}, {'body': u'The "rake test" ignores the exception message. This pull request displays not only task name but also the exception message.<br/><br/>For example:<br/><br/>Errors running test:units, test:functionals!<br/><br/>This pull request:<br/><br/>Errors running test:units! Access denied for user \'\'@\'localhost\' to database...<br/>Errors running test:functionals! Command failed with status...<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c38fd9074fb072551c0ff80ccd90d24e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1899', 'title': u'Make "rake test" display not only task name but also exception message.'}, {'body': u"Originally, multiple assignments to the same attribute would overwrite the 'original' value. For example, assigning new values to an attribute three times and then calling _changes or _was would return the second most recent assignment, not the original value. (The new test case makes the situation a little clearer.)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5cce0795a9aac270a4fa6170fac4c94?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1897', 'title': u'ActiveModel::Dirty patch for multiple assignments to the same attribute'}, {'body': u'This for #1893', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1896', 'title': u'Avoid extra call to Cache#read in case of a fragment cache hit (3-0-stable)'}, {'body': u'3-1-stable fix test when running Jruby. If Jruby Platform is available the gem will change.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1895', 'title': u'Fix test for jruby db 3 1 stable'}, {'body': u'3-0-stable fix test when running Jruby. If Jruby Platform is available the gem will change.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1894', 'title': u'Fix test for jruby db 3 0 stable'}, {'body': u"Original Rails 2 bug was here: http://web.archive.org/web/20081005125758/http://dev.rubyonrails.org/ticket/9560<br/><br/>The gist of it is, the SELECT DISTINCT prequery was still joining every single table that was 'include'-ed, whether or not they're actually used to limit the resultset. This patch intends to only join the pertinent tables for the prequery.<br/><br/>This was fixed in Rails 2 but I don't think it ever made it into Rails 3. I'm still<br/>failing a few unit tests which seem to be related to table aliases - would<br/>appreciate any help. I selfishly patched against 3.0.8 - we're using 3.0.3 at work, and will probably be on 3.0.x for a while.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/07b2f492576e74e01dbe801cec562074?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1890', 'title': u'Optimized SELECT DISTINCT queries'}, {'body': u"This grants access to the rails command without having to accept the full set of Rails-related frameworks depended upon by the rails gem. <br/><br/>This is a simple backport to `3-0-stable` of @josevalim's recent patch (e3053ee753c3035e9d8337680212aba525c27376).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/83611ed7f7ed587603fbdffc691ea989?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1889', 'title': u'Add bin/rails executable to railties gem.'}, {'body': u"fix test when running Jruby. If Jruby Platform is available the gem will change.<br/><br/>Fixed tests when running tests with Jruby. <br/><br/>I will get pull requests for 3-0-stable also once it's get merge. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1886', 'title': u'fix test when running Jruby. If Jruby Platform is available the gem will '}, {'body': u'Same as #1871 but for 3-1-stable. <br/><br/>cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1885', 'title': u'Bump ARel to 2.1.3 (3-1-stable)'}, {'body': u"I'm new to doing Rails pull requests - are minor code changes like this useful?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8f75007bcbcb8ba4daa408592e1c65ec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1884', 'title': u'Refactor to use tap.'}, {'body': u'With the new update of Tzinfo gem the new tzdata is updated. In which the Moscow day light saving reflects.<br/><br/>http://article.gmane.org/gmane.comp.time.tz/3814<br/><br/>So i am using a timezone where no day-light saving. <br/><br/>Fixes tests for time_zone_test.rb with new tzinfo gem.<br/><br/>I will get pull requests for 3-0-stable also once this gets merged.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1883', 'title': u'Using not effected timezone in tests.'}, {'body': u'Use latest Arel syntax and pass each order by expression as separate argument to order method as otherwise invalid Oracle SQL is generated.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1882', 'title': u'Fix test_finding_with_cross_table_order_and_limit for Oracle'}, {'body': u"As discussed here: https://github.com/rails/rails/issues/1836#issuecomment-1453167<br/><br/>This is a first (and probably bad attempt) at implementing this, at least in a way that will stop people making controllers with reserved names.<br/><br/>I would guess that the list of reserved names isn't complete, but this is all I could see from the routes.  If there are others, feel free to mess.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f8b75a99bfbe0583cc9b6ca57c899031?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1880', 'title': u'Prevent generators from creating controllers which are reserved by Rails'}, {'body': u'We have to remove this from test or we need to set it again. The reason is that in mime_type_tests we are are doing Mime::Type.unregister(:gif).<br/><br/>We can handle in two ways.<br/><br/>1. Register again here using Mime::Type.register("image/gif", :gif)<br/><br/>2. Or remove the image/gif check from this test.<br/><br/>When you run single while it wil pass. But in whole it will fail.<br/><br/>I think we can also remove some code from mime_types_test.rb<br/><br/>https://github.com/rails/rails/blob/master/actionpack/test/dispatch/mime_type_test.rb#LC=94<br/><br/>/cc @josevalim ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1878', 'title': u'Removing image/gif from this test.'}, {'body': u'/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1877', 'title': u'Fix test to use Mime::Zip'}, {'body': u'Make send_file guess content type from file extension, if available', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d04cf9da2cc22288970d93858e1a36c9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1875', 'title': u'Fixed issue #1847'}, {'body': u'Can we please backport #106 to 3-0-stable ? I have made the necessary changes for it to work on this branch, and all tests seem to run successfully.<br/><br/>This will be very useful for the cases when clear_helpers do not work.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a475dddebda57b162fa9378363175e81?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1874', 'title': u'Backport config.action_controller.include_all_helpers to 3-0-stable'}, {'body': u'This fix a broken test related to ARel reversal orderings added by #1790', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1871', 'title': u'Bump ARel to 2.1.3'}, {'body': u'This is the patch that just landed on 3-1-stable, but rebased onto master. Please merge.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/723ee972f9e5078aeda85cdf0db3f3c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1870', 'title': u'Asset urls master'}, {'body': u"This is monkeypatch to add Arel::Nodes::Ordering#reverse to activerecord/../query_methods.rb<br/>when 'reverse' is called on an instance.<br/><br/>This is clearly the wrong place to do the patch. It should be performed<br/>in a callback when Arel is lazily loaded, but it works and allows<br/>the test to pass (this point)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b9bc8f270c2c19e3738f988c93f3c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1865', 'title': u"Test activerecord/lib/test/relations_test.rb:reverse_sql_order fails because 'reverse' is not defined as an instance method of Arel::Nodes::Ordering"}, {'body': u'In the number helper, using an empty hash as the default when calling I18n.translate will not fallback to other locales first when the translation is missing, it will just use the empty hash.<br/><br/>This means using a locale such as :"en-GB" would need to have all the number formats copied from :en, even if they are all the same.<br/><br/>Using a Proc which returns an empty hash will first check the fallbacks, then evaluate the Proc and use it as the default if the translation is still missing.<br/><br/>See https://github.com/svenfuchs/i18n/wiki/Fallbacks', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d36f32e6280af5bb307cead90e3844f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1864', 'title': u'Fix NumberHelper to check fallback locales before defaulting to empty hash'}, {'body': u'This allows test classes that are not subclasses of<br/>ActiveSupport::TestCase (like those in rspec-rails) to interact with<br/>with this variable without having to reference ActiveSupport::TestCase.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5d38ab152e1e3e219512a9859fcd93af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1861', 'title': u'Get the fixture_path from self.class instead of ActiveSupport::TestCase.'}, {'body': u"ActiveRecord object can't be sorted because they can't be compared, as reported in #1858.<br/>This fixes it.<br/><br/>It does the comparison on the object's id, because that's the only field which will be available anyway in all models.<br/>If required to sort on an other field, it should be provided in the block option of the sort method.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1860', 'title': u'Allow comparison on model objects - Closes #1858'}, {'body': u'I came across this issue on @gregg\'s Twitter timeline which he explained in this screencast: http://bit.ly/iu5ENC<br/><br/>Given a migration like this:<br/><code><br/>class AddPhone < ActiveRecord::Migration<br/>  def change<br/>    change_table :companies do |t|<br/>      t.string :phone<br/>    end<br/>  end <br/>end<br/></code><br/><br/>When rolling back this migration, we expect an IrreversibleMigration exception to be raised, because change_table is not supported by CommandRecorder and not reversible. <br/><br/>But what we get is an error complaining that the column name is a duplicate - SQLite3::SQLException: duplicate column name: phone: ALTER TABLE "companies" ADD "phone" varchar(255)<br/><br/>This happens because of the method_missing method in CommandRecorder which sends the change_table method to the delegate database connection, thereby causing the change method to actually run on the database, even when the migration is rolled back.<br/><br/>As a fix, I\'ve changed method_missing to record the method. This causes the inverse method to raise IrreversibleMigration later when it finds that invert_change_table is not available.<br/><br/>I want to know if this is the right approach to solve this problem. And if my tests are sufficient. Let me know if anything is missing. Thanks!<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1857', 'title': u'IrreversibleMigration is not raised when a method not supported by reversible migrations is called in the change method of a migration'}, {'body': u'Yehuda was going to do this, but I\'ve been waiting a couple of weeks for that to happen and so I got impatient, as it happens. So I asked Yehuda "Do you want help with sprockets-rails?" and he said "Yeah."<br/><br/>Here it is. I\'ve ripped out all of the Sprockets code that I can find within Rails and put it into the [sprockets-rails](http://github.com/radar/sprockets-rails) gem which I forked from the Rails repository.<br/><br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a2a53db8e9b4476038c94a64b32833f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1855', 'title': u'Rip out Sprockets from Rails'}, {'body': u'Minor Changes for 3-0-stable to change lighthouse url to github.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1854', 'title': u'Lighthouse to github'}, {'body': u'StringToParameterizeWithNoSeparator: dashed parameter will not change.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1853', 'title': u'StringToParameterizeWithNoSeparator: dashed parameter will not change.'}, {'body': u'Here at RedHat we subclassed the BufferedLogger in Rails 2 and it blew up when we tried to create a new log. I added the required require.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4bd3909aa69186bbb973341007e2c73a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1850', 'title': u'2 3 stable'}, {'body': u'Cherry-pick on [master](https://github.com/rails/rails/commit/9734a416faaa8149fa5914b0afe2e6761ad5ec20) for 3-1-stable branch', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/58eaae5f49eec791ab0eb6054a5f3613?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1849', 'title': u'[3-1-stable] Fix for complex ordering of multiple columns on postgresql'}, {'body': u'* Test included only fails with postresql<br/>* Related to commit: [fix for postgresql](https://github.com/rails/rails/commit/6709078eb1f61a1f8d54fcd82e9a07e96383ec8a)<br/>* Closes #1720', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/58eaae5f49eec791ab0eb6054a5f3613?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1848', 'title': u'Fix for complex ordering of multiple columns on postgresql'}, {'body': u'Port of activerecord session management patch: https://rails.lighthouseapp.com/projects/8994/tickets/6329, which is still a problem in rails 3.1', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a49172d1ddae42fa062770b59823c01d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1846', 'title': u'3 1 stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1845', 'title': u'TODO fix explicitly loading exceptations, autoload removed'}, {'body': u'backport for #1798', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed50ffc70effe033a813064308686440?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1844', 'title': u'Fixes an issue where cache sweepers'}, {'body': u'find :first changed to first<br/><br/>/cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/839f782d9b8cace33c986f15435f493e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1843', 'title': u'refactored the query'}, {'body': u'Using "SET CONSTRAINTS ALL DEFERRED" and "SET CONSTRAINTS ALL IMMEDIATE" to disable foreign keys on postgresql adapter we can disable foreign keys without issues for non admin users on postgresql.<br/><br/>I didn\'t write a test case for this issue because I don\'t know how.<br/><br/>I need to connect to a postgresql database using tables with foreign keys, and try to disable foreign keys on this connection.<br/><br/>How can we do this on rails test suite?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c2dc9c02ce7a041285725a4fc9e5f6d2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1841', 'title': u'Fix disable referential integrity for postgresql'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/028129906613fc0cf15b2a3de3422e44?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1840', 'title': u'Minor formatting fix'}, {'body': u'The same as https://github.com/rails/rails/pull/1829 for 3-1-stable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/028129906613fc0cf15b2a3de3422e44?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1839', 'title': u'Allow to specify roles for mass-assignment as array'}, {'body': u'I made a few private/protected indentation fixes in ActiveRecord, according to rails coding conventions given here  http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#follow-the-coding-conventions<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6d700771597aa972b45c024dc59a37af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1838', 'title': u'private/protected indentation fixes according to rails coding conventions'}, {'body': u'Fix issue where assigning a empty string to the _type column of a polymorphic association throws an error.  Now it returns nil for the association as one would expect.<br/><br/>[Fixes #1824]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b09d62315dbafc471538dd71d404ad48?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1837', 'title': u'Fix for empty string assigned to _type column of polymorphic association'}, {'body': u'To master per: https://github.com/rails/rails/pull/1795', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1835', 'title': u'Update SQL Server DB Rake Tasks'}, {'body': u'backport for #1798', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed50ffc70effe033a813064308686440?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1834', 'title': u'Fixes an issue where cache sweepers'}, {'body': u'Fixed Failing test : It should be Enumerable::Enumerator', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1830', 'title': u'Fixed Failing test : It should be Enumerable::Enumerator'}, {'body': u'Currently we must write:<br/><pre><br/>class User<br/>  attr_accessible :email<br/>  attr_accessible :email, :as => :admin<br/>end<br/></pre><br/>I believe alternate syntax is useful:<br/><pre><br/>class User<br/>  attr_accessible :email, :as => [:default, :admin]<br/>end<br/></pre><br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/028129906613fc0cf15b2a3de3422e44?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1829', 'title': u'Allow to specify roles for mass-assignment as array'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1828', 'title': u'3-1-stable Sprocket fix to load 2.0.0.beta.10 to fix  build'}, {'body': u'Sprockets version fixed for now. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1827', 'title': u'For now using older version to make build happy'}, {'body': u"Hi,<br/><br/>I noticed that as of 3.1 exists? queries stopped reporting an instrumentation name in their log entry.  Here's a proposed patch for that.<br/><br/>Thanks,<br/>Jon<br/>Ruby Agent Engineer<br/>New Relic", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8d0c72645c53ccbef24e0c03c87e9603?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1823', 'title': u'Log instrumentation name for exists? queries'}, {'body': u"I just updated the gemspec to rely on x.beta.10 instead of 11. I couldn't bundle install from the rails master branch with it still depending on 11.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e8c88afd8e2c1b5efa3b18e7a6ed6722?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1821', 'title': u'sprockets x.beta.11 was yanked and actionpack relied on it.'}, {'body': u'Fixed bug where rails_helper.rb was incorrectly checking the perform_caching flag. https://github.com/rails/rails/issues/1808', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66c680f88e8c379fe408d32299dfb4e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1816', 'title': u'Fixed bug where rails_helper.rb was incorrectly checking the perform_cach'}, {'body': u"Example: let's say that we need to apply two migration on production. First one delete unused column A. Second one does complicated data migration that failed during migration. In this case source code will be rollback to previous working version, but only the last migration got reverted. Production will run previous working version of source code that expects column A to exists, but it is not.<br/><br/>The thing that `ActiveRecord::Migrator` rollbacks only last applied migration will create inconsistency between data and code. It could be sensitive in some cases in production mode.<br/><br/>In order to control whether all migrations should be run under one transaction or separated transaction<br/>Implemented ActiveRecord::Migrator.bulk_migration option that supposed to be enabled in production", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1815', 'title': u'ActiveRecord::Migrator.bulk_migration option'}, {'body': u'With Rails 3.0, I\'m getting an ActiveRecord::ReadOnlyRecord error on a normal through association. <br/><br/>```ruby<br/>people(:michael).posts.first.update_attributes!(:title => "Can write")<br/>```<br/>This is a regression form Rails 2.3. It works fine on master too.<br/><br/>Seems like the problem is the association join is being passed in the the *build_joins* method as a string - hence it does not recognise it as an association join. In master, it\'s not a string but an Arel::Node - which is a huge revamp for 3-0-stable<br/><br/>```ruby<br/># in lib/active_record/relation/query_methods.rb<br/>      non_association_joins = (joins - association_joins - stashed_association_joins)<br/>      custom_joins = custom_join_sql(*non_association_joins)<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a475dddebda57b162fa9378363175e81?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1814', 'title': u'Through association should not read-only'}, {'body': u'1. Tests Added for jdbc option added for Jruby<br/>2. Changed tests according to changes made for database.yml', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1813', 'title': u'Tests Added for jdbc option added for Jruby'}, {'body': u'Same as https://github.com/rails/rails/pull/1809 for master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/526d60de6472502bb570a9df2842b33b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1811', 'title': u'More jruby gem for database fixes master'}, {'body': u'These changes update the JRuby/JDBC database support to be a little friendlier.<br/><br/>- You will be able to use `rails new app` with no arguments and get a proper JRuby/sqlite3-based Rails app.<br/>- `rails new app -d sqlite3` and `rails new app -d jdbcsqlite3` will do the same thing.<br/>- Add a `rails new app -d jdbc` template for all other databases.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/526d60de6472502bb570a9df2842b33b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1809', 'title': u'More jruby gem for database fixes'}, {'body': u"I've submitted this patch before (pull request 1435) but decided redefining `String#id` in the test was a bad idea, so I've refactored it slightly to achieve the same thing using a mocha stub instead.<br/><br/>Currently if the code that calls `find_in_batches` modifies the yielded array in place then `find_in_batches` can enter an infinite loop searching with ruby object ids in the database instead of the primary key of records in the database. This happens because it naively assumes the yielded array hasn't been modified before calling `id` on the last object in the array. And ruby (1.8 at least) alias' `id` to `object_id` so an integer is still returned no matter what the last object is.<br/><br/>By moving finding the `id` of the last object before yielding the array of records it means the calling code can do whatever it wants to the array in terms of modifying it in place, and `find_in_batches` doesn't care. Also moved the count of the array records before yielding in case elements are removed or added when yielded.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ad072c8b8e23a18a49eddb6517490fa1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1807', 'title': u'Bugfix by stopping find_in_batches using the records after yielding.'}, {'body': u'Edited the comments section about the layout. As the  guides are in code files, created a pull request<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fb6e22787531bbbd4cc3c8c63636880a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1806', 'title': u'simple typo change'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1805', 'title': u'specific rake task finder for jdbcpostresql, jdbcmysl, jdbcmysql2, jdbcsqlite, jdbcsqlite3'}, {'body': u'cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1804', 'title': u'Use uglifier from rubygems instead of git repo  (3-1-stable)'}, {'body': u'New version of Uglifier gem (1.0.0) is out and we can use it directly from rubygems instead of Git repository', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1803', 'title': u'Use uglifier from rubygems instead of git repo'}, {'body': u"Allow the user to define a schema config block in databases.yml with the username and password that should be used to create the databases.<br/><br/>Before I clean up the commit and cut down on the code duplication, I wanted to get thoughts on the overall approach. Basically, I'm running into the situation where my connection user for a particular database configuration won't have the ability to create the database, and I want a way to define a configuration in config/databases.yml that will be used only to create the database and grant the permissions. The current problem with the root user fallback is that in many cases, I won't have an interactive terminal when calling the db:create task. I also don't want to put the root credentials into the configuration.<br/><br/>This change allows me to define a schema block, with a username and password that will be used as a fallback if the connection user does not have permissions to create the database.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1802', 'title': u'Database.yml block for describing the user you want to create databases as. '}, {'body': u'It would raise undefined method controller_name for nil while trying to reach controllers where the sweeper was defined.<br/><br/>I do not have tests for this yet...', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed50ffc70effe033a813064308686440?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1798', 'title': u'Fixes an issue where cache sweepers with only after filters would have no controller object'}, {'body': u'For a through association with a condition, e.g.<br/><br/>```ruby<br/>has_many :misc_tags, :through => :taggings, :source => :tag, :conditions => "tags.name = \'Misc\'"<br/>```<br/><br/>```ruby<br/>Post.joins(:misc_tags)<br/>Post.all(:joins => :misc_tags)<br/>```<br/><br/>It\'s outputting the following SQL<br/><br/>```sql<br/>SELECT "posts".* FROM "posts" INNER JOIN "taggings" ON "posts"."id" = "taggings"."taggable_id" AND "taggings"."taggable_type" = \'Post\' INNER JOIN "tags" ON tags.name = \'Misc\' WHERE "posts"."id" = 1 AND (taggings.tag_id != tags.id)<br/>```<br/><br/>when I expect<br/><br/>```sql<br/>SELECT "posts".* FROM "posts" INNER JOIN "taggings" ON "posts"."id" = "taggings"."taggable_id" AND "taggings"."taggable_type" = \'Post\' INNER JOIN "tags"  ON "tags"."id" = "taggings"."tag_id" AND tags.name = \'Misc\' WHERE "posts"."id" = 1 AND (taggings.tag_id != tags.id)<br/>```<br/><br/>i.e. @ ON "tags"."id" = "taggings"."tag_id" @ is missing.  See failing test too.<br/><br/><br/>It looks like a regression from 2.x. I\'ve tried the test on master though and it seems to be working there<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a475dddebda57b162fa9378363175e81?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1797', 'title': u'Through association condition clobbers join condition'}, {'body': u'When using link_to and specifying a relation and a method like:<br/><br/>    link_to(\'Somesuch\', \'/path\', :method => :post, :rel => \'junk\')<br/><br/>It generates:<br/><br/>        <a href="/path" data-method="post" rel="nofollow">Somesuch</a><br/><br/>But this method should also allow me to specify my own relation like:<br/><br/>        <a href="/path" data-method="post" rel="junk nofollow">Somesuch</a><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f794633c75159dff4fbcae746b68bdb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1796', 'title': u"link_to doesn't allow rel attribute when also specifying method"}, {'body': u'These have been outdated forever and need a bump up. Details in commit message bullet points.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1795', 'title': u'Update SQL Server DB Rake Tasks'}, {'body': u"What was in use has long been outdated. This brings this up to modern standards. Note, no solution here can meet everyone's needs, especially legacy databases, but this is at least a better modern baseline.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1794', 'title': u'Update SQL Server DB Rake Tasks'}, {'body': u'See [#1776](https://github.com/rails/rails/pull/1776#issuecomment-1402894), 2df2bfdb4b1165dce4b5bc3fe046147d793fead4, and 7440a254c4e724a5bbf6a0f4c8edb6d8d0432433.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2c1a10ad0cce0f73e11a2a558a69f97c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1793', 'title': u'rake assets:clean also removes directories'}, {'body': u'Streamline fragment_for SafeBuffer logic to make it more concise and robust against unsafe buffers. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1792', 'title': u'Cherry pick of pull #1787 into 3-0-stable'}, {'body': u'Streamline fragment_for SafeBuffer logic to make it more concise and robust against unsafe buffers.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1791', 'title': u'Cherry pick of pull #1787 into 3-1-stable'}, {'body': u"This fixes reverse_sql_order's assumption that order_values are always strings/symbols, and relies upon the corresponding ARel pull request at https://github.com/rails/arel/pull/64", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1790', 'title': u'Support reversal of ARel orderings in reverse_sql_order'}, {'body': u'Changed the default value for the `options` argument on `ActiveRecord::ConnectionAdapters::Table#column_exists?` from `nil` to an empty Hash `{}`.<br/><br/>That method calls through to `ActiveRecord::ConnectionAdapters::SchemaStatements#column_exists?` which expects `options` to be a Hash.<br/><br/>When `options` was `nil`, an error would occur in cases where the column did exist because the called method attempted to perform a key lookup on options.<br/><br/>(This was committed to the master branch yesterday. @josevalim requested that I also submit it to 3-1-stable https://github.com/rails/rails/pull/1763 )', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cfd64ab75e1111c832a7f40b67d5143?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1789', 'title': u'Fix default options argument on ActiveRecord::ConnectionAdaptors::Table#column_exists?'}, {'body': u'Fix for attributes translation of namespaced models like Some::Complicated::Model. Because of .underscore turns it in some/complicated/model" and this cannot be concatenated via "." with attribute_key_name.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1788', 'title': u'Fix namespaced models attributes translation.'}, {'body': u"Handle for cases where the buffer is a SafeBuffer, or a particular subclass of SafeBuffer.<br/><br/>If this looks good, I'll make a patch for the other release branches.<br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1787', 'title': u'fragment_for assumes ActionView::OutputBuffer.'}, {'body': u"There was a warning:<br/><br/>```<br/>/Users/gazay/code/rails/railties/lib/rails/generators.rb:303: warning: character class has duplicated range: /Rails::Generator([\\s(::)]|$)/<br/>```<br/><br/>I think it was not right regexp because it can catch some strange lines like<br/><br/>```<br/>'Rails::Generator('<br/>'Rails::Generator)'<br/>'Rails::Generator:'<br/>```<br/><br/>But in fact the purpose of this expression has been catch follow lines:<br/><br/>```<br/>'Rails::Generator '<br/>'Rails::Generator::'<br/>'Rails::Generator'<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1786', 'title': u'Fix regexp in generators for right catching error message'}, {'body': u"Say configuration yml is loaded and cached to an instance variable, then string from it is passed to simple_format helper. Currently it is changed.<br/>It shouldn't happen if passed string is frozen.<br/><br/>I added a test and fix for this case.<br/><br/>It's also worth considering to not change passed argument in all cases.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bd9b6d9f929adbf8918fe37fb279c43e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1785', 'title': u'Do not change a frozen text passed to simple_format text helper '}, {'body': u'This will remove warnings about shadowing outer local variables', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1784', 'title': u'Removing shadowing outer local variables warnings'}, {'body': u'Removed warnings when testing railties about uninitialized variables', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1783', 'title': u'3 1 stable uninitialized in railties'}, {'body': u'Lines 6-7 of `active_record/lib/active_record/connection_adapters/column.rb` invoke the `to_set` method on array objects. This method is not available unless `require "set"` is available. Since the require is not provided directly in the file in question, it is sensitive to load order.<br/><br/>For example:<br/><br/>```<br/>% irb<br/>ruby-1.9.2-p180 :001 > require \'active_record\'<br/> => true <br/>ruby-1.9.2-p180 :002 > ::ActiveRecord::ConnectionAdapters::AbstractAdapter<br/>NoMethodError: undefined method `to_set\' for [true, 1, "1", "t", "T", "true", "TRUE"]:Array<br/>\tfrom /Users/dazuma/.rvm/gems/ruby-1.9.2-p180@rails31/gems/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/column.rb:6:in `<class:Column>\'<br/>\tfrom /Users/dazuma/.rvm/gems/ruby-1.9.2-p180@rails31/gems/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/column.rb:5:in `<module:ConnectionAdapters>\'<br/>\tfrom /Users/dazuma/.rvm/gems/ruby-1.9.2-p180@rails31/gems/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/column.rb:3:in `<module:ActiveRecord>\'<br/>\tfrom /Users/dazuma/.rvm/gems/ruby-1.9.2-p180@rails31/gems/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/column.rb:1:in `<top (required)>\'<br/>\tfrom /Users/dazuma/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'<br/>\tfrom /Users/dazuma/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require\'<br/>\tfrom /Users/dazuma/.rvm/gems/ruby-1.9.2-p180@rails31/gems/activerecord-3.1.0.rc4/lib/active_record/connection_adapters/abstract_adapter.rb:7:in `<top (required)>\'<br/>\tfrom (irb):2<br/>\tfrom /Users/dazuma/.rvm/rubies/ruby-1.9.2-p180/bin/irb:16:in `<main>\'<br/>```<br/><br/>This is a 3.1 regression (reproduced in 3.1.0.rc4). The above irb commands do not raise NoMethodError in 3.0.9.<br/><br/>This 1-line pull request fixes the issue by adding the necessary require.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e06aa8f63d2a1753a2b352bc1cabbde2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1780', 'title': u"Add missing require 'set'"}, {'body': u'This add support for some of the popular ActiveRecord callbacks to ActiveResource: <br/><br/>before_validation, after_validation, before_save, around_save, after_save, before_create, around_create, after_create, before_update, around_update, after_update, before_destroy, around_destroy, after_destroy.<br/><br/>This an initial work, I will start to work soon adding support for contexts in *_validation callbacks (ex. before_validation :on => create) but first I want do add context support to existing validations (ex. validates :on => :create)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1779', 'title': u'Adding basic callbacks support to ActiveResource'}, {'body': u'This fixes an error when a record object that is a subclass of Hash is passed to fields_for, which is incorrectly interpreted as field options.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1778', 'title': u'Fix nested fields_for when Hash-based model is passed.'}, {'body': u'Rebased version of previous pull request see:<br/>https://github.com/rails/rails/pull/269', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4595c065d3424b61aa9011599155397b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1777', 'title': u'Callback collision'}, {'body': u'`rake assets:clean` will now clean up any image files (*.png, *.gif, *.jpg, *.jpeg, *.ico) in addition to CSS and JS.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2c1a10ad0cce0f73e11a2a558a69f97c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1776', 'title': u'assets:clean task now cleans up images'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/80643cc5c7a70d4cdddebc3185cd3c18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1775', 'title': u'Instance reader method on class_attribute - 3-0-stable'}, {'body': u"Hi, guys!<br/>What do you think about adding special syntax for generating migration for changing columns in tables?<br/>By analogy with add new column:<br/><br/>```<br/>rails g migration change_some_field_in_posts some_field:string<br/>```<br/><br/>will generate:<br/><br/>```ruby<br/>class ChangeSomeFieldInPosts < ActiveRecord::Migration<br/>  def up<br/>    change_column :posts, :some_field, :string<br/>  end<br/><br/>  def down<br/>    change_column :posts, :some_field, 'previous_field_type'<br/>  end<br/>end<br/>```<br/><br/>And if you like this idea - what you can suggest about 'previous_field_type' part? I don't like this solution..", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1774', 'title': u'Added generation for change_field migration'}, {'body': u'Applies cleanly and passes all tests :)<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/80643cc5c7a70d4cdddebc3185cd3c18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1773', 'title': u'Instance reader method on class_attribute - 3-1-stable'}, {'body': u"Removing require_relative gem. Linecache new version 0.46 is out and it's loading rbx-require-relative > 0.0.4", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1772', 'title': u'Require rel remove 3 0 stable'}, {'body': u"Removing require_relative gem. Linecache new version 0.46 is out and it's loading rbx-require-relative > 0.0.4", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1771', 'title': u'Require rel remove from 3-1-stable '}, {'body': u"Removing require_relative gem. Linecache new version 0.46 is out and it's loading rbx-require-relative > 0.0.4", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1770', 'title': u"Removing require_relative gem. Linecache new version 0.46 is out and it's"}, {'body': u"Fix inconsistencies by being polite to the wrapped body. Needed for Rack::Sendfile to function properly. See issue #1761 and pull request 1764.<br/><br/>@josevalim this is a cherry picked commit from the one in master, is that OK? It's the only way I could get this into 3-1-stable without bringing hundreds of other commits along with it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7973be881d75b917a40a166b6cb1792c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1768', 'title': u'3 1 stable'}, {'body': u'I updated rake:notes to search app, config, lib, public, script, test and vendor dirs.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4e9afb71b1593dcb6422111ce1e03cff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1767', 'title': u'Updated rake:notes to search additional directories'}, {'body': u"In an effort to make `class_attribute` a little more backward compatible with the now-removed `class_inheritable_accessor`, I've added the ability to disable the instance reader method.<br/><br/>Here's an example case of where it's needed:<br/>https://gist.github.com/1033533<br/><br/>TL;DR: You can't override the reader method if the module extends ActiveSupport::Concern because of the order that things get mixed-in.<br/><br/>We're struggling to get Carrierwave running on Rails master as we remove uses of `class_inheritable_attribute` -- if there's any way this can be merged into 3-0-stable and 3-1-stable, that would help a ton.  Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/80643cc5c7a70d4cdddebc3185cd3c18?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1765', 'title': u'Add option to omit creating an instance reader method on class_attribute'}, {'body': u"Fix inconsistencies by being polite to the wrapped body. Needed for Rack::Sendfile to function properly. See issue #1761.<br/><br/>When active record isn't loaded assets aren't served in production mode, when it is loaded they are... It's debatable whether this is a bug or a feature, but I think it should behave the same whether active record is loaded or not :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7973be881d75b917a40a166b6cb1792c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1764', 'title': u'Fix inconsistencies with serving images in production mode when ActiveRecord is loaded'}, {'body': u'Changed the default value for the `options` argument on `ActiveRecord::ConnectionAdapters::Table#column_exists?` from `nil` to an empty Hash `{}`.<br/><br/>That method calls through to `ActiveRecord::ConnectionAdapters::SchemaStatements#column_exists?` which expects `options` to be a Hash.<br/><br/>When `options` was `nil`, an error would occur in cases where the column did exist because the called method attempted to perform a key lookup on options.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0cfd64ab75e1111c832a7f40b67d5143?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1763', 'title': u'Fix default options argument on ActiveRecord::ConnectionAdaptors::Table#column_exists?'}, {'body': u'As discussed in https://github.com/lifo/docrails/commit/2fbb7504e2c2b0a95398d1ef0c97ea4a403d831d, replacing the readme links of AR/AP during rdoc generation so that they are not broken in README.rdoc on GitHub.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1762', 'title': u'Solving the problem of links being broken in GitHub for the sake of api site'}, {'body': u'It will remove warning about not uninitialized instance variable @dirty only with replacing content of output_buffer', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1760', 'title': u'Removed warning about not initialized instance variable @dirty'}, {'body': u'It will remove warning about not initialized instance variable @dirty:<br/><br/>```<br/>/Users/gazay/code/rails/activesupport/lib/active_support/core_ext/string/output_safety.rb:154: warning: instance variable @dirty not initialized<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1759', 'title': u'Removed warning about not initialized instance variable @dirty'}, {'body': u'To obtain expected result from request.remote_ip method and receive unified formatted IPs in logs i added validation for IP address', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1758', 'title': u'Added checking for X-Forwarded-For valid IP format in request'}, {'body': u"Current implementation produce incorrect output when Time#usec returns<br/>integer < 100000, because to_s doesn't add leading zeros.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6823845aa3f657675da859176bf2922e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1756', 'title': u'Fix xmlschema output with fraction_digits >0 '}, {'body': u'This version includes the fixes for Time/DateTime range detection across the various Ruby platforms (32bit vs 64bit, 1.8 vs 1.9, *NIX vs Windows)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c9f60c0cb1d941fa8e93bbfcb907c27e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1752', 'title': u'Bump mysql2 to 0.3.6'}, {'body': u'mysql2 0.3.6 solves a bug introduced in 0.3.5 described here: https://github.com/brianmario/mysql2/issues/182', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1751', 'title': u'Bump to mysql2 0.3.6'}, {'body': u"Unsafe methods are always calling #to_str when called so the object returned is a new string object.<br/><br/>If the original method doesn't return a string, like gsub with only one argument though, it'll fail as there's no to_str method.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1750', 'title': u"Calling unsafe methods which don't return a string shouldn't fail"}, {'body': u"It's fixed in master but still broken there.<br/>See #1745", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1749', 'title': u'Cherry pick changes to simple_format from master'}, {'body': u"I've noticed code duplicates in Select tag helpers when was working on some stuff before.<br/><br/>So, This is just cosmetic change to make things look better.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1748', 'title': u'Select tag helpers: remove some code dups'}, {'body': u'As we discussed here:<br/>https://github.com/rails/rails/pull/1334#issuecomment-1247794<br/><br/>For production - leave the default `:logger`.<br/>Set `:strict` for test and dev.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1746', 'title': u'Rails app template: setup different mass assignment sanitizer for envs'}, {'body': u'I added default values to result of instance variables - it removed warnings about using uninitialized instant variables from test logs:<br/><br/>```<br/>/Users/gazay/code/rails/activesupport/lib/active_support/core_ext/string/output_safety.rb:154: warning: instance variable @dirty not initialized<br/>/Users/gazay/code/rails/activerecord/lib/active_record/base.rb:1858: warning: instance variable @attributes not initialized<br/>```<br/><br/>but not affected logic', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1741', 'title': u'Added default values for remove uninitialized warnings'}, {'body': u'Code taken from Rails 3 branch. Now OrderedHash merging can accept a block.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/66bb6f8eee55156c9afbc62d178eb342?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1740', 'title': u'Fix OrderedHash merging with block given.'}, {'body': u"When you run 'rake test' there are several warnings about mismatched indentations at 'end' and 'def' or 'module' etc:<br/><br/>```<br/>/Users/gazay/code/rails/actionpack/lib/action_dispatch/routing/mapper.rb:90: warning: mismatched indentations at 'end' with 'def' at 69<br/>/Users/gazay/.rvm/gems/ruby-1.9.2-p180/gems/nokogiri-1.4.4/lib/nokogiri/css/generated_parser.rb:675: warning: mismatched indentations at 'end' with 'module' at 11<br/>```<br/>So the problem was in nokogiri gem 1.4.4 version, i found it was fixed (https://github.com/tenderlove/nokogiri/commit/f1e3133b0c689e619964217e2a5b3e055bbb2cc7) and bumped version to 1.4.5 stable. I suggest change version in Gemfile to 1.4.5, it solves this problem.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d52cc558a29696bb722492259f3f52de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1738', 'title': u'Fix several warnings: change version of nokogiri gem'}, {'body': u'Patch for #1735 / #1458 - [3.1.0.rc1] App plugins initialized before engines and plugins inside engines.<br/><br/>It seems that plugins inside a Rails 3.1 application proper (i.e. in /vendor/plugins) are initialized before engines and plugins inside engines.<br/><br/>After some debugging, I found the culprit in Rails::Application::Railties#all:<br/><br/>```ruby<br/>  def all(&block)<br/>    @all ||= railties + engines + super<br/>    @all.each(&block) if block<br/>    @all<br/>  end<br/>```<br/><br/>The call to super here implicitly passes the &block argument, which has the unfortunate side-effect of adding the plugin initializers first (in front of other railties and engines) in the case of Rails::Engine#initializers:<br/><br/>```ruby<br/>def initializers<br/>  initializers = []<br/>  railties.all { |r| initializers += r.initializers }<br/>  initializers += super<br/>  initializers<br/>end<br/>```<br/><br/>The solution here is to replace the super call with a call to #plugins.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1737', 'title': u'Patch for [3.1.0.rc1] App plugins initialized before engines and plugins inside engines'}, {'body': u'Patch for #1458 - [3.1.0.rc1] App plugins initialized before engines and plugins inside engines<br/><br/>It seems that plugins inside a Rails 3.1 application proper (i.e. in /vendor/plugins) are initialized before engines and plugins inside engines.<br/><br/>After some debugging, I found the culprit in Rails::Application::Railties#all:<br/><br/>```ruby<br/>  def all(&block)<br/>    @all ||= railties + engines + super<br/>    @all.each(&block) if block<br/>    @all<br/>  end<br/>```<br/><br/>The call to super here implicitly passes the &block argument, which has the unfortunate side-effect of adding the plugin initializers first (in front of other railties and engines) in the case of Rails::Engine#initializers:<br/><br/>```ruby<br/>def initializers<br/>  initializers = []<br/>  railties.all { |r| initializers += r.initializers }<br/>  initializers += super<br/>  initializers<br/>end<br/>```<br/><br/>The solution here is to replace the super call with a call to #plugins.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1735', 'title': u'Patch for #1458 - [3.1.0.rc1] App plugins initialized before engines and plugins inside engines'}, {'body': u"[3.1.0.rc1] Plugins inside engines not eager-loaded properly and their<br/>rake tasks ignored<br/><br/>Working with the new support for plugins inside engines in Rails 3.1,<br/>I found that certain things that work for regular plugins don't work<br/>for these new nested plugins. In particular, these methods in<br/>Rails::Engine don't seem to understand that an engine could have<br/>nested plugins:<br/><br/>#load_tasks<br/>#load_generators<br/>#load_console<br/>#eager_load!<br/><br/>A solution which worked out for me is to move the calls to<br/>railties.all { ... } from the overriding methods in Rails::Application<br/>into Rails::Engine.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1733', 'title': u'Cherry-picking patch for https://github.com/rails/rails/issues/1460 from 3-1-stable to master'}, {'body': u'Replace dev.rubyonrails.com plugin url with a dummy url', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1731', 'title': u'Replace dev.rubyonrails.com plugin url with a dummy url'}, {'body': u"In #underscore gsub! is used to modify string, when the string is a SafeBuffer instance an exception will be raised. It cause errors when you use radio_button with translated string:<br/><br/>    ActionView::Template::Error (Cannot modify SafeBuffer in place):<br/>        25:     <%= f.radio_button :signup_type, t('site.account_signup_close_label') %><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8853f712852b03ba6646b59b1723f44d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1729', 'title': u"Fix underscore can't work with html safe string"}, {'body': u'Fixes merge errors that crept in to the active record validations guide while resolving conflicts.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1728', 'title': u'Doc merge fixes (3-1-stable)'}, {'body': u'The original version matchs as follows<br/><br/>* /foo<br/>* /foo/bar<br/>* /foo/bar/1<br/>* /foo.json  (Routing Error)<br/>* /foo/bar.json  (Routing Error)<br/>* /foo/bar/1.json<br/><br/>This pull request corrects these two routing erros.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c38fd9074fb072551c0ff80ccd90d24e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1727', 'title': u'Improve the legacy wild controller route in app templates'}, {'body': u'Fixes the failures. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1726', 'title': u'Mysql bump to 0.3.5'}, {'body': u'Fixes timezone issue. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1725', 'title': u'Bump mysql2 to 0.3.5'}, {'body': u'Users can disable this by setting `cast: false` in database.yml', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c9f60c0cb1d941fa8e93bbfcb907c27e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1724', 'title': u're-enable eager-casting for mysql2'}, {'body': u'The `select` form helper generates a select tag with options from the given `[key, value]` pairs. This works only for "flat" collections, but I\'d like to have it work with nested ones as well. An example:<br/><br/>    @post = Post.new<br/>    select("post", "origin", {<br/>      "Africa" => [["South Africa", "sa"], ["Somalia", "so"]],<br/>      "Europe" => [["Denmark", "dk"], ["Ireland", "ie"]],<br/>    })<br/><br/>Currently, `select` uses "Africa" and "Europe" as the content of the option tags, and calls `to_s` on the arrays for the values. With this pull request, the result would instead be something like this:<br/><br/>    <select id="post_origin" name="post[origin]"><br/>      <optgroup label="Africa"><br/>        <option value="sa">South Africa</option><br/>        <option value="so">Somalia</option><br/>      </optgroup><br/>      <optgroup label="Europe"><br/>        <option value="dk">Denmark</option><br/>        <option value="ie">Ireland</option><br/>      </optgroup><br/>    </select><br/><br/>Internally, the choices are simply handed to `grouped_options_for_select` if the collection is more than one level deep.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc59401781a26b10f5d4fc5b758fb3b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1722', 'title': u'Make "select" helper handle nested collections'}, {'body': u'This cherry-picks baf2a9c for 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8dbf316d36ff66aad4869a4fc3cfbd37?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1719', 'title': u'Fix generated JavaScript for mountable engine in 3-1-stable'}, {'body': u'Same as #1672 but applied to 3-1-stable branch.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8dbf316d36ff66aad4869a4fc3cfbd37?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1716', 'title': u'Namespace engine assets for 3-1-stable'}, {'body': u'cc @pixeltrix @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1714', 'title': u'Cherry picking encoding for 3.0'}, {'body': u'cc @pixeltrix @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1713', 'title': u'Cherry picking encoding for 3.1'}, {'body': u'cc @pixeltrix @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1712', 'title': u'Cherry-picking encoding for 3.1'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ce4329d100ba2a61634d7e6fb0147ea0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1711', 'title': u'Use assert_equal instead of assert in uploaded file test.'}, {'body': u"Quite often I need to use pluralize, but don't always want the number coming back in the resulting string as it's being combined with some other form of UI.<br/><br/>This commit adds an additional defaulted param that allows you to state that you only require the pluralized word back.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f8b75a99bfbe0583cc9b6ca57c899031?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1710', 'title': u'Add the ability to pluralize only a word, without the count'}, {'body': u'cc @pixeltrix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1709', 'title': u'Simplify to only one condition'}, {'body': u'Following 0ac0d7a0f03da3d08440c74477d653622d61a26e<br/><br/>cc @pixeltrix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1708', 'title': u'Simplify to only one condition'}, {'body': u'See #1704 for the detailed bug report.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1707', 'title': u'Allow last argument to be a boolean in memoized methods'}, {'body': u'One-sentence addition to the comments around status codes and redirect_to.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a58e27f1ad31899d3b4385b0d7689913?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1705', 'title': u'Documentation tweak - add a helpful reminder to redirect_to'}, {'body': u'Apparently when you pass in "true" as the last argument of a memoized method that argument is taken away and you get a "ArgumentError: wrong number of arguments" error.  When I initially ran across this my arguments were optional so it was much more difficult to trace because the value was being set to nil when "true" was passed in.<br/><br/>I\'ve written a failing test, but I\'m not sure how to proceed as removing the "args.last == true" check on line 82 of memoizable.rb would probably break other people\'s code', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1888e77eb90dd84da79b94ce50b6e670?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1704', 'title': u'Memoized methods break when value of last argument is true'}, {'body': u'As of mysql2 0.2.8 and 0.3.3, eager-casting down in C can be disabled.<br/><br/>This should help performance by allowing ActiveRecord to lazily cast row values upon access (like the mysql adapter is doing). My rudimentary benchmarks show it performing about on-par with the mysql adapter, but has the added benefit of being fully thread-safe, even in Ruby 1.8 (and 1.9 obviously).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c9f60c0cb1d941fa8e93bbfcb907c27e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1702', 'title': u"Turn off mysql2's eager-casting"}, {'body': u"It seems that plugins inside a Rails 3.1 application proper (i.e. in /vendor/plugins) are initialized **before** engines and plugins inside engines.<br/><br/>After some debugging, I found the culprit in `Rails::Application::Railties#all`:<br/><br/>      def all(&block)<br/>        @all ||= railties + engines + super<br/>        @all.each(&block) if block<br/>        @all<br/>      end<br/><br/>The call to `super` here implicitly passes the `&block` argument, which has the unfortunate side-effect of adding the plugin initializers **first** (in front of other railties and engines) in the case of `Rails::Engine#initializers`:<br/><br/>    def initializers<br/>      initializers = []<br/>      railties.all { |r| initializers += r.initializers }<br/>      initializers += super<br/>      initializers<br/>    end<br/><br/>One solution that works here is to change how `super` is called, e.g. this works:<br/><br/>      def all(&block)<br/>        @railties_plus_engines ||= railties + engines<br/>        @railties_plus_engines.each(&block) if block<br/>        @railties_plus_engines + super<br/>      end<br/><br/>(Here I'm deliberately not memoizing the result so that `super` is always called, and that the block is run against the plugins **after** it has been run against the railties and engines first.)<br/><br/>This is one of the issues blocking our efforts to migrate to Rails 3.1.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1458', 'title': u'[3.1.0.rc1] App plugins initialized before engines and plugins inside engines'}, {'body': u'Working with the new support for plugins inside engines in Rails 3.1, I found that certain things that work for regular plugins don\'t work for these new nested plugins. In particular, these methods in `Rails::Engine` don\'t seem to understand that an engine could have nested plugins:<br/><br/>* #load_tasks<br/>* #load_generators<br/>* #load_console<br/>* #eager_load!<br/><br/>A solution which worked out for me is to move the calls to `railties.all { ... }` from the overriding methods in `Rails::Application` into `Rails::Engine`, i.e. changing `Rails::Engine` to look like this:<br/><br/><br/>    def load_tasks<br/>      railties.all { |r| r.load_tasks }<br/>      super<br/>      paths["lib/tasks"].existent.sort.each { |ext| load(ext) }<br/>    end<br/>    <br/>    def load_generators<br/>      railties.all { |r| r.load_generators }<br/>      super<br/>    end<br/><br/>    def load_console(sandbox=false)<br/>      railties.all { |r| r.load_console(sandbox) }<br/>      super<br/>    end<br/>    <br/>    def eager_load!<br/>      railties.all(&:eager_load!)<br/>      <br/>      config.eager_load_paths.each do |load_path|<br/>        matcher = /\\A#{Regexp.escape(load_path)}\\/(.*)\\.rb\\Z/<br/>        Dir.glob("#{load_path}/**/*.rb").sort.each do |file|<br/>          require_dependency file.sub(matcher, \'\\1\')<br/>        end<br/>      end<br/>    end<br/><br/>...and `Rails::Application` to look like this (after also removing `eager_load!` entirely):<br/><br/><br/>    def load_tasks<br/>      initialize_tasks<br/>      super<br/>      self<br/>    end<br/><br/>    def load_generators<br/>      initialize_generators<br/>      super<br/>      self<br/>    end<br/><br/>    def load_console(sandbox=false)<br/>      initialize_console(sandbox)<br/>      super<br/>      self<br/>    end<br/><br/>(Note also the removal of the `()` from `load_console`\'s call to `super` so as to preserve the sandbox argument,)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cbac8261deee7dc43c44e2fd62af9c14?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1460', 'title': u'[3.1.0.rc1] Plugins inside engines not eager-loaded properly and their rake tasks ignored'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1701', 'title': u'Changelog files update for 3-0-stable'}, {'body': u'Please see description of issue #1657', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7c33b1ba3982f3573b526154736f43d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1700', 'title': u'Fix for issue #1657'}, {'body': u"The full benefit of asset_host configuration is only achieved when the configuration is carried through the stylesheet where most of the images are referenced. Without this ability, the assets are locked to whatever asset host served the stylesheet request.<br/><br/>This patch changes the behavior of asset_path so that it will generate a full url adhering to project's asset_host configuration when it is set.<br/><br/>In the past, rails has used request inspection to to avoid mixed content warnings, however, with precompiled assets this is no longer possible. Nor is it necessary (and in fact it's harmful to cached pages) because we can serve protocol relative urls instead. Protocol relative urls are now the default with this patch.<br/><br/>Compass has exposed this functionality for several years now so this strategy is battle-tested. After this patch lands, I will be able to update sass-rails so that it exposes syntactic sugar for accessing the url helpers and update compass so that rails users who use compass have a single source for their asset configuration.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/723ee972f9e5078aeda85cdf0db3f3c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1699', 'title': u'Asset urls'}, {'body': u'removed warning<br/><br/>/Users/pankajbagwan/code/rails/actionpack/lib/action_dispatch/routing/mapper.rb:90: warning: mismatched indentations', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/895c70a2152c65e54a966c9ba535b61e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1698', 'title': u'Removed warnings from while running tests in Ruby 1.9.2'}, {'body': u'In a has_many association, the primary key may be a method (the doc says: "Specify the **method** that returns the primary key used for the association. By default this is id."). It works fine except when the association is eager loaded. In this case it uses the nonexistent attribute and loads an empty list of records.<br/><br/>This fix is based on 3-0-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/352f3b19dfbfc17e7f7498dc2f658cac?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1696', 'title': u'Eager loading has_many association when primary_key is a method'}, {'body': u' # Schema: Account(name:string, phrase:string)<br/> class Account < ActiveRecord::Base<br/>  has_secure_password :password, :phrase<br/> end<br/><br/> account = Account.create<br/> account.errors[:phrase]  # => ["can\'t be blank"]<br/>\t<br/> account = Account.new(:name => "david", :password => "", :password_confirmation => "nomatch")<br/> account.save  # => false, password required<br/> account.password = "mUc3m00RsqyRe"<br/> account.save  # => false, confirmation doesn\'t match<br/> account.password_confirmation = "mUc3m00RsqyRe"<br/> account.save  # => true<br/> account.authenticate("notright")  # => false<br/> account.authenticate("mUc3m00RsqyRe")  # => account <br/> Account.find_by_name("david").try(:authenticate, "notright") # => nil <br/> Account.find_by_name("david").try(:authenticate, "mUc3m00RsqyRe") # => account', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9742692d8f4eb9997301de35395e5460?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1694', 'title': u'Add support to custom field on has_secure_password'}, {'body': u"I have encountered (probably) the following problem in a 2.3.12 app:<br/><br/>We have a route with `:method => :post`<br/><br/>In our controller test, calling `post action, \u2026` fails unless I explicity set a `:format => :post` parameter although that should have been inferred by the `assign_parameters` method.<br/><br/>The reason for this is, as far as I figured out:<br/>`assign_parameters` calls `Route#extra_keys`<br/>_`extra_keys` calls `RouteSet#generate_extras`<br/>__which in turn calls `route_generate_raw`<br/>__which doesn't return a path<br/>_which causes `RouteSet#generate` to raise a RoutingError<br/><br/>I'm not sure where exactly to fix this problem.<br/>I'd simply add a line or two to `assign_parameters` that adds the `:format` to the options but I'm happy to implement other suggestions.<br/><br/>See issue #1692", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1172ffd2b6628b416914fa518dae8f19?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1693', 'title': u'Failing Test Case for Issue #1692 Routes not found in TestRequest#assign_parameters'}, {'body': u'Added instance_accessor: false to Module#mattr_accessor (similar to b12c2e4ebb85170467ac250219557d631c842d8d which did this for Class#cattr_accessor)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1690', 'title': u'Added instance_accessor: false to Module#mattr_accessor'}, {'body': u'See related issue : #869', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1689', 'title': u"Encode the uploaded file's name in utf8 - Closes #869"}, {'body': u"The full benefit of asset_host configuration is only achieved when the configuration is carried through the stylesheet where most of the images are referenced. Without this ability, the assets are locked to whatever asset host served the stylesheet request.<br/><br/>This patch adds a new helper asset_url that will generate a full url adhering to project's asset_host configuration. <br/><br/>In the past, rails has used request inspection to to avoid mixed content warnings, however, with precompiled assets this is no longer possible. Nor is it necessary (and in fact it's harmful to cached pages) because we can serve protocol relative urls instead. Protocol relative urls are now the default with this patch.<br/><br/>Compass has exposed this functionality for several years now so this strategy is battle-tested. After this patch lands, I will be able to update compass so that rails users who use compass have a single source for their asset configuration.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/723ee972f9e5078aeda85cdf0db3f3c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1688', 'title': u'asset_url helper'}, {'body': u'This is a patch for https://github.com/rails/rails/issues/815<br/><br/>Given:<br/>class Tree < ActiveRecord::Base<br/>has_many :birds<br/>end<br/><br/>class Bird < ActiveRecord::Base; end<br/>class Robin < Bird; end<br/><br/>Tree.birds.create(:type => "Robin") will create a robin.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c58394486ebc197a62fa31dde80fd336?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1686', 'title': u'Allow STI building on has_many associations'}, {'body': u'If I define my unit tests declaratively and use characters that are not alphanumeric, the Declarative module tries to generate a test method with an invalid name.  For example:<br/><br/>test "method\'s return value" do<br/>   # something<br/>end<br/><br/>Generates a test method called "s_return_value". This sucks when the tests run (especially in an IDE) because the test name displayed doesn\'t make any sense.  It also leads to some tricky bugs.  If I have another test method in the same suite like this:<br/><br/>test "other method\'s return value" do<br/>   # something<br/>end<br/><br/>The Declarative module has now blown away the first test method without telling me.  Gross.<br/><br/>This change MIME-encodes any nonprintable characters in the test method name, avoiding this issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6614b772d3dbb18ed0b7d3b91be20eea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1684', 'title': u'Fix problem with tests declared with nonalphanumeric characters in their name'}, {'body': u'Changed http://rubyonrails.com to http://rubyonrails.org in dependencies.rb and other files.<br/><br/>/cc @pixeltrix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/895c70a2152c65e54a966c9ba535b61e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1679', 'title': u'Changed http://rubyonrails.com to http://rubyonrails.org in dependencies.rb and other files.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1676', 'title': u'Remove "is_assed" with something more meaningful'}, {'body': u'Only emit deprecation warning if there\xb4s a Hash object under the keys "activerecord.models" and "activerecord.attributes". See issue #1662', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7c33b1ba3982f3573b526154736f43d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1675', 'title': u'Fix for startup problems due to deprecation warning on nested models'}, {'body': u"This changes the `plugin new --mountable` generator so it places javascript/stylesheet/image engine assets in their own namespaced directory so they don't conflict with those in the main app. Instead of `app/assets/javascripts/application.js` it places it in `app/assets/javascripts/ENGINE_NAME/application.js`. It also changes the `application.html.erb` layout file to use the new path.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8dbf316d36ff66aad4869a4fc3cfbd37?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1672', 'title': u'Namespace engine assets'}, {'body': u"As linecache updated to 0.45. It breaks the build for 1.8.7. <br/><br/>They have added <br/><pre><br/>require 'require_relative'<br/>require_relative 'tracelines'<br/>require_relative 'version'<br/></pre><br/><br/>So the build gets failed with this version. May be we can create a issue with them to fix it in new version. But right now to run the Build with 1.8.7 we need to load linecache 0.43<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1671', 'title': u'Using linecache 0.43 for 1.8 build. '}, {'body': u'Under thin, QueryCache is leaking connections.<br/><br/>This is caused by the fact that the thread that runs the `QueryCache::BodyProxy#close` method is not the same as the thread that executes `QueryCache#call`.  A connection is checked out within `QueryCache#call`; this connection becomes orphaned, while a new connection is checked out within `#close` when the`clear_query_cache` call is made.<br/><br/>This patch prevents the connection checked out within `QueryCache#call` from being orphaned by creating an identifier that is stored within a thread local and used within `ConnectionPool` to uniquely identify the connection.  This identifier is passed to `BodyProxy` at construction time and pushed into the thread that ultimately becomes responsible for the `clear_query_cache` call.<br/><br/>The connection is subsequently checked back in as expected at the end of the request lifecycle, plugging the leak.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1670', 'title': u'QueryCache/ConnectionPool thread fix'}, {'body': u'Changed http://rubyonrails.com to http://rubyonrails.org in changelog and other files.<br/>/cc @josevalim removed other commits', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/895c70a2152c65e54a966c9ba535b61e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1668', 'title': u'Changed http://rubyonrails.com to http://rubyonrails.org in plugin.rb and other files.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/895c70a2152c65e54a966c9ba535b61e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1666', 'title': u'Changed http://rubyonrails.com to  http://rubyonrails.org in changelog and other files.'}, {'body': u'Just extracted the creation of the Relation object to a separated method, so we can easily use a subclassed relation.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4ba2711791e20a0e28ba675c5bf9757d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1665', 'title': u'Support for custom Relation classes'}, {'body': u'The first step is the most difficult one :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2c81e6be1662df5dad59a69c841440c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1664', 'title': u'The first step is the most difficult one :)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/895c70a2152c65e54a966c9ba535b61e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1659', 'title': u'Added ternary operation and more readable code.'}, {'body': u'removed warnings from actionpack.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/895c70a2152c65e54a966c9ba535b61e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1655', 'title': u'Removed warnings from ActionPack'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1654', 'title': u'removed duplicate code in tests'}, {'body': u'removed duplicate code', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1653', 'title': u'Refactor test cases'}, {'body': u'Implemented support for usage of alternative conventions for namespaced models in error messages. This solves issue #1402 completely. <br/><br/>This means you can write your model errors like this:<br/><br/><br/>en:<br/>  activemodel:<br/>    errors:<br/>      models:<br/>        blog:<br/>          post:<br/>            attributes:<br/>              title:<br/>                blank: "can\'t be blank - dot notation"<br/>              header:<br/>                blank: "can\'t be blank - dot notation"<br/>        blog/post:<br/>          attributes:<br/>            title:<br/>              blank: "can\'t be blank - slash notation"<br/>            editor:<br/>              blank: "can\'t be blank - slash notation"', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7c33b1ba3982f3573b526154736f43d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1650', 'title': u'Implemented support for usage of alternative conventions for namespaced models in error messages. '}, {'body': u'These are template changes. As i forgot that time to add in 3-0-stable branch. By these changes user will be able to generate application for jdbc* stuff. <br/><br/>As Activerecord-jdbc-adapter is not is good shape with 3.1.rc* so these will help who using jruby + rails. They can use 3-0-*. <br/><br/>And also included database..rake file changes to allow database operation for jdbc-*<br/><br/>Not be able to cherry-pick from master as file changed in master.<br/><br/>Cheers, <br/>Arun', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1649', 'title': u'Jruby 3 0 stable'}, {'body': u'This is for Issue #1366', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1648', 'title': u'Inflector support for acronyms (Issue #1366)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1647', 'title': u'Make tests stronger, cleaner and slimmer'}, {'body': u'This fixes ```warning: assigned but unused variable - result```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1644', 'title': u'Remove unused variable causing warning in 1.9.3'}, {'body': u"* Make sure that we don't perform in-place mutation on SafeBuffer string<br/>* Update missing CHANGELOG", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1642', 'title': u'Render inline fix for master'}, {'body': u"* Make sure that we don't perform in-place mutation on SafeBuffer string<br/>* Update missing CHANGELOG", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1641', 'title': u'Render inline fix for 3-1-stable'}, {'body': u"* Cherry-pick number_helpers fix from 3-0-stable<br/>* Make sure that we don't perform in-place mutation on SafeBuffer string<br/>* Update missing CHANGELOG", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1640', 'title': u'Render inline fix for 3-0-9'}, {'body': u"* Make sure that we don't perform in-place mutation on SafeBuffer string<br/>* Update missing CHANGELOG", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1639', 'title': u'Render inline fix for 3-0-stable'}, {'body': u"This patch allows to mix multiple columns and multiple aggregate functions in the same query<br/><br/>Examples:<br/><br/><pre><br/># SELECT SUM(age) FROM people<br/>Person.sum('age') => 4562<br/><br/># SELECT SUM(age), SUM(weight) FROM people<br/>Person.sum(['age', 'weight']) => [4562, 16721]<br/><br/># SELECT AVG(age), AVG(weight) FROM people<br/>Person.calculate(:average, [:age, :weight]) => [35, 170]<br/><br/># SELECT AVG(age), SUM(age) FROM people<br/>Person.calculate([:average, :sum], :age) => [35, 4562]<br/><br/># SELECT AVG(age), SUM(weight) FROM people<br/>Person.calculate([:average, :sum], [:age, :weight]) => [35, 16721]<br/></pre><br/><br/>This is my first contribution to rails, hope it helps.<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f455ec9bbfad5ee016547d45810e4725?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1637', 'title': u'Multiple aggregates'}, {'body': u"The use case for the default abstract adapter's #table_exists? method is to give adapters a chance to return true in special cases where the core #tables does not include a name. Common use cases are for views and tables in other schemas. The connection pool should give a connection to respond true to with this matching name. If this was not done, I get errors in the SQL Server Adapter where column objects are not cached and respond properly for either the entire table or specific attribute of columns for said table, like @primary. This fixes that.<br/><br/>I did not include a test because this looked to be too low level white-box testing and I could not see any parallel in the connection_pool_test.rb file All tests for MySQL, PostgreSQL, and SQLite3 still pass with this change.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1636', 'title': u"Allow the connection pool's #table_exists? method to give the connections"}, {'body': u"The use case for the default abstract adapter's #table_exists? method is to give adapters a chance to return true in special cases where the core #tables does not include a name. Common use cases are for views and tables in other schemas. The connection pool should give a connection to respond true to with this matching name. If this was not done, I get errors in the SQL Server Adapter where column objects are not cached and respond properly for either the entire table or specific attribute of columns for said table, like @primary. This fixes that.<br/><br/>I did not include a test because this looked to be too low level white-box testing and I could not see any parallel in the connection_pool_test.rb file All tests for MySQL, PostgreSQL, and SQLite3 still pass with this change.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1635', 'title': u"Allow ConnectionPool's #table_exists? method to give the connection's #table_exists? method a chance."}, {'body': u'This patch includes a number of improvements to make the PostgreSQL adapter a little more schema aware without breaking existing functionality (that I\'ve discovered so far)<br/><br/>* table_exists? scoped by schema search path unless schema is explicitly named. Added tests and doc to clarify the behaviour (NB: similar to https://github.com/rails/rails/pull/1607 )<br/>* extract_schema_and_table tests and implementation extended to cover all cases<br/>* primary_key does not ignore schema information<br/>* add current_schema and schema_exists? methods<br/>* more robust table referencing in insert_sql and sql_for_insert methods<br/>* makes table_exists? compatible with views (allowing meta_search to work with views amongst other things)<br/><br/>As a by-product of this (and in fact my main motivation here), is it enables independent migrations into separate schema in the same database and gets us part way down the road to "out of the box" compatibility with schema-partitioning techniques for multi-tenancy.<br/><br/>It also largely addresses https://github.com/rails/rails/issues/859 and https://github.com/rails/rails/issues/896<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/69f504d0e0c2c7d7b7215f488b028edd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1632', 'title': u'Improving PostgreSQL adapter schema-awareness'}, {'body': u"Currently, ```rails runner``` when run without any options shows ```Run 'script/rails -h' for help.``` which is not in line with other commands which display the usage help information when run without any options. <br/><br/>Fixed it to make it consistent and display the usage information when run without options.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1631', 'title': u'rails runner without any options should show usage information'}, {'body': u'Same as https://github.com/rails/rails/pull/1567<br/><br/>Had to cherry-pick one other commit.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e6946821c84c934c60a567db6d7a164a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1630', 'title': u'Ensure engine migrations are copied in correct sequence for 3.1'}, {'body': u'For ruby-1.9.2<br/><pre><br/>rails/railties git:(3-0-stable)* ruby -I test test/generators/app_generator_test.rb --name="/test_application_name_is_detected_if_it_exists_and_app_folder_renamed/"<br/>Loaded suite test/generators/app_generator_test<br/>Started<br/>"/Users/arun/checkouts/rails/railties/test/fixtures/tmp/myapp" # Before FileUtils.mv (Dir.pwd)<br/>"/Users/arun/checkouts/rails/railties/test/fixtures/tmp/myapp_moved" # After FileUtils.mv (Dir.pwd)<br/>.<br/>Finished in 0.094365 seconds.<br/><br/>1 tests, 4 assertions, 0 failures, 0 errors, 0 skips<br/></pre><br/><br/>For Jruby-1.6.2<br/><pre><br/>rails/railties git:(3-0-stable)* ruby -I test test/generators/app_generator_test.rb --name="/test_application_name_is_detected_if_it_exists_and_app_folder_renamed/"<br/>Loaded suite test/generators/app_generator_test<br/>Started<br/>"/Users/arun/checkouts/rails/railties/test/fixtures/tmp/myapp" # Before FileUtils.mv (Dir.pwd)<br/>"/Users/arun/checkouts/rails/railties/test/fixtures/tmp/myapp" # After FileUtils.mv (Dir.pwd)<br/>E<br/>Finished in 0.53 seconds.<br/><br/></pre><br/><br/>It\'s changing the @original_wd for AppGenerator. That cause error in Tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1628', 'title': u'Jruby dir pwd'}, {'body': u'Adding back support for sass-rails CSS compressor with config.assets.css_compressor = :scss<br/><br/>Fix #1578 and #1619<br/><br/>cc @chriseppstein: please, can you review this? :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1626', 'title': u'Adding back Sass compressor'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1625', 'title': u'Three minor fixes to tests'}, {'body': u'(NB: so far not a viable fix .. still looking for solutions). <br/>Was only going to be partial anyway:<br/>* $1, $2, $`, $&, and $\u2019 now available within a block passed to SafeBuffer#gsub<br/>* documented limitation that they are not available after the SafeBuffer#gsub call<br/>See GH#1555 for the original issue report', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/69f504d0e0c2c7d7b7215f488b028edd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1622', 'title': u'Fix for SafeBuffer#gsub and magic match globs'}, {'body': u"The SQLite adapter currently doesn't query the sqlite_temp_master table, so any temporary tables created are never found. This patch fixes it by performing a UNION on the sqlite_master and sqlite_temp_master tables.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edb76e4c5a37b46bda604e84ba685055?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1616', 'title': u'Fix SQLite adapter so that it correctly fetches the names of temporary tables.'}, {'body': u"Remove deprecation warning for ActiveRecord::Errors#generate_message. This is the same API that ActiveModel ended up using and that won't be changing.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1615', 'title': u'Remove deprecation warning in ActiveRecord::Errors#generate_message'}, {'body': u"The API stuck around for ActiveModel. Doesn't make sense to deprecate this method in AR 2.x", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1614', 'title': u'Remove deprecation warning for ActiveRecord::Error#generate_message'}, {'body': u'As suggested by @tenderlove and @amatsuda here: https://github.com/rails/rails/issues/1598<br/><br/>I used the same rdoc version as in the Gemfile for Rails. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/03b2f61afde989e8e9dee2bcb8472868?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1612', 'title': u'Adding rdoc dependency to fix issue #1598'}, {'body': u'Make sure `escape_javascript` return `SafeBuffer` if the incoming argument is already html_safe', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1611', 'title': u'Make sure `escape_javascript` return `SafeBuffer` if the incoming argumen'}, {'body': u'Make sure `escape_javascript` return `SafeBuffer` if the incoming argument is already html_safe', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1610', 'title': u'Make sure `escape_javascript` return `SafeBuffer` if the incoming argumen'}, {'body': u'Make sure `escape_javascript` return `SafeBuffer` if the incoming argument is already html_safe', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1609', 'title': u'Make sure `escape_javascript` return `SafeBuffer` if the incoming argumen'}, {'body': u'MemcacheStore: deserialize the entry reading from local_cache when using raw.<br/><br/>When with :raw => true and storing the Marshal.dump(obj) into the memcached, Rails.cache.read(key) will return the the serialization data. MemCacheStore should try to deserialize the entry before returning the result.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/83c8cca11558f32207645ca270ae8475?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1608', 'title': u'MemcacheStore: deserialize the entry reading from local_cache when using '}, {'body': u"modified table_exists? in the postgresql adapter to always use the current search_path unless a explicit schema is specified.<br/><br/>Currently one cannot load schema.rb into a new (empty) postgresql schema. create_table forces a table drop which checks table_exists? first. This returns true even though the table doesn't actually exist in the current schema. Thus a PG error is thrown when it tries to drop the nonexistent table.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c0770bb3702176cbe1945a77dcbd09ec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1607', 'title': u'fix table_exists? in postgresql adapter to always use current search_path'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1606', 'title': u'remove unused UserController from test'}, {'body': u'It is my understanding that versions of Ruby prior to 1.9.2 are not supported in Rails 3.1+. This enforces that.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f9116c42e95b260f995680d301695a84?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1605', 'title': u'Bump the ruby version check to 1.9.2+'}, {'body': u"modified `table_exists?` in the postgresql adapter to always use the current search_path unless a explicit schema is specified.\n\nCurrently one cannot load `schema.rb` into a new (empty) postgresql schema.  `create_table` forces a table drop which checks `table_exists?` first.  This returns `true` even though the table doesn't actually exist in the current schema.  Thus a PG error is thrown when it tries to drop the nonexistent table.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c0770bb3702176cbe1945a77dcbd09ec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1604', 'title': u'fix table_exists? in postgresql adapter to always use current search_path'}, {'body': u'When trying to run rake test under jruby, Rake fails with "unknown task jdbcpostgresql" during db:test:purge. This simple fix works for me, and is similar to how the mysql task is implemented.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7da32f740e64088d2b07c277f3c1b94b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1603', 'title': u'Support JDBC PostgreSQL adapter under JRuby'}, {'body': u"* Use sorting in topological order (TSort) on all initializers found by Railtie but not on the ones from Rails::Application::Bootstrap and Rails::Application::Finisher. Bootstrap should always be the first and Finisher the last.\n* Move Rails::Initializable::Collection to Rails::Application. Now it's only needed there.\n\nThis fixes [issue 1587 reported by me yesterday](https://github.com/rails/rails/issues/1587).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/865192faed17824a4060b9345e9a5bf9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1602', 'title': u'Do not TSort Finisher and Bootstrap initializers'}, {'body': u'Currently rails wraps every operation on association collections in a transaction. This results in unecessary <code>BEGIN</code> <code>COMMIT</code> statements sent to the database server when working with unsaved records. In our application these unecessary statements caused about 70% of the whole database time.<br/><br/>Example:<br/><br/>```ruby<br/>f = Firm.new<br/>f.clients_of_firm << Client.new("name" => "New Client")<br/># Results in an empty transaction statement in the database:<br/># BEGIN<br/># COMMIT<br/>```<br/><br/>The same issue applies not only to <code>CollectionAssociation#concat</code> but also to <code>CollectionAssociation#replace</code> and <code>CollectionAssociation#delete_or_destroy</code>. This pull request fixes the issue by only wrapping the calls when the transaction is actually needed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5cf7402a65fd705228c748682654cac?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1601', 'title': u"Don't use transactions when working with unsafed records in associations"}, {'body': u'Fixes Issue #1596 and Issue #1576 with escape_javascript only working if raw(escape_javascript(js)) used. Actionpack tests re-run and all passed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ad80644177a4fa45c436de9593d22207?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1600', 'title': u'3.0.9rc1 fix escape_javascript'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1595', 'title': u"Don't reinitialize the arel_table unless the table_name changes"}, {'body': u"A line with foo && bar || baz is equivalent to foo ? bar : baz, but the latter is almost definitely easier to follow. I think it's a clear readability win to switch.<br/><br/>Comments welcome!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ad4631ddac812d2492978b531cadb387?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1593', 'title': u'Simplify boolean logic into ternary'}, {'body': u'This removes a couple of variables being assigned but never used.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1591', 'title': u'Fix "warning: assigned but unused variable" on AR tests'}, {'body': u'Magic encoding comment required in case schema includes utf-8 characters (e.g. for default column value).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd24adb5a3a430fed83a33ed552fe1b5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1590', 'title': u'Magic encoding comment required in case schema includes utf-8 characters '}, {'body': u'Secondly it seemed from the method that the intent was to test a case<br/>where layout was declared in a symbol and the method named mention in<br/>layout returns nil.<br/><br/>That case is already covered with class     class WithSymbolReturningNil .<br/><br/>Also the case of SymbolReturningString is covered with the class<br/>WithSymbol.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1588', 'title': u'class WithSymbolReturningString is not used anywhere in the test.'}, {'body': u"The ActiveSupport Date#freeze monkey-patch tries to call Date's metaprogrammed memoization logic every time you call Date#freeze. As a result, you can't do this:<br/><br/>```> Date.today.freeze.freeze<br/>TypeError: can't modify frozen object<br/>        from rails/activesupport/lib/active_support/core_ext/date/freeze.rb:22:in `instance_variable_set'<br/>        from rails/activesupport/lib/active_support/core_ext/date/freeze.rb:22:in `freeze'<br/>        from rails/activesupport/lib/active_support/core_ext/date/freeze.rb:20:in `each'<br/>        from rails/activesupport/lib/active_support/core_ext/date/freeze.rb:20:in `freeze'<br/>        from (irb):2```<br/><br/>The fix is simple; check to see if we've already frozen the object and don't run the memoization logic twice. Patch and unit test are attached.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db127d836e3d2a743f0558c0e32bc435?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1579', 'title': u'Date#freeze fails when called more than once in 1.8'}, {'body': u'The arel_table method already returns a new correct arel_table using the new table_name.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4ba2711791e20a0e28ba675c5bf9757d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1577', 'title': u'Instance variable not used.'}, {'body': u'Added different test cases for the issue. Not sure if the implementation of the fix is the best', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e4679be8d7d2484f9c0b8c4df71f4d2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1574', 'title': u'Fix #1571 ActiveRecord::Relation#order no longer works with arel ordering nodes'}, {'body': u"As per the [HTML 4.01 specification appendice](http://www.w3.org/TR/html401/appendix/notes.html#notes-line-breaks)<br/><br/>> SGML (see [ISO8879], section 7.6.1) specifies that a line break immediately following a start tag must be ignored, as must a line break immediately before an end tag. This applies to all HTML elements without exception.<br/><br/>I've added it only on the textarea because it's the only place where this has an impact (see more detailed description of the problem in #393 ).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1569', 'title': u"Add a newline after a textarea's opening tag. Closes #393"}, {'body': u"The fix in [cdf617e9aaf26f741bcae275ae675d9522d14496] was manipulating the test, and also *not* fixing all the issues. I've backported my [9e2e24265510572a6574d38ba2af83fdf734ab54] and confirm that the tests passed.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1568', 'title': u'Add proper fix to mail_to helper'}, {'body': u'Currently rake railties:install:migrations copies & re-numbers migrations from engines in a random order. This commit ensures that they are copied in the same sequence that they are required.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e6946821c84c934c60a567db6d7a164a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1567', 'title': u'Ensure engine migrations are copied in correct sequence'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1566', 'title': u'Update CHANGELOG to mention the new SafeBuffer change'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1565', 'title': u'Update CHANGELOG to mention the new SafeBuffer change'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1564', 'title': u'Update CHANGELOG to mention the new SafeBuffer change'}, {'body': u'Backport #1556 to `3-1-stable`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1562', 'title': u'Brought back alternative convention for namespaced models in i18n.'}, {'body': u'Port of #1558 to `3-1-stable`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1561', 'title': u'Make escape_javascript happy to handle SafeBuffers'}, {'body': u'Port of #1558 to `master`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1560', 'title': u'Make escape_javascript happy to handle SafeBuffers'}, {'body': u'If before_filter list was being called mistakenly then<br/>the test should fail. However test will not fail because<br/>second filter is assigning new values to @list. To truly<br/>test that first before_filter is not called when it should<br/>not be called then @list should not assigned value unconditionally.<br/><br/>This patch will make the test fail if first filter is called.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1559', 'title': u'Make test meaningful'}, {'body': u"Seems like no-one has pushed the fix yet, so here's my shot.<br/> <br/>This fixes escape_javascript to allow for the fact that gsub on SafeBuffer does not pass match variables $1, $2 etc to a block. See issue GH#1553<br/><br/>It doesn't fix the fact that gsub on a SafeBuffer still behaves differently from ruby core gsub when given a block (issue GH#1555)<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/69f504d0e0c2c7d7b7215f488b028edd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1558', 'title': u'Fix for issue 1553 - escape_javascript to support SafeBuffer strings'}, {'body': u'cc. @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1557', 'title': u'Multiple sources in sprockets helpers (backported from master)'}, {'body': u'See issue #1402<br/><br/>I did NOT implement the usage for "Namespaced::Model.new.errors.add(...)" as I am a bit short in time currently. I basically brought back the changes from "jfirebaugh" in commit "https://github.com/rails/rails/commit/5b8dbb0eee0a3277ef51e4bf31555ef27410272f". <br/><br/>This means you can write your yaml file like this:<br/><br/>...<br/>  activerecord:<br/>    models: <br/>      invoice:<br/>        item: "Invoice::Item dot notation"<br/>      invoice/item: "Invoice::Item slash notation"<br/>    attributes:<br/>      invoice/item:<br/>        name: "Invoice::Item.name slash notation"<br/>      invoice:<br/>        item:<br/>          name: "Invoice::Item.name dot notation"<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7c33b1ba3982f3573b526154736f43d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1556', 'title': u'Brought back alternative convention for namespaced models in i18n'}, {'body': u'Fix for Oracle adapter to count SELECT queries for assert_queries assertion<br/><br/>Needed just in 3-0-stable branch, query counting is refactored in 3-1-stable and master branches and do not need this patch anymore.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1554', 'title': u'Assert queries oracle fix for 3 0'}, {'body': u"There is very good work around for deselected check box in [FormHelper#check_box](http://api.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-check_box).  <br/><br/>I think it's good idea to use same work around for `select[multiple]` that have the same problem:<br/><br/>Server do not receive any value when all options got deselected. <br/><br/>So we will generate hidden input with the same name and blank value before each multiple select.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1552', 'title': u'Fixing select[multiple] html specification problem.'}, {'body': u'As a result test was failing on Oracle where ids are assigned by default from 1000', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1550', 'title': u'Do not hardcode :id as it was ignored by mass assignment filter'}, {'body': u'that is actually being called', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1549', 'title': u'test name should reflect the name of the method'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1548', 'title': u'remove unused class from test'}, {'body': u'This contain fixes, with some cherry-picking from master and some backport from 3-1-stable. All the test passed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1547', 'title': u'Fix ActionPack tests on `master`'}, {'body': u'This contain fixes, with some cherry-picking from master and some backport from 3-0-stable. All the test passed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1546', 'title': u'Fix failing ActionPack tests on 3-1-stable'}, {'body': u'Adapt [059692a74692917cf1d6bbe4fafe19211f363fe2] to make sure we perform correct cloning before manipulation on `OutputBuffer`.<br/><br/>This has been adapted from [823aa223efbac6ad4d31ea33402892267bb77cb4]. However, after the fragment rendering, `Builder` returns the `String` object instead of `ActionView::OutputBuffer`. Somehow the same procedure which was in [823aa223efbac6ad4d31ea33402892267bb77cb4] does not play nice with the String, and result in the fragment got lost.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1545', 'title': u'Fix test on 3-0-stable regarding SafeBuffer'}, {'body': u'Builder\'s output buffer is a String, not a OutputBuffer.  Make fragment_for smart enough to handle either.  \n\n@tenderlove is there a better way we should be handling this?\n\nAddresses failing test:\n\n    Loaded suite test/controller/caching_test\n    Started\n    ......................................F.........................\n    Finished in 1.059313 seconds.\n\n      1) Failure:\n    test_xml_formatted_fragment_caching(FunctionalFragmentCachingTest)\n        [test/controller/caching_test.rb:784:in `test_xml_formatted_fragment_caching\'\n         /home/cmeiklejohn/Repositories/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__\'\n         /home/cmeiklejohn/Repositories/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run\'\n         /home/cmeiklejohn/Repositories/rails/activesupport/lib/active_support/callbacks.rb:426:in `_run_setup_callbacks\'\n         /home/cmeiklejohn/Repositories/rails/activesupport/lib/active_support/callbacks.rb:81:in `send\'\n         /home/cmeiklejohn/Repositories/rails/activesupport/lib/active_support/callbacks.rb:81:in `run_callbacks\'\n         /home/cmeiklejohn/Repositories/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run\']:\n    <"<body>\\n  <p>Builder</p>\\n</body>\\n"> expected but was\n    <"<body>\\n</body>\\n">.\n\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1544', 'title': u'Failing fragment_for test with Builder'}, {'body': u'This makes test/template/url_helper_test.rb  happy.<br/><br/>Already in 3-0-stable. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1543', 'title': u'Fixed mailto for SafeBuffer#gsub already in 3-0-stable'}, {'body': u"Fix for #1540.  <br/><br/>Don't operate directly on the SafeBuffer.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1542', 'title': u"Don't operate on the safebuffer, operate on a string and convert."}, {'body': u'Fixed for SafeBuffer. Was throwing errors. Cannot modify SafeBuffer in place<br/><br/>Caching test are still failing don\'t know why response.body coming like this.<br/><br/><pre><br/>  1) Failure:<br/>test_fragment_caching(FunctionalFragmentCachingTest)<br/>    [/Users/arun/checkouts/rails/actionpack/test/controller/caching_test.rb:741:in `test_fragment_caching\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/callbacks.rb:434:in `_run_setup_callbacks\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run\']:<br/><"Hello\\nThis bit\'s fragment cached\\n"> expected but was<br/><"Hello\\nThis bit\'s fragment cachedThis bit\'s fragment cached\\n">.<br/><br/>  2) Failure:<br/>test_html_formatted_fragment_caching(FunctionalFragmentCachingTest)<br/>    [/Users/arun/checkouts/rails/actionpack/test/controller/caching_test.rb:773:in `test_html_formatted_fragment_caching\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/callbacks.rb:434:in `_run_setup_callbacks\'<br/>     /Users/arun/checkouts/rails/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run\']:<br/><"<body>\\n<p>ERB</p>\\n</body>\\n"> expected but was<br/><"<body>\\n<p>ERB</p><p>ERB</p>\\n</body>\\n">.<br/><br/></pre><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1541', 'title': u'Fixed for SafeBuffer '}, {'body': u"Fix for #1537.<br/><br/>Ensure that we can operate directly on the output buffer, and not the safe buffer as it prevents certain operations.<br/><br/>Let me know if there's a more elegant way to approach this, or if there's something you'd like to see changed.  This addresses test failures on 3.0.8 and master in actionpack/test/controller/caching_test.rb.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1539', 'title': u'Fragment caching needs to operate on the pure output, not the safebuffer.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1535', 'title': u"Prefer 'each' over 'for in' syntax."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/641db8edc1a8f38ee0d2e5b221d40bb9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1533', 'title': u'Fix typo'}, {'body': u"We'll update this dependency again before full release.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/723ee972f9e5078aeda85cdf0db3f3c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1528', 'title': u'Update project Gemfile to use the sass-rails rc'}, {'body': u'cc. @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1527', 'title': u'Rails::Server#app should be nice with Rack::URLMap (3.1 stable)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/839f782d9b8cace33c986f15435f493e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1523', 'title': u'rafactored the regex related code in the mapper class '}, {'body': u'Hi.<br/><br/>Using `update_all` in `touch` looks smart enough, but there is a hidden issue in this: `update_all` uses `default_scope`.<br/><br/>Imagine a situation: you have the following `User` class:<br/><br/>``` ruby<br/>class User < ActiveRecord::Base<br/>  default_scope :active => true<br/>end<br/><br/>user = User.unscoped.where(:active => false).first<br/><br/>user.touch<br/># This fires sql "UPDATE `users` SET `updated_at` = ? WHERE `users`.`active` = 0"<br/># and so our user instance remains changed (and the database remains unchanged)<br/>user.changed? #=> true<br/>user.reload # brings old updated_at value back to life<br/>```<br/><br/>I\'ve provided a test proving that and a fix for the issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4486876726bcef5b87268564fc29e6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1519', 'title': u'ActiveRecord::Persistence#touch should not use default_scope'}, {'body': u"This a follow-up of #1331 (Actually I'm looking to solve this because I need it urgently).\n\nI'm checking if super.instance exists before call it and call to super if it doesn't exists (for Rack::URLMap), I don't want remove entire method since according to 19c763f7831e08606e6b4fa516f5ad3b00c6428f using it here reduces 2 methods call per request.\n\nAlso I do some changes to @andrew test to use a free port instead of port 3000 for server_tests. (Some people runs another Rails apps while run the tests ;)).\n\ncc. @andrew @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1516', 'title': u'Rails::Server#app should be nice with Rack::URLMap'}, {'body': u"@josevalim: As requested in https://github.com/rails/rails/pull/1508.<br/><br/>Please note that I've to cherry pick and edit the commits because 'plugin_new' doesn't exist in 3-0-stable.<br/><br/>And Rakefile in the top of the tree already had <code>require rdoc/task</code> and hence is not included in the diff.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1511', 'title': u'Rake rdoc fixes cherry picks for 3-0-stable'}, {'body': u'Fixed tests for failing because of environment of server. <br/><br/>Please merge them in 3-0-stable and 3-1-stable also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1509', 'title': u'Fixed for Test Environment. Fixed failing CI server.'}, {'body': u'Continuation of https://github.com/rails/rails/pull/1478', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1508', 'title': u'Rake deprecation fixes - cherry picks'}, {'body': u"Cherry-picked from master to fix the build<br/><br/>Don't need to cherry-pick by hand just press the merge button :-) <br/><br/>/cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1506', 'title': u'Cherry-picked from master to fix the build'}, {'body': u"Cherry-picked from master to fix the build<br/><br/>Don't need to cherry-pick by hand just press the merge button :-) <br/><br/>/cc @josevalim", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1505', 'title': u'Cherry-picked from master to fix the build'}, {'body': u'/cc @josevalim', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1504', 'title': u'Fix for CI server. Dependent on RAILS_ENV=development'}, {'body': u'Hi.<br/><br/>Using `update_all` in `touch` looks smart enough, but there is a hidden issue in this: `update_all` uses `default_scope`.<br/><br/>Imagine a situation: you have the following `User` class:<br/><br/>``` ruby<br/>class User < ActiveRecord::Base<br/>  default_scope :active => true<br/>end<br/><br/>user = User.unscoped.where(:active => false).first<br/><br/>user.touch<br/># This fires sql "UPDATE `users` SET `updated_at` = ? WHERE `users`.`active` = 0"<br/># and so our user instance remains changed (and the database remains unchanged)<br/>user.changed? #=> true<br/>user.reload # brings old updated_at value back to life<br/>```<br/><br/>I\'ve provided a test proving that and a fix for the issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c4486876726bcef5b87268564fc29e6c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1501', 'title': u'ActiveRecord::Persistence#touch should not use default_scope'}, {'body': u"I need to pass the :except option into uglifier to protect the $super keyword in my javascript. I checked the API's of YUI and Closure, and all 3 support an options hash passed to the initializer. So it seems like another config key addresses the issue.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bd964c4c26b160867008b423ae92b3e7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1500', 'title': u'Allow options to be passed to the javascript compressor'}, {'body': u'Fix undefined method collect bug in ActiveResource instantiate_collection. When trying to interact with the Basecamp API I ran into this bug and am able to consistently reproduce it with the following steps:\n\n```\n>> require \'active_resource\'\n=> true\n>> class Project < ActiveResource::Base\n>>   self.site = "https://BASECAMPURL.basecamphq.com"\n>>   self.user = "BASECAMPAPIKEY"\n>>   self.password = "X" # Leave as X as mentioned in the documentation\n>> end\n=> "X"\n>> Project.all\nNoMethodError: undefined method `collect!\' for #<Hash:0x101b45788>\n\tfrom /Library/Ruby/Gems/1.8/gems/activeresource-3.1.0.rc1/lib/active_resource/base.rb:926:in `instantiate_collection\'\n\tfrom /Library/Ruby/Gems/1.8/gems/activeresource-3.1.0.rc1/lib/active_resource/base.rb:894:in `find_every\'\n\tfrom /Library/Ruby/Gems/1.8/gems/activeresource-3.1.0.rc1/lib/active_resource/base.rb:806:in `find\'\n\tfrom /Library/Ruby/Gems/1.8/gems/activeresource-3.1.0.rc1/lib/active_resource/base.rb:832:in `all\'\n\tfrom (irb):7\n```\ninstantiate_collection is expecting an Array to be returned but after the XML decode it\'s receiving a Hash like this:\n```{"count"=>1, "records"=>[{"name"=>"Project1", ... }], "nextOffset"=>nil, "limit"=>25, "offset"=>0}```\n\nI wasn\'t sure what the best way would be to reproduce this in a test case, but if you have any suggestions, please let me know.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ce795239ba5dd2384fc2f88ffaff5451?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1498', 'title': u"[3.1.0rc1] Undefined method 'collect!' bug in ActiveResource instantiate_collection"}, {'body': u'/cc @jonleighton\n\nI think loading_test.rb is also needed. I can send one more or update this pull request :-)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1497', 'title': u'framework_test.rb also dependent on RAILS_ENV=development'}, {'body': u"Don't know why it's giving error with i18n gem. <br/><br/>It was loading i18n/version actually. Need to figure out why not working with i18n.<br/><br/>Changing gem here in test doesn't matter. As checking same. <br/><br/>Error coming was <br/><br/><pre><br/>  1) Error:<br/>test_require_library_or_gem_deprecated(KernelTest):<br/>NameError: uninitialized constant I18n<br/>    /Users/arunagw/checkouts/rails/activesupport/lib/active_support/i18n.rb:9<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.8/gems/i18n-0.6.0/lib/i18n/version.rb:1<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.8/gems/i18n-0.6.0/lib/i18n.rb:1:in `require'<br/>    /Users/arunagw/checkouts/rails/bundle/ruby/1.8/gems/i18n-0.6.0/lib/i18n.rb:1<br/><br/></pre><br/><br/>This is only for 3-1-stable as it's deprecated in 3-1-stable branch only.<br/>This can give 3-1-stable as green build.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1495', 'title': u'Fixed failing isolated test'}, {'body': u"So following is the result of 'rake test_mysql' on 'activerecord'<br/><br/><pre><br/>Finished in 187.706285 seconds.<br/><br/>  1) Failure:<br/>test_preserves_existing_fixture_data(FoxyFixturesTest) [/Users/anil.wadghule/Code/rails/rails/activerecord/test/cases/fixtures_test.rb:592]:<br/><Sun, 22 May 2011> expected but was<br/><Mon, 23 May 2011>.<br/><br/>2982 tests, 9217 assertions, 1 failures, 0 errors, 0 skips<br/></pre><br/><br/>Commit fixes this failing test.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2ad20e87f55ce79b113a12c516ec9d09?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1494', 'title': u'Fix failing test because of Timezone difference.'}, {'body': u'using activerecord_unittest2 for second db', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1490', 'title': u'using activerecord_unittest2 for second db'}, {'body': u'Given:<br/><br/>    app/assets/stylesheets/xmlhr.js<br/>    app/assets/stylesheets/extra.js<br/><br/>This allow you to include multiple sources at once:<br/><br/>```ruby<br/><%= javascript_include_tag("xmlhr", "extra") %>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1488', 'title': u'Allow multiple sources in Sprockets helpers'}, {'body': u'It turns out that I do know enough about the Rails process to fix this. Who would have thought?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a2a53db8e9b4476038c94a64b32833f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1483', 'title': u'Fix for #1482'}, {'body': u'<br/>/cc @dhh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1481', 'title': u'Generating /lib/assets  for assets'}, {'body': u'Some Cherry-picks for 1.9.2 warning removal from master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1478', 'title': u'Some Cherry-picks for 1.9.2 warning removal'}, {'body': u"Something strange happened while changing the pull request's commits and my branch has been committed into my own fork.<br/><br/>So I'm reopening a pull request. This follows #1469", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1476', 'title': u'table_exists should also consider the views'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f2bef52a79e8016894602a2f7eb0a82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1475', 'title': u'add a missing "the" and normalize the use of periods.'}, {'body': u'update_column tests added', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1474', 'title': u'added  tests for update_column'}, {'body': u'This needs to be there to generate urls with assets/ in paths vs stylesheets/, javascripts/. Brings 3-1 inline with master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36cca6cb1c1281de9405d40ed60575dc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1473', 'title': u'Fix broken asset pipeline paths'}, {'body': u'This got refactored out and is now overridden by sprockets/helpers/rails_helper.rb but was never applied to 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36cca6cb1c1281de9405d40ed60575dc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1472', 'title': u'Fix undefined method sprockets_javascript_include_tag'}, {'body': u"Assigning cookies for test cases should now use cookies[], e.g:<br/><br/>    cookies[:email] = 'user@example.com'<br/>    get :index<br/>    assert_equal 'user@example.com', cookies[:email]<br/><br/>To clear the cookies, use clear, e.g:<br/><br/>    cookies.clear<br/>    get :index<br/>    assert_nil cookies[:email]<br/><br/>We now no longer write out HTTP_COOKIE and the cookie jar is<br/>persistent between requests so if you need to manipulate the environment<br/>for your test you need to do it before the cookie jar is created.<br/><br/>This commit fixes #1464.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1470', 'title': u'Refactor ActionController::TestCase cookies'}, {'body': u'Which does not fail, which means the issue has since been solved.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1469', 'title': u'Add testcase for #379'}, {'body': u'Double assignment of attributes on a collection association occurs fixed for the issue issue #1467', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/839f782d9b8cace33c986f15435f493e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1468', 'title': u'Double assignment of attributes on a collection association occurs fixed #1467'}, {'body': u"The rake tasks used when dumping the database structure (db:structure:dump and db:test:clone_structure) both make an assumption that a username will be provided with the database config for postgres, which isn't automatically the case if you have set up trust_ident for postgres.<br/><br/>This fix simply checks if a username has been provided and if it hasn't then it doesn't provide a -U string (and the commands will default to being attempted with the user running the rake task).<br/><br/>Couldn't see a clean way to test the rake tasks, especially not with these one's relying on command line tools. I verified by hand that the error had been solved.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/deaeef05e3709c24cfcc96b45a9420a9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1466', 'title': u'Error when using trust_ident with pg and the :sql schema dumper'}, {'body': u"The rake tasks used when dumping the database structure (db:structure:dump and db:test:clone_structure) both make an assumption that a username will be provided with the database config for postgres, which isn't automatically the case if you have set up trust_ident for postgres.<br/><br/>This fix simply checks if a username has been provided and if it hasn't then it doesn't provide a -U string (and the commands will default to being attempted with the user running the rake task).<br/><br/>Couldn't see a clean way to test the rake tasks, especially not with these one's relying on command line tools. I verified by hand that the error had been solved.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/deaeef05e3709c24cfcc96b45a9420a9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1465', 'title': u'Error when using trust_ident with pg and the :sql schema dumper'}, {'body': u'Currently, if your string includes a timezone (like "2011-05-27 10:13:49 -0700") the to_time method will ignore it and do the conversion assuming a timezone of utc or local, depending on how it was called.  With this patch you\'ll get a time object with the correct time, represented in utc or local.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c150b4c6c74d9799712e6c6690afb16a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1463', 'title': u'Fix timezone handling in String.to_time'}, {'body': u'Test added for problem which is in 3-0-stable.\n\nhttps://github.com/rails/rails/issues/1419\n\n\nWill try to get a patch for 3-0-stable also.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1462', 'title': u'Test added for namedscope target.'}, {'body': u'Rake::DSL include definition added, warning solved.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a89f0cdd5105a822fdd7b5ea17c1c36a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1459', 'title': u'Add Rake::DSL call definition'}, {'body': u'Revert "Fix broken test. You know, the merge button will be the end of us..."<br/><br/>The fix was intentionaly for this branch, but was applied to another<br/>branches by mistake. This should fix the CI.<br/><br/>This reverts commit 4c0bed0cf0b01c4f063f39fc8e503e97d4661832.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1454', 'title': u'Revert failing commit'}, {'body': u'Please do not merge master. Fix broken 3-0-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1453', 'title': u'Only for 3-0-stable '}, {'body': u"I should be putting this in previous pull request. <br/><br/>It's already in master.<br/><br/>Sorry for sending again. I will try to fix all the places in one pull request.<br/><br/><br/>You can see this also. https://github.com/rails/rails/pull/1426<br/><br/>:-)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1451', 'title': u'3-1-stable import to java_import'}, {'body': u"cc: @jonleighton, @tenderlove\n\nAs of PR #1410, this change try to respect table  with qualified schemas in postgres\n\nnow you can do something like this on a migration file:\n\n```ruby\n    create_table 'myschema.mytable' do |t|  \n      t.string :column          , :null => false, :limit => 20\n      t.timestamps  \n    end\n```\n\n\n\nsomething I want to work soon is to create schemas in migrations without breaking dump and create tasks(that will also break test tasks)\n\n ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a03308b3abcbb395a2825cfe3d5f710?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1450', 'title': u'Support to dump and load of postgresql schemas'}, {'body': u'Per discussion at https://github.com/rails/rails/commit/1632a3a49fb318be25d832b7efb17093bd7ef8ae#commitcomment-409761<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1448', 'title': u'Require attr_internal before using in ActionView::Helpers'}, {'body': u"Ruby 1.8 doesn't accepts empty strings to be converted to symbols.<br/>An empty route would therefore generate an error.<br/><br/>See, as a use case of this, the issue #1210.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1447', 'title': u'Fix creating an empty route on 1.8. Closes #1210'}, {'body': u'The URL http://dev.mysql.com/doc/refman/5.0/en/savepoints.html is no longer available', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0572a6713eb3a17c40ec98a2446340e9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1445', 'title': u'The URL http://dev.mysql.com/doc/refman/5.0/en/savepoints.html is no long'}, {'body': u'Jruby Fixes for 3-1-stable. Already in master.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1444', 'title': u'Jruby fixes for 3 1 stable'}, {'body': u"Set reverse_order_value when asked to reverse_order().<br/>Do the actual reversal in build_arel.<br/><br/>And take in code review comments from @jonleighton:<br/><br/>- Add tests to ensure expectations of how reverse_order should work<br/>- Tests are happy in mysql, mysql2, sqlite3, sqlite3_mem, postgresql (I don't have any other dbs available)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f73862b279970928f9cccd8d137e1a3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1443', 'title': u'Fix issue #1272 (retry 3)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1441', 'title': u"Don't add .rb in requires"}, {'body': u'Added code to allow users to pass a custom attribute name to has_secure_password.<br/><br/>Example:<br/><br/><pre><br/>class User<br/>   has_secure_password :encrypted_password<br/>end<br/></pre>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7e7bb3bc9e522f86e090f1732adacada?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1440', 'title': u'Custom attribute name in has_secure_password'}, {'body': u'@tenderlove do you think this would be better than the conditional?<br/><br/>(Sorry, I had this patch ready to be pushed before you add the conditional. Just want to get your thought on my approach.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1439', 'title': u'Isolated PostgreSQL test into PostgreSQL folder'}, {'body': u'Allows a user to pass in a custom attribute name in has_secure_password call, like this:<br/><br/><pre><br/>class User<br/>   has_secure_password :encrypted_password<br/>end<br/></pre><br/><br/>If nothing is passed then password_digest is assumed to be the default.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7e7bb3bc9e522f86e090f1732adacada?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1438', 'title': u'Custom attribute name in has_secure_password'}, {'body': u'Hey Guys,<br/><br/>This adds an alias for new to build to the AR collection proxy, this corrects an issue where the collection proxies were not consistent.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1437', 'title': u'Ar collection new alias'}, {'body': u'AR#composed_of can now access the associated record\n\n```ruby\n    class User < ActiveRecord::Base\n      composed_of :some_aggregation, ...,  :converter => Proc.new { |record, values| ... }\n    end\n```\n\nTested against REE and 1.9.2-p180.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1436', 'title': u'#364 composed_of: Access record information from converter'}, {'body': u"Currently if the code that calls `find_in_batches` modifies the yielded array in place then `find_in_batches` can enter an infinite loop searching with ruby object ids in the database instead of the primary key of records in the database. This happens because it naively assumes the yielded array hasn't been modified before calling `id` on the last object in the array. And ruby (1.8 at least) alias' `id` to `object_id` so an integer is still returned no matter what the last object is.<br/><br/>By moving finding the `id` of the last object before yielding the array of records it means the calling code can do whatever it wants to the array in terms of modifying it in place, and `find_in_batches` doesn't care. Also moved the count of the array records before yielding in case elements are removed or added when yielded.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ad072c8b8e23a18a49eddb6517490fa1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1435', 'title': u'Stop find_in_batches using the records after yielding.'}, {'body': u"This requires string's inflections in mass_assignment security, therefore fixing activemodel's isolation tests.<br/>I've also removed a useless .rb in a require.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1434', 'title': u'Mass assignment'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1430', 'title': u'test fixes for jruby'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/95597e3180094b6bb1c2f3444010a95e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1428', 'title': u'Fix issue #402 - Destroying a record with habtm association using foreign keys on association table raises a exception'}, {'body': u'Following #1417, this improves the code quality by drying it up.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1427', 'title': u'refactoring in order to avoid code repetition'}, {'body': u' sprockets gem update to beta9', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1426', 'title': u' sprockets gem update to beta9'}, {'body': u"For some reason, #delete(record) didn't return the record in memory, but the persisted one.<br/>This could be considered as a bug in ruby, which is fixed in 1.9.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1425', 'title': u'fix merging the targer lists in 1.8.'}, {'body': u'https://github.com/spohlenz/AS-autoload contains a demonstration of the problem that this commit fixes.<br/><br/>This issue was uncovered because of the way the inherited_resources gem autodetects constants based on the controller name, but I don\'t believe that inherited_resources is doing anything wrong here.<br/><br/>This commit also rids ActiveSupport of the confusing "X is not missing constant Y" error.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/43da0307752bf635c44c33dcdd962a2e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1422', 'title': u'AS::Dependencies.load_missing_constant should return the constant if it is already loaded'}, {'body': u'This should fix the 7 tests failing on master for ActiveRecord<br/><br/>#test_loading_the_association_target_should_keep_child_records_marked_for_destruction<br/><br/>The part object was divorced from the association, so the instance variable for mark_for_destruction could never be reached.<br/><br/>#test_should_not_overwrite_unsaved_updates_when_loading_association and #test_should_not_remove_scheduled_destroys_when_loading_association<br/><br/>As far as I can tell, nested attributes are not enough to force a load of an association. <br/><br/>TestHasManyAutosaveAssociationWhichItselfHasAutosaveAssociations<br/><br/>Avoid accessing the association directly in setup, in light of the two test cases below it. Both of those cases had been loading the association directly, by mistake.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4defcc97f2e2bb9544b07a5b9f011de5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1421', 'title': u'This should fix the 7 tests failing on master for ActiveRecord'}, {'body': u'Fixed nested_attributes tests<br/><br/>I found that <br/><br/>mem_record = memory.delete(record) is returning record itself. with ruby-1.8.7<br/><br/>/cc @jonleighton<br/><br/>/cc @tenderlove', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1417', 'title': u'Fix nested attribute for memory record.'}, {'body': u'Previously ActionView contained TemplateHandler, TemplateHandlers (@d182b6ee9c99901553e6 removed them), but declarations of autoload for these constants are still there. I\'ve removed them in this patch since they don\'t exist anymore. \n\nBackstory: \nI\'ve found out about this when was figuring out why haml stopped working with latest head of rails. Turned out haml was checking for ActionView.const_defined?("TemplateHandlers") which returned true because of autoload for this constant, but was failing afterwords since this constant doesn\'t exist.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1415', 'title': u'Remove autoload for non-existing constants'}, {'body': u"`ActionView::Helpers::FormBuilder#fields_for` was refactored recently (f0479cbbd52961c75906022003d4f03aa39556e0). It now checks whether the second parameter `is_a? Hash`, and if so, it assumes that it's an options hash (not a record object).\n\nUnfortunately, if your record object is a subclass of Hash, `#fields_for` now mistakenly tries to interpret your record as an options hash. This is a real-world problem for the [admittedly fringe] case of [Casted Models in CouchRest Model](http://www.couchrest.info/model/casted_models.html), which are subclassed from Hash with a mix-in.\n\nI don't think anybody who really intends to pass in an options hash is doing so with anything but a real Hash, so this can be fixed easily by using `instance_of?` (which will be false for casted models) instead of `is_a?`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22f911bbd8f7ca81ce15bb83adc3c108?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1414', 'title': u'Use instance_of? in #fields_for to check specifically for a Hash (excluding subclasses)'}, {'body': u'Set reverse_order_value when asked to reverse_order().<br/>Do the actual reversal in build_arel.<br/><br/>And take in code review comments from @jonleighton:<br/><br/>- Add tests to ensure expectations of how `reverse_order` should work', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f73862b279970928f9cccd8d137e1a3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1413', 'title': u'Fix issue #1272'}, {'body': u'Add MailBag to Action Mailer to handling bulk mailing and chaining method<br/><br/>MailBag gives you the ability to bulk mailing to multiple users. Instead of having to call the mailer multiple time, you can now pass the list of emails to it like this:<br/><br/>    Notification.plan_expire.to_bulk(@users.map(&:email)).deliver<br/><br/>You could also modify the headers of your E-Mail at runtime by do a chaining, just like Active Record\'s scope.<br/><br/>    Notification.plan_expire.subject("Your plan is expired!").deliver<br/><br/>---<br/><br/>@mikel and @dhh, do you mind giving feedbacks on this? Is this too overkill?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1411', 'title': u'Add MailBag to Action Mailer to handling bulk mailing and chaining method'}, {'body': u"Hi, <br/><br/>a few secure fixes to proper schema support in rails 3.1 and -dev<br/><br/>This is just a step to a better support for pg schemas(search_path isn't a very good option, but works)<br/>all tests pass in 3.1 and master branch<br/><br/>a little question for core team:<br/>Are you guys open to a rewrite of postgresql adapter? ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a03308b3abcbb395a2825cfe3d5f710?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1410', 'title': u'a little step to better postgresql schema support in rails'}, {'body': u"Modified generated text to explain where .js and .coffee files can be located and that there shouldn't be blank lines in manifest per this issue  http://groups.google.com/group/rubyonrails-talk/browse_thread/thread/effb868290c2c0b8<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c3a6b3aa74fdf7c5ad906125c2a09d78?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1409', 'title': u'Modified generated application.js file text'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c3a6b3aa74fdf7c5ad906125c2a09d78?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1408', 'title': u'changed text to be more explicit about where stylesheets can be located'}, {'body': u"This commit fixes a few warnings when running the tests.<br/><br/>* In Active Record for @cesario's fix in #inspect last week, when `@attributes` is not defined.<br/>* In whiny_nil, where it's not useful to stub object_id of nil.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1406', 'title': u'Fix test warnings'}, {'body': u"This is one of the failures that I'm seeing on master.<br/><br/>This is testing mark_for_destruction against a has_many association. The problem is, once the 'part' object becomes divorced from it's association, it cannot share it's instance variables with the original association it belonged to. At first I was curious to know if there was some other functionality that allowed this to happen. Maybe objects are added to associations during creation? I didn't see anything to this effect, especially since #create! doesn't trigger a full load of the association.<br/><br/>There are a number of tests for mark_for_destruction in autosave_association_test.rb that don't divorce the object from the association, so I feel that this is the appropriate semantics.<br/><br/>Sorry for such a long discussion on what is essentially a 2-line commit. But I'd rather head off any misunderstandings well before making this submission.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4defcc97f2e2bb9544b07a5b9f011de5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1405', 'title': u'A fix for mark_for_destruction failing test in AssociationsTest (small patch: only 2 lines)'}, {'body': u"I noticed that creating a mountable engine with:<br/><br/>    rails plugin new foo --mountable<br/><br/>gives me the following in 'app/assets/javascripts/application.js':<br/><br/>    <% unless options[:skip_javascript] -%><br/>    //= require <%= options[:javascript] %><br/>    //= require <%= options[:javascript] %>_ujs<br/>    <% end -%><br/>    //= require_tree .<br/><br/>This commit properly renders the ERB and adds the appropriate javascript gem to the plugin's Gemfile.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9059508962f5419bf45d34df477b0fe9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1404', 'title': u'properly require javascript libraries when generating mountable engine'}, {'body': u'In order to specify your own sanitize method<br/>Implemented .mass_assignment_sanitizer configuration option<br/><br/>As we discussed here:<br/>https://github.com/rails/rails/pull/1334#issuecomment-1247794', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1403', 'title': u'ActiveModel::MassAssignmentSecurity.mass_assignment_sanitizer method'}, {'body': u'These commits were never applied to 3-1-stable and were causing uninitialized constant Sprockets::Helpers when running <code>rake assets:precompile</code>. All tests passing and browser tested. This would invalidate pull request https://github.com/rails/rails/pull/1387.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36cca6cb1c1281de9405d40ed60575dc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1401', 'title': u'Apply sprocket helpers refactor to 3-1-Stable'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1400', 'title': u'Query cache test'}, {'body': u'Rebased :-)<br/><br/>Cheers,<br/>  Lee :beer:', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8058c2c00149cbe4104ddc9fa814443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1398', 'title': u"Corrected some typos and American vs. Queen's English issues"}, {'body': u'`extend` must be called on `this.class`, resolves #1322 (Rake 0.9 related).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/96fe3e1b2a4c52d0954f2d6fb7d91216?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1397', 'title': u'Really fix #1322 (Rake::DSL issue)'}, {'body': u'As mentioned in a chat with Jose Valim in rc.1 it is necessary to do<br/><br/>  ....<br/>   format.js  { render :layout => false }<br/>  ....<br/><br/>because with just<br/>  ...<br/>    format.js #no params<br/>  ...<br/>the default layout will be rendered.<br/><br/>have fun<br/> - Andi Altendorfer', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2524d88e575593b85e370d29eb987d8c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1393', 'title': u'*.js.erb should not be rendered using layout'}, {'body': u"Hi,<br/><br/>I took a look at issue #1360 and found out what the problem was. It seems that the latest refactoring of collection_association.rb used both create and save! to perform a create!. This caused the double-callbacks to be triggered.<br/><br/>The patch is essentially an unrefactoring of create! to mimic what create currently does. I had to add in an extra parameter to insert_record to use either save or save!.<br/><br/>I wrote a simple test to check if the callbacks were getting called more than once.  It should capture the problem that was found in issue #1360.<br/><br/>As it stands, there are 7 other tests that are failing, but they seem to be existing problems, as ever time I've cloned I get the same 7 failures. And my modifications don't seem to change the results of those failures, so I'm fairly certain they are unrelated.<br/><br/>Thanks for taking a look,<br/>- Farley", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4defcc97f2e2bb9544b07a5b9f011de5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1389', 'title': u'A fix for issue #1360'}, {'body': u'Revert "Renaming helper in the Rake task, but why is this needed in the first place? (paging JP)"<br/><br/>This reverts commit 9701014b960e8679af8652c5cd0b413a0ad04f58.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36cca6cb1c1281de9405d40ed60575dc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1387', 'title': u'Revert commit 9701014 which causes uninitialized constant Sprockets::Helpers when running rake assets precompile'}, {'body': u'This commit removes the options hash from #drop_column: https://github.com/rails/rails/commit/bcb466c543451dce69403aaae047295758589d8e<br/><br/>This test was making use of it, so I removed it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1385', 'title': u'#drop_table accepts no options now.'}, {'body': u'Removed unused `options` parameter from `SchemaStatements#drop_table`.<br/>This matches to the documentations, and all existing tests passed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1384', 'title': u'Remove unused options from drop_table'}, {'body': u'migration example updated', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1382', 'title': u'Changelog and readme updated.'}, {'body': u'Changing the migration to create sessions table to use change method instead of up and down.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1380', 'title': u'Use 3.1 style migration for sessions table'}, {'body': u'See https://github.com/rails/rails/pull/1359.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc59401781a26b10f5d4fc5b758fb3b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1378', 'title': u'Add changelog entry for pull request #1359'}, {'body': u'Without removing it it breaks some gems which checks if TemplateHandlers const defined in ActionView', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ce5d1a4d26241d16575889a6f1ed4487?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1376', 'title': u"No need in autoloading TemplateHandlers since it's removed."}, {'body': u'Cherry-picked #1368 to 3-1-stable branch. This also unveils 7 failure cases.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1375', 'title': u'Disable IdentityMap by default for ActiveRecord testing on 3-1-stable'}, {'body': u'Just a really minor typo corrected.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/74f50803641395daef8b7e5201c7553e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1373', 'title': u'Minor typo corrected'}, {'body': u'Sprockets does not use the ActionView::Helpers::AssetTagHelper::AssetPaths sub-class of ActionView::Helpers::AssetPaths which is where the relative_url_root logic has been moved to.<br/><br/>This fix moves the relative_url_root logic into ActionView::Helpers::AssetPaths so that it works with sprockets.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d2fc40c5527da8c6ede7703f5fb23d1d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1372', 'title': u'Fix for relative_url_root when used with sprockets'}, {'body': u'While reading the code of ActionMailer::Base, found out some typos and fixed them.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1371', 'title': u'Typo in ActionMailer::Base'}, {'body': u"It's already in master. I think this can go in 3-0-stable also. #jruby<br/><br/><br/>/cc @tenderlove ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1369', 'title': u'File From Xml is working now. #3-0-stable'}, {'body': u"I propose that IM should be turned off for AR testing by default. It is strange that the default test doesn't run on the library's default behavior.<br/><br/>In fact, this patch reveals 7 failing cases for each adapters on current master. This means, people are not testing with `ENV['IM']=false` option, and AR 3.1 is shipped untested for its default option.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1368', 'title': u'Disable IdentityMap by default for ActiveRecord testing'}, {'body': u'I found a regression on 3.1.rc1.<br/><br/>Updating nested_attributes fails when (IdentityMap is disabled) && (target is not loaded).<br/>Attached is a test case which passes on 3.1.beta1 and fails on 3.1.rc1.<br/><br/>There were no changes on active_record/nested_attributes.rb in v3.1.0.beta1..v3.1.0.rc1, thus maybe some changes on active_record/associations are the cause.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1367', 'title': u'A failing test case for 3.1.rc1'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6cb0b3e9e50fe72285047eac56209f49?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1365', 'title': u'close statment only if its not closed'}, {'body': u'Set reverse_order_value when asked to reverse_order().<br/>Do the actual reversal in build_arel.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0f73862b279970928f9cccd8d137e1a3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1364', 'title': u'Fix for #1272 based on @jonleighton suggestion.'}, {'body': u"Through-association owner's primary key wasn't quoted. This generates invalid SQL if the record wasn't saved yet (i.e. the primary key's value is nil) and you try to access the relation (should return an empty result).<br/><br/>Real-world example of generated sql:<br/><br/>    SELECT `tags`.*<br/>      FROM `tags`<br/>      INNER JOIN `taggings` ON `tags`.id = `taggings`.tag_id<br/>      WHERE<br/>        ((`taggings`.taggable_id = ) AND (`taggings`.taggable_type = 'Ticket'))<br/>        AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/96fe3e1b2a4c52d0954f2d6fb7d91216?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1362', 'title': u'Unquoted query generated by through-association scope'}, {'body': u"Through-association owner's primary key wasn't quoted. This generates invalid SQL if the record wasn't saved yet (i.e. the primary key's value is nil) and you try to access the relation (should return an empty result).<br/><br/>Real-world example of generated sql:<br/><br/>    SELECT `tags`.*<br/>      FROM `tags`<br/>      INNER JOIN `taggings` ON `tags`.id = `taggings`.tag_id<br/>      WHERE<br/>        ((`taggings`.taggable_id = ) AND (`taggings`.taggable_type = 'Ticket'))<br/>        AND (taggings.context = 'tags' AND taggings.tagger_id IS NULL)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/96fe3e1b2a4c52d0954f2d6fb7d91216?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1361', 'title': u'Unquoted query generated by through-association scope'}, {'body': u"An example of the problem can be seen in this gist: https://gist.github.com/994919.\n\nBasically, `ActiveSupport::OrderedHash` behaves differently than the built-in `Hash` when yielding to a block that accepts its parameters with a splat. This is only an issue on ruby 1.8 because 1.9 uses the built-in `Hash` at all times. It's a very minor inconsistency, but it causes some problems with `pp`, for example.\n\nTested with rvm-installed ruby 1.8.7-p330, on Mac OS X 10.6.7. At least on this machine, tests are all running green.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc59401781a26b10f5d4fc5b758fb3b7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1359', 'title': u'Fix for ruby 1.8 bug with ActiveSupport::OrderedHash'}, {'body': u"I've moved _load\\_generator_ from _Rails::Application_ to _Rails::Engine_ in order to provide generators for Rails engines (fixes #1259).<br/><br/>I've introduced _rails/engine/commands_ that provides engine specific commands.<br/>Furthermore, I've done some small cleanups and improvements.<br/><br/>Regards", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/58fd9abfc19da9b36f48ac3454bbad7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1356', 'title': u"Fix engine's generator"}, {'body': u'updated with requiring fileutils before attempting to use it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6cb0b3e9e50fe72285047eac56209f49?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1355', 'title': u'Adds rake task to cleanup compiled assets'}, {'body': u'Fixed issue#1284', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6cb0b3e9e50fe72285047eac56209f49?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1354', 'title': u'Adds rake task to cleanup compiled assets'}, {'body': u'Refactor inclusion and exclusion validators to inherit from base class. Removes duplicate code.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/08faa342337f7208ad9e4b2083ecbff2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1352', 'title': u'Refactor InclusionValidator/ExclusionValidator to remove duplicate code.'}, {'body': u'Need to apply these to work with rake 0.9.0 ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1351', 'title': u'3 0 stable jruby jdom fixes'}, {'body': u'Putting back test_file_from_xml for JDOM backend.<br/><br/>/cc @tenderlove ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1346', 'title': u'Jdom file from xml fix'}, {'body': u'Revert "Renaming helper in the Rake task, but why is this needed in the first place? (paging JP)"<br/><br/>This reverts commit 9701014b960e8679af8652c5cd0b413a0ad04f58.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36cca6cb1c1281de9405d40ed60575dc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1345', 'title': u"This doesn't yet exist in 3-1-stable leading to uninitialized constant Sprockets::Helpers"}, {'body': u"It seems wrong that when I do the following:<br/><br/>```ruby<br/>User.first.as_json(:only => :first_name, :include => :posts)<br/>```<br/><br/>that `:only => :first_name` will apply to to `:posts` as well.<br/><br/>The present behavior has been around essentially forever, and the current nuances of the behavior arrived in two phases, apparently initially to preserve backward compatibility when it became possible to [specify opts for includes](https://github.com/rails/rails/commit/3442e0c6714d766b9ea0ca2fc644fdf7753832aa#L0R1535) in the first place, and then when app developers got the ability to [override to_xml](https://github.com/rails/rails/commit/48052d70ec065a3a8d9e6e121cab5ae857f8da1a#L1R1870) on their models.<br/><br/>As far as I can tell it was just initially decided that passing the base's options along to the include is better than having the included model be serialized in an unconstrained way, but the remote likelihood that the same column names are likely to usefully exist on the two models makes me think that's worth reconsidering.<br/><br/>The current behavior isn't covered by tests, so I'm hoping nobody is intentionally relying on it.  That said, because this patch is less restrictive than the old approach, this could cause security issues for anybody who was relying on it unwittingly (included models without explicit options hashes would start dumping all attributes out over JSON and XML REST APIs instead of the seemingly random intersection of their column and method names with those from the base opts).  That may make this pull request a no go until AR (or really, AM) serialization has a mandatory security layer analogous to `attr_accessible` (mandatory may be far-fetched given the cool reception to mandatory `attr_accessible`, but I'd be in favor of it), or this behavior change comes with a configuration option that must be turned on consciously by an upgrading app maintainer in order to take effect.<br/><br/>I'm working on a generic AM serialization security layer for a project (and this patch is a prerequisite for it, in fact -- otherwise it's challenging to keep opts on base from trickling down to included models).  If there's interest in pulling that into core, I'd be happy to clean it up and submit.  Especially if it would make this patch more palatable.<br/><br/>Thanks for considering.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/079ab1cc5aa71e625bb160e62b09f09c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1344', 'title': u"AR Serialization shouldn't fall back to base opts for includes"}, {'body': u'As far as I can tell this is not needed. Running the task with the original<br/>line, ActionView::Helpers::SprocketsHelper, does nothing different to the final output.<br/>Whatever the case, I could find nowhere that Sprockets::Helpers is defined.<br/><br/>Other option is to revert 9701014b960e8679af86<br/><br/>@josh can you shed some light on this?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36cca6cb1c1281de9405d40ed60575dc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1341', 'title': u'Remove line causing uninitialized constant Sprockets::Helpers'}, {'body': u"With respect to discussion:<br/>https://github.com/rails/rails/pull/1320<br/><br/>Added an ability to specify your own behavior on mass assingment<br/>protection, controlled by option:<br/>    <br/>    ActiveModel::MassAssignmentSecurity.mass_assignment_sanitizer<br/><br/><br/>I hope this is right way to do it. Because I don't understand how the customizations can be done without monkey patch or configuration option.<br/><br/>BTW code seems more clean now even without customization benefits.<br/><br/>If there is still something I need to fix please let me know.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1334', 'title': u'MassAssignmentSecurity: add ability to specify your own sanitizer'}, {'body': u'Hi guys, I found this when I worked on my project. Let me explain situation.<br/>When <br/>class Parent < ActiveRecord::Base<br/>  self.abstract_class = true<br/>  # in the end it call table_name method<br/>  default_scope where(...) # for example<br/>end<br/><br/>class Child < Parent<br/>end<br/>Then Child has an incorrect table_name method, because Parent is loaded first and already has overrided table_name method like this:<br/><br/>def table_name; \u201cparents\u201d; end;<br/><br/>which inherits Child.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b97b92886055641a956499b3cbb473e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1333', 'title': u'Fix inherited table_name from abstract class'}, {'body': u'A nice convenience to go with the +partial_name_counter+ local when rendering collections.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73f812133e01dac8eb9b67746fe27393?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1332', 'title': u'Make +collection_size+ available as a local variable when rendering collections'}, {'body': u'https://github.com/rails/rails/tree/19c763f7831e08606e6b4fa516f5ad3b00c6428f broke using a Rack::URLMap in your config.ru, rails would simply not start.<br/><br/>The use case is something like this in config.ru:<br/><br/>    run Rack::URLMap.new "/"       => Deploytracking::Application,<br/>                         "/resque" => Resque::Server.new<br/><br/>I\'ve fixed it to get it starting again and added some tests to a piece which previously had no tests, which are similar to how rack tests Rack::Server: https://github.com/rack/rack/blob/master/test/spec_server.rb#L52<br/><br/>The only thing that I couldn\'t do was silence the server output in the tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8ddbf811da78bb0daeeb3cacd7cf743f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1331', 'title': u'Fixed starting Rails::Server when using a Rack::URLMap in 3.1.0.rc1'}, {'body': u'Hi,<br/><br/>I did two small cleanups.<br/><br/>Regards', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/58fd9abfc19da9b36f48ac3454bbad7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1328', 'title': u'Cleanup engine generator'}, {'body': u"Hi all,<br/><br/>this is a fix for Rails generators inside an engine. They currently depend on the dummy app that breaks them if no dummy app exists (e.g. if test unit files are skipped).<br/><br/>I've extracted the generators and added a new class _Application_ inside the _lib_ folder, that provides a _Rails::Application_ but doesn't get loaded by Rails applications that use the engine.<br/><br/>This fixes issue #1259.<br/><br/>Regards", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/58fd9abfc19da9b36f48ac3454bbad7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1327', 'title': u"Fix engine's generators"}, {'body': u"Master has a regression whenever the :format parameter isn't a recognized MIME type.<br/>This pull requests fixes it, so that there's no exception raised, without being trigger by respond_to either.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1324', 'title': u"Don't raise an exception if the format isn't recognized"}, {'body': u'AssociationScope#add_constraints was incorrectly using Reflection#active_record_primary_key instead of Reflection#association_primary_key (Line 63)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f3c1b7a970c2363aac3bd2a8bdda888?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1323', 'title': u'use association_primary_key in AssociationScope#add_constraints'}, {'body': u"One thing I don't understand about mass assignment protection is - Why is it a warning but not exception?<br/><br/>Mass assignment sanitizer works in the following use cases:<br/><br/>* Attempt to hack something <br/>* Bug in the source code that made protected things that should not be protected<br/><br/>I think both cases should throw an exception at least in development and test environment at most always.<br/><br/>Otherwise bugs can stay uncovered by test suite or manual QA for a long time.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91913f6ab8085bab0f2aa43995ba8ca2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1320', 'title': u'Debug mass assignment protection bugs made easy'}, {'body': u'See https://github.com/rails/rails/pull/1323', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f3c1b7a970c2363aac3bd2a8bdda888?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1319', 'title': u'AssociationScope#add_constraints, habtm, wrong primary_key'}, {'body': u'Removes the restriction on primary key when joining in a habtm && test that it was properly removed<br/>---<br/>So I saw issue #534 and thought that it looked simple and gave it a try. Added a test to prove that it works fine without it. First commit pretty nervous that I just screwed everything up or something :P so anyway, hope I understood the ticket correctly and the code is satisfactory. <br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5225f74b5d05b955511d1d8a8f9dcf74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1318', 'title': u'Resolve issue #534'}, {'body': u"This fixes rake for me in RefineryCMS. Otherwise, I get: undefined method 'prerequisites' for nil:NilClass (from rspec)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1317', 'title': u'This fixes rake for me in RefineryCMS. '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1316', 'title': u'Updating Railties changelog'}, {'body': u"I removed the extra leading space in the application.rb that is generated with 'rails new'.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/03fb59bf27824bdd9e12b461b5f1c117?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1315', 'title': u'Removed unnecessary space in application.rb'}, {'body': u'3rd time lucky?!?<br/><br/>Cheers,<br/>  Lee :beer:', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8058c2c00149cbe4104ddc9fa814443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1314', 'title': u"Minor typos corrected; minor Queen's/British English -> American English "}, {'body': u'Hey Guys,<br/><br/>This is a correction to the AR::Base#attributes= guard_protected_attributes deprecation message.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1313', 'title': u'Deprecation message correction'}, {'body': u'Hey Guys,<br/><br/>Fire any comments / advice / abuse my way.<br/><br/>Thanks,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1312', 'title': u'Removed deprecated methods and related tests from ActiveSupport'}, {'body': u'lingering autoload causes application to fail loading when config.threadsafe! has been set', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/666941bb55c20997738e52fb341ac9c2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1311', 'title': u'action_view/template/handler.rb has been removed'}, {'body': u"You'd think I was a grammar nazi or something, but I found one and went on a hunt to find some more. I am of course making the assumption that all code/documentation should be in American English as opposed to British English..?<br/><br/>Cheers,<br/>Lee :beer:<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8058c2c00149cbe4104ddc9fa814443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1310', 'title': u"Some Typos Corrected and Queen's English -> American English Translations"}, {'body': u"You'd think I was a grammar nazi or something, but I found one and went on a hunt to find some more. I am of course making the assumption that all code/documentation should be in American English as opposed to British English..?<br/><br/>Cheers,<br/>  Lee :beer:", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8058c2c00149cbe4104ddc9fa814443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1309', 'title': u"Some Typos Corrected and Queen's English -> American English Translations"}, {'body': u'The end at the end needed to move to the left :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1308', 'title': u'Minor indentation fix in code_statistics'}, {'body': u"I'm sorry my previous commit 24b28a2a0c6a58e177b07ce3ccf56dc975541780 was still not perfect.<br/>This time, I made sure the rdoc task runs.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1305', 'title': u"Ensure RDoc::Task exists even if 'rdoc/task' was not required"}, {'body': u"fixes a regression introduced by b921679d0dd3d5ca16f0362c2b34e7703cfe15e5<br/>require 'rdoc/task' fails if the system RDoc version is below 2.4.2 (e.g. CRuby 1.8.7)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1301', 'title': u"require 'rake/rdoctask' if failed to require 'rdoc/task'"}, {'body': u'This caused that `find_each` may produce extra db call taking all the records from db, return array with all records, and was less efficient than `ActiveRecord::Base#all`. There is no sense to keep _scope_ with this method, as it expects block and having further scopes after `find_each` is not possible.<br/><br/>eg. (notice last query)<br/><pre><br/>ruby-1.9.2-p180 :016 > User.find_each{|u| }<br/>  User Load (93.8ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` >= 0) ORDER BY `users`.`id` ASC LIMIT 1000<br/>  User Load (175.0ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` > 1000) ORDER BY `users`.`id` ASC LIMIT 1000<br/>  User Load (0.5ms)  SELECT `users`.* FROM `users` WHERE (`users`.`id` > 2000) ORDER BY `users`.`id` ASC LIMIT 1000<br/>  User Load (308.2ms)  SELECT `users`.* FROM `users` <br/></pre><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/769f0b312d64290f1c6c5e73039c582b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1300', 'title': u'Make `ActiveRecord::Batches#find_each` to not return `self`. '}, {'body': u'ActiveRecord, ActiveResource and ActiveSupport were missing those files.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1299', 'title': u"Ensure MIT-LICENSE is included in all the gemspec's"}, {'body': u"Hi guys,<br/><br/>I've added the test files to the engine's gemspec unless the option _--skip-test-unit_ is used.<br/>Furthermore, I've cleaned up the test file a little bit by removing whitespaces from an empty line, I don't want to open a separate pull request for this minor issue.<br/><br/>Regards", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/58fd9abfc19da9b36f48ac3454bbad7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1298', 'title': u"Add test files to engine's gemspec"}, {'body': u"IRB and friends are called `inspect` on the returned objects. This patch makes sure we don't throw an exception when we just call `MyModel.allocate`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1297', 'title': u'#1294 : allocated object cant be inspected [closes #1294]'}, {'body': u'See #636', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7bb0d7e74198c735783b8a65cd14989c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1296', 'title': u'Resubmitting issue #636 as a pull request'}, {'body': u"The example code doesn't work because Root initialization requires a path string as parameter.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8853f712852b03ba6646b59b1723f44d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1293', 'title': u'Fix Rails::Paths::Root documentation'}, {'body': u'Database.rake file fixed for load_generators', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1292', 'title': u'Database.rake file fixed for load_generators'}, {'body': u'Using load_generators', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1290', 'title': u'Using load_generators'}, {'body': u'This remove deprecated methods and tests from Railties.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1288', 'title': u'Remove Railties deprecated methods'}, {'body': u'load_generators_from_railties was removed by @josevalim in https://github.com/rails/rails/commit/594b749f3c81102a1f89480d0f8f10b464b895a7#L5L327', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1287', 'title': u'load_generators_from_railties was removed, remove test with error about it'}, {'body': u'/cc @josevalim ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1286', 'title': u'Fixed failing tests for generators_test'}, {'body': u'Hey @jonleighton and @tenderlove<br/><br/>The commit removes arguments and methods, and relating tests, from ActiveRecord which were deprecated in 3.1.<br/><br/>Let me know if I have missed anything.<br/><br/>Thanks,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1285', 'title': u'removed deprecated methods, and related tests, from ActiveRecord'}, {'body': u'Hey Guys,<br/><br/>I fixed the ActionMailer tests which broke due to some code removed from ActionPack, well, due to code I removed from ActionPack relating to deprecations.<br/><br/>Sorry,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1283', 'title': u'corrected/fixed the ActionMailer tests'}, {'body': u'Hey Guys,<br/><br/>Please let me know if you see anything amiss.<br/><br/>Thanks,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1281', 'title': u'removed deprecated methods, and related tests, from ActionPack'}, {'body': u'Remove single quotes from the Gemfile.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1279', 'title': u'Use quotes consistently in Gemfile'}, {'body': u'Fixing the deprecation of Rake::RDocTask in Rake 0.9.0. Using RDoc::Task instead, as mentioned here: http://drake.rubyforge.org/classes/Rake/RDocTask.html<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1278', 'title': u'Fixes Rake::RDocTask deprecation warnings from Rake 0.9.0'}, {'body': u"I just saw a request by someone on the rspec-users mailing list for support for the OPTIONS http verb in controller specs. See http://rubyforge.org/pipermail/rspec-users/2011-May/020082.html<br/><br/>It makes sense to me that this exist in Rails (as opposed to rspec-rails) since OPTIONS is one of the better ways to figure out what resources do when building RESTful APIs.<br/><br/>I couldn't find where I should write the tests - if you could point me at the file where they're written, I'd be happy to add them.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7bb0d7e74198c735783b8a65cd14989c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1277', 'title': u'Added a helper to make OPTIONS calls in controller tests'}, {'body': u'Updated ActiveRecord::Base.find_or_create_by for 2 attributes when 1 is nil<br/><br/>Updated the find_or_create_by_foo_and_bar(\'hello\') to process the find portion<br/>similar to find_by_foo_and_bar(\'hello\').  In the original<br/>find_by_foo_and_bar(\'hello\'), the resulting query was something like<br/>"foo = \'hello\' AND bar IS NULL".  In the original<br/>find_or_create_by_foo_and_bar(\'hello\'), the resulting query was something like<br/>"foo = \'hello\'"<br/><br/>This patch aligns those two methods expected behaviors on the "find" portion<br/>of the method call.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9b7461edb06ce10e12f865220e43948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1276', 'title': u'Updated ActiveRecord::Base.find_or_create_by for 2 attributes when 1 is n'}, {'body': u'Fixing the deprecation of Rake::GemPackageTask in Rake 0.9.0.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1274', 'title': u'Fixes for Rake::GemPackageTask deprecation warnings from Rake 0.9.0'}, {'body': u'Addresses an inconsistency in the ActiveRecord::Base.method_missing handling of dynamic finder methods and the passing of the &block parameter for :find_by_attributes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9b7461edb06ce10e12f865220e43948?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1273', 'title': u'Addresses an inconsistency in the ActiveRecord::Base.method_missing handl'}, {'body': u'Hey Guys,<br/><br/>Enjoy,<br/><br/>J', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1271', 'title': u'Removed deprecated ActionMailer API and related tests'}, {'body': u'Use single quotes in the Gemfile.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1270', 'title': u'Clean up quotes in the Gemfile'}, {'body': u'Fixed failing tests for load_path<br/><br/>https://github.com/rails/rails/commit/a6e945554dedf0a33527df2b43c283dd17ae8eb3<br/><br/>/cc @josevalim<br/><br/>:-)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1269', 'title': u'Fix load path test 3 0'}, {'body': u'Minor tweak to compute_asset_host. We were previously checking if an object was a proc or responded to call. Since procs respond to call, only the latter check was needed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1268', 'title': u'Redundant condition in compute_asset_host is redundant.'}, {'body': u'The last about that', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1267', 'title': u"Prefer 'each' syntax instead of 'for in'"}, {'body': u'Fixed test with 3-0-stable branch', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1266', 'title': u'Deprecation warning 3 0 fix'}, {'body': u"This pull request follows #1259\n\nWhen creating a new plugin with the `skip-test-unit` option, the dummy app isn't generated, which is the expected behavior.\nHowever, if we provide the `dummy-path` option, it should generate the dummy app where we specified it to.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1262', 'title': u"Create the dummy app if there's no test_unit but there's a dummy_path"}, {'body': u"I've removed the shebang from the template since it's already added by the engine generator.<br/>Otherwise it would be generated twice.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/58fd9abfc19da9b36f48ac3454bbad7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1260', 'title': u'Remove shebang from the template'}, {'body': u"As per the last version of the yml specifications, alias nodes shouldn't  be defined with `<<: *NODE` anymore.<br/>But with `*NODE`.<br/><br/>See http://www.yaml.org/spec/1.2/spec.html#* alias//", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1257', 'title': u'Properly reference yml alias nodes'}, {'body': u"At the moment, the files of an engine, as specified in its gemspec, only include the lib folder, Rakefile, MIT-LICENSE and README.rdoc.<br/><br/>Nevertheless, if you're using the options _--full_ or _--mountable_ when generating an engine, the project will also include the folders app and config. But they're never part of the gemspec.<br/><br/>This patch fixes this issue by adding the concerning folders if they're available.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/58fd9abfc19da9b36f48ac3454bbad7e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1255', 'title': u'Fix gemspec of full or mountable engines'}, {'body': u'@jonleighton this is the other :includes problem that I mentioned in #1233. Again this is a regression from 3.0.x.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1254', 'title': u'Ignore :includes on through associations'}, {'body': u'I think this is required<br/><br/>/cc @goncalossilva<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1253', 'title': u'import to java_import. '}, {'body': u'Using java_import instead of import. Need to do this with rake 0.9.0 #jruby', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1251', 'title': u'Using java_import instead of import. Need to do this with rake 0.9.0 #jruby'}, {'body': u'rake upgraded to new version', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1250', 'title': u'rake upgraded to new version'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e1c881ecb7bf966f44fecaa5387ab26b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1249', 'title': u'Removed EOL whitespace from all .rb files'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1248', 'title': u'Removing extra white-spaces on some templates'}, {'body': u'Not loading file if PLATFORM not available. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1247', 'title': u'Not loading file if PLATFORM not available. '}, {'body': u'Fixes #1233. Sending as a pull request so that it can be reviewed before merging.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1246', 'title': u"Don't ignore includes from default scope"}, {'body': u'Parenthesize arguments when the first one is a Regexp literal.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1243', 'title': u"Fix 'warning: ambiguous first argument; put parentheses or even spaces'."}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1241', 'title': u'Remove extra white-space on exception message.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73ba2d202efab9804e1e344f2079f605?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1240', 'title': u'fix minor spelling mistakes'}, {'body': u'This is a refactor, so no updates to tests.<br/><br/>This also could be cherry picked cleanly into 3-1-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3da9aebb918d0d1b12d66fcca93c289d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1239', 'title': u'Use set data structure to speed up circular reference checks on large/deeply nested objects'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1238', 'title': u'ruby-prof is failing to compile in ruby trunk, disable it for 1.9.3 in Gemfile'}, {'body': u'We ran in to an issue upgrading a Rails 2.3.10 project to Rails 3.0 due to put_via_redirect not being included in the list of methods that Runner wraps with a reset for @html_document. I also added delete_via_redirect for completeness.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/de4ad5b12586407fd72276710dc0fcb5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1236', 'title': u'Also reset put_via_redirect and delete_via_redirect.'}, {'body': u'Hey Guys,<br/><br/>This patch is for 3-1-stable and deprecates require_library_or_gem as its been removed in 3.2.<br/><br/>Enjoy,<br/><br/>Josh<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1235', 'title': u'Deprecate kernel requires'}, {'body': u'Hey Guys,<br/><br/>This patch is for 3-1-stable and deprecates `require_library_or_gem` as its been removed in 3.2.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1234', 'title': u'Deprecate kernel requires'}, {'body': u"As per comment mentioned for 'def root' at<br/><br/>https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/routing/mapper.rb#L259<br/><br/>root route should be at the very top because that will help it match<br/>first. Since root is most popular route it is beneficial.<br/><br/>I agree with that and this patch moves the root route to the top<br/>to encourage that behavior .", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1232', 'title': u'root route should be the very first route in routes.rb for efficiency reason'}, {'body': u'Hey Guys,<br/><br/>Here are some minor corrections to ActiveSupport core_ext/kernel debugger related code, one which removes a `require_library_or_gem`, which is bad practice imo, and subsequent requires (which were unused). And another commit which removes AS removing `breakpoint` from `Kernel` if it existed, this is added by `ruby-debug` as an alias and I am not sure why Rails would say its been renamed.<br/><br/>I think this is good to apply to 3-1-stable and master, but I leave that up to you.<br/><br/>Thanks,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1231', 'title': u'Ruby debugger corrections'}, {'body': u'Adds an entry into the ActionPack CHANGELOG mentioning the following new method: https://github.com/rails/rails/pull/1189', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1230', 'title': u'Add entry to AP changelog'}, {'body': u'Simple fix for correctly inverting an add_index migration when a name has been provided<br/><br/>This is for Issue #1205 on the github tracker.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/deaeef05e3709c24cfcc96b45a9420a9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1229', 'title': u'Fix for Issue #1205'}, {'body': u'Fixed version of https://github.com/rails/rails/pull/1219 - sorry for the noise', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/81b61875e41eaa58887543635d556fca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1228', 'title': u'Take into account time spent in AR even if a redirect occurs or if it is after the render'}, {'body': u'Kind of Revert <br/><br/>https://github.com/rails/rails/commit/90f028a4dc48152baded4cba9ec66474c2e98f48<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1222', 'title': u"We don't need to load version any more as Sprockets.beta8 is included. "}, {'body': u"There was a problem that I can't `cd actionpack` and `bundle exec rake` in there. Sprocket was trying to look for these two things:\n\n* `Rails::VERSION::STRING`\n* `.initializer(str)` in `Rails::Engine`\n\nThis commit added require to version.rb into Abstract Unit, and mocking the `Rails::Engine.initializer` in `sprockets_helper_test.rb`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1221', 'title': u"Make sure that we're able to run Action Pack test standalone."}, {'body': u"The performance breakdown at the end of an action doesn't include all time spent in activerecord - it only includes time spent until the point where the view finishes rendering. If more time is spent afterwards (or if no view is rendered at all, ie the response is a redirect) then it is not included in the total", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/81b61875e41eaa58887543635d556fca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1219', 'title': u'Take into account time spent in AR even if a redirect occurs or if it is '}, {'body': u':-)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1218', 'title': u'No more Lazy Tzinfo.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f93c896dd8c2003922ad854adae209d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1216', 'title': u'Tzinfo fixes.'}, {'body': u'remove require active_support/tzinfo as file dosent exists #TODO fix', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1215', 'title': u'remove require active_support/tzinfo as file dosent exists #TODO fix'}, {'body': u'Sprockets moved to beta6', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1214', 'title': u'Sprockets moved to beta6'}, {'body': u"This change to Hash key format (from ```:key => val```, to ```key: val```) breaks if you:<br/><br/>1. generate ```rails new foo``` on a machine w/ 1.9.2<br/>2. then deploy to a machine running 1.8.7 (like REE)<br/><br/>example:<br/><br/>```<br/>/config/initializers/session_store.rb:3: syntax error, unexpected ':', expecting $end (SyntaxError)<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/648805ae18e92b7c71e46f3caa23ddc8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1213', 'title': u'1.9 style Hash format in generated files breaks when deployed to 1.8.7'}, {'body': u'Only one space is needed, yo!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a9cc05e6a7866e5fa9a7d107b5070174?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1208', 'title': u'Remove superfluous whitespace from ActiveModel::SecurePassword '}, {'body': u'Loading jruby-openssl for all. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1206', 'title': u"Let's load jruby-openssl now for all. #jruby"}, {'body': u'This reduces false positives that come from using ints in params in<br/>tests, which do not get converted to strings in the tests. In<br/>implementations going through rack, they do get converted to strings.<br/><br/>- David Chelimsky and Sam Umbach', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5d38ab152e1e3e219512a9859fcd93af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1203', 'title': u'Stringify param values in controller tests.'}, {'body': u'Fix todo Time.xmlschema used instead of Time.parse', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1202', 'title': u'Fix todo Time.xmlschema used instead of Time.parse'}, {'body': u'````:dependent => :restrict```` with a ````has_many```` throws a ````ActiveRecord::DeleteRestrictionError```` exception when ````destroy```` is called on the object. <br/><br/>My initial intuition was that it would return a false with errors in the base object. My intuition was wrong, but i wish it was documented better so i can rescue from the exception.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1201', 'title': u'Document that has_many and has_one dependent restrict throws an exception.'}, {'body': u'This is a new fix NZKoz suggested, details: https://github.com/rails/rails/pull/563<br/><br/>Changes made: covered ConnectionPool#connection and #release_connection methods by mutex to fix thread-safe issue; changed ConnectionPool#clear_stale_cached_connections! to private to avoid outside call, which would not be thread-safe,<br/><br/>The old patch with the test provided to prove the thread-safe issue on jruby can be found at: https://github.com/xli/rails/commit/23828c0a9eca44c697765e06f39e0bc33ec74bb6<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6695342b0bee06015e6788ec728e1d39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1200', 'title': u'Fix ConnectionPool thread-safe issue'}, {'body': u'need to require hash/conversions to make available Hash.from_xml', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1199', 'title': u'test fix jdom_engine_test '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1198', 'title': u'Adding pluralize_table_names change to CHANGELOG'}, {'body': u"As said at the time by @rwdaigle in the [edge rails blog](http://ryandaigle.com/articles/2008/11/20/what-s-new-in-edge-rails-object-try),<br/><br/>> If the method doesn\u2019t exist, or if the target object nil, then nil will be returned without exceptions<br/><br/>That's not the case however.<br/>Only nil returns nil for try. If the method does not exists, a NoMethoderror will be raised.<br/><br/>This pull request changes it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1195', 'title': u"Don't raise NoMethodError the tried method doesn't exists"}, {'body': u':P', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1193', 'title': u'Loading action_controller twice removed.'}, {'body': u"1. rubygems now we don't need to require.\n\n2. ruby-debug is already in environment. If required then we need to have a check for ruby-version.\n\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1192', 'title': u'No more need rubygems here.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1191', 'title': u'Removal require again from tests.'}, {'body': u'Some time ago I pushed the #update_column method, and it can be seen here https://github.com/rails/rails/commit/245542ea2994961731be105db6c076256a22a7a9#commitcomment-384953 how someone asked for #update_columns, which to me makes sense for completeness and consistency.<br/><br/>So here it is :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1190', 'title': u'New #update_columns method.'}, {'body': u"Hi guys!<br/><br/>This patch adds the method FormHelper#fields_for_with_index which may be useful in situations where you need to access to the current child index while invoking field_for on a collection.<br/><br/>This feature is inspired on the discussion under the following open issue: https://github.com/rails/rails/issues/642.<br/><br/>Although I guess it's not a very common situation, I had to figure out how to access to the child index a few times. In the meanwhile, the best solution that I found it's the following:<br/><br/>http://stackoverflow.com/questions/4853373/rails-fields-for-with-index<br/><br/>However, the proposed method would allow us to write the same code more concisely, leaving to Rails the responsibility of iterating over collection members.<br/><br/>Hope it helps!<br/><br/>Cheers,<br/>Regards", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/10349623c33510dcf7a6c0805d948465?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1189', 'title': u'Add method FormHelper#fields_for_with_index'}, {'body': u"On 1.8 when using `ActiveSupport`'s implementation of the `BasicObject` if some `Object` extensions are loaded after the `active_support/basic_object` the do sneak their methods into `BasicObject` as well. In this case `BasicObject` ends up using `Object#duplicable?` instead of `Fixnum#duplicable?`.<br/><br/>This should got both into `master` and `3-0-stable`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1188', 'title': u'Fix AS::Duration#duplicable? on 1.8'}, {'body': u"`ActiveRecord::Associations::BelongsToPolymorphicAssociation#klass` returns a wrong value if the `polymorphic_type` attribute contains an empty string (`''.constantize` returns an `Object` instead of `nil`).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1187', 'title': u'Handle polymorphic_type NOT NULL columns'}, {'body': u'Duplicable test is looking fine now. <br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9d659a36c0ffc29defdeee9f3034b800?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1186', 'title': u'Duplicable test is looking fine now.'}, {'body': u"Reasons :<br/><br/>1.  rake_test_loader.rb in rake-0.9.0 loading twice cause test failing <br/><pre><br/>  1) Failure:<br/>test_uniq_load_paths(LoadPathsTest)<br/>    [/home/ubuntu/clones/rails/activesupport/test/load_paths_test.rb:14:in `test_uniq_load_paths'<br/>     /home/ubuntu/clones/rails/tmp/bundle/ruby/1.8/gems/mocha-0.9.12/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:22:in `__send__'<br/>     /home/ubuntu/clones/rails/tmp/bundle/ruby/1.8/gems/mocha-0.9.12/lib/mocha/integration/test_unit/ruby_version_186_and_above.rb:22:in `run']:<br/><br/></pre><br/><br/>2. https://github.com/rails/rails/pull/1174 <br/><br/>I think we need to wait for newer version.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1185', 'title': u'For now using older rake version. '}, {'body': u'db:schema:dump', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6cb0b3e9e50fe72285047eac56209f49?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1184', 'title': u'Fixes connection_not established error while running db:schema:dump'}, {'body': u'Failing test case for #1170<br/><br/>If you pass the attributes as a hash and add another hash with :as => :role, no attribute is assigned. <br/><br/>What is the expected behavior? ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f93c896dd8c2003922ad854adae209d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1183', 'title': u'failing test case for issue 1170'}, {'body': u'Check for Module.new.dup as well in https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/object/duplicable.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ff984622cd3a9ca31bd0e7e034fc8b17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1182', 'title': u'Enhanced test for duplicable in  active_support/core_ext/object/duplicable.rb'}, {'body': u'Example Action Mailer Deliver Method changes updated For #761', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1181', 'title': u'Example Action mailer deliver method changes Ticket #761'}, {'body': u'Documentation Error fixed for the ticket #839.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3affd46d9454425d2db2e84b19dfb89?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1180', 'title': u'Documentation Error Fixed for ticket #839'}, {'body': u'Fixed failing tests ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/839f782d9b8cace33c986f15435f493e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1179', 'title': u'fixed failing tests of ActiveSupport for deprecation test'}, {'body': u"Hey Guys,<br/><br/>Sorry, the last commit didn't include one of the files, my bad.<br/><br/>Enjoy,<br/><br/>Josh <br/><br/>ps. I tried to correct it but Jos\xe9 was to fast", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1178', 'title': u'Corrected a minor ruby19 variable name reuse warning'}, {'body': u'Hey Guys,<br/><br/>Fixed some ruby 19 warnings, including circular requires and variable name reuse.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1177', 'title': u'Fixed some ruby 19 warnings'}, {'body': u"Hey guys,<br/><br/>This patch allows use object.fetch(:method, 'default return') instead: object.respond_to?(:method) ? object.method : 'default return'<br/><br/>It's is a shortcut that i've been using<br/><br/>Hope this helps someone else", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/56d84b6bf4f2fed7069ad9ee24dea891?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1176', 'title': u'Add support for fetch methods or return the default value informed'}, {'body': u'Hey Guys,<br/><br/>attr_accessor_with_default is deprecated, so lets not use it in ActiveResource.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1175', 'title': u'attr_accessor_with_default removed from ActiveResource'}, {'body': u"Fixes incompatibility introduced by Rake 0.9.0<br/><br/>As of Rake 0.9.0, methods such as 'task' are no longer available globally.  They're placed in Rake::DSL instead.  This breaks Rails::Application's initialize_tasks method.  It also breaks subclasses of Railties which call Rake's methods in a rake_tasks block.<br/><br/>I've updated Rails::Railtie to extend Rake::DSL (if available) before loading tasks, so that formerly-global rake methods can still be called within rake_tasks blocks.  I also updated Rails::Application to add its tasks within a rake_task block so it can use the rake DSL methods without issues.<br/><br/>This fixes [issue 1171](https://github.com/rails/rails/issues/1171).  The code is compatible with Rake 0.9.0 and Rake 0.8.7.  <br/><br/>The change needs to be back-ported to the 3-0-stable branch as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9725654579e29d948873eee2f3458a06?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1174', 'title': u'Make Rake::DSL methods available within Railtie rake_tasks block'}, {'body': u"i18n is used for even basic parts like core_ext/string, so really, it's a dependency", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b19b02a49b433c9e2e6e6c43785d2bfb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1173', 'title': u'Missing i18n dependency on ActiveSupport ?'}, {'body': u'This patch allows to specify the name of your models independent of the class name.<br/><br/>I added a third Argument to the #initialize method to maintain backward compatibility. It would probably be cleaner to add an options hash after the class, which contains the namespace and the name options.<br/><br/>This request solves the issue #1168', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d698e2872c07061a455d9e250861235?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1169', 'title': u'Specify the name to be used for ActiveModel::Name fixes #1168'}, {'body': u'Simple patch that allows the user to check if an integer is multiple_of many numbers at the same time.<br/><br/>For example:<br/>12.multiple_of?(6)<br/>12.multiple_of?(2,6)<br/><br/>Hope this helps someone else,<br/>Alberto.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7a4bb535d5218b0ab4e92dd53618709c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1166', 'title': u'Multiple_of methods accepting many parameters rather than only one.'}, {'body': u'Not updating rubyforge for new versions. <br/><br/>Result of "gem list -d rails" is not useful.<br/><br/>http://rubyforge.org/projects/rails displaying 2.3.3 version :-)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1165', 'title': u'Not updating rubyforge for new versions. '}, {'body': u'Let me propose a new Rails-3-ish cooler syntax for the database migrations.\nThis pull request enables you to remove the block parameter and t. t. t. t. t. t. t. ... from your migration code.\n\nThis is actually the same thing with what I posted here in January, so please refer to this ticket for details.\nhttps://rails.lighthouseapp.com/projects/8994/tickets/6339\n\nThe reasons why I made another pull request today are:\n\n* The attached patch on the ticket does not apply anymore to the current master\n* The proposal got many +1s from people\n* The ticket is in "wontfix" state (by mistake?), and maybe because of that, was not copied to GH issues\n* I think 3.1 is the best timing for including another change on the migration syntax\n* I guess @tenderlove have not looked at it yet\n\nSo, @tenderlove, can you please take a look at [the former ticket](https://rails.lighthouseapp.com/projects/8994/tickets/6339) and this pull request, then give me your thoughts?\nThanks in advance!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1163', 'title': u'Sexier migrations'}, {'body': u'This allow set pluralize_table_names for an individual class.<br/><br/>    class Post < ActiveRecord::Base<br/>      self.pluralize_table_names = false<br/>    end<br/><br/>Previously when you set it for a class it was used globally (We discuss a little about it here: https://github.com/rails/rails/pull/560#issuecomment-1165420)<br/><br/>cc @jonleighton', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1162', 'title': u'Singularize individual table name'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1161', 'title': u'Syntax cleanup:  for in => each on ActiveRecord'}, {'body': u'This reverts commit e4ebded5bcd4f54fee0c4f643c9df76aeb22436e.<br/><br/>@josh <br/><br/>As this got reverted https://github.com/rack/rack/commit/bc30108180e2472423497657b55f7ccb8749a7a0<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1160', 'title': u'Revert "Use Rack::ContentLength."'}, {'body': u'Is this more or less what you had in mind?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cdc3fc7e6309a7989b6f5467670ec3cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1159', 'title': u"Refactored has_secure_password per @tenderlove's talk at RailsConf."}, {'body': u'Remove extra white spaces on these ActiveRecordError messages', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1157', 'title': u'Remove extra white spaces.'}, {'body': u'Fix styles of docs pushed on this commit: https://github.com/rails/rails/commit/0afd5850f5bba4bd3f1218e27a4a1488c9fdb83e', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1156', 'title': u'Better styling on docs'}, {'body': u'http://edgeapi.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources<br/><br/>:shallow_path code example is wrongly indented.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6765ba9f85d8ac2d99725c347eadc023?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1155', 'title': u'fixes code highlight in shallow_path example'}, {'body': u'Version Bump.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1153', 'title': u'Sprockets version update.'}, {'body': u'Hey Guys,<br/><br/>I renamed the wrap_parameters :only and :except options to :include and :exclude to make it consistent with controller filters options.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1151', 'title': u'renamed the wrap_parameters :only and :except options to :include and :ex'}, {'body': u'Because of this it is probable to have two cookies (even session cookies) in the jar, one keyed as a symbol, one as a string. These two cookies are sent to the browser and the browser "chooses" which cookie to use. If it is a session cookie (as was my case) things like csrf get reset on every request which makes submitting forms hard.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f7891bf864cadfb23971078e759df133?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1150', 'title': u'The cookie jar does not to_s cookie names (keys)'}, {'body': u"This commit (3021297e89dc3720d1bce50dabf1177f8935172e) removed the ability to override an ActiveRecord attribute, to have it return a default value for example, and have the overridden value appear in a text field.<br/><br/>I'm guessing there might be a good reason to want to call `#<method>_before_type_cast` but it's not tested so I've added a test and fix to produce the behaviour I want.<br/><br/>I'm doing this more to discuss why it might be useful to call `#<method>_before_type_cast` and work out what tests are missing should that be the case.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/dd6d0a4bc83fa0e19de0c6cec3b9b52b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1147', 'title': u'Overridden ActiveRecord attributes should appear as the value in text fie'}, {'body': u'Minor changes in test files for array representation', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1145', 'title': u'Minor changes for array representation'}, {'body': u"Minimal change to query generation of FinderMethods#exists? that makes SQLServer and others happy that do not like columns without an alias.<br/><br/>Without this patch MS-SQLServer doesn't like the generated SQL and barks for FinderMethods#exists?, ie:<br/><br/>ActiveRecord::StatementInvalid: ActiveRecord::JDBCError: No column was specified for column 2 of 't'.: SELECT t.* FROM (SELECT ROW_NUMBER() OVER(ORDER BY huhu.id) AS _row_num, 1 FROM huhu WHERE huhu.[id] = 83287) AS t WHERE t._row_num BETWEEN 1 AND 1", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/507d9f43c8aa17394a7815a2e3d6dca6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1141', 'title': u'Fix FinderMethods#exists? sql generation to make picky sql servers happy - 3 0 stable'}, {'body': u"Minimal change to query generation of FinderMethods#exists? that makes SQLServer and others happy that do not like columns without an alias.<br/><br/>Without this patch MS-SQLServer doesn't like the generated SQL and barks for FinderMethods#exists?, ie:<br/><br/>ActiveRecord::StatementInvalid: ActiveRecord::JDBCError: No column was specified for column 2 of 't'.: SELECT t.* FROM (SELECT ROW_NUMBER() OVER(ORDER BY huhu.id) AS _row_num, 1 FROM huhu WHERE huhu.[id] = 83287) AS t WHERE t._row_num BETWEEN 1 AND 1", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/507d9f43c8aa17394a7815a2e3d6dca6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1139', 'title': u'Fix FinderMethods#exists? sql generation to make picky sql servers happy'}, {'body': u"According to that issue: https://rails.lighthouseapp.com/projects/8994/tickets/6779-activesupporttimewithzone-in-range-performance-bug<br/><br/>In Ruby 1.8.7 methods Range#min, Range#max are included from Enumerable. These methods iterate all range, so finding min or max takes a lot of time. In Ruby 1.9.2 it's been fixed by adding own Range#min, Range#max methods.<br/><br/>I've created patch, which is adding own Range#min, Range#max methods only when these methods are included from other module, so it's working with both Ruby versions.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c629b13972f73866903fa6cb3bf074d1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1138', 'title': u'Extend Range to have own min, max methods'}, {'body': u'Little change in activemodel/lib/active_model/observing.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1137', 'title': u"Prefer 'each' instead of 'for in'"}, {'body': u'Changes is examples.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1136', 'title': u'Actionmailer readme'}, {'body': u'As per changes  in <br/><br/>https://github.com/rails/rails/commit/22ed6cb798b476f63e5d5b84cb28e054c4f1870e', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1135', 'title': u'README updated for for => each'}, {'body': u'Hey Guys,<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1133', 'title': u"Fix misspelling of 'lambda'. Closes #987"}, {'body': u'Updated the ARes changelog.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1132', 'title': u'Updated the ActiveResource changelog'}, {'body': u'Hey Guys,<br/><br/>This is a fixed patch for #1058.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1131', 'title': u'Attributes with :string type should not be given the type passed in model. Closes #1058.'}, {'body': u'With this patch it is now possible to use CoffeeScript to respond to JS requests. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c6f2229ca2c8dcf0176f036508ec2c3b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1130', 'title': u'Added ability to use foo.js.coffee files in views.'}, {'body': u"I'm sorry there was a tiny formatting mistake in my previous commit 486a890505e268ddbc37edf7f1b32fbebd337fc1", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1129', 'title': u'on.upcase!'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1126', 'title': u'Update Rack::Mount to 0.8.1'}, {'body': u'Fixed tons of warnings in railties/lib and test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1124', 'title': u'Fix railties warnings'}, {'body': u'I believe this is more modern style.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1123', 'title': u'change `for ... in` in the generator templates to Enumerator#each'}, {'body': u'Generally, we should use JOIN clause for joining tables unless the DBMS is a legacy DB like Oracle 8.<br/><br/>Also, I found there were some unused tables in the FROM clause in Postgres schema_queries that probably made the query slow. df13f55d757dc8af30391b8d15af2c2d04f26aa4<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1122', 'title': u'improvements on PostgreSQL schema queries'}, {'body': u'This follows [this pull request](https://github.com/rails/rails/pull/1116#issuecomment-1195703).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1121', 'title': u'make sure we add the dependency to turn if required'}, {'body': u'This code was already on lighthouse. No one pay attention, so I make this pull request.<br/>Github issue #925', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/92eacf4307bbccd8bcf30fccfd3e7655?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1120', 'title': u'collection_singular_ids ignores association :include option'}, {'body': u'`ActiveSupport::Duration` instances, such as `30.minutes` or `5.hours`, are not properly quoted by `ActiveRecord::Base.connection.quote()`.<br/>Instead of `to_s`  was used `to_yaml`<br/>This test will fail on 2.3.11 and master, but pass on 3.0.5 because  https://github.com/rails/rails/commit/7e4e1f0ca5722008b288224221405eba486345c1<br/>in this commit `to_yaml` was changed to `to_s`<br/>But in https://github.com/rails/rails/commit/fd1cf13f743ac7ba71f19dff6d8e22f5ac7bc603 was changed back to `to_yaml`.<br/>I not sure which commit is right.<br/><br/>On my opinion, 30.minutes should be quoted as Numeric, because 30.minutes is a Numeric. <br/>But<br/>ruby-1.9.2-p0 > Numeric === 30<br/> => true <br/>ruby-1.9.2-p0 > Numeric === 30.minutes<br/> => false <br/>ruby-1.9.2-p0 > ActiveSupport::Duration === 30.minutes<br/> => true <br/>ruby-1.9.2-p0 > 30.minutes.class<br/> => Fixnum <br/>ruby-1.9.2-p0 > 30.minutes.is_a?(Numeric)<br/> => true<br/> <br/>Can someone explain me the `===` operator ?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/92eacf4307bbccd8bcf30fccfd3e7655?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1119', 'title': u'Test for quoting ActiveSupport::Duration instances.'}, {'body': u'I believe this is as useful as `ActiveRecord::Base.logger = Logger.new(STDERR)` thing (yes, I really love that too!)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1118', 'title': u'always enable `pp` on the Rails console'}, {'body': u'Hey Guys,<br/><br/>I think the title speaks for itself, just some AS missing requires.<br/><br/>Enjoy,<br/><br/>J', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1117', 'title': u'Add some missing requires for AS core_ext/numeric/time. Closes #1038'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1116', 'title': u'Fixing typo in test for turn gem'}, {'body': u'Hey Guys,<br/><br/>This corrects the ActiveResource gem and tests to work with json (with root) for 3.1.<br/><br/>I will add some further tests for rootless-json within the coming days.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1115', 'title': u'ActiveResource json updates'}, {'body': u'Putting back mysql2 and sqlite3 in database.yml docs. In case people use "--skip-gemfile"<br/><br/>/cc @josevalim :-) ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1114', 'title': u'Putting back mysql2 and sqlite3 in database.yml docs. In case people use '}, {'body': u"Add test case for inclusion of 'turn' gem in Gemfile unless RUBY_VERSION < 1.9.2.<br/><br/>I have a question for this, why only inclusion of 'turn' gem unless RUBY_VERSION < 1.9.2?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1112', 'title': u'add test case for turn gem for testunit.'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1109', 'title': u'Use dup to preserve previous behavior'}, {'body': u'instruct user to install using Gem file in database.yml template', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1106', 'title': u'instruct user to install using Gem file in database.yml template '}, {'body': u"`gem install sqlite3` won't work in a bundle based world", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11c26a69dc9e9abfcabcb35d28963613?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1105', 'title': u'For Issue #1103 - Fix for sqlite3.yml, mysql.yml'}, {'body': u'This is only partially a joke.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/90e5b25711281e727130d9db840cd363?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1104', 'title': u'Update Chicago mayor'}, {'body': u'Fixed InnerJoinAssociationTest. Need to load essays fixture.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1100', 'title': u'Fixed InnerJoinAssociationTest. Need to load essays fixture.'}, {'body': u'Specifically, skip redundant work when calling <tt>with_indifferent_access()</tt>, and skip key/value conversions when calling <tt>update()</tt> with another HashWithIndifferentAccess.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1099', 'title': u'Optimize parts of HashWithIndifferentAccess'}, {'body': u'fixed the faling test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1098', 'title': u'fixed failing test'}, {'body': u"It is not right to assume that if year is 0 then date is nil.<br/>In our example we store dates in BC and 0000-01-01 is a valid date<br/><br/>So I've added check that for date to be nil year month and mday have to be 0.<br/><br/>I couldnt find a test for this case and wasnt sure where is a good place to add it.<br/><br/><br/>Cheers,<br/>Kirill R<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/67a9f283ad55ae57499199a9e0a3eb04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1097', 'title': u'Improved "treat  0000-00-00 00:00:00 as nil Date"'}, {'body': u'This fix the "NameError: uninitialized constant Engine::Car" raised when try to run test individually (rake test_sqlite3 TEST=test/cases/associations/join_model_test.rb)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1095', 'title': u'Adding missing require to join_model_test'}, {'body': u'This patch resets the postgres search path in the structure.sql file<br/>prior to dump schema information in order to find schema_migrations<br/>table when multiples schemas are dumped.<br/><br/>See discussion here: https://github.com/rails/rails/issues/945', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f63a259f9b2375e2e900b8cfcc1420fd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1094', 'title': u'rake db:test:clone_structure might fail with multiple schemas in postgres'}, {'body': u"Using the `CssCompressor` instead of `JavaScriptCompressor` just like Jammit does. <br/><br/>[]'s<br/>Lucas.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5a90a67fa1a92e6a4b605cfd8da5e375?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1093', 'title': u'Using the correct CSS compressor for the yui-compressor gem.'}, {'body': u'When joining a single table in to a query multiple times, it\'s convenient to be able to access an Arel::Table with a specific alias, without manually creating it. Example:<br/><br/>    org1 = Organization.arel_table<br/>    org2 = Organization.arel_table as: "organizations_user_organizations"<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cdc3fc7e6309a7989b6f5467670ec3cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1092', 'title': u'Accept options to ActiveRecord::Base#arel_table '}, {'body': u'This adds the convenience of allowing developers to continue to use the simple boolean check on multiple environments. We use parallel_spec which creates test[1..4], breaking our .test? assumptions. This fixes that issue by doing a regexp check on the string.<br/><br/>```ruby<br/>RAILS_ENV=test<br/>Rails.env.test? #=> true<br/>```<br/><br/>```ruby<br/>RAILS_ENV=test1<br/>Rails.env.test? #=> true<br/>```', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d48aa0bf0b5323075ed4c5ddad1ba315?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1091', 'title': u'ActiveSupport::StringInquirer does a regexp check instead of direct match'}, {'body': u"Given this code:<br/><br/>``` ruby<br/>Class.new(ApplicationController)<br/>```<br/><br/>I get the following error:<br/><br/>```<br/>+/Users/david/.rvm/gems/ruby-1.9.2-p180@rspec-dev/gems/activesupport-3.1.0.beta1/lib/active_support/whiny_nil.rb:48:in `method_missing': undefined method `sub' for nil:NilClass (NoMethodError)<br/>+\tfrom /Users/david/.rvm/gems/ruby-1.9.2-p180@rspec-dev/gems/actionpack-3.1.0.beta1/lib/action_controller/metal/params_wrapper.rb:140:in `_default_wrap_model'<br/>```<br/><br/>This is caused by `model_name = self.name.sub(/Controller$/, '').singularize` on https://github.com/rails/rails/blob/8b0262f9535cb9ad2215e5ed672150e2c52cb4b4/actionpack/lib/action_controller/metal/params_wrapper.rb#L143<br/><br/>I've added a failing test case, and will offer up a solution in the next day or so.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5d38ab152e1e3e219512a9859fcd93af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1090', 'title': u'3.1: params_wrapper raises error on anynomous controllers'}, {'body': u'Please find proposed fix for attr_accessor_with_default. It addresses the problem which can be triggered by memcached client library when it tries to marshal an object with non-default attribute value. #refactotum<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8cf18195d36be3f774344820b1302c62?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/1088', 'title': u'Fix for attr_accessor_with_default causing "singleton can\'t be dumped" exception on marshaling'}, {'body': u'I suppose this is obviously the case for suggesting people to use the HTML5 tag helper.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1087', 'title': u'generate HTML5 number_field tag for integer fields'}, {'body': u"I'm working on HTML5 client side validator plugin and found these unneeded options are making my plugin difficult to implement.<br/>I believe these default values should not be merged on initializer so that we can know what kind of options were passed to the validator.<br/><br/>These commits were actually extracted from this patch. https://github.com/rails/rails/issues/702", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/1085', 'title': u'cleanups on AMo validator initializers'}, {'body': u'living on edge rdoc updated', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/700', 'title': u'living on edge rdoc updated'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/573', 'title': u'Add doc to #attribute_names'}, {'body': u"After all of the discussion, I think it's time for extract ActiveResource to a separate git repository. This will make sure that people will fork it and contribute to it in a good way.<br/><br/>I've done a `git filter-branch` (http://www.kernel.org/pub/software/scm/git/docs/git-filter-branch.html) to extract `ActiveResource` out, while making sure all of the history is still there. I've pushed it temporary to here: https://github.com/sikachu/activeresource.<br/><br/>I've saw that @radar has working on another rewrite of activeresource, and I think I'll try to merge in his rewrite to the project.<br/><br/>I'm thinking about making active_resource as external dependency on 3.1, and then make it a commented out option in Gemfile later in 3.2+ (or 4.0). This is to make sure that `ActiveResource` will still be available for people who're using it for now.<br/><br/>Please review the proposal, and apply it if you think it's appropriate. All the tests, except for the one that was broken, is passing.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/572', 'title': u'Remove Active Resource source files from the repository'}, {'body': u"From the concern in #567, I've added a class method name `.attribute_names` to both `ActiveModel` and `ActiveRecord`. This method should return an array of attribute names, usually the column names if it's a database-backed storage. However, it's less fragile and will return empty array if the table is not exists or the model is an abstract model.<br/><br/>I've added appropriate test case for each of it. Please review and merge it if you see appropriate.<br/><br/>Thank you.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/570', 'title': u'Make ParamsWrapper use a well-defined API and not rely on AR methods'}, {'body': u'This makes the `fields_for` and `instantiate_builder` methods more clear and consistent, and fixes an issue with non nested attributes and no object given. We had this issue while working on SimpleForm compatibility for Rails 3.1.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/568', 'title': u'Fields for fixes for non nested attributes and without object'}, {'body': u"Normally the table for abstract class won't be existed, so we should not trying to call `#column_names` on it.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/564', 'title': u'Do not try to call `column_names` on the abstract class.'}, {'body': u'fixed ConnectionPool#connection and ConnectionPool#release_connection thread-safe problem; private ConnectionPool#clear_stale_cached_connections! method, which is not thread-safe called outside<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6695342b0bee06015e6788ec728e1d39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/563', 'title': u"Fix ConnectionPool's thread-safe issue"}, {'body': u'This addresses this two year old ticket:\nhttps://rails.lighthouseapp.com/projects/8994/tickets/2503\n\nI have one comment in the code looking for suggestions on how to reduce the number of arguments to the new method:\nhttps://github.com/jpalermo/rails/commit/47e6809a4d437a8913bb167db476206a5f8e69d9#commitcomment-383890', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/edd7219b682c851981e454b7b08e7579?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/561', 'title': u'Only use LOWER for mysql uniqueness check when column is case sensitive'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/560', 'title': u'Fixing has_many when ActiveRecord::Base.pluralize_table_names is false'}, {'body': u'A couple of utility methods to port the functionality of Array#each_with_index to the grouping methods.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/556', 'title': u'Array grouping methods with index'}, {'body': u"Currently, the runtime isn't reset following a redirect or a send_file, so any time taken to process those actions is added to the time for the subsequent request.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f46d76f0e5db4dc318b03be07ebaac4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/554', 'title': u'ActiveRecord::LogSubscriber.runtime should be reset at the start of each request'}, {'body': u'Changes as per mailer_generator_test ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/553', 'title': u'Fixed failing tests for namespaced_generators_test. in 1.9.2'}, {'body': u'returning hwia is more consistent with other APIs, for example:<br/>* attributes= and update_attributes= accept both symbolized and stringified hash<br/>* [] accessor method accepts both Symbol and String for the attribute name', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/551', 'title': u'changed AR::Base#attributes to return a hash with indifferent access for the sake of API consistency'}, {'body': u'just a typo', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eb6209ab10193b006632c32e6606531b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/550', 'title': u'typo'}, {'body': u'This allows you to change the parameter name of the UTF8 enforcer tag in Rails generated forms.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/549', 'title': u'Utf8 enforcer param customization'}, {'body': u'rack_mount updated to latest version', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/547', 'title': u'rack_mount upgrade to new version 0.8.0'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/542', 'title': u'Use new hash syntax in wrap_parameters initializer under Ruby 1.9'}, {'body': u'A lot of Rails devs use Macs and end up with .DS_Store files in their Rails apps. Everyone **should** put ".DS_Store" in their global .gitignore, but most don\'t. This will keep .DS_Store files out of repos.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/317259b800623d76bba3e7a4fbbbf70a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/541', 'title': u'I added ".DS_Store" to gitignore files'}, {'body': u'This is per @dhh request as to complete the 1.9 generator series', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/540', 'title': u'Update Mailer generator to use 1.9 styled hash when run on Ruby 1.9'}, {'body': u'Commit 1 : rack-mount gem updated to 0.7.3 (contains fix for (route segment values) #529<br/><br/>Commit2 : Added tests for #529 (Not sure if we needed here. If not please discard this.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/538', 'title': u'Update rack mount'}, {'body': u'removed a noise introduced by 00379ee998b5ed10d8a4197f3fa0f57873f17ba1', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/537', 'title': u'eliminating the noise'}, {'body': u"There were a lot of simple errors with railties' gem code causing exceptions to be raised when starting a rails 2.3 app with rubygems 1.8.x installed. This fixes those errors. This should also address nearly all deprecations.<br/><br/>I still need to work the use of SourceIndex out of it, but that can come later.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16c4b19d8670085a428787f8b2438223?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/536', 'title': u'Fix several of the rubygem issues in rails 2-3-stable. '}, {'body': u'Because rake rails:update:scripts fails due to this change.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/532', 'title': u'Revert "Delegate everything to the generator"'}, {'body': u'Because javascript libraries are not bundled anymore, and create_javascript_files generator was already removed by 5e7e81ab1aaeed504b98', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/531', 'title': u'remove update:javascripts rake task'}, {'body': u'reloading an association will properly set attributes of instantiated objects respecting overloading and composed_of', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8932131f8e76415dd55a92c8ac4588ef?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/530', 'title': u'Reloading an association works incorrectly when there is overloading or composed_of'}, {'body': u"Adding a default_scope to the end of a has_many :through relationship breaks a number of things.<br/><br/>I've found it through a :uniq => true on the relationship, but the attached change to the tests seems to break a number of other things", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a1e4b26aca7c00f59a3ed4eb77643de5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/528', 'title': u'Default scope breaks working of has_many :through'}, {'body': u'Hey Guys,<br/><br/>This removes a circular require in AS deprecations. This is safe as AS deprecations is autoloaded as needed.<br/><br/>Thanks,<br/><br/>J', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/527', 'title': u'Remove a circular require in AS deprecations.'}, {'body': u'Hey Guys,<br/><br/>I updated AR#create! to accept an options hash so the mass-assignment security role can be passed in, also updated the Changelog to mention the change to some of the AR method signatures.<br/><br/>Thanks to @pixeltrix for pointing these out.<br/><br/>Cheers,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/524', 'title': u'AR#create! allows for :as => role, and AR changelog update'}, {'body': u'Following with #503 (by @smartinez87), I changed "something=>other"  to "something => other" on ActiveRecord tests', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/523', 'title': u'Follow code conventions on ActiveRecord tests'}, {'body': u'There were two newlines at the end of the development config file. I removed one.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cfcb04c047fa5fa6c2dd0aeaeba560ab?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/521', 'title': u'Removed extra newline at end of development config file. (There were 2)'}, {'body': u'As I commented in https://github.com/rails/rails/commit/f9d5a7bb8c5d224f689dafb4ff641e2ced244f03#L0R1647 `guard_protected_attributes` has invalid assignment to be always true. In consequence, when you had `guard_protected_attributes` set to `false` in `attributes=`, it stopped working.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/769f0b312d64290f1c6c5e73039c582b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/519', 'title': u'`guard_protected_attributes` has invalid assignment to be always true in attributes='}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/82890582bc10ffebe1ae4c7127effa01?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/516', 'title': u'add missing require for ordered_hash dependency'}, {'body': u'Hey Guys,<br/><br/>Minor changelog addition for the multi_json change in AS.<br/><br/>Thanks,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/515', 'title': u'updated the ActiveSupport changelog'}, {'body': u'changed AR base#column_names, now instance variable @column_names ever assigned<br/><br/>see: <br/>https://rails.lighthouseapp.com/projects/8994/tickets/6774-arcolumn_names-doesnt-get-all-columns', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cc57d2311fadb4c4ba5ce3482069daff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/514', 'title': u"column_names sometimes doesn't fetch all columns"}, {'body': u"Been looking for an opportunity to help out for a little while, and I just noticed that there was one reference in CollectionAssociation's class docs to AssocationCollection. I also noticed that it was referenced (in a string) in the NamedScopeTest.\n\nAlso, should the header `# = Active Record Association Collection` be changed to `# = Active Record Collection Association`?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5ccd0ef26cb0bd488c7e496f080f8dc5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/513', 'title': u'Modified CollectionAssociation documentation to refer to the new class name'}, {'body': u'- If doing a count on a relation that has an :include and a :join.  And no party of the query depends on the tables in the :include, it does a distinct count even though it should not.<br/><br/>- When doing a count on a relation that has an :include, it always falls back to an old style left outer join when performing the count.  Looks like it was broken here:<br/>https://github.com/rails/rails/commit/b9599502c9e738a5a1513e75d08f8d40ed408265', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6a3655e320245d3587aa97b6efb3fca1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/512', 'title': u'Bug fixes:'}, {'body': u'I\'m not 100% sure if this is a documentation bug or a bug in AR itself. However the old example in the docs<br/><br/>    Post.unscoped {<br/>      limit(10) # Fires "SELECT * FROM posts LIMIT 10"<br/>    }<br/><br/>does not work, it has to be<br/><br/>    Post.unscoped {<br/>      Post.limit(10) # Fires "SELECT * FROM posts LIMIT 10"<br/>    }<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/82890582bc10ffebe1ae4c7127effa01?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/509', 'title': u'fix bug in usage example of #unscoped'}, {'body': u'The tests probably broke in 0e1dcae1857db4f6721561caff38d8be748d0b40', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/507', 'title': u'Fix tests to reflect IdentityMap no longer default'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/506', 'title': u'Test csrf token param name customization'}, {'body': u'*Update: as ncreuschling points out, there was a typo in the pull request message that said "HTML verb" instead of "HTTP verb".*<br/><br/>*Updated: update forms default to PUT instead of PATCH for current apps. Defaults to PATCH for new apps.*<br/><br/>PATCH is the correct HTTP verb to map to the #update action. The semantics for<br/>PATCH allows for partial updates, whereas PUT requires a complete replacement.<br/><br/>Changes:<br/>* adds the #patch verb to routes to detect PATCH requests<br/>* adds #patch? to Request<br/>* adds the PATCH -> update mapping in the #resource(s) routes.<br/>* changes default form helpers to prefer :patch instead of :put for updates *only for new apps*<br/>* changes documentation and comments to indicate the preference for PATCH<br/><br/>This change tries to maintain complete backwards compatibility by keeping the<br/>original PUT -> update mapping. Users using the #resource(s) routes should not<br/>notice a change in behavior since both PUT and PATCH requests get mapped to<br/>update.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/505', 'title': u'Patch verb'}, {'body': u"See https://rails.lighthouseapp.com/projects/8994/tickets/6773-race-condition-in-actioncontrollercachingpages<br/><br/>Note that I've added both File-based locking, which may not be necessary (but can't hurt), and in-process locking using mutexes which address a real issue we say (we can provide evidence if you're skeptical).<br/><br/>For every path cached, we now create a new mutex that stays around forever. This may be a problem if someone is caching an unbounded number of pages; I'm willing to discuss, and volunteer to implement, any alternative solutions. We may want to fall back on a single global mutex, since what we're synchronizing (writing a file to the cache path) should often be very fast.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b12ead92306a438050ef9001cf8247c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/504', 'title': u'Address Issue #6773, "Race condition in ActionController::Caching::Pages"'}, {'body': u'changed all the places when we had <pre><code>something=>other</code></pre> to <pre><code>something => other</code></pre>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/503', 'title': u'Follow code conventions on some tests'}, {'body': u'Now that Sass is used by default in new apps is a good idea add .sass-cache/ to .gitignore by default', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/501', 'title': u'Adding .sass-cache to gitignore template'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/351ab0ddeb5b6d1d3b5ce3b2b32ee871?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/500', 'title': u'Use quotes for command substitution'}, {'body': u'Impact guides with this change: https://github.com/rails/rails/commit/558334a899c15d6af94aa5c8f594c8de27384b95', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/499', 'title': u'impact guides with no CSV fixture support'}, {'body': u'even looks more clean', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/498', 'title': u'minor cleaning with new api method all'}, {'body': u'cleaned', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2f93c896dd8c2003922ad854adae209d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/496', 'title': u'Gemfile is even more cleaner now.'}, {'body': u'minor cleaning', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c32dc2a8677cb6330dc9a2931543c0a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/495', 'title': u'minor cleaning'}, {'body': u'Use all in place of find(:all) in the rails runner help message', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/494', 'title': u'Use all in place of find(:all)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/493', 'title': u'Merging 3.0.x CHANGELOGs'}, {'body': u'(Rebased version of https://github.com/rails/rails/pull/200#commits-pushed-7448ec0)<br/><br/>The way ActiveModel computes the type of serializable methods and attributes, any that return nil will be described as being YAML. <br/><br/>This produces XML like:<br/><br/>    <person><br/>      <name>John Doe</name><br/>      <preferences type="yaml" nil="true"></preferences><br/>    </person><br/><br/>However, in many cases, the \'type="yaml"\' part is unnecessary, and potentially misleading.<br/><br/>With this patch, the equivalent to the above XML would be:<br/><br/>    <person><br/>      <name>John Doe</name><br/>      <preferences nil="true"></preferences><br/>    </person><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1135d4703e47b03465798d3f63b3995f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/492', 'title': u'Serialized methods that return nil should not be considered YAML'}, {'body': u'/cc @fxn', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/491', 'title': u'Some readme fixes as required. '}, {'body': u'Replace the LH ticket url with GitHub url for filing issues', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/490', 'title': u'Replace LH with GitHub url for filing issues'}, {'body': u'Fix case in asset generator descriptions', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/487', 'title': u's/javascript/JavaScript'}, {'body': u'When using global whitelisting, AR::SS does not work at all (depending of your RDBMS you may get an ActiveRecord::StatementInvalid exception because of NULL constraint on session_id).<br/><br/>This problem exists in Rails 2, Rails 3 and Rails 3.1.<br/><br/>But as Rails 3.1 got a new feature to easily enable global whitelisting (config.active_record.whitelist_attributes = true), I think we should fix AR::SS to work by default when using this feature.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8458ed8e78b2660f8b839f052e20f65f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/484', 'title': u'Puts ActiveRecord::SessionStore attributes in white list, fixes #483'}, {'body': u'Fix a couple of typos in IM documentation', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/482', 'title': u'Fix typos in IM documentation'}, {'body': u'Hey Guys,<br/><br/>The name says it all :)<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/471', 'title': u'Removed an unneed AS::Concern from AR::IdentityMap'}, {'body': u"This adds two methods to SecureRandom. random_from_set randomly chooses a given number of items from a set, returning an object of the same type.  random_unambiguous_code returns an alpha numeric code which does include characters that could be confused with one another.<br/><br/>I had a need for generating a random string that did not include easily mis-identified characters.  Did a search for 'rails generate password' to check if rails already had that functionality and was horrified by what people were suggesting.<br/><br/>The two added methods are so trivial I hesitate to submit them, but people seem to have a hard time with this so perhaps they should be included in rails itself?<br/><br/>I'm not really happy with the names, but couldn't come up with anything better.  If anyone has better any ideas I'd be glad to rework the patch.<br/><br/>Feel free to drop the pull request if it is indeed judged too trivial.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ae57a69f082bf7cc252bd7f02c4685d0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/469', 'title': u'New Feature - good random string generation'}, {'body': u'Update copyright year to include up to 2011 in Active Resource & Active Support.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/468', 'title': u'Update copyright year in Active Resource & Active Support'}, {'body': u'Suggested change to activesupport/xml_mini.rb#_dasherize.<br/><br/>Passes tests and is about 20 to 25% faster than current version', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b9bc8f270c2c19e3738f988c93f3c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/467', 'title': u'Xml mini dasherize'}, {'body': u'use compute_public_path by pkmiec', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2b6bfbb38c42c34bc69c89516597611c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/465', 'title': u'Issue #342: AssetTagHelper ensures that files are in the wrong directory (again)'}, {'body': u'use compute_public_path', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2b6bfbb38c42c34bc69c89516597611c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/464', 'title': u'fixes #342: AssetTagHelper ensures that files are in the wrong directory (again)'}, {'body': u'Fixed typos in documentation for the date_select helper in actionpack/action_view.<br/><br/>The description for an example of the date_select method did not match the actual code example.<br/><br/>This patch changes no code, only documentation comments.<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d9173c4a9c01926d9fc4d1dbc4cb17e1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/463', 'title': u'Fixed typos in documentation for the date_select helper in actionpack/act'}, {'body': u'3.1 version of #353 since that was against 3-0-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f8ad08fcc4037b9389d7008729f2fbcf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/461', 'title': u'Sorted migrations'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/460', 'title': u'Just a minor fix in A.S CHANGELOG'}, {'body': u"So you can just say `t.password` instead of `t.add_column :password_digest`<br/><br/>I think it's a nice complement to the ActiveModel `has_secure_password`, where the programmer does't need to worry about the underlying implementation that uses `password_digest`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3399cbfb9e5fec93c324789b29309911?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/459', 'title': u'Adds a migration helper for has_secure_password'}, {'body': u'Update copyright year to 2011 in Active Resource', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/458', 'title': u'Update copyright year in Active Resource'}, {'body': u'Adds examples in code for ordinalizing negative numbers.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/457', 'title': u'Adds examples in code for ordinalizing negative numbers'}, {'body': u'<br/>This is required from our Rails side. This will help to perform database operations(create, delete, update) for jdbcmysql adapter.<br/><br/><br/>Will add more support for postgresql, sqlite3 after this.<br/><br/><br/>/cc @tenderlove <br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/456', 'title': u'Fixed ERROR in ActiveRecord Tests with Jruby "activerecord-mysql-adapter" gem'}, {'body': u'Hey Guys,<br/><br/>Renamed mass-assignment scopes to roles, updated code, tests, docs and security guide.<br/><br/>Thanks,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/455', 'title': u'Renamed mass-assignment scopes to roles'}, {'body': u'Commit ce9456e broke nested indifferent access conversion for subclasses of<br/>Hash. This commit makes Hash subclasses convert to HWIA by default for nested<br/>objects of subclasses of Hash, but allows certain subclasses to prevent nested<br/>conversion by introducing Hash#nested_under_indifferent_access that subclasses<br/>can overwrite.<br/><br/>ActiveSupport::OrderedHash is one such subclass that overwrites<br/>+nested_under_indifferent_access+, since implicitly converting it to HWIA would<br/>remove the ordering of keys and values in Ruby 1.8.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/454', 'title': u'indifferent access should recurse Hash subclasses'}, {'body': u"For coherence.<br/><br/>I've seen lots of noobs assume `rails r` would become `rails runner` the same way `rails c` becomes `rails console`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/aebc2d07a50011e2a30d38435fde564a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/452', 'title': u'Add alias `r` for rails runner'}, {'body': u'if a query contains a limit or an offset, ActiveRecord::FinderMethods#find_last had inconsistent behavior.<br/><br/>* If the records were loaded, it returned the last record in the cached list.<br/>* If they were not, it reversed the order of the query and changed the limit to one.<br/>* If the earlier limit was less than the total matching the query in the db,<br/> it would return a different record than if the records had been cached.<br/><br/>This commit changes find_last so that it loads the records when getting the<br/>last record on a query containing a limit or an offset, which makes the behavior consistent.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e60ac32af93ff0f426c980e43f221e7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/451', 'title': u'Fix for #371'}, {'body': u"Silence duplicate test warnings that appeared after Jose got the xml_mini_test.rb running again (https://github.com/rails/rails/commit/803548c46b32d1be760b21da80477f43b801b8e9) because of duplicate test names.  <br/><br/>There is now one failing test in xml_mini_test.rb that was failing before the rename but was never getting run before.  It looks like the _dasherize() method isn't working properly but the regex that it is using to satisfy the tests is above my head.<br/><br/>I will open a new issue about the failing test and take a look at it when I have more time.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b09d62315dbafc471538dd71d404ad48?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/449', 'title': u'Rename duplicate tests'}, {'body': u'[Fixes #447]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/561bea4ababeadd47574104d66abb43a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/448', 'title': u'Added html_safe to select tag documentation examples'}, {'body': u'It looks like commit a66c91723565d37969de4cb46baa50fb8865b02a "Do not inherit from Rack::Response, remove a shit-ton of unused code." removed the possibility for the user to set response_body to a Proc.  Here is a test that demonstrates this behavior working in 3.0.7 and breaking in edge.<br/>@ecoffey', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c491119c8e9e50be2d160f431455bbba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/446', 'title': u'New test: setting response_body to a Proc should be supported.'}, {'body': u'Raise a RuntimeException with custom message when hash key contains space. Old behavior was { "New York"=>33, :Versailles => 3231 }.to_xml created an xml which was invalid. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ff984622cd3a9ca31bd0e7e034fc8b17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/445', 'title': u'Fix for Lighthouse ticket # 6334 : to_xml should render valid xml or raise an error all the time'}, {'body': u'[Fixes #439]<br/><br/>https://github.com/rails/rails/issues/439<br/>https://rails.lighthouseapp.com/projects/8994/tickets/6098-activerecord-fixture-class', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f014cd26407c6d762509ae55c4a695de?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/442', 'title': u'Namespace Fixtures in ActiveRecord'}, {'body': u'Applied patch by Amir Manji<br/>  https://github.com/rails/rails/issues/437#issuecomment-1116045<br/><br/>Signed-off-by: Jason <jasonmichaelroth@gmail.com>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/561bea4ababeadd47574104d66abb43a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/438', 'title': u'ordinalize negative numbers patch'}, {'body': u'Update README template to include info about app/assets.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/435', 'title': u'Update README template to include info about app/assets'}, {'body': u'1. 6464f7b9be3ccf3f05a3<br/>2. 16d3266144caeaca6385<br/>3. 6cea2436d7bb8e62acc3', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/434', 'title': u'Updated changelog for jdbc* adapters template.'}, {'body': u'The `time_zone` settings of the database is usually `"SYSTEM"`. This affects e.g. `UNIX_TIMESTAMP(field)` function, where `"field"` is of type `datetime`. Some examples (system settings for time zone here is `\'Europe/Berlin\'`):<br/><br/>    mysql> SELECT @@global.time_zone, @@session.time_zone;<br/>    +--------------------+---------------------+<br/>    | @@global.time_zone | @@session.time_zone |<br/>    +--------------------+---------------------+<br/>    | SYSTEM             | SYSTEM              | <br/>    +--------------------+---------------------+<br/>    1 row in set (0.00 sec)<br/>    <br/>    mysql> select unix_timestamp(\'2011-03-26 12:25:49\');<br/>    +---------------------------------------+<br/>    | unix_timestamp(\'2011-03-26 12:25:49\') |<br/>    +---------------------------------------+<br/>    |                            1301138749 | <br/>    +---------------------------------------+<br/>    1 row in set (0.00 sec)<br/>    <br/>    mysql> SET @@time_zone = \'utc\';<br/>    Query OK, 0 rows affected (0.00 sec)<br/>    <br/>    mysql> select unix_timestamp(\'2011-03-26 12:25:49\');<br/>    +---------------------------------------+<br/>    | unix_timestamp(\'2011-03-26 12:25:49\') |<br/>    +---------------------------------------+<br/>    |                            1301142349 | <br/>    +---------------------------------------+<br/>    1 row in set (0.00 sec)<br/>    <br/>    mysql> SET @@time_zone = \'Canada/Yukon\';<br/>    Query OK, 0 rows affected (0.36 sec)<br/>    <br/>    mysql> select unix_timestamp(\'2011-03-26 12:25:49\');<br/>    +---------------------------------------+<br/>    | unix_timestamp(\'2011-03-26 12:25:49\') |<br/>    +---------------------------------------+<br/>    |                            1301167549 | <br/>    +---------------------------------------+<br/>    1 row in set (0.00 sec)<br/>    <br/><br/><br/>I propose to enable to set time_zone in rails `database.yml` file.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/acb03e5fa57c2956511155344d14afaf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/433', 'title': u'Support setting of time_zone for mysql2 adapter.'}, {'body': u'Need this require.<br/><br/>Removed here d89a7967b5af5c87bbfc268af72287b82541d384<br/><br/>/cc @josevalim ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/432', 'title': u'Fixed failing tests uninitialized constant ActiveSupport::Dependencies in'}, {'body': u'PATCH is the correct HTML verb to map to the #update action. The semantics for<br/>PATCH allows for partial updates, whereas PUT requires a complete replacement.<br/><br/>Changes:<br/>* adds the #patch verb to routes to detect PATCH requests<br/>* adds #patch? to Request<br/>* adds the PATCH -> update mapping in the #resource(s) routes.<br/>* changes default form helpers to prefer :patch instead of :put for updates<br/>* changes documentation and comments to indicate the preference for PATCH<br/><br/>This change tries to maintain complete backwards compatibility by keeping the<br/>original PUT -> update mapping. Users using the #resource(s) routes should not<br/>notice a change in behavior since both PUT and PATCH requests get mapped to<br/>update.<br/><br/>UPDATE: Added note in guides; fixed typo in comments.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/431', 'title': u'Use PATCH instead of PUT; Fixes issue #348'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/430', 'title': u'Logs should show overridden method; Issue 426'}, {'body': u'Hiding the _method param leaves no indication in the Rails log that a request<br/>would be interpreted by the Rails app according to the method override.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/427', 'title': u"Don't hide _method param in logs; Issue #426"}, {'body': u'PATCH is the correct HTML verb to map to the #update action. The semantics for<br/>PATCH allows for partial updates, whereas PUT requires a complete replacement.<br/><br/>Changes:<br/>* adds the #patch verb to routes to detect PATCH requests<br/>* adds #patch? to Request<br/>* adds the PATCH -> update mapping in the #resource(s) routes.<br/>* changes default form helpers to prefer :patch instead of :put for updates<br/>* changes documentation and comments to indicate the preference for PATCH<br/><br/>This change tries to maintain complete backwards compatibility by keeping the<br/>original PUT -> update mapping. Users using the #resource(s) routes should not<br/>notice a change in behavior since both PUT and PATCH requests get mapped to<br/>update.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/139de3f8c3d6ee008cdb3abd3da23908?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/425', 'title': u'Use PATCH instead of PUT; Fixes issue #348'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6cb0b3e9e50fe72285047eac56209f49?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/424', 'title': u'Fixes around_filter from observer, github issue#329'}, {'body': u"Currently Identity Map has a small bug when using STI. It is currently calculating the caching key by using the `symbolized_base_class`. To accomplish that, I had to add `symbolized_sti_name` to `ActiveRecord::Base` since I didn't find anything else that could be used. Let me know if this is a problem and if there is a method that can be used instead.<br/><br/>Initial discussion with @miloops<br/>https://github.com/richardiux/rails/commit/564922b32ceec259c442e965ac8a61ea5545bd48", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee2bf6106eb14ac5fca92bacf95e9f2f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/423', 'title': u'Identity Map caching bug'}, {'body': u'Made ActionView::MissingTemplate#initialize optionally accept a single string<br/>prefix to be converted to an array [as in ActionView::PathSet#find_all.](https://github.com/rails/rails/blob/master/actionpack/lib/action_view/path_set.rb#L18)<br/><br/>This is minor, but it solved an issue I was having with a completely unrelated gem, and feels like a gain in consistency to me, given how these two methods are called on [line 14](https://github.com/rails/rails/blob/master/actionpack/lib/action_view/path_set.rb#L14).<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cdc3fc7e6309a7989b6f5467670ec3cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/420', 'title': u'Accept single prefix in ActionView::MissingTemplate#initialize'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/419', 'title': u'better styling on #available_action? docs'}, {'body': u'I forgot to add this when I added this feature a week or so ago.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/42d4590355a1404230fbc9aff4dd377b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/418', 'title': u'Add documentation for new observer enable/disable feature.'}, {'body': u'/cc @josevalim<br/><br/>Please [see](https://rails.lighthouseapp.com/projects/8994/tickets/5796-rails-30-generator-inconsistency). As per your comment another patch was provided which i think you missed (you also reopened the ticket back in Nov 2010).<br/><br/>Providing a rebased patch. Pull if still relevant.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/414', 'title': u'config.generators.orm = false when skipping active record. LightHouse #5796'}, {'body': u'/cc @tenderlove @janx<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/413', 'title': u'Failing test for #411'}, {'body': u'````distance_of_time_in_words```` does not take leap years into account accurately. The bug was raised on [Lighthouse 6074](https://rails.lighthouseapp.com/projects/8994/tickets/6074-distance_of_time_in_words-calculates-wrong-no-of-years). <br/><br/>Patch with test provided. Feel free to comment/review/suggest changes.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/410', 'title': u'distance_of_time_in_words calculates wrong no of years '}, {'body': u"Take into account the Rack::Server :SSLEnable option when building the application's URL.\n\nThis pull request refers to issue #335", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3eae074f78a5f3222dbd7064e89ffad7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/408', 'title': u"Rails::Server outputs 'http://' even when running over SSL"}, {'body': u'Adding ruby-prof gem for ruby platform only', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/400', 'title': u'Adding ruby-prof gem for ruby platform only #jruby'}, {'body': u"Encountered this this morning -- looks like we're adding conditions from a join to the where clause, not the join clause.<br/><br/>Apart from having joins_values affect the where clause being a bit counterintuitive, placing join conditions here prevents us from using an Arel::OuterJoin to select all records without a corresponding record on the joined table.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/399', 'title': u'Add association join conditions to JOIN clause, not WHERE'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5d38ab152e1e3e219512a9859fcd93af?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/397', 'title': u'rename test case to better describe use case'}, {'body': u"So finally i've rebased Lighthouse ticket 4346.<br/><br/>See discussion LH #4346 here (https://rails.lighthouseapp.com/projects/8994/tickets/4346-time_select-not-interpreting-the-multi-parameter-correctly). <br/><br/>/attn @fxn<br/><br/>/cc @dtrasbo @andreacampi ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/396', 'title': u'Multiparameter POLA (principle of least authority) with respect to time_select fixes. See LH4346'}, {'body': u'Polymorphic associations in STI models look for base_class in type attribute, but when record is destroyed and tries to delete all associated records, it looks for sti class in type attribute to delete.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fbef10e8904c80c015dce56f3fa09bea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/395', 'title': u"dependent delete_all in polymorphic associations from sti models doesn't use base class"}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5fe204135849ac59602946d565992285?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/394', 'title': u'Display custom asset routes in `rake routes`'}, {'body': u"I'm using ruby 1.9.2, I got this error when running a fresh generated performance test:<br/><br/>    Started<br/>    /home/jan/.rvm/gems/ruby-1.9.2-p180/gems/aws-s3-0.6.2/lib/aws/s3/extensions.rb:206:in `const_missing_from_s3_library': uninitialized constant CategoryPagesTest::STARTED (NameError)<br/>\t    from /home/jan/.rvm/gems/ruby-1.9.2-p180/bundler/gems/rails-e99c1e3a3bd2/activesupport/lib/active_support/testing/performance.rb:39:in `run'<br/>\t    from /home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/minitest/unit.rb:656:in `block (2 levels) in run_test_suites'<br/>\t    from /home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/minitest/unit.rb:650:in `each'<br/>\t    from /home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/minitest/unit.rb:650:in `block in run_test_suites'<br/>\t    from /home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/minitest/unit.rb:649:in `each'<br/>    \tfrom /home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/minitest/unit.rb:649:in `run_test_suites'<br/>\t    from /home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/minitest/unit.rb:609:in `run'<br/>    \tfrom /home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/minitest/unit.rb:508:in `block in autorun'<br/><br/>Some investigation shows performance tests only works with old classic test:unit. The patch added support for minitest.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8853f712852b03ba6646b59b1723f44d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/392', 'title': u'Patch for performance test: make it run with ruby19/minitest'}, {'body': u'Just cleaning up the comments in the generated wrap_parameters.rb file', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/34b3e93704a811f2befad5a894e28072?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/391', 'title': u'Tidying up the language in wrap_parameters.rb'}, {'body': u'Need jruby-openssl until they merged it with Jruby. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/390', 'title': u'Adding jruby-openssl in Gemfile by default. #jruby'}, {'body': u'Remove special-case code in the "runner" command, and replace it with a general solution to ensure that the logger gets flushed at exit. This solution works for "runner", "console", "server", rake tasks, and any other process that loads the Rails environment.<br/><br/>Here\'s a detailed description of the issue that this commit resolves:<br/><br/>### Rake tasks fail to log when running in production mode<br/><br/>In production mode, when you write a single line to the Rails logger via script/runner, it writes the line to production.log.  (This is, of course, the expected behavior.)<br/><br/>In production mode, when you write a single line to the Rails logger via rake, it writes nothing to production.log.  <br/><br/>It\'s odd to have this difference in behavior between running via script/runner and running via rake.  It seems to violate the principle of least surprise.  This [gist demonstrates the issue](https://gist.github.com/956295#file_script_with_output).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/592e1e6f041f9a4ec51846fd82013aea?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/389', 'title': u'Always flush logger at exit'}, {'body': u'Use #remove_possible_method in favor of #remove_method if method_defined?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/388', 'title': u'Better use #remove_possible_method here'}, {'body': u'use remove_possible_method in favor of remove_method if method_defined?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/387', 'title': u'Use #remove_possible_method instead'}, {'body': u'@fxn fixed failing tests after removal of Jquery from vendor.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/384', 'title': u'Fixed tests for new_plugin_generator.'}, {'body': u'Add a couple of missing activesupport requires so AR::Migration can be used independently.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e9ed0907ebed6ba7ac45c3243261b86d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/383', 'title': u'Extra requires for AR::Migration'}, {'body': u"... as opposed to being partially committed.  Only fixes behavior in MRI 1.8 and Rubinius.  JRuby and 1.9 will still work the same since their Thread.current.status won't be 'aborting'", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/af4ce9309f8c4f7fc5cb33e7a5b08c64?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/382', 'title': u'transactions are rolled back if thread is killed during transaction'}, {'body': u'Hey Guys,<br/><br/>I added the mysql schema test to mysql2 adapter, and fixed the corresponding failures.<br/><br/>Enjoy,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/381', 'title': u'Added the mysql schema test to mysql2 adapter'}, {'body': u'Fixes typos in a few params wrapper test method names.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/380', 'title': u'Fixes typos in params wrapper test'}, {'body': u'Hello, Today when we want a select_tag with a prompt we need to pass :include_bank => "My Prompt". I think this is incoherent with the select method from form builders. Also, the documentation don\'t cover this behavior, which means, to know about include_blank with string people should read the source code.<br/><br/>My small pull request make select_tag behave like select and add docs from prompt and include blank. <br/><br/>Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/89e57a28dfdb85e07b33f92783dbe349?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/378', 'title': u'Select_tag should have the same API of select from form_builder'}, {'body': u'Hey Guys,<br/><br/>This commit raises an error if the old router draw method is used, along with a message advising them to either upgrade their routes or add rails_legacy_mapper to their Gemfile.<br/><br/>Let me know if the error type needs changing.<br/><br/>Thanks,<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/377', 'title': u'raise an error if the old router draw method is used'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/376', 'title': u'Update Rack dependency to 1.3.0.beta'}, {'body': u'Due to the missing charset metatag, Google Chrome sometimes misidentifies the rescue page charset, resulting in incorrect characters being displayed.<br/><br/>For example:<br/>![Action Controller: Exception caught](https://img.skitch.com/20110503-bdkxy73g3qunhd9jyp8ms4arfi.png)<br/><br/>This commit also adds the correct HTML5 doctype and switches the font-family ordering for the benefit of Mac users (and other users who have Helvetica installed).<br/><br/>Please also apply to 3-0-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/321db4b512f2f1487d0b31f6443d0d73?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/375', 'title': u'Google Chrome sometimes incorrectly identifies the rescues template charset'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/374', 'title': u'Updated to the correct version of beta rack'}, {'body': u"Hi guys,<br/><br/>So I've misably break the test on 1.8.7 due to hash order, so I've update the test case to fix it. Also, current Rails `master` is broken because you can't run `bundle update` due to `Rack`'s `HEAD` is at 1.3.0 already, so I've updated the dependency as well.<br/><br/>Will be careful next time >_<", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/373', 'title': u'Fixing failing test case on 1.8.7 & bump Rack version'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/370', 'title': u'favor map over each in mysql* adapters'}, {'body': u'This fixes a couple of syntax errors on the ParamsWrapper docs', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/369', 'title': u'Fix ParamsWrapper docs errors'}, {'body': u'Please merge this when jquery-rails is published as a gem and provides jQuery via the asset pipeline.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7223c62b7310e164eb79c740188abbda?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/368', 'title': u'brings -j back, and no longer vendors jQuery'}, {'body': u"On the commit for updating :format parameters, seems like I've left out<br/>the credit name after the CHANGELOG entry. This should fix it, and in<br/>case someone has a problem they could seek assistance easier.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/367', 'title': u'Update CHANGELOG file to mention my name'}, {'body': u'I have a 2.3 app that needs these optimizations before the app will be upgraded.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d643c10e432e230c9d4bf97d15d6a46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/366', 'title': u'Backport ActiveResource optimizations (pull request #360) to 2.3'}, {'body': u'3.1 may be out soon, but I have a 3.0 app that needs these optimizations before the app will be upgraded.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d643c10e432e230c9d4bf97d15d6a46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/365', 'title': u'Backport ActiveResource optimizations (pull request #360) to 3.0'}, {'body': u'<br/>Hello, am new to the community and would really like to contribute<br/><br/>I saw that there is a from method and a to method, thought it would be great to have a from_to method that returns the part of the array from position1 to position2<br/><br/>Thanks<br/><br/>Best<br/>Abhijit', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/bef2f0983ea4f63fee6805ec5d956882?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/362', 'title': u"request for 'from_to' method to be added to array/acces.rb"}, {'body': u"* Add performance benchmark similar to ActiveRecord<br/>* Lazily find_or_create_resource_for_collection to not incur the overhead for empty arrays and arrays of primatives<br/>* #duplicable? is faster than inline rescues when the object is not duplicable<br/>* Don't constantly raise and handle NameError, raising is expensive<br/>* Even when a resource is nested inside a module, always look inside the class first for the resource definition so we don't overwrite classes all the time<br/><br/>```<br/>Before:                                       user     system      total        real<br/>Model.new (instantiation)                 0.120000   0.000000   0.120000 (  0.119961)<br/>Nested::Model.new (instantiation)         0.150000   0.010000   0.160000 (  0.151183)<br/>Model.new (setting attributes)           28.540000   0.680000  29.220000 ( 29.271775)<br/>Nested::Model.new (setting attributes)   29.740000   0.580000  30.320000 ( 30.486210)<br/><br/>After:                                        user     system      total        real<br/>Model.new (instantiation)                 0.120000   0.000000   0.120000 (  0.121249)<br/>Nested::Model.new (instantiation)         0.150000   0.010000   0.160000 (  0.152429)<br/>Model.new (setting attributes)           11.480000   0.170000  11.650000 ( 11.656163)<br/>Nested::Model.new (setting attributes)   11.510000   0.210000  11.720000 ( 11.724249)<br/>```", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2d643c10e432e230c9d4bf97d15d6a46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/360', 'title': u'Optimize ActiveResource::Base.new(attributes)'}, {'body': u'Add `ActionController::ParamsWrapper` to wrap JSON parameters into a nested hash<br/><br/>So now, instead of having to send JSON parameter with a parent such as:<br/><br/>    {"user": {"name": "Prem"}}<br/><br/>you can now send it like this:<br/><br/>    {"name": "Prem"}<br/><br/>and it will be wrapped in `params[#{controller_name}]` automatically. So for example if you\'re posting data to `UsersController` it will be wrapped in `params[:user]`.<br/><br/>You could also specify the key which the parameters should be wrapped to by using `wrap_parameters` like this:<br/><br/>    class UsersController < ApplicationController<br/>      wrap_parameters :person<br/>    end<br/><br/>And you can also pass in a model class, which Rails will automatically detect proper parameter key and attribute names.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/359', 'title': u'Add `ActionController::ParamsWrapper` to wrap JSON parameters into a nest'}, {'body': u"- adds tests for find_or_create_by and find_or_initialize_by on has_many associations<br/>- changes the behavior of ActiveRecord::Associations::CollectionProxy#method_missing to differ to<br/>  ActiveRecord::FinderMethods#find_or_instantiator_by_attributes for arg processing and saving so<br/>  find_or_create_by's api on associations will be consistent w/ the api for model classes.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e60ac32af93ff0f426c980e43f221e7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/358', 'title': u'Fix for lighthouse #6741'}, {'body': u"Hey Guys,<br/><br/>This adds :as and :without_protection support to AR.new and create, as well as associations, eg.<br/><br/>    u = User.create({ :name => 'Josh', :is_admin => true }, :as => :admin)<br/>    u.applications.create({ :name => 'travis', :rating => 5 }, :as => :admin)<br/><br/>Let me know if you see any issues.<br/><br/>Thanks,<br/><br/>Josh", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/357', 'title': u'Assign attributes'}, {'body': u"I saw this was part of a warning clean up for Ruby 1.9.3 that @tenderlove did. If this is necessary I'd love to be enlightened as to why it is causing warnings :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/356', 'title': u'Removed double assignment of same local variable'}, {'body': u"As far as I can tell, there's no reason for them to be there. This commit removes them.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/321db4b512f2f1487d0b31f6443d0d73?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/355', 'title': u'The README has some funny slashes'}, {'body': u"The ActiveModel::SecurePassword module is outstanding but I think allowing the password to be optional would allow many more use cases for this feature. E.g. an application using Omniauth in tandem with local authentication probably doesn't require a password for each User.  This commit adds a :required configuration parameter (defaults to true) and ensures that the authenticate method returns false for a blank password.<br/><br/>This patch original submitted to LH #6742.  Tests included.<br/><br/>This is my first patch submission so please forgive any faux pas I may have made. :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e9b949c8749222225501c99e8e8ad9ff?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/354', 'title': u'Add :required parameter to AS::SecurePassword'}, {'body': u'Simple change to sort the output of `rake db:migrate:status` by the migration ID.  This change is isolated in the first commit in the pull request.<br/><br/>A second commit interleaves the `db_list` and `file_list` to better represent the order in which things happened.  It continues to sort by the migration ID and makes it slightly easier, in my opinion, to spot the "no file" migrations in the combined list.<br/><br/>I\'m submitting this against 3.0.x since this seems to me like something that should have been there since the beginning.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f8ad08fcc4037b9389d7008729f2fbcf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/353', 'title': u'sorted db:migrate:status output'}, {'body': u"This merge requests contains two patches that address the following situation of polymorphic has_one associations:\n\n```ruby\nclass Address < ActiveRecord::Base\n  belongs_to :addressable, :polymorphic => true\n  has_one :location, :as => :locatable\nend\n\nclass GeoLocation < ActiveRecord::Base\n  belongs_to :geo_locatable, :polymorphic => true\nend\n\nclass Business < ActiveRecord::Base\n  has_one :address, :as => :addressable\n  has_one :geo_location, :through => :geo_locatable\nend\n```\n\nSay you want to query Business records and you want to join in the location records as well.\n\nIf you execute the following line:\n\n```ruby\nBusiness.joins(:geo_location).all\n```\n\nyou will see the following exception:\n\n    NoMethodError: undefined method `to_sym' for nil:NilClass\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/activesupport-3.0.7/lib/active_support/whiny_nil.rb:48:in `method_missing'\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/arel-2.0.9/lib/arel/table.rb:103:in `[]'\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/activerecord-3.0.7/lib/active_record/associations.rb:2202:in `association_join'\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/activerecord-3.0.7/lib/active_record/relation/query_methods.rb:256:in `block in build_joins'\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/activerecord-3.0.7/lib/active_record/relation/query_methods.rb:254:in `each'\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/activerecord-3.0.7/lib/active_record/relation/query_methods.rb:254:in `build_joins'\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/activerecord-3.0.7/lib/active_record/relation/query_methods.rb:176:in `build_arel'\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/activerecord-3.0.7/lib/active_record/relation/query_methods.rb:149:in `arel'\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/activerecord-3.0.7/lib/active_record/relation.rb:64:in `to_a'\n\tfrom ~/.rvm/gems/ruby-1.9.2-p180@shoploaf/gems/activerecord-3.0.7/lib/active_record/relation/finder_methods.rb:143:in `all'\n\nOnce I got in there to fix this bug, I noticed that joining through to a polymorphic has_one, like above, or a polymorphic has_many neglects to filter on the polymorphic_type column as well.\n\nThe SQL statement for a correct query should contain the following:\n\n    INNER JOIN businesses.id ON addresses.addressable_id AND addresses.addressable_type = 'Business'\n    INNER JOIN addresses.id = geo_locations.geo_locatable_id AND geo_locations.geo_locatable_type = 'Address'\n\ni.e. both inner join statements should reference the type.\n\nInstead, the following SQL is generated:\n\n    INNER JOIN businesses.id ON addresses.addressable_id AND addresses.addressable_type = 'Business'\n    INNER JOIN addresses.id = geo_locations.geo_locatable_id\n\nThe merge requests includes a fix for this as well.\n\nAlso, there are tests for both of these issues.\n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2230664fc9881e7aaba248dedb34c28a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/352', 'title': u"Fixes for incorrect INNER JOIN through two polymorphic resources (NoMethodError: undefined method `to_sym' for nil:NilClass)"}, {'body': u"The deprecation message for verify informs users to use the rails/verification plugin. Update the url in the message to reflect current maintainer's repository.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/351', 'title': u'Update the github url for the verification plugin'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/350', 'title': u"Fixed documentation, 'asset' -> 'assets'"}, {'body': u"https://rails.lighthouseapp.com/projects/8994/tickets/6757-hashfrom_xml-chokes-on-empty-cdata<br/><br/>When a tag is passed to Hash.from_xml with an empty CDATA blocks as it's contents it should be return an empty string.  ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b218731317105be8d7534251048e198?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/349', 'title': u'Hash.from_xml chokes on empty CDATA'}, {'body': u'The options_for_select is invoking map(&:to_s) in loops. When options_for_select is invoked with many options, the memory impact of map(&:to_s) is more than necessary.<br/><br/>While map(&:to_s) stuff has been optimized, it is not free in ruby 1.8.7 and should yield way to performance.<br/><br/>Note, I made this request initially into rails:master (https://github.com/rails/rails/pull/346). This is the same change but into rails:3-0-stable instead, which is perhaps a better fit for this type of performance change.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11894c285c8062a06551f143bb43a89a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/347', 'title': u'performance trumps syntactical sugar'}, {'body': u'The options_for_select is invoking map(&:to_s) in loops. When options_for_select is invoked with many options, the memory impact of map(&:to_s) is more than necessary.<br/><br/>While map(&:to_s) stuff has been optimized, it is not free and should yield way to performance. <br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11894c285c8062a06551f143bb43a89a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/346', 'title': u'peformance trumps syntactical sugar'}, {'body': u"Previously 'olive' inflected to 'olife'. It now correctly inflects to 'olives'.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/85044ff434ccbe5356ebdaa18933593e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/345', 'title': u'Fix inflection for olive'}, {'body': u'Related to Issue#341<br/> <br/>https://github.com/rails/rails/issues/341<br/><br/><br/>    validates :title, :presence => true, :if => Proc.new do |x|<br/>        #expensive action<br/>     end, :on => :update<br/><br/>The validation should not call the Proc above during :create <br/><br/>The bug above states that as the problem. This patch fixes it.<br/><br/>/cc @josevalim @jwkpiano1<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/344', 'title': u':if should not fire on validations when not in context with :on'}, {'body': u"It's been a long standing request to allow for AM/PM format hour format. <br/>People have resorted to building plugins or their own hacks to get this going. <br/><br/>https://rails.lighthouseapp.com/projects/8994/tickets/1004-datetime_select-to-accept-ampm-option<br/>http://gist.github.com/368952<br/>http://code.google.com/p/rails-twelve-hour-time-plugin/<br/><br/>I think @neerajdotname also wanted to get a patch going for this last year but I suppose it got lost in the mist.<br/><br/>Sending pull with working tests.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4ba063457702c78a7fce6a3529aedb0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/343', 'title': u'Allow AM/PM format in datetime selectors'}, {'body': u'Hey Guys,<br/><br/>After discussions with DHH, I have removed the default_scope deprecations as a first step before default_select.<br/><br/>Enjoy,<br/><br/>J', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/340', 'title': u'removed the default_scope deprecations and updated the docs and tests to '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/339', 'title': u'Added a little bit more docs on ObserverArray'}, {'body': u'The +name+ argument on the #columns method is useless, no implementation of this method makes use of it.<br/>I removed the argument since it only creates confusion.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/338', 'title': u'Remove useless argument'}, {'body': u'Newer version has a few minor performance fixes', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5f22129933f5f1c12a489131a33a3993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/336', 'title': u'upgrade rack-mount to 0.7.2'}, {'body': u'when Duration inherits from BasicObject, send and try aren\'t implemented so they\'re delegated to the Integer value by method_missing.  This causes unexpected behavior:\n\n    d = 1.day\n    d.inspect                #=> "1 day"\n    d.try(:inspect) || "N/A" #=> "86400"\n    # ^^^ standard null checking goes pear-shaped\n\nI had a different pull request for this that I closed because this commit is a better solution.  Here\'s the other one for context:\nhttps://github.com/rails/rails/pull/320', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cee19a4eb998343e677f7f1cfd4de5bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/334', 'title': u'fix AS::Duration#try and #send'}, {'body': u'Suppose I want my radio buttons\' labels translated:\n\n```\n= f.radio_button(:customer_access_enabled, true)\n= f.label(:customer_access_enabled, :value => true)\n= f.radio_button(:customer_access_enabled, false)\n= f.label(:customer_access_enabled, :value => false)\n```\n\nBoth labels get the same value from `"helpers.label.#{model_name}.#{attribute_name}"` (in my case, `"helpers.label.page.customer_access_enabled"`). I would like to have specific translations for each value option of the same attribute.\n\nLet me know if it\'s not clear or refactoring is needed. Thanks!\n\n(Ported from [LightHouse Ticket #6753](https://rails.lighthouseapp.com/projects/8994/tickets/6753-specific-translations-for-labels-with-values))', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a50dcaaf8e545e6cc1fb4e32919be6ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/333', 'title': u'Specific translations for labels with values'}, {'body': u"Don't quote IDs as Arel will quote them -- follow same conventions as the delete method, which is already in place.  This causes problems when working with strings as primary keys which are then quoted twice.<br/><br/>Included is a patch to resolve this issue. The delete method uses ID, not quoted ID, as ARel will quote it.<br/><br/>See both:<br/><br/>https://rails.lighthouseapp.com/projects/8994/tickets/6230-optimistic-locking-quoting-id-applied-twice-for-update-statement<br/>https://rails.lighthouseapp.com/projects/8994/tickets/6578-optimistic-locking-and-double-quoting-of-strings<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/332', 'title': u"Don't quote ID's as Arel will quote them -- follow same conventions as the delete method. "}, {'body': u"This is a regression that was introduced in fdfc8e3b9c4905057677fd009f463a377be60b93.\n\nAny create_or_find_by_x_and_y call on an association will *aways* create a new record.\n\nTo recreate:\n\nSay you have two models, one has_many of another:\n\n    class Author < ActiveRecord::Base\n      has_many :posts\n    end\n\n    class Post < ActiveRecord::Base\n      belongs_to :author\n    end\n\nJump into the console and enable AR logging.  Then run the dynamic find_or_create_by twice:\n\n    Author.first.posts.find_or_create_by_title_and_published('Post Title', true)\n    Author.first.posts.find_or_create_by_title_and_published('Post Title', true)\n\nYou'll see that the query looks generates something like\n\n    select * from posts where title IN ('Post Title', 1) and published = '' and author_id = 7\n\ni.e. the title is getting passed an array of the input.\n\nFailing test and patch included below in the merge request (9f7ff621bd62ade37b4ae4e608bdf24b7f7b1456).\n  ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2230664fc9881e7aaba248dedb34c28a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/331', 'title': u'Dynamic find_or_create_by_x_and_y always creates new records in Rails 2.3.11 '}, {'body': u'human inflections are not cleared if clearing scope is set to alle.<br/>Includes tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d5187e837edd629ac73b1776d15306aa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/328', 'title': u'proper reset all inflector scopes'}, {'body': u"As @trejkaz mentioned, in some cases it's useful to use the SI prefix when formatting bytes. I understand why this is not the default, but the related patch added a :prefix option to number_to_human_size so the developer can choose what to display in each scenario.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc66c82eada8b3869009812a61cf5993?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/327', 'title': u'Prefix option for number_to_human_size'}, {'body': u'And this found fix the CI failures', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/325', 'title': u'final corrections to the mass-assignment security tests'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/324', 'title': u'fixed a small bug with Array#from core_ext'}, {'body': u'Hey Guys,<br/><br/>Very minor change.<br/><br/>Thanks,<br/><br/>J', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/323', 'title': u'very minor formatting change to railties app_base git references'}, {'body': u'Stop extra tags in form_for constructed forms from potentially affecting the layout of the form in browsers (can cause a space due to the display:inline box).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c3f26c783b7401cb5dce12e747bb7e44?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/322', 'title': u'form_for extra tags formatting fix in form_tag_helper.rb'}, {'body': u'Since new version of execjs(0.3.0) is released. we can enable uglifier gem  ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ada0fa9f326acbba88da65d76f675aca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/321', 'title': u'enabling uglifier gem '}, {'body': u'since Duration inherits from ::BasicObject when using Ruby 1.9, send and try aren\'t implemented so they\'re delegated to the Integer value by method_missing.  This causes unexpected behavior:\n\n    d = 1.day\n    d.inspect                #=> "1 day"\n    d.try(:inspect) || "N/A" #=> "86400"\n    # ^^^ standard null checking goes pear-shaped', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cee19a4eb998343e677f7f1cfd4de5bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/320', 'title': u'implement AS::Duration#send and #try to avoid unexpected behavior'}, {'body': u'ditto', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0d509031a015eb9e28228723963e2628?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/319', 'title': u'Fixed minor typo in comment'}, {'body': u"Hey Guys,<br/><br/>This was due to a string column limit which doesn't cause issues on sqlite, sorry.<br/><br/>Josh", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/318', 'title': u'fix mass-assignment security tests'}, {'body': u'Copied from https://github.com/rails/rails/pull/282, re-created the pull-request just to clean up the commit range.\n\nRight now `Array#from` will return `nil` if the index passed in is outside the bounds of the array, which is inconsistent with all other returns (including `%().from(0)`, which is technically outside the bounds of the array), and so using `Array#from`  we\'ll have to do things like\n\n    unless %(a, b, c, d).from(5).nil?\n       # ... do something here\n    end\n\nThis commit will change it so that all return values of `Array#from` are an array.\n\nTests and documentation update included.\n\nI ran benchmarks using the following:\n\n    require \'benchmark\'\n    \n    class Array\n      \n      def from(position)\n        self[position..-1]\n      end\n      \n      def new_from(position)\n        position > length ? [] : self[position..-1]\n      end\n      \n    end\n    \n    array = (1..10).to_a\n    n = 200_000\n    \n    Benchmark.bm(3) do |x|\n      x.report("1:") { n.times { array.from(1) } }\n      x.report("2:") { n.times { array.new_from(1) } }\n      x.report("3:") { n.times { array.from(100001) } }\n      x.report("4:") { n.times { array.new_from(100001) } }\n    end\n\nAnd got\n\n             user     system      total        real\n    1:   0.360000   0.000000   0.360000 (  0.362778)\n    2:   0.400000   0.000000   0.400000 (  0.396071)\n    3:   0.320000   0.010000   0.330000 (  0.337338)\n    4:   0.170000   0.000000   0.170000 (  0.161635)\n\nWhich is a 8% increase on calls that go through and a 50% decrease when a call is outside the arrays range.\n\nIf I increased the array size to 100,000 items, it became a 10% increase in time.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d1f5556fd1ea9b1dcbddae79d2ec383b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/317', 'title': u'Change Array#from to return consistent results'}, {'body': u'Changes in database.rake file', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/316', 'title': u'Re-factored database.rake to allow Jdbcpostgresql. #jruby'}, {'body': u'The +name+ argument on the #columns method is useless, no implementation of this method makes use of it.<br/>I removed the argument since it only creates confusion.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/315', 'title': u'Remove useless argument'}, {'body': u'This fixes formatting on #update_attributes docs, introduced in this commit: https://github.com/rails/rails/commit/8111facdb4d98ad9fce0892a68f790e32aa27002', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/47e6725dce64c265920bb1fc8fa3f74c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/314', 'title': u'Fix #update_attributes api format error'}, {'body': u'Hello,<br/><br/>Please see the lighthouse ticket I submitted for details on this patch request:<br/><br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6748<br/><br/>A Rails contributer, @sferik, suggested I also submit a pull request.<br/><br/>Does this change look OK?  Your time and feedback are appreciated.<br/><br/>Thanks,<br/>Chad', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/69f3160121870ed8cf33d58067d37341?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/313', 'title': u'[patch] Asset helpers should understand scheme-relative URLs'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/312', 'title': u'bump multi_json dependency'}, {'body': u'Hey Guys,<br/><br/>This brings AR update_attributes in line with assign_attributes in accepting a scope using :as or bypass mass-assignment security using :without_protection => true<br/><br/>Thanks,<br/><br/>J', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/311', 'title': u'AR update_attributes api is updated to reflect the addition of assign_att'}, {'body': u'Applied Patch from https://rails.lighthouseapp.com/projects/8994/tickets/5577-suport-from-tsvector-data-type-in-postgresql', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18d7dee18c61892eafe6f3f040a7e845?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/310', 'title': u'Added support for tsvector datatype in postgres'}, {'body': u'Using Sass latest in rails Gemfile also.<br/><br/>https://github.com/rails/rails/commit/723a0f82c48e4aa7987c6ccf653b4e543a0d3715', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/309', 'title': u'Using sass directly as new version is out.'}, {'body': u'Hey Guys,<br/><br/>This follows on from the assign_attributes work.<br/><br/>The guard_protected_attributes argument with attributes= is now deprecated as per discussions with @josevalim and @dhh.<br/><br/>Thanks,<br/><br/>J', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/308', 'title': u'deprecated the use of guard_protected_attributes with attributes= in AR'}, {'body': u'All major three done and tested (mysql, sqlite3, postgresql)\n\n\nThanks :-)\n\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/307', 'title': u'jdbcpostgresql support added into template.'}, {'body': u'It can result in wrong results if values contain special % or _ characters. It is safer to use SQL LOWER function and compare for equality.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/306', 'title': u'Do not use SQL LIKE operator for case insensitive uniqueness validation'}, {'body': u'the title pretty much says it all :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/305', 'title': u'bump AS deprecation_horizon to 3.2'}, {'body': u'When using jdbcmysql running db:create gives error "uninitialized constant Mysql::Error"<br/><br/>Fix is to add a error class for JdbcMsql right now. We will remove ArJdbcMySQL::Error when it will come with activerecord-jdbc-adapter<br/><br/>LightHouse issue report before by me : https://rails.lighthouseapp.com/projects/8994/tickets/6628-uninitialized-constant-mysqlerror<br/><br/>resolved [#6628] ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/304', 'title': u'Fixed error when running db:create with jdbcmysql'}, {'body': u'http://nex-3.com/posts/104-haml-and-sass-3-1-are-released', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/73d57855a3bfe5c534596197a895ab6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/303', 'title': u'Sass 3.1.0 is out, removing Sass alpha version from default Gemfile'}, {'body': u'Aaron, following up from our email exchange.<br/>Arel has logic that does not include columns for an insert statement if they are empty.\xa0<br/><br/>  \xa0\xa0def visit_Arel_Nodes_InsertStatement o<br/>  \xa0 \xa0 [ "INSERT INTO #{visit o.relation}",<br/>  \xa0 \xa0 \xa0 ( "(#{o.columns.map { |x|<br/>  \xa0 \xa0 \xa0 quote_column_name x.name<br/>  \xa0 \xa0 }.join \', \'})" unless o.columns.empty?),<br/>  \xa0 \xa0 \xa0 (visit o.values if o.values),<br/>  \xa0 \xa0 ].compact.join \' \'<br/>  \xa0 end<br/><br/>The SQL Server adapter defines the older #empty_insert_statement_value method as such. This is because there is no such thing as "VALUES(DEFAULT)" that would work.<br/><br/>  \xa0\xa0def empty_insert_statement_value<br/>  \xa0 \xa0 "DEFAULT VALUES"<br/>  \xa0 end<br/><br/>In the latest version of rails we are no longer using this but #null_insert_value instead and AR is hooking into it from ActiveRecord::Relation#insert like so.<br/><br/>  \xa0\xa0if values.empty? # empty insert<br/>  \xa0 \xa0 im.values = im.create_values [connection.null_insert_value], []<br/>  \xa0 else<br/>  \xa0 \xa0 im.insert substitutes<br/>  \xa0 end<br/><br/>This gives no one a chance to construct something like #empty_insert_statement_value for the SQLServerAdapter. We should utilize the existing #empty_insert_statement_value instead which seems more inline with Arel\'s InsertManager too.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/302', 'title': u'Use existing #empty_insert_statement_value for an insert with no columns.'}, {'body': u'This has been done per @dhh request.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/301', 'title': u'Add `app/assets/images` directory to plugin new generator'}, {'body': u"I think we need to start adding this support.<br/><br/>This full support need lot's more commits :-)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/300', 'title': u'Start Adding jdbcmysql support to new rails template.'}, {'body': u'Currently ActionController::RoutingError message will alert the user of a bad path but not the method.<br/><br/>    No route matches "/join"<br/><br/>This patch adds the method used to call the url for debugging. <br/><br/>    No route matches [POST] "/join"<br/><br/>By showing the method used, certain routing problems are easier to find, especially for a new rails user who is not as familliar with restful routing. <br/><br/><br/><br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/299', 'title': u'Add http method to RoutingError message '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/298', 'title': u'Fixed images path in plugin_new_generator'}, {'body': u'Fixed failing tests <br/><br/>1. test_skeleton_is_created(AppGeneratorTest)<br/><br/>2. test_builder_option_with_tweak_plugin_builder(CustomAppGeneratorTest)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/297', 'title': u'Images path fixed in test.'}, {'body': u'@dhh i think we need this.<br/><br/>At least we need this to pass the test <br/><br/>test_simple_controller_in_production_mode_returns_best_standards(ApplicationTests::BestPracticesTest):<br/>ActiveSupport::Testing::RemoteError: caught LoadError: no such file to load -- uglifier<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/296', 'title': u"Adding uglifier gem to Gemfile. It's a default."}, {'body': u"Aaron, just following up on moving #exec_insert to the proper place in abstract adapter's database statements.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/295', 'title': u"Move #exec_insert to abstract adapter's database statements."}, {'body': u'Aaron, just following up on moving this method to abstract adapter. Since as a 3rd party adapter developer, this was 100% of my failures when I first started work.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/294', 'title': u'Move exec insert'}, {'body': u'The #substitute_at gets an ActiveRecord::ConnectionAdapters::Column in #insert to match replacement in #exec_query.<br/><br/>Aaron, I did not write a test for this because I am not sure if/how this behavior should be fleshed out. The idea is that when building the query in #exec_query and/or #exec_insert I need to know the active record column which I do get in those methods. However, I also need to know when I am asked to #substitue_at when the bind params are inserted. <br/><br/>This is critical for the SQL Server adapter since there are some columns (binary timestamp) that I really have to account for. I do realize that passing a string down is OK for this and I am OK with adhoc usage of not passing an AR column down. I just need to hand what rails is doing. BTW, I could not use the Arel attribute here because code like <code>column.relation.columns[...]</code> is deprecated in Arel and it seemed appropriate for rails to standardize on passing AR columns vs hacking Arel.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/293', 'title': u'The #substitute_at gets an ActiveRecord::ConnectionAdapters::Column in #i'}, {'body': u"Try to use standard SI prefixes for number_to_human_size, instead of the ancient 1024-based ones which were being used.  Modern operating systems already do this, which results in a jarring mismatch between Rails' reported size and Mac OS'.<br/><br/>This particular version of the change may be controversial, but I believe in trying the simplest solution to the problem first, and this is the only solution which doesn't involve messing around with the options hash. :)<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/42b570f6f4312a872c2fc671e3ddc82b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/292', 'title': u'number_to_human_size and the modern era'}, {'body': u'I think this need.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/291', 'title': u'Path also contain /images. '}, {'body': u'After rails/rails@6380f1a9f45e68f38480c0805cac62eb6708f72e from @josevalim, I had some problems when using flash.now in 2 requests in a row.<br/>Here is a test and an attempt for patching this issue.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4f283d6fa56c71db3e8584d4cdaa940a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/290', 'title': u"Don't reuse a closed flash when using now"}, {'body': u'Hey All,<br/><br/>This patch removes AS Json backends and instead relies on MultiJson for Json decoding.<br/><br/>I have added the current rc of MultiJson to the AS gemspec as per Joshes advice, but this will be updated soon once I am sure MultiJson is ready for a 1.0.0 release.<br/><br/>Please let me know if you see any issues,<br/><br/>Thanks,<br/><br/>J', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/21b21efe14359ec323f9a70464b91e39?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/289', 'title': u'Use MultiJson for Json decoding'}, {'body': u"File should be open in 'r+' mode to pass with jruby-1.6.1.<br/><br/>Tested with other ruby version as well.<br/><br/>Solved LightHouse Ticket [#6662]<br/><br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6662-fileflock-cant-lock-read-only-file-for-exclusive-access<br/><br/>Jruby Change-log :-<br/><br/>http://jira.codehaus.org/browse/JRUBY-5627<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/288', 'title': u'File should be open in read/write mode. When doing lock on a file.'}, {'body': u'The identity map cache prevents us from seeing the DB formatted strings.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/319044b81ccfb393c05f3e5229bde522?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/287', 'title': u'Bypass IdentityMap in PostgreSQL geometric tests.'}, {'body': u'"Ruby 1.9.2: marshaling round-trips Time#zone" 41e7c68d87903d0596228b6c1ae2c5d87b209280 broke round-tripping of fractional seconds when marshalling Time on Ruby 1.9.2.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/319044b81ccfb393c05f3e5229bde522?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/286', 'title': u'Fix marshal round-tripping of fractional seconds (Time#subsec).'}, {'body': u'Currently ActiveModel::SecurePassword defaults to BCrypt::Engine::DEFAULT_COST which is 10. It would be nice if we could override this. By overriding the instance method #password_digest_cost this can be done', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/285', 'title': u'Optionally change the cost of ActiveModel::SecurePassword encryption'}, {'body': u'activesupport/test/json/encoding_test.rb need Json to pass with Jruby', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/284', 'title': u'Test failing with Jruby "uninitialized constant TestJSONEncoding::JSON"'}, {'body': u'Adding JSON in Gemfile for Jruby fixes the test.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/283', 'title': u'Test failing with Jruby "uninitialized constant TestJSONEncoding::JSON"'}, {'body': u'Right now `Array#from` will return `nil` if the index passed in is outside the bounds of the array, which is inconsistent with all other returns (including `%().from(0)`, which is technically outside the bounds of the array), and so using `Array#from`  we\'ll have to do things like<br/><br/>    unless %(a, b, c, d).from(5).nil?<br/>       # ... do something here<br/>    end<br/><br/>This commit will change it so that all return values of `Array#from` are an array.<br/><br/>Tests and documentation update included.<br/><br/>I ran benchmarks using the following:<br/><br/>    require \'benchmark\'<br/>    <br/>    class Array<br/>      <br/>      def from(position)<br/>        self[position..-1]<br/>      end<br/>      <br/>      def new_from(position)<br/>        position > length ? [] : self[position..-1]<br/>      end<br/>      <br/>    end<br/>    <br/>    array = (1..10).to_a<br/>    n = 200_000<br/>    <br/>    Benchmark.bm(3) do |x|<br/>      x.report("1:") { n.times { array.from(1) } }<br/>      x.report("2:") { n.times { array.new_from(1) } }<br/>      x.report("3:") { n.times { array.from(100001) } }<br/>      x.report("4:") { n.times { array.new_from(100001) } }<br/>    end<br/><br/>And got<br/><br/>             user     system      total        real<br/>    1:   0.360000   0.000000   0.360000 (  0.362778)<br/>    2:   0.400000   0.000000   0.400000 (  0.396071)<br/>    3:   0.320000   0.010000   0.330000 (  0.337338)<br/>    4:   0.170000   0.000000   0.170000 (  0.161635)<br/><br/>Which is a 8% increase on calls that go through and a 50% decrease when a call is outside the arrays range.<br/><br/>If I increased the array size to 100,000 items, it became a 10% increase in time.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d1f5556fd1ea9b1dcbddae79d2ec383b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/282', 'title': u'Change Array#from to return consistent results'}, {'body': u'This code returns insecure content, and I think that\'s very counter-intuitive:\nauto_link("&lt;script>alert(\'malicious\')&lt;/script> www.rubyonrails.org", :sanitize => true)\n\nI propose to avoid the vulnerability this commit from @tenderlove fixed: https://github.com/rails/rails/commit/61ee3449674c591747db95f9b3472c5c3bd9e84d and at the same time give a better use to the existent (but not documented) :sanitize option. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6b4aa22626f1183813b502e2d1f4ea2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/281', 'title': u'auto_link to return sanitized strings'}, {'body': u'Using HTML::FullSanitizer to strip tags from a frozen string works under Ruby 1.8, but fails under Ruby 1.9 due to the change in behavior of String#gsub! on frozen strings.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e8a419959139f3f505b49bb95f7e7afe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/280', 'title': u'Stripping tags from a frozen string'}, {'body': u'Executing rails console with a given environment an options is broken.\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/279', 'title': u'Fix console to accept [environment] [options] as specified in docs.'}, {'body': u'Executing rails console with a given environment an options is broken.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/278', 'title': u'Fix console to accept [environment] [options] as specified in docs.'}, {'body': u'ruby 1.9.2 and other ruby implementations may not return the same hash value for the same string each time. This can result in your static assets being served from different asset hosts, which makes browser caching less effective. Use md5 or some other digest method instead.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fd4c682789a93d1726d42bc9c7a530e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/277', 'title': u'Correct documentation for asset host strategy for 1.9.2'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/276', 'title': u'Update scaffold controller to generate scss file if Sass is available'}, {'body': u'An apostrophe has to be escaped as &apos; in attribute values.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/18c990213286e201ffda712e22d70fc9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/275', 'title': u'properly escape "\'" to "&apos;" for XML'}, {'body': u'This significantly reduces the slowdown introduced in [86acbf1](https://github.com/rails/rails/commit/86acbf1cc050c8fa8c74a10c735e467fb6fd7df8), as documented in [issue #6695](https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6695).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8da73ed2be331aae08d69786b30b0810?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/274', 'title': u'Fix performance issue introduced in 3.0.6 (issue #6695)'}, {'body': u'@fxn pointed out to me that the gsub was unneeded, so I removed it. Hopefully this can go into 3-0-stable as well as master, so I can use the fix in the next point release. :)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c3ed917e59156a36212d48155831482?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/273', 'title': u'Small fix for previous Hash.from_xml fix'}, {'body': u'before:\n\n    Hash.from_xml("<tag foo=\'bar\'>\\n</tag>")\n    => {"tag"=>"\\n"}\n\nnow:\n\n    Hash.from_xml("<tag foo=\'bar\'>\\n</tag>")\n    => {"tag"=>{"foo"=>"bar", "__content__"=>"\\n"}', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c3ed917e59156a36212d48155831482?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/272', 'title': u'XML attributes no longer disappear if a tag contains whitespace'}, {'body': u'Just fixed a tiny typo in a comment', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/12d36dd93362054c38e8cb7e71f58802?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/271', 'title': u'Comment Typo'}, {'body': u"`dbconsole` command doesn't recognize `jdbcpostgresql` adapter.<br/>And JRuby requires some workaround to run `psql` in proper environment.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5aabebb65e39f16a1bd9987bc96b09a5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/270', 'title': u'Fix dbconsole command for jdbcpostgresql adapter and JRuby'}, {'body': u'Add unit test to demonstrate issue with similar callback methods overriding each other in distinct contexts', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4595c065d3424b61aa9011599155397b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/269', 'title': u'Callback collision'}, {'body': u"The comment above the method specifically states the supplied param must respond to include?, but allows a method that doesn't fall through to a NoMethodError.  Instead it should raise a more descriptive error.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d1f5556fd1ea9b1dcbddae79d2ec383b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/268', 'title': u"Add ArgumentError to Object#in? if supplied param doesn't respond to :include?"}, {'body': u'This made the isolated test failed on CI server.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/267', 'title': u'Fix missing requires in Action Mailer'}, {'body': u'This pull request fixes the range around 2 days for `distance_of_time_in_words`.  It also corrects the tests and docs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a4645950aec111e6f4b94d0dff99e699?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/266', 'title': u'distance_of_time_in_words returns wrong value near 2 days'}, {'body': u'After a very long discussion on https://github.com/rails/rails/pull/258 and discussion with @dhh, we\'ve decide that we want to do two things to it.\n\n## 1. Remove `Object#among?`\n\nThe reason for removal would be because these three things:\n\n1. Performance problem. Using varargs here seems to bug a lot of people\n2. It\'s shorter; `obj.in?([1,2,3])` is wayyyyy shorter than `obj.among?(1,2,3)`\n3. No good name for the inverse of it.\n\nIf you really want `obj.among?`, please show us your support by saying so and suggest a good name for inverse of it.\n\n## 2. Add `Object#ex?`\n\nA while ago, @pigoz has come up with this wonderful name from Latin. We think it fits with `#in` nicely, so we\'re including it here. You could say that "#ex? is the new #not_in?`\n\n## Feedback needed!\n\nPlease keep the awesome discussion going. Make a comment if you like it/hate it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/265', 'title': u'Take out Object#among? but add in Object#ex?'}, {'body': u"Hi,\n\nI've discussed with Aaron a while ago about the way that I can use ARel's comparison methods (`#gt`, `#lt`, and so on) in AR. Turned out that I have to access it via `#arel_table` method of the model:\n\n    users = User.arel_table\n    famous_users = User.where(users[:fame].gt(80))\n\nThis become a bit tedious as I have to have another variable to store an instance of `Arel::Table` to be able to call those methods on it. Also, I don't think the code look clean if I merge those two lines together and make it as\n\n    famous_users = User.where(User.arel_table[:fame].gt(80))\n\nSo, after some discussion, I think it's better to make AR `.[]` method to return the instance of `Arel::Attributes::*`. This will give more readability to the code example above, and I think it fits in great with the context.\n\nAfter applying my patch, you would then can do\n\n    famous_users = User.where(User[:fame].gt(80))\n\nI think that looks really nice. I really wish I could get some feedback from you guys.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/264', 'title': u'Return and instance of Arel::Attributes when calling `[]` on the model.'}, {'body': u'Actual arguments order is the same as in rails console. Fixes #5930.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/040f75103040d887e6e32d607cb940a3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/263', 'title': u'Corrected dbconsole usage message'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/262', 'title': u'Update Valiate Uniqueness to force case sensitivity'}, {'body': u'as the confirmation validation already adds that attr_accessor', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/261', 'title': u'attr_accessor :password_confirmation is not necessary for ActiveModel::SecurePassoword'}, {'body': u'as the confirmation validation already adds that attr_accessor', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/260', 'title': u'attr_accessor :password_confirmation is not necessary for SecurePassword'}, {'body': u"I always wanted on format validator do something like:\n\n    validates_format_of :email, :with => :email\n\nthe idea is to have pre-defined formats for common used expressions. in this pull request I'm sending my implementation for that idea. this is a simple engine to register and use format aliases, also included a sample file for initialization to make user able to define these aliases.\n\nto define a new alias you just need to:\n\n    ActiveModel::Validations::FormatValidator.register_format_alias(:my_alias, /my_expression/)\n\nthis way, we can have some default most common ones (like :email one) and other libraries can define some for convenience.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e0f4c19148f8b1deb2e86847e225d33d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/259', 'title': u'Predefined formats on format validator'}, {'body': u"This will allow you to check if an object is included in another object or the list of objects or not.<br/><br/>This patch is derived from patch by Brian Morearty and John Reitano on Lighthouse ticket. I've rewrite it and make sure that we support both 'another object' and 'list of objects' version, as it surely be useful to support both.<br/><br/>Original ticket: https://rails.lighthouseapp.com/projects/8994/tickets/6321<br/><br/>Original discussion: http://groups.google.com/group/rubyonrails-core/browse_thread/thread/218a36184fe1176c<br/><br/>Please review it for me and see if it's appropriate. I really want to see this one got merged into Rails core, as I personally like `Object#in?` myself.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/258', 'title': u'Add support for Object#in? in Active Support'}, {'body': u"I found that in some case there's a need for you to change the validator's rule by record's condition. This patch will provide you the option to add proc or lambda as the :in option for InclusionValidator and ExclusionValidator, and :with, :without option for FormatValidator<br/><br/>Please review my patch and see if it's any good. Thank you.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/257', 'title': u'Add support for proc or lambda as an option for InclusionValidator, ExclusionValidator, and FormatValidator'}, {'body': u"Hi guys,<br/><br/>As per @dhh's request, I've finished the following patches:<br/><br/>## Switch from XML to JSON in scaffold generator<br/><br/>This is really straightforward. Note that in `update` and `destroy` we have to return empty hash so that jQuery will understand that the response is correct. That has been patched in https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/responder.rb#L262-278 as well.<br/><br/>## Use Ruby 1.9 hash style<br/><br/>I've updated scaffold generator and app generator to use Ruby 1.9 hash. I've accomplished it by adding `key_value` method which will detect Ruby version and returns the right key-value hash according to the version.<br/><br/>I also take it further by adding `--old-style-hash` in case someone might want to make their code compatible with 1.8.x, or just sanely hate 1.9 style hash.<br/><br/>Please review the patch and see if they're appropriate. Thank you.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/256', 'title': u'Switch from XML to JSON in scaffold generator, and use Ruby 1.9 hash style'}, {'body': u"So we don't miss out on the nice documentation of the respond_to and<br/>respond_with instance methods.  Also added :nodoc: to protected method.<br/><br/>Closes [#6261](https://rails.lighthouseapp.com/projects/8994/tickets/6261-why-does-actioncontrollermimeresponds-have-nodoc).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4d6f74711436cfe252bf4fc8f3cf4971?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/255', 'title': u'removed :nodoc: from ActionController::MimeResponds'}, {'body': u'The csrf_meta_tags helper should use the tag helper, both for consistency and in order to support cases where TagHelper::tag is overridden.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/005c339fc1497fd6ddd304a78a118ddd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/254', 'title': u'Make csrf_meta_tags use the tag helper'}, {'body': u'The csrf_meta_tags helper should use the tag helper, both for consistency and in order to support cases where TagHelper::tag is overridden.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/005c339fc1497fd6ddd304a78a118ddd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/253', 'title': u'Make csrf_meta_tags use the tag helper'}, {'body': u"- it was broken after<br/>[commit](https://github.com/rails/rails/commit/e0eb8e9c65ededce64169948d4dd51b0079cdd10)<br/>- there's also<br/>[issue](https://rails.lighthouseapp.com/projects/8994/tickets/6634-railsrack-inconsistency-about-expires_afterexpires-cookie-option)<br/><br/>- also: maybe it worth making Rack understand :expire_after as we<br/>duplicate same logic in [cookie_store](https://github.com/gmarik/rails/blob/v2.3.11/actionpack/lib/action_controller/session/cookie_store.rb#L114)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a601ce8bc71d3c358544f7dbcb464251?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/252', 'title': u'respect :expire_after'}, {'body': u'2 commits on this pull request:<br/><br/>1) Try to use IM when loading records by id using AR::Base#find()<br/>2) Add log message if a record is loaded from IM.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/251', 'title': u'Identity map: use it when using find(ID) and add log message'}, {'body': u"These changes allow you to selectively disable and enable observers.  By default, all observers are enabled (as they are now).  You can enable or disable them using APIs like these:\n\n* `ActiveRecord::Base.disable_observers :audit_trail, :logger` (symbols)\n* `ActiveRecord::Base.enable_observers AuditTrail, Logger` (classes)\n* `ActiveRecord::Base.enable_observer :user_observer` (singular)\n* `ActiveRecord::Base.with_observers_disabled(:audit_trail, :logger) { ... }` (disables the observers only for the duration of the block.)\n\nI find this to be very useful for model unit tests, but I'm sure it could be useful in other situations, such as a rake task where you are backfilling data and don't want to trigger email notification to a user via an observer.\n\nLet me know if you want me to submit another pull request with this rebased against 3-0-stable (i.e. if you plan to do another 3.0.x release).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/42d4590355a1404230fbc9aff4dd377b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/250', 'title': u'Active model observer disabling'}, {'body': u'Hopefully "serializeration" is not an in joke that I missed.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/249', 'title': u'Rename test directory to match code directory'}, {'body': u"The test that's being removed is an old test that was (I think) trying to test something similar but became a false positive, see https://github.com/rails/rails/commit/d780d1f508c880c59d6d932bd052cb0b1c1c76b0", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/248', 'title': u'Enumerable should pass encoding options to children in #as_json/#to_json'}, {'body': u'Hi!\n\nLast rubysoc I was halfway through adding support for benchmarking under Rubinius when I had to "abandon" the task because of the schedule (it was really low priority). I\'ve been back at work on Rails\' performance tests utilities and I\'ve:\n\n- Improved YARV\'s support;\n- Added support for benchmarking and profiling under Rubinius and JRuby as well;\n- Added support for user-defined options;\n- Updated documentation accordingly.\n\nI\'ve worked with Wayne to get the necessary MRI 1.8/1.9 patches on rvm. The last of them was merged yesterday.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d3919b52fcacd09dcbf8804da13321c2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/247', 'title': u'Performance tests improved'}, {'body': u'The following issue affects the 3-0-stable branch:<br/><br/>https://rails.lighthouseapp.com/projects/8994/tickets/6599-305-introduced-repeated-column-lookups-for-eager-loaded-has_one-with-conditions<br/><br/>The AssociationProxy code appears to have been completely rewritten on master so I am not sure if this is a problem there or not (I am also not able to run my app against master right now to test it). But in the meantime I am asking that this patch get pulled into 3.0 stable to improve the situation for the 3.0.x line.<br/><br/>Even with this patch applied I am still seeing slower performance with (patched) 3.0.5+ vs 3.0.4, but it is much improved (3 - 4 times faster for a page loading many rows).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fa719c0a9dc02461d466b0c4dd1a9023?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/246', 'title': u'Fix repeated column lookups in 3.0.5+ (eager loaded has_one association with conditions)'}, {'body': u"In the new @dhh's `http_basic_authenticate_with` feature, the `authenticate_or_request_with_http_basic` method is called twice when it could be called only once.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fa1cdda524d49996a8bc6917328de3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/245', 'title': u'Remove useless call to authenticate_or_request_with_http_basic'}, {'body': u'After some discussion with Andrew White, it seems like this is a better approach for handling a wildcard route. However, user can still bring back the old behavior by supplying `:format => false` to the route.<br/><br/>The discussion is here: https://rails.lighthouseapp.com/projects/8994/tickets/6605', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/244', 'title': u'Update the wildcard route to be non-greedy by default, therefore be able to match the (.:format) segment'}, {'body': u"Do not show optional (.:format) block for wildcard route [#6605 state:resolved]<br/><br/>This will make the output of `rake routes` to be correctly match to the behavior of the application, as the regular expression used to match the path is greedy and won't capture the format part by default<br/><br/>This commit is the second attempt on fixing the issue, as the regular expression on another commit on `master` was invalid.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/243', 'title': u'Do not show optional (.:format) block for wildcard route'}, {'body': u"Currently, engines that use `isolate_namespace` with nested modules (e.g. `Foo::Bar`) do not correctly set the `module` prefix of the engine's routes. It is set to `foo_bar`, while it should be set to `foo/bar`. This means that none of the routes for that engine will work. This patch provides a test plus fix.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/af8fe8dc13fd9b0eaec9fe2ba254b4e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/242', 'title': u'Isolated engines with nested modules should set correct module route prefix'}, {'body': u'Changed the example code output by the runner command to use find_each instead of find(:all).each.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/153bd89899581d16f549097ef0a06ad6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/241', 'title': u'Example now uses find_each instead of find(:all).each'}, {'body': u"I've completed adding `config.force_ssl` configuration which will load the `Rack::SSL` middleware into the stack, and also `force_ssl` method in controller which will redirects user to HTTPS protocol.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/240', 'title': u'Add `config.force_ssl` configuration and add `force_ssl` method to controller'}, {'body': u'This commit fixes issue #6627 (https://rails.lighthouseapp.com/projects/8994/tickets/6627-server-hanging-when-using-extreme-values-for-date_select-start_year). The issue occurs because the build_options method loops forever when the range between start_date and end_date is too big.<br/><br/>This commit adds a verification to #build_options and raises an error when the range is greater than 1000.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/81111eea4c7c927f038a45d657a12666?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/239', 'title': u'Fixes an issue when creating a date select with too many options.'}, {'body': u'When i am using "jdbcmysql" for my Jruby application the Error "uninitialized constant Mysql::Error" is coming when i am running "rake db:create"\n\nTraced and found that we are checking only for /mysql/ and we can check if the it start with mysql  / ^ mysql/\n\nHave a look.\n\n\n\nArun', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/238', 'title': u'When using "jdbcmysql" Error "uninitialized constant Mysql::Error"'}, {'body': u"Rails pluralizes 'virus' as 'viri' and 'octopus' as 'octopi', while pluralizing 'radius' as 'radiuses' and 'alumnus' as 'alumnuses'. Normal usage is generally the opposite - 'radius' and 'alumnus' are generally treated as exceptions whereas other words ending in '-us' are pluralized '-uses'.<br/><br/>The two exceptions to this currently covered by Rails are unfortunate since:<br/><br/>* Octopus is a Latinization of the Greek \u1f40\u03ba\u03c4\u03ce\u03c0\u03bf\u03c5\u03c2 (Octopous), which pluralizes to \u1f40\u03ba\u03c4\u03ce\u03c0\u03bf\u03b4\u03b5\u03c2 (Octopodes). The plural 'octopi' is a neologism, and probably originated as either a joke or a misconception.<br/>* There are no attestations of 'viri' being used as the plural of 'virus' in a Latin text. This is not particularly surprising, given that the first known use of the latin 'virus' is in the late 14th century, long after Latin ceased to be a native language and not long before it ceased to be used even for academic writing. There *is* a Latin plural 'viri', but it's of the singular 'vir', meaning 'man'.<br/><br/>While I'm on a roll explaining a pull request with a pedantic screed, there are various references below.<br/><br/>* http://en.wikipedia.org/wiki/Plural_form_of_words_ending_in_-us<br/>* http://www.etymonline.com/index.php?term=virus<br/>* http://linuxmafia.com/~rick/faq/plural-of-virus.html<br/>* Fowler, *A Dictionary of Modern English Usage*, p. 684 ([Google Books link](http://books.google.co.uk/books?id=Z4HI0RQIDK0C&pg=PA684&lpg=PA684&dq=virus+plural+fowler+modern+english+usage&source=bl&ots=wcz_Wz-nLQ&sig=BDQ9RoSDXwsXwjsAVR6dxCVNAng&hl=en&ei=IgaNTdrWOJGbhQe21-W7Dg&sa=X&oi=book_result&ct=result&resnum=4&ved=0CDAQ6AEwAw#v=onepage&q&f=false))<br/>* Finally, the Official Scrabble Words lists 'viruses', but not 'viri' or 'virii'<br/><br/>Test and documentation changes are, of course, included. I hope there's no one out there with a table named 'viri'!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/adcd8d8f37a83e7ed102cd1df3e95298?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/237', 'title': u'Latin plural tweaks'}, {'body': u'result variable is never used within the initializer', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d5187e837edd629ac73b1776d15306aa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/236', 'title': u'removed unused result variable from ActiveRecord::Base initializer'}, {'body': u'activesupport has a dependency in i18n, it was missing in the gemspec.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/85d1c1b4a9a01356502ea00f5a59d9a6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/235', 'title': u'Adding i18n dependency to activesupport gemspec '}, {'body': u"The delegate method currently cannot be used with keywords (such as `module`).<br/><br/>This won't work:<br/><br/>    class DelegateExample<br/>      attr_accessor :module<br/>      delegate :title, :to => :module<br/>    end<br/><br/>The method being created by delegate currently looks like this:<br/><br/>    def title(*args, &block)<br/>      module.__send__(:title, *args, &block)<br/>    rescue NoMethodError<br/>      if module.nil?<br/>        return # depends on :allow_nil<br/>      else<br/>        raise<br/>      end<br/>    end<br/><br/>I've add `self.` to prevent errors when using keywords:<br/><br/>    def title(*args, &block)<br/>      self.module.__send__(:title, *args, &block)<br/>    rescue NoMethodError<br/>      if self.module.nil?<br/>        return # depends on :allow_nil<br/>      else<br/>        raise<br/>      end<br/>    end", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cfc773efd86dc84c194ea909df55e97a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/234', 'title': u'Delegate method that accepts keywords.'}, {'body': u'Current scaffold_controller generates old code with lots of cruft. Changed to use respond_to and respond_with instead of the huge format blocks. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b7083eefdbc828379d5dc090a7a77a51?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/233', 'title': u'Changed scaffold_controller generator to use respond_with and respond_to'}, {'body': u'Hi! Here you go, functionality + docs. Now the only thing you have to do is to add some configuration stuff to Rails::Application and use it in ActionView::PathSet.<br/><br/>Cheers! nu7', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/16c772a254c53065066116ccd04ae146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/232', 'title': u'Custom patterns for ActionView::PathResolver'}, {'body': u"Repeating what I've said in [Lighthouse ticket 6598](https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6598-activerecordrelationexcept-and-only-loses-scope-extensions)<br/><br/>Given a scope with extensions<br/>When I use the except to remove a part from the relation<br/>Then the extensions are gone, because except returns a brand new relation object.<br/><br/>This means the following doesn't work (when using Kaminari, which uses extensions):<br/><br/>    Post.page(2).except(:order).current_page<br/><br/>Because the current_page method was added by the page scope.<br/><br/>This issue is present in at least 3.0.5 and master.<br/><br/>The supplied patch will apply the extensions again after using except and only.<br/><br/>There is some duplication going on in both methods. A private method could certainly be extracted (although I'm clueless on a name).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/42ec9fd08c179b547dcb60d977e29941?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/231', 'title': u'ActiveRecord::Relation#except and #only loses scope extensions'}, {'body': u"Matthias Folz and I've added associations (has_many and has_one) via reflection classes to ActiveResources.<br/><br/>Here is the link to the googlegroups discussion:<br/>http://groups.google.com/group/rubyonrails-core/browse_thread/thread/dd8d83955a7cf9e8/1f95a896887cd9a9#1f95a896887cd9a9 <br/><br/>And the lighthouse ticket:<br/>https://rails.lighthouseapp.com/projects/8994/tickets/6473-activeresource-adding-associations-through-reflections#ticket-6473-1<br/><br/>I hope, it's not impolite to open a pull request without an answer on the lighthouse ticket form a core member.<br/>If it's so: I'm sorry... ;)<br/><br/>Greetz<br/>Markus Schwed", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a85f411ad05f650ddc2bc14b4b1280ac?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/230', 'title': u'[Feature] ActiveResource - Associations through reflections'}, {'body': u'In activerecord/lib/active_record/attribute_methods/read.rb define_read_method() if column.type_cast_code(\'v\') returns nil then you get a syntax error when the code is evaluated because the resulting access_code ends with "&& ;"<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0c9b1c38fa38c2371a41b40bccb25df3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/229', 'title': u'syntax error for null column.type_cast_code'}, {'body': u'Two of the assertions in this test had no messages, so failures were not as informative as they could have been.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b6621ca717b64e2e1717b2af82e3762b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/228', 'title': u'add messages to plain assertions in ActiveModel::Lint::Tests'}, {'body': u"I haven't run into any edge cases where cascading doesn't work as advertised and the extra options need to be explicit. If there are cases like that the tests should be changed to reflect it.<br/><br/>There were also a few white space inconsistencies that I fixed.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a6fdf2897717d9c587a7b9046a517d04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/227', 'title': u'Unnecessary redundancy in Time/Date calculations'}, {'body': u'Cleaned up loads of warnings with a couple parens and instance var initialization.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1ccb5123d1af92e24b32cec62abcf9a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/226', 'title': u'Stop ambiguous first arg warnings'}, {'body': u'This is a follow-up of [this previous pull request](https://github.com/rails/rails/pull/223), which was merged but [reverted](https://github.com/rails/rails/commit/9f5b1e1ed08df9dbedded0a6b7798d919d43b9a6) because isolation tests failed.\n\nThis pull request includes the same change, but in addition it also contains some fixes (missing dependencies) and a refactoring of the dependency tracker test. Dependency tracking is tested with and without autoloading. Tests should now succeed in isolation as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/af8fe8dc13fd9b0eaec9fe2ba254b4e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/225', 'title': u'It should be possible to use ActiveSupport::DescendantTracker without ActiveSupport::Dependencies (take two)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b99c70d85265a280851ec032140c6014?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/224', 'title': u'Ticket 6556 test and fix as single commit'}, {'body': u'Currently, ActiveSupport::DescendantTracker depends on ActiveSupport::Dependencies. That does not really make sense, since it is only used in the `clear` method.<br/><br/>AS::Callbacks depends on AS::DescendantTracker, but never calls the clear method. It should be possible to use AS::Callbacks without getting AS::Dependencies for free. Especially since AS::Dependencies overrides a few Ruby core methods.<br/><br/>This patch checks for the presence of AS::Dependencies when clearing the DescendantTracker and removes the explicit dependency.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/af8fe8dc13fd9b0eaec9fe2ba254b4e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/223', 'title': u'It should be possible to use ActiveSupport::DescendantTracker without ActiveSupport::Dependencies'}, {'body': u'Currently, when a callback is set in a parent class after it has been inherited from, the callback will be run multiple times in child classes. Observe:<br/><br/>    require "active_support/callbacks"<br/><br/>    class Parent<br/>      include ActiveSupport::Callbacks<br/>      define_callbacks :run<br/><br/>      def run<br/>        run_callbacks :run<br/>      end<br/>    end<br/><br/>    class Child < Parent<br/>    end<br/><br/>    class Parent<br/>      set_callback :run, :before do<br/>        puts "callback called"<br/>      end<br/>    end<br/><br/>    Child.new.run<br/>    # "callback called"<br/>    # "callback called"<br/><br/>This commit provides a fix, by updating the callback chain in reverse order (child classes first). The callback is now correctly run only once in child classes.<br/><br/>    Child.new.run<br/>    # "callback called"<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/af8fe8dc13fd9b0eaec9fe2ba254b4e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/222', 'title': u'Prevent callbacks in child classes from being executed more than once'}, {'body': u'ActiveSupport::Callbacks depends on ActiveSupport::Concern. These two commits fix dependency errors that I came across, resolving the following:<br/><br/>    ruby-1.9.2-p180 :001 > require "active_support/callbacks"<br/>    NameError: uninitialized constant ActiveSupport::Callbacks::Concern<br/>    (...)<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/af8fe8dc13fd9b0eaec9fe2ba254b4e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/221', 'title': u'Fix dependencies of ActiveSupport::Callbacks'}, {'body': u"I've noticed that passing `nil` inside an array in conditions generates wrong SQL. It appears that Arel is to blame. I'll pushing a patch for Arel also, if you confirm this.\n\nHere are some failing tests.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5c11b2e624af2cb13797e47442067ea6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/220', 'title': u'Passing nil in array for conditions appears broken'}, {'body': u"The original bug is reported in this lighthouse ticket:<br/><br/>https://rails.lighthouseapp.com/projects/8994/tickets/6225-memcachestore-cant-deal-with-umlauts-and-special-characters<br/><br/>The ticket has more details about my implementation. I've included tests and comments in my commit.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22a9bb6a9ec077e4d666d98052790c05?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/219', 'title': u'Character encoding issues with MemCacheStore in 1.9.2'}, {'body': u"https://rails.lighthouseapp.com/projects/8994/tickets/6564-undefined-method-zero-for-orderedhash#ticket-6564-4<br/><br/>After a group query, a Relation that hasn't been loaded will throw an error calling empty? as the count variable is an OrderedHash instead of a Numeric. This tests for the Numeric case and uses the appropriate call.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ce795239ba5dd2384fc2f88ffaff5451?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/218', 'title': u'Patch for issue #6564'}, {'body': u"`railties/lib/rails/generators/rails/plugin_new/templates/MIT-LICENSE` uses `Date.today` without its generator `require 'date'` which is needed for that method.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53150995c134902b9790479b76f1845c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/217', 'title': u'Fix plugin generator license'}, {'body': u"Currently `<%= Date.today.year %>` is broken in `railties/lib/rails/generators/rails/plugin_new/templates/MIT-LICENSE` and can easily be solved with a `require 'date'`. But I feel that putting a MIT-LICENSE in a fresh plugin in is a bit too opinionated especially since a new rails app doesn't include it and shouldn't either. If others feel strongly that new plugin should include the license, I feel that new rails apps should do it as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53150995c134902b9790479b76f1845c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/216', 'title': u'Remove license from new plugins'}, {'body': u'Change autolaod to autoload', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e94ddf54b3d31c6eda0e1c76a58c3e74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/215', 'title': u'Documentation typo fix'}, {'body': u'https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6556-length-validation-for-integer-fixnum-fields', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b99c70d85265a280851ec032140c6014?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/214', 'title': u'Length validation fix'}, {'body': u'Is it just reasonable to change dbconsole usage message?<br/>From:<br/>    Usage: dbconsole [options] [environment]<br/>to<br/>    Usage: dbconsole [environment] [options]', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1935f5d5eb2c27d53eff90b5764287fa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/213', 'title': u'make dbconsole honor environment when options specified'}, {'body': u"Rubys own Float#round method in versions 1.9 and above takes optional precision parameter and at least two times faster then Active Support's Float#round.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1935f5d5eb2c27d53eff90b5764287fa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/212', 'title': u'Use Rubys own Float#round method in versions 1.9 and above'}, {'body': u"Rubys own `Float#round` method in versions 1.9 and above accept optional precision and at least two times faster then ActiveSupport's `Float#round`.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1935f5d5eb2c27d53eff90b5764287fa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/211', 'title': u'Use rubys own Float#round method in versions 1.9 and above'}, {'body': u'The private `simple_format` method introduced in `ActionMailer::MailHelper` breaks the method of the same name in `ActionView::Helpers::TextHelper`. This patch renames the former.<br/><br/>Commit with the regression: https://github.com/rails/rails/commit/4083e0ea2ae6f87929a32935122f2427845098e0<br/><br/>Lighthouse ticket: https://rails.lighthouseapp.com/projects/8994/tickets/6513-simple_format-behaviour-changed-when-used-in-mailer-view', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f9956cc234ccacfee8d107bde748157c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/210', 'title': u'Simple format'}, {'body': u'Pretty useless fix, but might as well be consistent in the template. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a6fdf2897717d9c587a7b9046a517d04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/209', 'title': u'Routes template inconsistency'}, {'body': u'Quick change for https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6530\n\nCheck if svn/git is installed prior to actually installing a plugin. \n\nNot sure how to write a test to cover this... ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f5b00e13945603d776daaf4f706a7d76?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/208', 'title': u'#6530 - Plugin install from Github should fail with a message if Git is not installed'}, {'body': u"Fixes regression [6147](https://rails.lighthouseapp.com/projects/8994/tickets/6147-find_or_create-via-has_many-fails-for-hash-parameters) with tests. `ActiveRecord::Associations::AssociationCollection#find_or_create_by_*` should match behavior of `ActiveRecord::Base#find_or_create_by_*`, as well as it's behavior before 2.3.9.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a6bb0975f1689c50d80915b12e2aaa3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/207', 'title': u'2-3-stable - fixes regression 6147-find_or_create-via-has_many-fails-for-hash-parameters'}, {'body': u"I'd like to define behavior within an around callback based on the value from the return result of the event.  Currently, this is possible (seemingly be chance) based on the order and types of callbacks you're using.  For example, the following example will allow access to the result:<br/><br/>    class MySuper<br/>      include ActiveSupport::Callbacks<br/><br/>      define_callbacks :save<br/>    end<br/><br/>    class AroundCallback < MySuper<br/>      attr_reader :result<br/>      <br/>      set_callback :save, :around, :around_save<br/>      <br/>      def around_save<br/>        @result = yield<br/>      end<br/><br/>      def save<br/>        run_callbacks :save do<br/>          :saved<br/>        end<br/>      end<br/>    end<br/><br/>    o = AroundCallback.new<br/>    o.save    # => :saved<br/>    o.result  # => :saved<br/><br/>However, once you start incorporating after callbacks, the results are inconsistent due to the order in which callbacks are invoked.  Adding to the example above:<br/><br/>    class MultipleCallbacks < AroundCallback<br/>      attr_reader :result<br/>      <br/>      set_callback :save, :after, :after_save<br/>      <br/>      def after_save<br/>        :after_save<br/>      end<br/>    end<br/><br/>    o = MultipleCallbacks.new<br/>    o.save    # => :saved<br/>    o.result  # => :after_save<br/><br/>This change makes the behavior consistent by always returning the event's (:save in the example) result to the around callback.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/45f0a9e50c449a18f81bebcb6ff34543?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/206', 'title': u"Allow access to a callback event's return result from around callbacks"}, {'body': u'I found `destroy`, `destroy_all` and `find_by_sql` only accepts arguments in Array form whereas methods like `find` and `where` accepts variadic arguments.<br/><br/>    User.find([1, 2, 3])<br/>    #=> SELECT "users".* FROM "users" WHERE "users"."id" IN (1, 2, 3)<br/>    User.find(1, 2, 3)<br/>    #=> SELECT "users".* FROM "users" WHERE "users"."id" IN (1, 2, 3)<br/>    User.destroy([1, 2, 3])<br/>    #=> DELETE 3 users<br/>    User.destroy(1, 2, 3)<br/>    #=> ArgumentError: wrong number of arguments (3 for 1)<br/>    <br/>    User.where([\'name = ?\', \'user001\'])<br/>    #=> SELECT "users".* FROM "users" WHERE (name = \'user001\')<br/>    User.where(\'name = ?\', \'user001\')<br/>    #=> SELECT "users".* FROM "users" WHERE (name = \'user001\')<br/>    User.destroy_all([\'name = ?\', \'user001\'])<br/>    #=> DELETE user001<br/>    User.destroy_all(\'name = ?\', \'user001\')<br/>    #=> ArgumentError: wrong number of arguments (2 for 1)<br/><br/>This pull request enables accepting varargs for those 3 methods in order to get rid of the API inconsistency, and makes the whole API more Rails-3-ish.<br/><br/>I think the implementations could be more cleaner (especially, find_by_sql looks ugly and dirty), but anyway it works and passes all tests on both 1.8.7 and 1.9.2.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/205', 'title': u'accept variadic arguments for AR destroy, destroy_all and find_by_sql'}, {'body': u"Currently blowing up as discussed here:<br/><br/>https://rails.lighthouseapp.com/projects/8994/tickets/6519-plugin_new_generator-fails-in-template-undefined-method-today-for-dateclass-nomethoderror<br/><br/>Creating this in case it's easier to pull in than a diff, and if require 'date' makes more sense than pulling in AS/time", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1ccb5123d1af92e24b32cec62abcf9a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/204', 'title': u'Fix Date.today error in MIT-LICENSE'}, {'body': u"Small change that fixes this bug:<br/><br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6539-plugin_new-generator-creates-empty-apptemplatespublicjavascripts-directory-instead-of-publicjavascripts<br/><br/>Any reason this shouldn't be applied Piotr?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1ccb5123d1af92e24b32cec62abcf9a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/203', 'title': u'Fix empty jsdirectory'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fab62c8f6e960775233a221ce9dd252?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/202', 'title': u'Active model unused variable'}, {'body': u'Hello, this may be the wrong forum for a patch like this, but Lighthouse isn\'t accepting my wordy writeup due to apparent spamminess, so I\'m submitting it as a pull request instead.  Let me know if I\'m out of line.<br/><br/>This patch is related to:<br/><br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5060<br/><br/>I\'ve got a different approach to the problem that seems (to me) to be more semantically "correct" and has some performance bennies as well.<br/><br/>I propose changing the semantics to make :limit and :offset happen before count, which makes them consistent with the other ActiveRecord aggregate calculations -- e.g. sum(:limit => foo) operates only on the limited rows.<br/><br/>If we do that, then there are two performance wins:<br/><br/>1. If the app developer desires a count of a limited set (e.g. the number of records that will be shown on the next page) of a ginormous table, they won\'t have to choose between instantiating the records (to use Array#length) and having the database count every row in the table that matches before returning.  With this approach, the database will shortcut its count as soon as it collects offset + limit rows.<br/><br/>2. If an app ever does a count(:limit => 0) in some corner case, we don\'t have to hit the database at all.  We can just return zero.<br/><br/>As well as the fact that then count == length == size, so this issue is resolved.<br/><br/>Attached is a patch that implements what I described.  Note that I also changed the tests for issue 6268, as if this approach is acceptable, those constraints would no longer apply.<br/><br/>On the "why\'d he do that?" side of things, since Arel doesn\'t support subqueries, there\'s some trickery to make that happen in calculations.build_count_subquery.  I\'d really like to be able to do this inside Arel, but it appears that\'s not possible right now.  Given that relational algebra doesn\'t define limit and offset, Arel could alternatively change the behavior of its own count operation for future versions in a similar way without opening the floodgates to generic subqueries.<br/><br/>Admittedly this patch is pretty edgy because of the Arel workaround, so even if you buy the semantic change, I could see wanting to change the behavior at the Arel layer instead.  I just wanted to submit this as a proof of concept (all tests pass on the 4 default DB drivers) and see what people think.  Likewise, there may be legitimate reasons that this approach isn\'t desirable.  Please let me know what you think and I\'ll be glad to move the ball forward.<br/><br/>Thanks,<br/>-john', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/079ab1cc5aa71e625bb160e62b09f09c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/201', 'title': u'Count behavior'}, {'body': u'The way ActiveModel computes the type of serializable methods and attributes, any that return nil will be described as being YAML. <br/><br/>This produces XML like:<br/><br/>    <person><br/>      <name>John Doe</name><br/>      <preferences type="yaml" nil="true"></preferences><br/>    </person><br/><br/>However, in many cases, the \'type="yaml"\' part is unnecessary, and potentially misleading.<br/><br/>With this patch, the equivalent to the above XML would be:<br/><br/>    <person><br/>      <name>John Doe</name><br/>      <preferences nil="true"></preferences><br/>    </person><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1135d4703e47b03465798d3f63b3995f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/200', 'title': u'Serialized methods that return nil should not be considered YAML'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/199', 'title': u'Using accessor instead of ivar'}, {'body': u'As described in Rails issue 6440](https://rails.lighthouseapp.com/projects/8994/tickets/6440-session-reset-undefined-method-destroy-for-hash), when reset_session is called on the request twice, an error is thrown.  The error is thrown because the first reset_session sets the session to a hash, which no longer has a destroy method.  Thus, the second call throws a "undefined method `destroy\' for {}:Hash" error.\n\nThe pull request has two commits.  The first is a unit test that executes the bug and the second is a patch that checks that session can respond to destroy before calling it.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ad686dddaa66af4c26c6ef5d6a2c8bb1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/198', 'title': u"Patch for issue 6440 - Session Reset undefined method `destroy' for {}:Hash "}, {'body': u'This fixes a couple of issues that I have encountered while using postgres tesearch functionality:\n\n  #6073 - Patch by Robert Sosinski (www.robertsosinski.com) adding the tsvector data type\n\n  #6382 - Patch to fix money_precision= setting the variable in the wrong class\n\n ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/39da5f215a55d978a8f1f4550a215404?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/197', 'title': u'Fixes #6073, #6383 - Postgres added tsvector type, and fixed money_precision= NoMethodError'}, {'body': u"Hi! I'd like to include a JSON Column encoder to use with ActiveRecord::Base `serialize`. Now it only supports YAML.<br/><br/>What I don't quite like is that, since `serialize` already has a last argument with a default, the `options` hash isn't so comfortable to use. In my pull request to serialize a column with JSON you must do this:<br/><br/>    class Post < ActiveRecord::Base<br/>      serialize :data, Hash, :format => :json<br/>    end<br/><br/>You can't omit the `Hash` part if you want to specify a `:format`, and I don't like that. How would you improve this?", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/69921eedd141eac43c7f9cddc5891ca1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/196', 'title': u'Serializable ActiveRecord columns with JSON'}, {'body': u"I'd like to use the :include option with non-AR classes.<br/><br/>This pull request includes some preliminary clean up and test organization. The meat is in the final commit:<br/><br/>This commit moves support for the :include serialization option for<br/>serializing associated objects out of ActiveRecord in into ActiveModel.<br/>The following methods support the :include option:<br/><br/>  * serializable_hash<br/>  * to_json<br/>  * to_xml<br/><br/>Instances must respond to methods named by the values of the :includes<br/>array (or keys of the :includes hash). If an association method returns<br/>an object that is_a?(Enumerable) (which AR collection proxies do), it<br/>is assumed to be a collection association, and its elements must respond<br/>to :serializable_hash. Otherwise it must respond to :serializable_hash<br/>itself.<br/><br/>There's a bit more documentation and test reorganization that should happen (for instance a lot of the AR serialization tests should be refactored to AM tests), but I wanted to get some feedback before I went any further.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/195', 'title': u'ActiveModel support for the :include serialization option'}, {'body': u"I think a fairly large portion of the people hacking on rails might be using rvm. It might be time to add the .rvmrc to .gitignore so that peoples personal ruby version/gemset don't accidentally get pushed up to rails/rails. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/627f0a46a5ea5729951b8224833ca653?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/194', 'title': u'Add rvmrc to gitignore'}, {'body': u'Detailed write up of problem on Lighthouse https://rails.lighthouseapp.com/projects/8994/tickets/6402', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/440301fb2b5ea565d5bf59ae73226f33?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/193', 'title': u'Fixes #6402 observer callbacks fired multiple times on 3.0.4'}, {'body': u'Fixed broken link to postgresql documentation', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fa3e1d6b441b2c97a8d213f860184b67?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/192', 'title': u'Documentation fix'}, {'body': u'I updated the test to include a test for ActiveModel style validation.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a9b8f5273d934fe57daa8cf54c3a017?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/191', 'title': u'ActiveResource Client Validation Tests'}, {'body': u'No need to send a query when all we need is a tiny ping packet ;)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c9f60c0cb1d941fa8e93bbfcb907c27e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/190', 'title': u'switch over to Mysql2::Client#ping for the mysql2 connection check'}, {'body': u'The `button_tag` helper isn\'t very helpful at the moment for two reasons:<br/><br/> * it defaults the `type` attribute to `"button"`, which is unexpected since `type="submit"` is HTML\'s default for the `<button>` element; and<br/> * it doesn\'t take a block, but the main reason to use `<button>` (instead of `<input type="submit">` et al) is that you want to include styled text or other elements like images.<br/><br/>These two commits fix the implementation, tests and docs for these two issues respectively.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/be3698f145a80c1230fd667c87d0f0c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/189', 'title': u'Make button_tag more helpful'}, {'body': u'ActiveRecord::Relation where clauses hash syntax accepts an ActiveRecord::Relation as a value, but it maps the relation to ids when it could just use a subquery.  By converting the Relation to an ast we can now accept any subquery.\n\nModel.where(:id => AnotherModel.some_scope.select(:some_id))\n\nwill only run one query and it supports references to tables from the outer query.\n\nHave corresponded with @tenderlove on this.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b3000e2e87475d13f09a40dfb6ece99c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/188', 'title': u'Relation subqueries'}, {'body': u'Hey there, while running SimpleForm tests on 3.0.4, I got this missing require and I had to add it manually before requiring `action_view/test_case`. Here is the line that calls the `deprecate` method:<br/>https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/http/request.rb#L138<br/><br/>I believe this can be safely applied on both master and 3-0-stable branch.<br/>Thanks.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/187', 'title': u'Missing require on ActionDispatch'}, {'body': u'The message wrongly says that ActiveRecord::Base#class_name will be removed in Rails 2.3.9, but it is still available in 2.3.10 and now 2.3.11.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/91160e88d86db6328f3e81313ae500c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/186', 'title': u'Fixes deprecation message for ActiveRecord::Base#class_name'}, {'body': u'If you do this on Ruby 1.9 (or any encoding aware Ruby) it will get pissed:\n\n    TPS_REPORT_TOPICS = { \'synergy\' => "Synergy", \'rev_stream\' => "Revenue Streams" }\n\n    class ActionController::TestCase\n      #...\n      test "can create a TPS report with a topic" do\n        post :create, :tps_report => { :topic => TPS_REPORT_TOPICS.keys.first }\n      end\n    end\n\nSince rails tries to force encoding in-place (in ActionDispatch::Http::Parameters#encode_params) on all strings that are passed in, it will raise an error if it gets a frozen string.\n\nI included a patch that dups all strings that are passed as parameters so that rails doesn\'t do in-place encoding on the strings that are passed in', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cee19a4eb998343e677f7f1cfd4de5bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/185', 'title': u'ActionController::TestCase#process barfs if it gets any frozen values as params'}, {'body': u'Previously serialized_attributes were kept as class attribute of ActiveRecord::Base - if some attribute was defined as serialized in one subclass then it was serialized in all other subclasses as well (if it had the same name).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/184', 'title': u'Bugfix for serialized_attributes to be class specific'}, {'body': u'This is a fix for this comment. https://github.com/rails/rails/commit/c8b7606734cc556ae17a9dd5bb12994a3cff6b7e#L1R130<br/>Removed a to_s call and made the test a bit more meaningful.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/183', 'title': u'Needless to_s in attribute methods test'}, {'body': u'This is the same patch with the one written inline here: https://github.com/rails/rails/commit/c8b7606734cc556ae17a9dd5bb12994a3cff6b7e#L0R41<br/>Just in case none of you were watching the comment above.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/76a777ff80f30bd3b390e275cce625bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/182', 'title': u'avoid nil.dup in time_zone_conversion'}, {'body': u'Now that Rails.root is a Pathname, it seems like you should be able to do this:<br/><br/>    config.action_controller.page_cache_directory = Rails.root.join("public/cache")<br/><br/>This patch (and test) allow you to do that. Without it, you get inexplicable and impenetrable 500 errors with logs that (super helpfully) look like this:<br/><br/>    Started GET "/" for 127.0.0.1 at Sat Feb 05 15:19:06 -0800 2011<br/>      Processing by MediaController#index as XML<br/>    Rendered media/index.xml.builder (0.2ms)<br/>    Write page /index.html (0.4ms)<br/>    Completed   in 6ms<br/><br/>    Errno::ENOENT (No such file or directory - ):<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4c3ed917e59156a36212d48155831482?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/181', 'title': u'Allow page cache location to be set to a Pathname'}, {'body': u'test_read_attributes_before_type_cast_on_datetime previously had already condition for Oracle adapter but it was deleted by commit 817e37013610c8e8866197594d5e408b4d5daec5. Now I added back this condition as Oracle adapter returns Time value before type cast on datetime attributes.<br/><br/>This patch should be applied to 3-0-stable branch as well where this mentioned commit was applied as well.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/180', 'title': u'fix for test_read_attributes_before_type_cast_on_datetime - Oracle adapter also returns Time value'}, {'body': u"While running some cucumber features I came across a failing cuke that at first glance seemed to be a simple case of a missing translation. In fact, the translation was not missing at all and was rendered properly when viewing the same page in development.<br/><br/>I traced the issue to the fact that in certain cases, when config.cache_classes is true (e.g. in cucumber environments), eager loading of various initializers triggers loading of app models (e.g. via observers). The I18n load path is setup (e.g. config/locales/*.{rb,yml} added to it) via an after_initialize hook but in this particular case, active record models that have been loaded via eagerly loaded initializers (e.g.) and use I18n (.e.g validation messages) don't see the fully loaded load path and thus we get the missing translation issue.<br/><br/>In my opinion, the I18n load path setup should happen before any eager loading is done so that it's completely setup if any AR models are eagerly loaded.<br/><br/>This pull request contains both a fix and a test that fails without the fix but passes with it.<br/><br/>See also: https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6353-i18n-load-path-needs-to-be-setup-before-eager-loading", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/982c3f128bb78678033c0bf8c0e226bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/179', 'title': u'Fix i18n load path setup when eager loading'}, {'body': u"While running some cucumber features I came across a failing cuke that at first glance seemed to be a simple case of a missing translation. In fact, the translation was not missing at all and was rendered properly when viewing the same page in development.<br/><br/>I traced the issue to the fact that in certain cases, when config.cache_classes is true (e.g. in cucumber environments), eager loading of various initializers triggers loading of app models (e.g. via observers). The I18n load path is setup (e.g. config/locales/*.{rb,yml} added to it) via an after_initialize hook but in this particular case, active record models that have been loaded via eagerly loaded initializers (e.g.) and use I18n (.e.g validation messages) don't see the fully loaded load path and thus we get the missing translation issue.<br/><br/>In my opinion, the I18n load path setup should happen before any eager loading is done so that it's completely setup if any AR models are eagerly loaded.<br/><br/>This pull request contains both a fix and a test that fails without the fix but passes with it.<br/><br/>See also: https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6353-i18n-load-path-needs-to-be-setup-before-eager-loading", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/982c3f128bb78678033c0bf8c0e226bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/178', 'title': u'Fix i18n load path setup when eager loading'}, {'body': u'Extension modules defined on associations are added to the association proxy itself, but are not propagated to scopes created from that association proxy.  This commit fixes that.<br/><br/>(The two assertions in the test case cover both built-in scope methods such as `where`, `limit`, etc., as well as scopes defined on the target class of the association.  During initial development, I tried a solution that addressed built-in scopes but failed for named scopes on the target class.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/64d558586b5374ed4087454b64fb76cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/177', 'title': u'Propagate association extensions to scopes called on the association.'}, {'body': u'The documentation siad that path would add a prefix, however that\'s not what it does. For isntance, `resource :posts, :path => \'notas\'` would display on `rake routes`:<br/><br/>    GET    /notas(.:format)            {:action=>"index", :controller=>"posts"}<br/>    POST   /notas(.:format)            {:action=>"create", :controller=>"posts"}<br/>    GET    /notas/crear(.:format)      {:action=>"new", :controller=>"posts"}<br/>    GET    /notas/:id/editar(.:format) {:action=>"edit", :controller=>"posts"}<br/>    GET    /notas/:id(.:format)        {:action=>"show", :controller=>"posts"}<br/>    PUT    /notas/:id(.:format)        {:action=>"update", :controller=>"posts"}<br/>    DELETE /notas/:id(.:format)        {:action=>"destroy", :controller=>"posts"}', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/939adf6d0996b237117188d060e7412c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/176', 'title': u'Fixes a documentation issue in ActionDispatch::Routing:Mapper::Resources::resource'}, {'body': u"Following line is redundant and I've removed it from dependencies.rb:\n\n    rescue NoMethodError then raise \n", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/175', 'title': u'Remove redundant line'}, {'body': u'Extension modules defined on associations are added to the association proxy itself, but are not propagated to scopes created from that association proxy.  This commit fixes that.<br/><br/>(The two assertions in the test case cover both built-in scope methods such as `where`, `limit`, etc., as well as scopes defined on the target class of the association.  During initial development, I tried a solution that addressed built-in scopes but failed for named scopes on the target class.)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/64d558586b5374ed4087454b64fb76cf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/174', 'title': u'Propagate association extensions to scopes called on the association.'}, {'body': u'This is as per "exit" documentation here: http://www.ruby-doc.org/core/classes/Kernel.html#M001444\n\nUse case: In my library I want to run system("rails new inside_existing_rails_dir") but that fails because you can\'t initialize an application while inside the directory of another.  However, I as a library author may assume it worked because $? == 0 as below (in irb):\n\n    > `rails new inside_existing_rails_dir`\n       => "Can\'t initialize a new Rails application within the directory of another, please change to a non-Rails directory first.\\nType \'rails\' for help.\\n" \n    > $? == 0\n       => true\n\nThanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1d676127a3e4c0531e2d37dabef0a12d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/173', 'title': u'Return a non-zero exit code when commands fail'}, {'body': u'This is a small fix on ActiveModel::SecurePassword module.<br/><br/>Currently, `attr_protected(:password_digest)` is called always if the model class responds to `:attr_protected`.<br/><br/>When the model class has called `attr_accssible`, `attr_protected` should not be called.<br/><br/>It changes the active mass assignment authorizer from WhiteList to BlackList. That nullifies the existing protection.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/df4831629f8a128c373e77f00f04980f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/172', 'title': u'password_digest should be protected by active authorizer'}, {'body': u"Will force a limit(1) on the scope.<br/><br/>Currently when calling #first on a scope it does the full query through the method_missing fallback. (calls #to_a) If we're calling #first there is no reason to query for the rest of that data.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/171', 'title': u'ActiveRecord::Relation#first convenience method'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/607564f1a15f1899c71b4a9fdfc33ac2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/170', 'title': u'Little fix in RDoc'}, {'body': u'Previous implementation was throwing exceptions when default_scope was called multiple times for the same model. This fix uses the old finder merging (using construct_finder_arel method) for non-lambda arguments and recursive lambdas when necessary.<br/><br/>More info in ticket #1812 on lighthouse.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/550103fa7ffccf284804c3eecc1d307b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/169', 'title': u'Lambda default scope'}, {'body': u'Clean up YAML deprecation warnings for ActiveSupport and use Psych whenever available', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/168', 'title': u'Clean up YAML deprecation warnings for ActiveSupport and use Psych whenever available'}, {'body': u'Hi there<br/><br/>I fixed a bug in ActiveResource::HttpMock.<br/><br/>I wrote this test to capture the case:<br/><br/>    test "allows you to replace the existing reponse with the same request by calling a block" do<br/>      ActiveResource::HttpMock.respond_to do |mock|<br/>        mock.send(:get, "/people/1", {}, "XML1")<br/>      end<br/>      assert_equal 1, ActiveResource::HttpMock.responses.length<br/><br/>      ActiveResource::HttpMock.respond_to(false) do |mock|<br/>        mock.send(:get, "/people/1", {}, "XML2")<br/>      end<br/>      assert_equal 1, ActiveResource::HttpMock.responses.length<br/>    end<br/><br/>Basically, redefining the GET /people/1 mock would create a duplicate response in HttpMock. When you actually ran the mocks it would end up using the *first* one defined, not the *last* one.<br/><br/>All fixed now :)<br/><br/>Josh', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/128a23ed95e352275c88fcb39c888932?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/167', 'title': u'Fixed a bug where ActiveResource::HttpMock would not replace an existing response when passing a block to the respond_to method'}, {'body': u"https://github.com/evanphx/rubinius/issues/issue/11<br/>https://github.com/evanphx/rubinius/commit/2fccbb5dad5cb3f5414d635547290538cfc0a2d4<br/><br/>This commit removes its use in Rails. Besides removing code which is now dead on all existing interpreters, it's probably not good practice to rely on the behavior of a non-standard extension.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/166', 'title': u'Class.__subclasses__ was removed from Rubinius'}, {'body': u'The generated _run_<name>_callbacks method is not (or should not be) a public interface.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/165', 'title': u'Use run_callbacks'}, {'body': u"`rails new` produces a `.gitignore` file that uses Ruby-style globbing that git doesn't recognize (`tmp/**/*`). As a result, something like `tmp/foo.rb` would not be ignored.<br/><br/>A simple `tmp/` should ignore the `tmp` directory - whatever it contains in terms of files or sub-directories..", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d88863757d1f37a2f61bf2bda6516524?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/164', 'title': u'Small fix to the default rails .gitignore'}, {'body': u'The db:fixtures:load rake task allows specifying a comma list of which fixtures to load as FIXTURES. However, it incorrectly strips the last 4 characters off each table name since 8ec085bf1804770a547894967fcdee24087fda87.<br/><br/>$ rake db:fixtures:load FIXTURES=products<br/>rake aborted!<br/>Could not find /home/jhawthorn/example/test/fixtures/prod.yml or /home/jhawthorn/example/test/fixtures/prod.csv', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ec81d9cd659b1823a1dd321a2b547faa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/163', 'title': u'LH#6061 rake db:fixtures:load with FIXTURES=tables is broken'}, {'body': u'Seems that a little mistake happened in last commit in this file. raise should be in rescue section like it was before. This broke [cucumber-rails](https://github.com/aslakhellesoy/cucumber-rails/issues#issue/95)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b85d2c78cae9885b7f1ad2b5f808a450?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/162', 'title': u'Show exceptions fix'}, {'body': u'Seems better to include an example of a still maintained, up to date gem.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e3191b55da8ada73c3e1ada98a63af6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/161', 'title': u'More contemporary example in Gemfile'}, {'body': u'In previous version if database adapter (e.g. SQLite and Oracle) returned non-String calculated values then type_cast_using_column converted decimal average value of intefer field to integer value. Now operation parameter is always checked to decide which conversion of calculated value should be done.<br/><br/>This is fix for Lighthouse issue #6103<br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6103-average-returns-integer-values-instead-of-decimals<br/>and is fixing bug that was introduced by commit 0a8eaff3d16fbf48259319ff17e2fe8f6cb3d450<br/><br/>This should be applied to master branch as well.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/160', 'title': u'Always return decimal average of integer fields'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/74a6d58513855be76092b33124bedaf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/159', 'title': u'association_preload.rb:336: warning: Object#type is deprecated'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/74a6d58513855be76092b33124bedaf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/158', 'title': u'association_preload.rb:336: warning: Object#type is deprecated - proper fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/74a6d58513855be76092b33124bedaf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/157', 'title': u'association_preload.rb:336: warning: Object#type is deprecated'}, {'body': u'While working on the equivalent patch for `Time#to_datetime`, I learned that Ruby 1.8.7+ already provides a definition which correctly handles fractional seconds. Since 1.8.6 is not supported by Rails 3, I simply removed the unused AS definition.<br/><br/>Tested on 1.8.7, 1.9.2, and JRuby 1.5.6.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/156', 'title': u'Support fractional seconds in DateTime#to_time'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/74a6d58513855be76092b33124bedaf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/155', 'title': u'mem_cache_store options merge'}, {'body': u'Without this, db:test:prepare fails, when the db/schema.rb contains references to functions or tables that are defined in a non-standard template, making it quite difficult to write/run tests against the project.<br/><br/>The case that prompted this patch is a template database with postGIS specific language, tables, and functions.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/51ee7bed9ecbc33aec92517f1fbb6cc2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/154', 'title': u'Adding postgresql template option when executing db:test:clone_structure'}, {'body': u'https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6256-patch-select-helpers-with-boolean-attributes', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/d0875ec217770dedafdd7e260f837535?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/153', 'title': u'LH#6256 select helpers with boolean attributes'}, {'body': u'As the subject says. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/105ce54c778ea92e46b8ac035edf29e6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/152', 'title': u'Fix subtle bug with difference between behavior of empty? and blank? for ActiveModel::Error'}, {'body': u'Previous version (after commit 3103296a61709e808aa89c3d37cf22bcdbc5a675) was generating wrong SQL for Oracle when calling exists? method on HABTM association (see errors at https://gist.github.com/9ced68fffb09279af338).<br/><br/>"exists?" method is simplified to select just constant 1 (previously was selecting primary key value) - as just result existence is verified then there is no need to select primary key value. Previous version was also conflicting with Oracle with HABTM as then primary key value was selected twice which conflicted with subquery generated for simulating LIMIT clause.<br/><br/>After this patch tests on Oracle are passing as well as I tested that this patch is working on SQLite3, MySQL and PostgreSQL.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/151', 'title': u'Explicitly select * from has_and_belongs_to_many association tables, simplify exists? query'}, {'body': u'Otherwise when using external ActiveRecord adapters (e.g. Oracle) database_statements might be loaded before active_support/core_ext/module/deprecation which results in NoMethodError (commit 60cf65def805995bcca184c40b44bb01d86a48aa added "deprecate" call to database_statements.rb)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/150', 'title': u'Require ActiveSupport deprecatation file before using deprecate method in database_statements'}, {'body': u'Using the words from diveintohtml5.org[1]:<br/><br/>"You should always specify a character encoding on every HTML page you serve. Not specifying an encoding can lead to security vulnerabilities[2]."<br/><br/>[1] http://diveintohtml5.org/semantics.html#encoding<br/>[2] http://code.google.com/p/doctype/wiki/ArticleUtf7', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/486042df63bea54d7f796ad24bcbf82d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/149', 'title': u'Specify a character encoding on application layout page'}, {'body': u'https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6036-id-is-inproperly-escaped-on-postgresql-statements-when-primary-key-is-a-string<br/><br/>This bug has already been fixed, however one more failing test case was found.<br/><br/>This is the test case and fix for 3.0-stable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b81cae1fb43808ac23a2188258ca9e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/148', 'title': u'Fix for bug #6036'}, {'body': u'https://rails.lighthouseapp.com/projects/8994/tickets/6036-id-is-inproperly-escaped-on-postgresql-statements-when-primary-key-is-a-string<br/><br/>This bug has already been fixed. However it tourned out that not completely.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b81cae1fb43808ac23a2188258ca9e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/147', 'title': u'Fix #6036'}, {'body': u"Don't assume that the arity of active record method was not changed. Someone could extend the method so it takes some options and provides defaults.\n\nFor example: I extended destroy to work with validations and have a definition\nlike def destroy(options = {}).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b81cae1fb43808ac23a2188258ca9e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/146', 'title': u'Fix destroy arity'}, {'body': u'https://rails.lighthouseapp.com/projects/8994/tickets/2988-authenticity_token-option-for-form_tag', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/eb42ff31986f5ed1d97580819134d702?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/145', 'title': u'LH#2988 authenticity_token option for form_tag'}, {'body': u"I am trying to simplify the **numericality** validator a little by allowing something like<br/><pre>validates :price_range, :numericality => {:within => 10..20}</pre><br/><br/>instead of <br/><br/><pre>validates :price_range, :numericality => {:greater_than_or_equal_to => 10, :less_than_or_equal_to => 20}</pre><br/><br/>It looks to me like the _:within_ option currently only works for the length of an attribute?<br/><br/>I tried to add a test case and an update to the translation file, but I don't know enough about the Rails internals for validations and how it works behind the scenes. ", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2a018f8b16a3fe7273afde907c2e1bec?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/144', 'title': u'Numericality :within validator'}, {'body': u'I\'ve added button_tag helper and tests that allow the creation of button element in Rails views. This clearly has several advantages over the normal input tag with submit type, as it has support for much richer content due to the change in the HTML structure:<br/><br/>    <button type="submit|reset|button"><br/>      <strong><em>Save changes</em></strong><br/>    </button><br/><br/>Please have a look. Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/3d04b414402122afb854ffb9c3b14eaa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/143', 'title': u'`button_tag` helper'}, {'body': u'This is a backport of tests from master for regression purposes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36cca6cb1c1281de9405d40ed60575dc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/142', 'title': u'Add missing tests for subclassed arrays'}, {'body': u'This is just a backport of tests from edge for regression purposes.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36cca6cb1c1281de9405d40ed60575dc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/141', 'title': u'Add missing tests for subclassed arrays'}, {'body': u'This is additional fix for commit<br/><br/>ebc47465a5865ab91dc7d058d2d8a0cc961510d7 Respect the default_scope on a join model when reading a through association<br/><br/>which otherwise was failing on Oracle (as it returned fixture comments in different order).<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/140', 'title': u'Default scope tests fix'}, {'body': u'Fixed retrieval of primary key value in Ralation#insert method.<br/><br/>Previously primary key value was always assigned nil which caused Oracle enhanced adapter failing tests.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/139', 'title': u'Relation insert fix (was causing test failures on Oracle)'}, {'body': u"Pretty self explanatory, tests an obj against a number of other objects to make sure it does NOT match any of them. Leverages case comparison, so arbitrary argument types resulting in nonsense tests are ignored (eg a regex against a hash)<br/><br/>Good, for example, for checking a password against a variety of restrictions:<br/>    weak_passwords = ['qwerty', '123456', /passwo?r?d/]<br/>    user.password.avoids?(*weak_passwords)<br/><br/>Was more topical yesterday when SecurePassword still had some passwd strength code floating around, but as a reverse #include? it's a better option than weak_passwords.include?(password) and has value in other situations as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a6fdf2897717d9c587a7b9046a517d04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/138', 'title': u'Object#avoids? for checking against several objects/patterns at once'}, {'body': u"https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2873\n\nDefer reloading until #close is called on request body [#2873 state:resolved]\n\nReloading in the ActionDispatch::Callback middleware's after hook\nwas problematic with streaming responses such as the following:\n\n    self.response_body = lambda do |response, output|\n      # code here which refers to application models\n    end\n\nA new middleware, ActionDispatch::Reloader, provides an appropriate\ncallback hook and is responsible for lock management. It is included\nin the stack only in the !config.cache_classes case.\n\nBased on the implementation on the 2-3-stable branch and patches\nby Hongli Lai <hongli@phusion.nl>. His patches included locking\naround the request cycle; this is now handled by Rack::Lock\n(https://github.com/rack/rack/issues/issue/87/).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/137', 'title': u'Defer reloading until #close is called on request body'}, {'body': u'Cleans up tests a bit.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/136', 'title': u'Use assert_body'}, {'body': u'I took some pieces of (ActiveValidators)[https://github.com/cesario/activevalidators] and added it to ActiveModel.<br/><br/>    has_secure_password :strength => :strong<br/><br/>now accepts an option` :strength`, which can be `weak`, `medium` and `strong`<br/><br/>By default the 7 chars policy + WEAK_PASSWORD array are evaluated, if they are all OK, the `strength` will use the right regex.<br/>    ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/135', 'title': u'SecurePassword with a standalone PasswordValidator'}, {'body': u'Regarding to comments for https://github.com/rails/rails/commit/3b9120fa52b76fb8591fe1d0db85d1a940e867d0', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5ac931514fa7deadb59ed29909c233b8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/134', 'title': u'Configurable generation of add_index for references columns'}, {'body': u'I realize there are plenty of good reasons not to further pollute Enumerable, but I get a lot of use out of this method, and I think other people would find it handy as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cdc3fc7e6309a7989b6f5467670ec3cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/133', 'title': u'Enumerable#except'}, {'body': u"There was an issue that belongs_to associations with autosave enabled calls save and all callbacks every time the parent record was saved. This results in unexpected behaviour. I've changed this to only call save if the associated record is changed.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/903cbddffa73a7120c1b747a3d46dd32?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/132', 'title': u'Lighthouse 3353'}, {'body': u'https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/6140-rails-3-generators-wont-invoke-custom-generators', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/131', 'title': u'Namespacing generators (#6140)'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/130', 'title': u'require Array.wrap in migration.rb'}, {'body': u"Adds support to have namespace validators that aren't inside the model itself.<br/><br/>`validates :attr, :'namespace/some' => true` looks for `Namespace::SomeValidator`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53150995c134902b9790479b76f1845c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/129', 'title': u'Namespaced validators'}, {'body': u"Currently, when you maintain an engine and test it against dummy application, there is no way to easily manage database, especially when you need to have migrations in test/dummy application. These patches adds application's tasks to engine's Rakefile namespaced with :app prefix. Additionaly all the tasks in db namespace that deal with migrations, load migrations from both application and engine, so when you call:<br/><br/>    rake app:db:migrate<br/><br/>all migrations will be executed.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/128', 'title': u'rake tasks for managing db while engine development and testing'}, {'body': u'I replaced nested ifs with case/when and removed unused variable', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a74c34f1043b833b1fcc86ce9f3521ee?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/127', 'title': u'ActiveSupport Callbacks clean up'}, {'body': u'If you used actionmailer, master-branch would not install with bundler due to dependency-issues, which have been sorted out in this commit. The only thing it does is bring the i18n-dependency of actionpack and activemodel up to ~>0.5.0 (same as actionmailer).<br/><br/>https://rails.lighthouseapp.com/projects/8994/tickets/6105-rails-3-cannot-be-installed-from-scratch-due-to-failed-dependency-on-i18n-050', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/7f75c16b039cd5946fdee1e0771e4f09?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/126', 'title': u'Fixed bug #6105 - Rails 3 cannot be installed from scratch due to failed dependency on i18n 0.5.0'}, {'body': u'The recently added support for --javascript and --skip_javascript options checks for the wrong option when determining whether or not to copy the script.aculo.us JS files. Simple one-line patch plus tests resolves it. Lighthouse ticket coming in a jiffy :-)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/baa03aae53a59c8628c3fc78e075fa93?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/125', 'title': u'app generator not including script.aculo.us with Prototype'}, {'body': u"If you want to override the value of include_root_in_json for a specific controller and action there is currently no thread-safe way of doing that.<br/><br/>Now you can call @contact.to_json(:root => true) to always have a root, :root => false to always omit the root and :root => 'whatever' now always includes the root 'whatever' (previously it wouldn't include the custom root if specified when include_root_in_json was false).", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/53150995c134902b9790479b76f1845c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/124', 'title': u'Allow to_json to override the value of include_root_in_json'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/123', 'title': u'ActiveModel::Errors#to_json generates wrong json string when field has multiple errors'}, {'body': u'here is the lighthouse ticket<br/><br/>https://rails.lighthouseapp.com/projects/8994/tickets/5635-postgresql_adapter-doesnt-disable-referential-integrity-for-pg-90<br/><br/>the gist is;<br/><br/>rails tests are broken on postgres 9.0.1, if using foreign keys', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/e60b2dc57668b5662ce3f07781e41710?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/122', 'title': u'Disable keys for postgres 9.0.1is broken'}, {'body': u'Implements nested through associations. Fully tested and verified. Please see this ticket:<br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/1152', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2940bc7d4506f3e099e3dcc32a412b98?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/121', 'title': u'Nested through associations'}, {'body': u'Hey all, just a small fix for polymorphic belongs_to associations here. The associationproxy should be generating conditions for the association_class instead of using reflection.sanitized_conditions, since that will just give a NameError on something like Note::Notable.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/120', 'title': u'Fix for polymorphic belongs to associationproxy raising errors when loading target'}, {'body': u"LH won't let me attach diffs...<br/><br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5505", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/119', 'title': u"LH#5505 ActiveRecord::Base.touch won't dump optimistic locking column."}, {'body': u'Removed the hard-coded timestamp values in `AR::Base#clear_timestamp_attributes`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/118', 'title': u'Removed the hard-coded timestamp values in AR::Base#clear_timestamp_attributes'}, {'body': u"You might not like the rubygems removal, so feel free to back out of that. On 1.8, rake is installed by rubygems, and on 1.9, gem_prelude provides rubygems loading capabilities through require, so it shouldn't be necessary.<br/><br/>Rake is always loaded prior to loading a rakefile, so `require 'rake'` is always unnecessary.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b19b02a49b433c9e2e6e6c43785d2bfb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/117', 'title': u"Idioms - Rakefiles shouldn't need to require rake (or rubygems)"}, {'body': u"RubyGems < 1.4 loaded the thread library that provides mutex.<br/><br/>RubyGems 1.4 will not do this, and this will cause even rake tasks to explode with:<br/><br/>    uninitialized constant ActiveSupport::Dependencies::Mutex<br/><br/>This needs backporting to other releases, and i'd strongly recommend getting some point release fixes out soon so that when RubyGems 1.4 is released, all our users don't suffer for updating.<br/><br/>Thanks.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b19b02a49b433c9e2e6e6c43785d2bfb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/116', 'title': u'Mutex'}, {'body': u'These commits fix https://rails.lighthouseapp.com/projects/8994/tickets/4840-to_xml-doesnt-work-in-such-case-eventselecttitle-as-tto_xml<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/115', 'title': u"#LH4840 to_xml doesn't work in such case: Event.select('title as t').to_xml"}, {'body': u'Here are two changes, fixing the small typo and document that the shallow copy issues by dup does not preserve timestamps. ', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/114', 'title': u'Polish pull request 113: typo + documentation'}, {'body': u"The [last changes in the CHANGELOG](https://github.com/rails/rails/blob/0456feab1198456069d4b5a9da221e6fd818e3da/activerecord/CHANGELOG#L3-L12) makes it clear that AR::Base.dup returns an object where new_record? is true. The attached patch clears the timestamps (if they exist) when calling `dup`. If we don't want that behavior though, we should document that `dup` preserves these AR-managed attributes.<br/><br/>In any case we should also close/mark as invalid that ticket [AR::Clone does not clear out timestamps](https://rails.lighthouseapp.com/projects/8994/tickets/4538-activerecordclone-does-not-clear-out-timestamps)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/113', 'title': u'Dup reset timestamps'}, {'body': u'As suggested by Aaron in email removed redundant database configuration "ids_in_list_limit " from abstract_adapter in favor of using "in_clause_length" from database_limits.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f4252ea05ddfbeb7b1803e9941ea46aa?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/112', 'title': u'Removed ids_in_list_limit in favor of in_clause_length defined in database_limits.rb '}, {'body': u'I removed unneeded local variables that were defined in ActiveRecord and a few explicit returns.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/111', 'title': u'Active Record goodness'}, {'body': u'I removed unneeded local variables that were defined in ActiveRecord and a few explicit returns.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/110', 'title': u'Active Record goodness'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/11c26a69dc9e9abfcabcb35d28963613?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/109', 'title': u'Merged ActiveRecord changelog changes from 3-0-stable to master'}, {'body': u'Currently, button_to\'s generated form element is hard coded to having the class "button_to".<br/><br/>This is somewhat inconvenient when trying to hook forms for ajax trickery, as the only class you control is the class of the submit element.<br/><br/>If, for instance, you\'ve got several actions rendered as button_to, the only way to properly hook the submits would be to use \'form:has(.some-action-class)\' selectors, which is quite convoluted.<br/><br/>This patch adds the :form_class modifier to button_to\'s html_options.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/75cb325d7b55a6659fc050f6fa822c7c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/108', 'title': u'Customizable form class'}, {'body': u'This is the issue on 3-0-stable: https://rails.lighthouseapp.com/projects/8994/tickets/5878-railtie-initializers-are-not-executed-in-rake-tasks and it works on edge. This commit contains simple test to ensure that this will not be broken again.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/107', 'title': u'test to ensure that initializers are executed in rake tasks'}, {'body': u"From commit message:<br/>    In older rails versions there was a way to use only helpers from<br/>    helper file corresponding to current controller and you could also<br/>    include all helpers by saying 'helper :all' in controller. This config<br/>    allows to return to older behavior by setting it to false.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/106', 'title': u'config.action_controller.include_all_helpers'}, {'body': u"Fix misspelling of 'deprecation' in plugin_generator.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/22b196cffc5bb4bdd247140ae97d72ca?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/105', 'title': u'Plugin gen typos'}, {'body': u"New pull request asked [here](https://github.com/rails/rails/pull/101#issuecomment-541257) due to yesterday's outage that lost our comments.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/104', 'title': u'Lighthouse/5277 2'}, {'body': u'Some quick wins in both test and libs (ActiveRecord and ActionPack):<br/><br/>* Used `map` + `join` instead of `inject`<br/><br/>* Used `collect` + `sum` instead of `inject`<br/><br/>* Preferred duck-typing (ie `respond_to?`) over `is_a?`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/103', 'title': u'Small performance improvements'}, {'body': u'Link to lighthouse issue:<br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5956-hashwithindifferentaccess-should-not-change-the-class-of-an-array#ticket-5956-5', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36cca6cb1c1281de9405d40ed60575dc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/102', 'title': u'LH#5956 Hash with indifferent access should not change array subclass'}, {'body': u'Link to LH : https://rails.lighthouseapp.com/projects/8994/tickets/5277-rails-300rc-responds-strangely-to-empty-accept-header', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/101', 'title': u'Lighthouse/5277: Empty HTTP_ACCEPT means the clients accept all media types'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/100', 'title': u'Nicer error message on AR::RecordNotFound exceptions'}, {'body': u"Replaces the message:<br/>`ActiveRecord::RecordNotFound: Couldn't find Foo with ID=1`<br/><br/>by:<br/>`ActiveRecord::RecordNotFound: Couldn't find Foo with my_primary_key=1`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/99', 'title': u'AR::RecordNotFound explicit message'}, {'body': u"This should fix https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5953<br/><br/>Lighthouse doesnt want my diff so I'm doing a pull request.. I hope this is the new way of doing it :)", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0256f4863b3a08d20a382766f842e63c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/98', 'title': u'5953 sti type is not updatable'}, {'body': u'The current documentation says: \'The validation process on save can be skipped by passing false.\'.<br/>But it was deprecated, so it should say: The validation process on save can be skipped by passing :validate => false".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/85d1c1b4a9a01356502ea00f5a59d9a6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/97', 'title': u'Updates documentation for save method in ActiveRecord::Validations.'}, {'body': u'For ticket:<br/><br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5936-sharedmethods-functionality-for-activesupportconcern<br/><br/>-Matt', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/cd34200b2fe9d3c15840344d11ac5efc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/96', 'title': u'SharedMethods to Concern'}, {'body': u"Just added a method assert_valid, it always helpful for me when i'm testing something.<br/>All tests are passing and the TestCase documentation was updated.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/fc929d292323e019d5c4a353f92d5587?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/95', 'title': u'Added assert_valid for ActiveSupport::TestCase'}, {'body': u"I've prepared a generator for rails plugins, which generates basic structure for rails extension:<br/>* lib dir with<br/>* tests with dummy application at test/dummy (the easiest way to test rails extension is to run tests with real rails app)<br/>* gemspec<br/><br/>It's very similar to http://github.com/josevalim/enginex, but ported to rails with support for PluginBuilder (like AppBuilder) and templates (eg. `rails plugin new foo -m some_template.rb`).<br/><br/>There is also --full option which will generate integration tests, which is handy when you want to make a rails engine. To create mountable engine you can pass --mountable option, which will additionally create routes file and engine definition and automatically mount engine in dummy application.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/94', 'title': u'`rails plugin new` generator'}, {'body': u'This replaces previous pull request https://github.com/rails/rails/pull/92<br/><br/>Redefined test_finding_with_complex_order_and_limit and test_finding_with_complex_order to use REPLACE functions which seems to be one of the rare functions which has the same name and syntax in all main databases (see http://troels.arvin.dk/db/rdbms/#functions-REPLACE).', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/93', 'title': u'Order by complex function'}, {'body': u'Commit<br/>3146aa68fd03ea4392b45f1c8771675a9c850471 Fixes queries using limits and punctuation in order, removes order("col1, col2") usage in favor of order(["col1", "col2"})<br/>added tests test_finding_with_complex_order and test_finding_with_complex_order_and_limit with complex functions and one particular function RADIANS is not available in Oracle. I modified these tests to pass on Oracle.<br/><br/>And it would be good not to include such database specific functions in general test as it might fail also on many other less popular databases as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/92', 'title': u'fixed test_finding_with_complex_order and test_finding_with_complex_order_and_limit for Oracle'}, {'body': u"Currently if you pass a single hash to respond_with, it assumes it is the options hash, but if there's a single argument, I think the more correct assumption is that it is the resource. This commit adds a special case for a single argument to avoid calling `extract_options!`", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/723ee972f9e5078aeda85cdf0db3f3c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/91', 'title': u'fix respond_with when responding with a simple hash'}, {'body': u'Added missing AS require to active_model/naming.rb<br/><br/>We saw a failing spec when running the DataMapper<br/>ActiveModel compliance specs for dm-active_model.<br/><br/>  ActiveModel::Naming#model_name<br/><br/>relies on the Module#parents method defined in<br/><br/>  active_support/core_ext/module/introspection.rb<br/><br/>Adding the appropriate require statement of course<br/>fixed our specs.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5e518814b76962fdd1ad0e74dfac5ea7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/90', 'title': u'Added missing AS require to active_model/naming.rb'}, {'body': u'No biggie...', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8058c2c00149cbe4104ddc9fa814443f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/89', 'title': u'README.rdoc - all references to Rails prefixed with a backslash...'}, {'body': u'Add support for Object#try to just invoke a block if no method to be called has been given. This replaces the need for other hacks like unless_blank? { code } and if_present? { code } off of an existing method and paradigm.<br/><br/>Example:<br/><br/>    @person = Struct.new(:first_name, :last_name).new("David", "Heinemeier Hansson")<br/>    @person.try { |p| "#{p.first_name} #{p.last_name}" } # => "David Heinemeier Hansson"<br/><br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b19b02a49b433c9e2e6e6c43785d2bfb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/88', 'title': u'Try block'}, {'body': u'Should fix: https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5818-character-in-column-name-causes-activemodel-error#ticket-5818-4', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9b81cae1fb43808ac23a2188258ca9e4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/87', 'title': u'Fix 5818'}, {'body': u'Instead of dropping and adding and index use ALTER INDEX ... RENAME TO ... syntax', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/5ac931514fa7deadb59ed29909c233b8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/86', 'title': u'Postgres - faster index renaming '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/85', 'title': u'Show exception refactoring'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/84', 'title': u'Response status code'}, {'body': u'Update prototype javascript files to last versions', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6fab62c8f6e960775233a221ce9dd252?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/83', 'title': u'Update prototype js'}, {'body': u'[Benchmark](http://gist.github.com/631282)', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/82', 'title': u'Little speedup'}, {'body': u'Tiny DRYup and refactoring to interface.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/81', 'title': u'Interface not implementation'}, {'body': u"No need to define `#caching_allowed` here. It's already defined in http://github.com/rails/rails/blob/master/actionpack/lib/action_controller/caching.rb#L70-72", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/80', 'title': u'Cache DRYup'}, {'body': u"Copying static assets to application's public directory is saner way of handling engines' assets. This commits remove railties:create_symlinks rake task in favor of foo:install:assets (where foo is engine's name).<br/><br/>The implementation is really straightforward and simple, all the files from engine's public directory are copied to application. It is done with Generators::Base#copy_file, so if files differ user will be asked if the file should be replaced.<br/><br/>I don't see a need for anything more sophisticated, as in 3.1 preferred way of handling assets will be to keep them in app/assets and API behind that will be probably used to properly handle engines' assets.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/79', 'title': u'rake foo:install:assets instead of create_symlinks for engines'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/78', 'title': u'Doc typo fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/b5c0c62b4f595a277cd8ba9d03eb0a01?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/77', 'title': u'Untitled'}, {'body': u"This is the implementation of Identity Map for ActiveRecord, Marcin Raczkowski's project for Ruby Summer Of Code (http://rubysoc.org/projects):<br/><br/>Project #12: ActiveRecord Identity Map <br/><br/>Our goal is provide plugable identity map implementation for ActiveRecord. An identity map is a design pattern used to improve performance by providing a in-memory cache to prevent duplicate retrieval of the same object data from the database, in our case in context of the same request or thread.<br/><br/>If the requested data has already been loaded from the database, the identity map returns the same instance of the already instantiated object, but if it has not been loaded yet, it loads it and stores the new object in the map. The main gains of this project will be performance improvement and memory consumption reduction.<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/76', 'title': u'Identity map'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c8331af7b049b23f41664ff4b2675f07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/75', 'title': u'Just a quick typo fix'}, {'body': u'HttpMock do not replace the response if it exists and it should replace it:<br/><br/>require \'active_resource\'<br/>ActiveResource::HttpMock.respond_to do |mock|<br/>   mock.send(:get, "/people/1", {}, "XML1")<br/>end<br/><br/>ActiveResource::HttpMock.responses.length <br/># => 1<br/><br/>get_matz = ActiveResource::Request.new(:get, \'/people/1\', nil)<br/>ok_response = ActiveResource::Response.new("", 200, {})<br/><br/>ActiveResource::HttpMock.respond_to({get_matz => ok_response}, false)<br/>ActiveResource::HttpMock.responses.length<br/><br/>#=> 2<br/><br/>My patch solve this problem.<br/>Thanks.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/86112553d9846f4c7b16e8bfee1f28f4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/74', 'title': u'Fix ActiveResource::HttpMock.respond_to method do not replace the response '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6cb0b3e9e50fe72285047eac56209f49?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/73', 'title': u'Removes code duplication by meta programmatically generating class instance variable reader'}, {'body': u'\'Hardware" current pluralizes into "Hardwares", should still be "Hardware"', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0a8ab1c89907abb3adca367b4a008d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/72', 'title': u'Plural of hardware'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/71', 'title': u'Fixes typo'}, {'body': u"I figured out that my last pull request http://github.com/rails/rails/pull/68 is wrong, so I did this new one with the right commits, thanks and I'm sorry for the mistake.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/86112553d9846f4c7b16e8bfee1f28f4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/70', 'title': u'Active Resource Associations'}, {'body': u'I fixed what appears to be a copy/paste bug in activesupport/lib/active_support/xml_mini.rb', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/69', 'title': u'Fix copy/paste bug'}, {'body': u"Related to this post:<br/>http://groups.google.com/group/rubyonrails-core/browse_thread/thread/15d57967f94c5561<br/><br/>I added a basic first version of associations to Active Resource, it try follow the same behaviour than Active Record, at the moment it support only one-to-one and one-to-many associations, I'll be happy to continue working on this.<br/><br/>Gast\xf3n Ramos", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/86112553d9846f4c7b16e8bfee1f28f4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/68', 'title': u'Active Resource Associations'}, {'body': u"Currently javascript_include_tag and stylesheet_tag don't mark attributes that contain slashes as html_safe. (specifically src and type for JS, href for CSS)<br/><br/>This patch fixes that. Actionpack tests pass.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/64afebe5db598b0b043f35560bf940df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/67', 'title': u'Fix html escaping for javascript and stylesheet helpers'}, {'body': u"As discussed on http://github.com/rails/rails/commit/6807b080996ee4bd6b80abb4f5e9964632c421c8#commitcomment-159080 and via Twitter with Jose and Yehuda, this patch add model_name at the instance level as well. Lint is updated,  a couple of tests have been added and all ActiveModel and ActionPack tests are still passing.<br/><br/>I think I caught all of the places that we'd want to/it'd make sense to call model_name on the instance, first -- but if I missed any, please let me know.<br/><br/>Thanks!", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2274a7476f6d2ac7aedcdec0651d0542?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/66', 'title': u'model_name at the instance level'}, {'body': u'Refactor AssociationCollection include_in_memory? method to use .any?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/65', 'title': u'Association refactoring'}, {'body': u"NilClass.type is no longer defined in Ruby 1.9 and causes ActiveRecord::Base.to_xml to fail with message: undefined method `type' for nil:NilClass", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ecc4d502278ae77354564beb97bdff10?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/64', 'title': u"to_xml doesn't work in such case: Event.select('title as t').to_xml [#4840 state:resolved] "}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/63', 'title': u"Update AR's performance script"}, {'body': u'Use detect instead find to prevent this error:<br/><br/>Generating data...<br/>Inserting 10,000 users and exhibits...<br/>sh: [mysqldump]: command not found<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/62', 'title': u'Fix profile script'}, {'body': u'Remove more warnings and fixes test behaviour.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/61', 'title': u'Remove more warnings on AP.'}, {'body': u'I fixed almost (2 or 3 left for tomorrow) warnings in ActionPack, and enabled warnings like every other module in Rails does, now that they can be read.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/60', 'title': u'Fixed almost every warning in ActionPack '}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/59', 'title': u'2 3 stable'}, {'body': u'As suggested on:<br/><br/>http://github.com/rails/rails/commit/2f326b7f27349b933fe617d83b3f80c6573ce5d8#commitcomment-156519<br/><br/>I moved uri parser to AS, and reused it in ARes/AP.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/58', 'title': u'Move uri_parser to AS'}, {'body': u'Hi, I been working on this:<br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5631-activeresourcemissingprefixparam-proposal<br/><br/>but I figured out that the last changes on activeresource maybe will broke my<br/>patch, so I forked rails and I did my commits on my fork on are-missing-prefix-value branch<br/><br/>Thanks in advance.<br/><br/>Gast\xf3n Ramos', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/86112553d9846f4c7b16e8bfee1f28f4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/57', 'title': u'Active Resource should warn about missing prefix value'}, {'body': u'A couple of ActionPack/ActiveSupport performance fixes/refactorings.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/c203190318ed9534390c93d1744a6cf1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/56', 'title': u'Performance enhancements'}, {'body': u"I've been working on removing 1.9.2 warnings. There are a lot more on actionpack but i will continue working on this, is the only module that has disabled warnings in its Rakefile and i suppose it's because there are so many of them.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/55', 'title': u'1.9.2 warnings'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/54', 'title': u'Uri obsolete warning fix'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/53', 'title': u'Circular require fix'}, {'body': u'https://rails.lighthouseapp.com/projects/8994/tickets/5551-patch-fix-warning-method-redefined-in-attr_accessor_with_default-for-ruby-192', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/52', 'title': u'attr_accessor_with_default'}, {'body': u'https://rails.lighthouseapp.com/projects/8994/tickets/5570-fragment-cache-logging-fails-in-30-when-fragment-path-contains-printf-chars-eg-a', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/51', 'title': u'AC LogSubscriber fix'}, {'body': u'`block_helper` already defined in `BlockTestCase`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/50', 'title': u'AV tests dryup'}, {'body': u'Previously, #inspect would produce #<ActionView::Template::Error: ActionView::Template::Error>, which is not very useful.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/49', 'title': u'Ensure original exception message is present in both Template::Error#message and Template::Error#inspect.'}, {'body': u'https://rails.lighthouseapp.com/projects/8994/tickets/5366', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/48', 'title': u"Don't act destructively on ActiveModel::Name#human options hash"}, {'body': u'See commit messages and https://rails.lighthouseapp.com/projects/8994/tickets/5320', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a82409021ddf415a8027872b889c5f74?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/47', 'title': u'ActionDispatch::TestResponse duplicates Rack::Response functionality'}, {'body': u'Modified Net::HTTP.get to follow a HTTP redirect. It makes sense because the method returns the response body. Also moved uri.rb from core_ext root to the ./net folder.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9a654cef64056804843dd0d5795b19f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/46', 'title': u'Untitled'}, {'body': u'Got warnings using http://github.com/adzap/validates_timeliness', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2c81e6be1662df5dad59a69c841440c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/45', 'title': u'Untitled'}, {'body': u'`block_helper` already defined in `BlockTestCase`', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/44', 'title': u'AV test helper DRYup'}, {'body': u'https://rails.lighthouseapp.com/projects/8994/tickets/4429-templates-that-use-with_options', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/43', 'title': u'Template with options'}, {'body': u'https://rails.lighthouseapp.com/projects/8994/tickets/5570-fragment-cache-logging-fails-in-30-when-fragment-path-contains-printf-chars-eg-a', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9fcf314ff09f64dc852ee072499b2c2a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/42', 'title': u'Fix logging when cache key contains % sign'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/82890582bc10ffebe1ae4c7127effa01?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/41', 'title': u'fix for https://rails.lighthouseapp.com/projects/8994'}, {'body': u"Valim,<br/><br/>I have a problem with ActiveRecord default_timezone because the railtie.rb change it to :utc<br/><br/>I created a ticket on lighthouse: https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5679-activerecordbasedefault_timezone<br/><br/>Please consider this pull request<br/><br/>tk's", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/146e2ce2191256a564a784fe62ec3869?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/40', 'title': u'ActiveRecord::Base.default_timezone'}, {'body': u'I\'m just localizing Humpyard and as it has namespaced models like Humpyard::Elements::TextElement it would be in the I18n yml:<br/><br/>    activerecord:<br/>      models:<br/>        humpyard/elements/text_element: \'Text Element\'<br/>      attributes:<br/>        humpyard/elements/text_element:<br/>          content: \'Content\'<br/>          display_from: \'Display from\'<br/><br/>This ist not very nice to read and I would have to redefine common fields like "display_from", which exists for all Humpyard::Elements:: models.<br/>So I wrote a patch where the namespaced model translation could be in a namespaced yml/format:<br/><br/>    activerecord:<br/>      models:<br/>        humpyard:<br/>          elements:<br/>            text_element: \'Text element\'<br/>      attributes:<br/>        humpyard:<br/>          elements:<br/>            display_from: \'Display from\'<br/>            text_element:<br/>              content: \'Content\'<br/>   <br/>Note the fallback to \'activerecord.attributes.humpyard.elements.display_from for the common field. This is of course a simple example - when you have many Humpyard::Pages::* and Humpyard::Elements::* this syntax makes much more sense than it may look like. ;-)<br/><br/>CU<br/>StarPeak', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6ee7e5011c99cccffb54847b4013fc13?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/39', 'title': u'Namespacesd Models and model_name.human/human_attribute_for'}, {'body': u'This commit adds 2 more changes in behaviour after using "namespace Blog" method in Rails::Engine', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/38', 'title': u'List all of the isolated engine chanes in Rails::Engine documantation'}, {'body': u"Hi, I been working on this:<br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5631-activeresourcemissingprefixparam-proposal<br/><br/>but I figured out that the last changes on activeresource maybe will broke my<br/>patch, so I forked rails and I did my commits on my fork on **master** and **3-0-stable**, I'm going to apply my changes for 2.3 soon I will send it a new pull request.<br/><br/>Thanks in advance.<br/><br/>Gast\xf3n Ramos", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/86112553d9846f4c7b16e8bfee1f28f4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/37', 'title': u'Active Resource should warn about missing prefix value'}, {'body': u'Currently, there is a rake task to copy migrations from railties: rake railties:copy_migrations<br/><br/>It would be nice to give user a warning when doing db:migrate with not copied migrations and say how to copy them.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/36', 'title': u'Warning on uncopied migrations from railties'}, {'body': u'First commit fixes running engine tests in isolation (like: ruby -I railties/test/ railties/test/railties/engine_test.rb ). Second is just removing unnecessary output on engine tests.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/35', 'title': u'Fix running engine tests in isolation'}, {'body': u'associated ticket here:<br/>https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5660-activeresource-should-work-for-non-generated-ids<br/><br/>This ActiveResource patch allows you to override your resource to work with custom primary keys not generated by the server', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3589127268e4bf2ba24273abfe70d43?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/34', 'title': u'ActiveResource should work for non-generated ids'}, {'body': u"(The last two pull request came with bad commit, sorry about that)<br/><br/>There was an error on CI regarding unable to require arel gem from source when testing application build for a while ago. It seems to me like there's a permission problem on the process of cloning the application and removing Gemfile. This would make sure that the temporary application got removed every time the build is run.<br/><br/>This one is for master. I've also add change for 3-0-stable but would like to test if this one is working first.<br/><br/>Thank you", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/33', 'title': u'Removing railties/tmp folder on every CI build'}, {'body': u"(The last pull request came with bad commit, sorry about that)<br/><br/>There was an error on CI regarding unable to require arel gem from source when testing application build for a while ago. It seems to me like there's a permission problem on the process of cloning the application and removing Gemfile. This would make sure that the temporary application got removed every time the build is run.<br/><br/>This one is for master. I've also add change for 3-0-stable but would like to test if this one is working first.<br/><br/>Thank you", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/32', 'title': u'Removing railties/tmp folder on every CI build'}, {'body': u"There was an error on CI regarding unable to require `arel` gem from source when testing application build for a while ago. It seems to me like there's a permission problem on the process of cloning the application and removing Gemfile. This would make sure that the temporary application got removed every time the build is run.<br/><br/>This one is for `master`. I've also add change for `3-0-stable` but would like to test if this one is working first.<br/><br/>Thank you", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/31', 'title': u'Removing railties/tmp folder on every CI build'}, {'body': u"Having a consistent convention for body classes makes styling easier :) This approach also let's the body live in the layout but still be modified by the template if necessary.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/723ee972f9e5078aeda85cdf0db3f3c8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/30', 'title': u'Body attributes and some new Tag Helpers'}, {'body': u'ActiveResource currently uses connection level formatter for get requests. This makes it impossible to use custom formatters per resource.<br/><br/>This commit makes the Connection request methods more consistent. It always returns a Response object (instead of sometimes decoding, and sometimes not decoding). The base Resource should decode it using its own configured formatter.<br/><br/>Merging this commit will allow users to add custom formatters on a per Resource basis. The main use case for this is allowing per model handling of *pagination*. This is sorely needed in ActiveResource, and right now its impossible without monkeypatching XmlFormat (PoxPaginate is the best example at the moment).<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f3589127268e4bf2ba24273abfe70d43?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/29', 'title': u'Allow per Resource format settings (will allow pagination with ActiveResource)'}, {'body': u'This is a revised patch for http://github.com/rails/rails/pull/27 conserning an extra query to the caching module.<br/>', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36c57b679019ae2b04b746f756d21966?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/28', 'title': u'Fragment caching fix v2'}, {'body': u"Hello :)<br/><br/>Without this fix, in the case of a cache hit, two `Cache#read` commands are issued (by `fragment_exists?` and `read_fragment`)<br/><br/>Using `read_fragment` once should be enough (it's a superset of `fragment_exists?`)<br/><br/>chris", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/36c57b679019ae2b04b746f756d21966?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/27', 'title': u'Fragment caching fix'}, {'body': u'Please see https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5638-patch-rails3-accepts_nested_attributes_for-reject_if-blank-id-raises-activerecordrecordnotfound-when-id-is-an-empty-string', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/4931eceec58528529fd004e56af197c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/26', 'title': u'accepts_nested_attributes_for reject_if => {blank id} raises ActiveRecord::RecordNotFound when id is an empty string '}, {'body': u'Several small rdoc-syntax-only fixes.  Couple of them makes the corresponding page actually usable.<br/><br/>Thank you,', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/8914feeb1429ace7df53ba46a0c28918?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/25', 'title': u'Docfixes'}, {'body': u'In this 2 patches i remove pending TODOs in ARes by implementing them.<br/><br/>The first one make ARes accepts more attributes types (changed many tests to probe it).<br/><br/>The second one is a refactor which extracts to abstract_unit 3 *similar* setup methods.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/373c4dd765755059d502b2077c1722b9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/24', 'title': u"Removing two ARes' TODO"}, {'body': u"Documented an issue here in lighthouse: https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5630-active_supportinflectortransliterate-using-i18n-without-requiring-it<br/><br/>Should be simple enough to fix. The lazy_load_hooks require in active_support/i18n feels weird, but not sure there's a better way.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1ccb5123d1af92e24b32cec62abcf9a8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/23', 'title': u'Fix requires for inflection related files'}, {'body': u"Yehuda mentioned he is watching Rails pull requests here, don't know if this is the preferred method. <br/><br/>Ticket here: https://rails.lighthouseapp.com/projects/8994/tickets/5629-secure-cookies-should-only-be-transmitted-over-ssl<br/><br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/374eedcae1d1d978519423f315cff02d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/22', 'title': u'Secure Cookies should only be transmitted over SSL'}, {'body': u"I just found out that in action_view/render/partials.rb there was an option called :spacer_template which you can specify in render :template => 'template_name', :collection => @collection call. It will render the spacer template and put it between each object partial.<br/><br/>I think the documentation for this option has been left out from Rails 2 -> Rails 3 migration, as I found test case exists in the test directory for this feature. Also, I found the documentation of this option in Rails 2.<br/><br/>So I've added an example to demonstrate how to use this particular feature.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/21', 'title': u'Add the documentation for :spacer_template in partial rendering'}, {'body': u"The other commit in this pull request was already applied as: http://github.com/rails/rails/commit/96650f704a7a36097d634972484a305a639143c7\n\nNot really sure what the best way to clean up my repository is, so if this get's pulled, that's whats up with that.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed64926147995b3fce2ed2bc04f94537?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/20', 'title': u'PartialRenderer :as and :object Seem like useful options to have documented'}, {'body': u"The :group option is broken for multiple fields when performing an AR calculation. See the example below:<br/><br/>    Account.count(:all, :group => 'firm_id, credit_limit')<br/>    # returns <OrderedHash {60=>1, 55=>1, 50=>1, 53=>1}><br/>    # should return <OrderedHash {[2, 60]=>1, [nil, 50]=>1, [9, 53]=>1, [6, 55]=>1, [1, 50]=>1, [6, 50]=>1}><br/>The behavior for grouping by a single field or an association is unchanged. Also, the :group option still takes in a string as always.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/60ab1ab9e4543b8cb040a1af50b2f95b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/19', 'title': u'AR Calculations group by multiple fields '}, {'body': u"The :group option is broken for multiple fields when performing an AR calculation. See the example below:\n\n    Account.count(:all, :group => 'firm_id, credit_limit')\n    # returns <OrderedHash {60=>1, 55=>1, 50=>1, 53=>1}>\n    # should return <OrderedHash {[2, 60]=>1, [nil, 50]=>1, [9, 53]=>1, [6, 55]=>1, [1, 50]=>1, [6, 50]=>1}>\nThe behavior for grouping by a single field or an association is unchanged. Also, the :group option still takes in a string as always.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/60ab1ab9e4543b8cb040a1af50b2f95b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/18', 'title': u'AR Calculations group by multiple fields'}, {'body': u'    added block arguments to ActionController::Metal#use\n    \n    Useful for cases such as warden, where a block configuration is taken.\n    \n        class SomeController < ApplicationController\n          use RailsWarden::Manager do |manager|\n            manager.default_strategies :facebook_oauth\n            manager.failure_app = SomeController.action(:authorize)\n          end\n        end\n', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed64926147995b3fce2ed2bc04f94537?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/17', 'title': u'"use" in ActionController doesn\'t take block arguments (but MiddlewareStack does) test and fix included'}, {'body': u'it seems like there are more and more people using "jquery" as the default javascript library when they start up a new rails app.<br/><br/>for this commit, i removed the usual "--skip-prototype" parameter and substituted it with the "--skip-javascript" parameter. then, i added a new "-j" or "--javascript" parameter. this parameter accepts either "jquery" or "prototype".<br/><br/>btw, the default javascript library now is still "prototype".', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/a955103782890eb2990826141b60d4ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/16', 'title': u'adding "-j" parameter for "rails new" command '}, {'body': u"Fixes:<br/>test_routes_are_loaded_just_after_initialization(ApplicationTests::RoutingTest)<br/>test_isolated_engine_should_avoid_namespace_in_names_if_that's_possible(RailtiesTest::EngineTest)<br/>", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/15', 'title': u'Fixes for errors in railties'}, {'body': u"I've added 'increment' and 'decrement' methods to ActiveRecord::Relation. They allow for incrementing/decrementing values without fetching data from the database first - useful when there's a possibility of desynchronizing column value by updating it with pre-fetched value once it had been already overwritten in another request.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/2fa5aa0e677160dae1184894bbe34b98?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/14', 'title': u"'increment' and 'decrement' methods for ActiveRecord::Relation"}, {'body': u'Changed app mounted helper to main_app and fix handling assets from Engine by not setting asset_path for application by default.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'merge', 'id': u'https://api.github.com/repos/rails/rails/pulls/13', 'title': u'engines - few fixes'}, {'body': u'Hi,<br/><br/>Rizwan Reza just suggest me to make a pull request for this ticket (https://rails.lighthouseapp.com/projects/8994/tickets/5552-relation-fails-to-act-like-an-array-on-intersection), as it is already verified.<br/><br/>Thanks!', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/6941402b79ef6ceee49156ebd7e40b4d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/12', 'title': u'Relation fails to act like an Array on intersection'}, {'body': u'Please?', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ed5f3e2d77dcf44a67efa72e09e9f28f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/11', 'title': u'Let YARD document the railties gem'}, {'body': u"This is a rebased version of the patch for [this lighthouse ticket][1]. After seeing wycats tweet re: pull requests I thought I'd try my luck this way...<br/><br/>  [1]:https://rails.lighthouseapp.com/projects/8994/tickets/5215-configurable-tld_length-for-subdomains", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/46fd60ea4dde74f3d46fcfd27ed700bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/10', 'title': u'Configurable tld length for subdomains in ActionDispatch::Http::URL'}, {'body': u"It seams that after_initialize instance method can't be used anymore and therefore test_oracle_synonym was failing on Oracle.<br/><br/>Please apply to 3-0-stable branch as well.", 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/634c7a5c6e7c5e50b431632c7d3b2d92?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/9', 'title': u'fixed Subject model for Oracle specific test_oracle_synonym'}, {'body': u'I was working with Rob Olson at Pivotal Labs debugging an issue running `rake spec` after switching from the default mysql adapter to the mysql2 adapter. Changing the matcher from "mysql" to /mysql/ in databases.rake solved the problem.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/8', 'title': u'Don\'t raise "Task not supported by..." exception for mysql2 adapter in 2-3-stable'}, {'body': u'Following this conversation with Jeremy:<br/>http://twitter.com/sferik/status/23933365677<br/>http://twitter.com/bitsweat/status/23936636728', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/7', 'title': u'Fixed typo in deprecation Rails 2.3.9 deprecation warning'}, {'body': u'In Rails 2.3.9 I thought the wording was more vague than it should be. Previous message:\n\nconfig.load_paths is deprecated and removed in Rails 3, please use autoload_paths instead\n\nNew message:\n\nconfig.load_paths is deprecated and removed in Rails 3, please use config.autoload_paths instead\n\nThis request is to pull it in to 2.3.9 future updates; not master. I went ahead and updated the message for "config.load_paths=", "config.load_paths_once", and "config.load_paths_once=" as well.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/ec02d6e283a8b91b52bccc7a706f8de4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/6', 'title': u'This is in regards to the config.load_paths depreciation message'}, {'body': '', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/94782da80cf91be421a961dd8ff9fd73?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/5', 'title': u"Fix '&' => '&amp;'"}, {'body': u'Please see my ticket https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5529 for more details.', 'user': {'avatar_url': u'https://secure.gravatar.com/avatar/9dd587aec94f34578405438f0279cfde?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png'}, 'outcome': 'reject', 'id': u'https://api.github.com/repos/rails/rails/pulls/4', 'title': u'This change fixes to_json serialization'}]